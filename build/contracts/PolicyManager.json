{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IStakingEscrow",
          "name": "_escrowDispatcher",
          "type": "address"
        },
        {
          "internalType": "contract IStakingEscrow",
          "name": "_escrowImplementation",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes16",
          "name": "policyId",
          "type": "bytes16"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "node",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ArrangementRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "min",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "defaultValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "max",
          "type": "uint256"
        }
      ],
      "name": "FeeRateRangeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "node",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "MinFeeRateSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes16",
          "name": "policyId",
          "type": "bytes16"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "startTimestamp",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "endTimestamp",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numberOfNodes",
          "type": "uint256"
        }
      ],
      "name": "PolicyCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes16",
          "name": "policyId",
          "type": "bytes16"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "PolicyRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes16",
          "name": "policyId",
          "type": "bytes16"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "node",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "RefundForArrangement",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes16",
          "name": "policyId",
          "type": "bytes16"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "RefundForPolicy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "testTarget",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "StateVerified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "UpgradeFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "node",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_FEE_DELTA",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        },
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        }
      ],
      "name": "calculateRefundValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "refundValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        }
      ],
      "name": "calculateRefundValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "refundValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16[]",
          "name": "_policyIds",
          "type": "bytes16[]"
        },
        {
          "internalType": "address",
          "name": "_policyOwner",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_endTimestamp",
          "type": "uint64"
        },
        {
          "internalType": "address[]",
          "name": "_nodes",
          "type": "address[]"
        }
      ],
      "name": "createPolicies",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        },
        {
          "internalType": "address",
          "name": "_policyOwner",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_endTimestamp",
          "type": "uint64"
        },
        {
          "internalType": "address[]",
          "name": "_nodes",
          "type": "address[]"
        }
      ],
      "name": "createPolicy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "escrow",
      "outputs": [
        {
          "internalType": "contract IStakingEscrow",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRateRange",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "min",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "defaultValue",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "max",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "finishUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "genesisSecondsPerPeriod",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getArrangementInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "node",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "indexOfDowntimePeriods",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "lastRefundedPeriod",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        }
      ],
      "name": "getArrangementsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentPeriod",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        }
      ],
      "name": "getMinFeeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_period",
          "type": "uint16"
        }
      ],
      "name": "getNodeFeeDelta",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        }
      ],
      "name": "getPolicyOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        },
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        }
      ],
      "name": "getRevocationHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isUpgrade",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nodes",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "fee",
          "type": "uint128"
        },
        {
          "internalType": "uint16",
          "name": "previousFeePeriod",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "feeRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minFeeRate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_processedPeriod1",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_processedPeriod2",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_periodToSetDefault",
          "type": "uint16"
        }
      ],
      "name": "ping",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "",
          "type": "bytes16"
        }
      ],
      "name": "policies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "disabled",
          "type": "bool"
        },
        {
          "internalType": "address payable",
          "name": "sponsor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "feeRate",
          "type": "uint128"
        },
        {
          "internalType": "uint64",
          "name": "startTimestamp",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "endTimestamp",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "reservedSlot1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reservedSlot2",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reservedSlot3",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reservedSlot4",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reservedSlot5",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "previousTarget",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        },
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        }
      ],
      "name": "refund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "refundValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_period",
          "type": "uint16"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetTimestamp",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        },
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "revoke",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "refundValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        },
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        }
      ],
      "name": "revokeArrangement",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "refundValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        }
      ],
      "name": "revokePolicy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "refundValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "secondsPerPeriod",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_min",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_default",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_max",
          "type": "uint128"
        }
      ],
      "name": "setFeeRateRange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minFeeRate",
          "type": "uint256"
        }
      ],
      "name": "setMinFeeRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_testTarget",
          "type": "address"
        }
      ],
      "name": "verifyState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/contracts/IStakingEscrow.sol",
    "11": "contracts/contracts/NuCypherToken.sol",
    "12": "contracts/contracts/PolicyManager.sol",
    "19": "contracts/contracts/lib/AdditionalMath.sol",
    "22": "contracts/contracts/lib/SignatureVerifier.sol",
    "26": "contracts/contracts/proxy/Upgradeable.sol",
    "33": "contracts/zeppelin/math/SafeMath.sol",
    "34": "contracts/zeppelin/ownership/Ownable.sol",
    "36": "contracts/zeppelin/token/ERC20/ERC20.sol",
    "37": "contracts/zeppelin/token/ERC20/ERC20Detailed.sol",
    "38": "contracts/zeppelin/token/ERC20/IERC20.sol",
    "39": "contracts/zeppelin/token/ERC20/SafeERC20.sol",
    "40": "contracts/zeppelin/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/PolicyManager.sol",
    "exportedSymbols": {
      "AdditionalMath": [
        7462
      ],
      "Address": [
        14756
      ],
      "ERC20": [
        14103
      ],
      "ERC20Detailed": [
        14165
      ],
      "IERC20": [
        14235
      ],
      "IStakingEscrow": [
        691
      ],
      "Math": [
        13233
      ],
      "NuCypherToken": [
        751
      ],
      "Ownable": [
        13666
      ],
      "PolicyManager": [
        3682
      ],
      "SafeERC20": [
        14459
      ],
      "SafeMath": [
        13545
      ],
      "SignatureVerifier": [
        9074
      ],
      "TokenRecipient": [
        765
      ],
      "Upgradeable": [
        10885
      ]
    },
    "id": 3683,
    "license": "AGPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 767,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "47:23:12"
      },
      {
        "absolutePath": "contracts/zeppelin/token/ERC20/SafeERC20.sol",
        "file": "../zeppelin/token/ERC20/SafeERC20.sol",
        "id": 768,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3683,
        "sourceUnit": 14460,
        "src": "73:47:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/zeppelin/math/SafeMath.sol",
        "file": "../zeppelin/math/SafeMath.sol",
        "id": 769,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3683,
        "sourceUnit": 13546,
        "src": "121:39:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/zeppelin/math/Math.sol",
        "file": "../zeppelin/math/Math.sol",
        "id": 770,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3683,
        "sourceUnit": 13234,
        "src": "161:35:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/zeppelin/utils/Address.sol",
        "file": "../zeppelin/utils/Address.sol",
        "id": 771,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3683,
        "sourceUnit": 14757,
        "src": "197:39:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/lib/AdditionalMath.sol",
        "file": "./lib/AdditionalMath.sol",
        "id": 772,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3683,
        "sourceUnit": 7463,
        "src": "237:34:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/lib/SignatureVerifier.sol",
        "file": "./lib/SignatureVerifier.sol",
        "id": 773,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3683,
        "sourceUnit": 9075,
        "src": "272:37:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/NuCypherToken.sol",
        "file": "./NuCypherToken.sol",
        "id": 774,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3683,
        "sourceUnit": 766,
        "src": "310:29:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/proxy/Upgradeable.sol",
        "file": "./proxy/Upgradeable.sol",
        "id": 775,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3683,
        "sourceUnit": 10886,
        "src": "340:33:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/IStakingEscrow.sol",
        "file": "./IStakingEscrow.sol",
        "id": 776,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3683,
        "sourceUnit": 692,
        "src": "374:30:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 778,
              "name": "Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10885,
              "src": "546:11:12"
            },
            "id": 779,
            "nodeType": "InheritanceSpecifier",
            "src": "546:11:12"
          }
        ],
        "canonicalName": "PolicyManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 777,
          "nodeType": "StructuredDocumentation",
          "src": "407:112:12",
          "text": " @title PolicyManager\n @notice Contract holds policy data and locks accrued policy fees\n @dev |v6.3.1|"
        },
        "fullyImplemented": true,
        "id": 3682,
        "linearizedBaseContracts": [
          3682,
          10885,
          13666
        ],
        "name": "PolicyManager",
        "nameLocation": "529:13:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 783,
            "libraryName": {
              "id": 780,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14459,
              "src": "570:9:12"
            },
            "nodeType": "UsingForDirective",
            "src": "564:34:12",
            "typeName": {
              "id": 782,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 781,
                "name": "NuCypherToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 751,
                "src": "584:13:12"
              },
              "referencedDeclaration": 751,
              "src": "584:13:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NuCypherToken_$751",
                "typeString": "contract NuCypherToken"
              }
            }
          },
          {
            "id": 786,
            "libraryName": {
              "id": 784,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13545,
              "src": "609:8:12"
            },
            "nodeType": "UsingForDirective",
            "src": "603:27:12",
            "typeName": {
              "id": 785,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "622:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 789,
            "libraryName": {
              "id": 787,
              "name": "AdditionalMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7462,
              "src": "641:14:12"
            },
            "nodeType": "UsingForDirective",
            "src": "635:33:12",
            "typeName": {
              "id": 788,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "660:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 792,
            "libraryName": {
              "id": 790,
              "name": "AdditionalMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7462,
              "src": "679:14:12"
            },
            "nodeType": "UsingForDirective",
            "src": "673:32:12",
            "typeName": {
              "id": 791,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "698:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "id": 795,
            "libraryName": {
              "id": 793,
              "name": "AdditionalMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7462,
              "src": "716:14:12"
            },
            "nodeType": "UsingForDirective",
            "src": "710:32:12",
            "typeName": {
              "id": 794,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "735:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            }
          },
          {
            "id": 798,
            "libraryName": {
              "id": 796,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14756,
              "src": "753:7:12"
            },
            "nodeType": "UsingForDirective",
            "src": "747:34:12",
            "typeName": {
              "id": 797,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "765:15:12",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "anonymous": false,
            "id": 814,
            "name": "PolicyCreated",
            "nameLocation": "793:13:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 800,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nameLocation": "832:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "816:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 802,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sponsor",
                  "nameLocation": "866:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "850:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "850:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 804,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "899:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "883:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "883:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 806,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeRate",
                  "nameLocation": "922:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "914:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "914:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 808,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startTimestamp",
                  "nameLocation": "946:14:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "939:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 810,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "endTimestamp",
                  "nameLocation": "977:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "970:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 809,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 812,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "numberOfNodes",
                  "nameLocation": "1007:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "999:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 811,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "806:220:12"
            },
            "src": "787:240:12"
          },
          {
            "anonymous": false,
            "id": 824,
            "name": "ArrangementRevoked",
            "nameLocation": "1038:18:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 816,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nameLocation": "1082:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 824,
                  "src": "1066:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 818,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1116:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 824,
                  "src": "1100:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 820,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "node",
                  "nameLocation": "1148:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 824,
                  "src": "1132:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1132:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 822,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1170:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 824,
                  "src": "1162:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1162:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1056:125:12"
            },
            "src": "1032:150:12"
          },
          {
            "anonymous": false,
            "id": 834,
            "name": "RefundForArrangement",
            "nameLocation": "1193:20:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 826,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nameLocation": "1239:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 834,
                  "src": "1223:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 825,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1223:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 828,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1273:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 834,
                  "src": "1257:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 830,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "node",
                  "nameLocation": "1305:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 834,
                  "src": "1289:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 832,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1327:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 834,
                  "src": "1319:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1319:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1213:125:12"
            },
            "src": "1187:152:12"
          },
          {
            "anonymous": false,
            "id": 842,
            "name": "PolicyRevoked",
            "nameLocation": "1350:13:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 836,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nameLocation": "1380:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "1364:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1364:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 838,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1406:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "1390:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 840,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1422:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "1414:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1414:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1363:65:12"
            },
            "src": "1344:85:12"
          },
          {
            "anonymous": false,
            "id": 850,
            "name": "RefundForPolicy",
            "nameLocation": "1440:15:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 844,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nameLocation": "1472:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1456:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 846,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1498:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1482:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1482:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 848,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1514:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1506:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1506:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1455:65:12"
            },
            "src": "1434:87:12"
          },
          {
            "anonymous": false,
            "id": 856,
            "name": "MinFeeRateSet",
            "nameLocation": "1532:13:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 852,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "node",
                  "nameLocation": "1562:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "1546:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1546:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 854,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1576:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "1568:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1568:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1545:37:12"
            },
            "src": "1526:57:12"
          },
          {
            "anonymous": false,
            "id": 866,
            "name": "FeeRateRangeSet",
            "nameLocation": "1631:15:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1663:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 866,
                  "src": "1647:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 860,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "min",
                  "nameLocation": "1679:3:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 866,
                  "src": "1671:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 859,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1671:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 862,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "defaultValue",
                  "nameLocation": "1692:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 866,
                  "src": "1684:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 864,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "max",
                  "nameLocation": "1714:3:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 866,
                  "src": "1706:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1706:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1646:72:12"
            },
            "src": "1625:94:12"
          },
          {
            "anonymous": false,
            "id": 874,
            "name": "Withdrawn",
            "nameLocation": "1730:9:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 868,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "node",
                  "nameLocation": "1756:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "1740:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1740:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 870,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1778:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "1762:25:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 872,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1797:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "1789:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1789:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1739:64:12"
            },
            "src": "1724:80:12"
          },
          {
            "canonicalName": "PolicyManager.ArrangementInfo",
            "id": 881,
            "members": [
              {
                "constant": false,
                "id": 876,
                "mutability": "mutable",
                "name": "node",
                "nameLocation": "1851:4:12",
                "nodeType": "VariableDeclaration",
                "scope": 881,
                "src": "1843:12:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 875,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1843:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 878,
                "mutability": "mutable",
                "name": "indexOfDowntimePeriods",
                "nameLocation": "1873:22:12",
                "nodeType": "VariableDeclaration",
                "scope": 881,
                "src": "1865:30:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 877,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1865:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 880,
                "mutability": "mutable",
                "name": "lastRefundedPeriod",
                "nameLocation": "1912:18:12",
                "nodeType": "VariableDeclaration",
                "scope": 881,
                "src": "1905:25:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 879,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1905:6:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ArrangementInfo",
            "nameLocation": "1817:15:12",
            "nodeType": "StructDefinition",
            "scope": 3682,
            "src": "1810:127:12",
            "visibility": "public"
          },
          {
            "canonicalName": "PolicyManager.Policy",
            "id": 908,
            "members": [
              {
                "constant": false,
                "id": 883,
                "mutability": "mutable",
                "name": "disabled",
                "nameLocation": "1972:8:12",
                "nodeType": "VariableDeclaration",
                "scope": 908,
                "src": "1967:13:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 882,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1967:4:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 885,
                "mutability": "mutable",
                "name": "sponsor",
                "nameLocation": "2006:7:12",
                "nodeType": "VariableDeclaration",
                "scope": 908,
                "src": "1990:23:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 884,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1990:15:12",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 887,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "2031:5:12",
                "nodeType": "VariableDeclaration",
                "scope": 908,
                "src": "2023:13:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 886,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2023:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 889,
                "mutability": "mutable",
                "name": "feeRate",
                "nameLocation": "2055:7:12",
                "nodeType": "VariableDeclaration",
                "scope": 908,
                "src": "2047:15:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 888,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "2047:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 891,
                "mutability": "mutable",
                "name": "startTimestamp",
                "nameLocation": "2079:14:12",
                "nodeType": "VariableDeclaration",
                "scope": 908,
                "src": "2072:21:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 890,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "2072:6:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 893,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "2110:12:12",
                "nodeType": "VariableDeclaration",
                "scope": 908,
                "src": "2103:19:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 892,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "2103:6:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 895,
                "mutability": "mutable",
                "name": "reservedSlot1",
                "nameLocation": "2141:13:12",
                "nodeType": "VariableDeclaration",
                "scope": 908,
                "src": "2133:21:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 894,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2133:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 897,
                "mutability": "mutable",
                "name": "reservedSlot2",
                "nameLocation": "2172:13:12",
                "nodeType": "VariableDeclaration",
                "scope": 908,
                "src": "2164:21:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 896,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2164:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 899,
                "mutability": "mutable",
                "name": "reservedSlot3",
                "nameLocation": "2203:13:12",
                "nodeType": "VariableDeclaration",
                "scope": 908,
                "src": "2195:21:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 898,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2195:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 901,
                "mutability": "mutable",
                "name": "reservedSlot4",
                "nameLocation": "2234:13:12",
                "nodeType": "VariableDeclaration",
                "scope": 908,
                "src": "2226:21:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 900,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2226:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 903,
                "mutability": "mutable",
                "name": "reservedSlot5",
                "nameLocation": "2265:13:12",
                "nodeType": "VariableDeclaration",
                "scope": 908,
                "src": "2257:21:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 902,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2257:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 907,
                "mutability": "mutable",
                "name": "arrangements",
                "nameLocation": "2307:12:12",
                "nodeType": "VariableDeclaration",
                "scope": 908,
                "src": "2289:30:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage_ptr",
                  "typeString": "struct PolicyManager.ArrangementInfo[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 905,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 904,
                      "name": "ArrangementInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 881,
                      "src": "2289:15:12"
                    },
                    "referencedDeclaration": 881,
                    "src": "2289:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                      "typeString": "struct PolicyManager.ArrangementInfo"
                    }
                  },
                  "id": 906,
                  "nodeType": "ArrayTypeName",
                  "src": "2289:17:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage_ptr",
                    "typeString": "struct PolicyManager.ArrangementInfo[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Policy",
            "nameLocation": "1950:6:12",
            "nodeType": "StructDefinition",
            "scope": 3682,
            "src": "1943:383:12",
            "visibility": "public"
          },
          {
            "canonicalName": "PolicyManager.NodeInfo",
            "id": 925,
            "members": [
              {
                "constant": false,
                "id": 910,
                "mutability": "mutable",
                "name": "fee",
                "nameLocation": "2366:3:12",
                "nodeType": "VariableDeclaration",
                "scope": 925,
                "src": "2358:11:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 909,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "2358:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 912,
                "mutability": "mutable",
                "name": "previousFeePeriod",
                "nameLocation": "2386:17:12",
                "nodeType": "VariableDeclaration",
                "scope": 925,
                "src": "2379:24:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 911,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2379:6:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 914,
                "mutability": "mutable",
                "name": "feeRate",
                "nameLocation": "2421:7:12",
                "nodeType": "VariableDeclaration",
                "scope": 925,
                "src": "2413:15:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 913,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2413:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 916,
                "mutability": "mutable",
                "name": "minFeeRate",
                "nameLocation": "2446:10:12",
                "nodeType": "VariableDeclaration",
                "scope": 925,
                "src": "2438:18:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 915,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2438:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 920,
                "mutability": "mutable",
                "name": "stub",
                "nameLocation": "2493:4:12",
                "nodeType": "VariableDeclaration",
                "scope": 925,
                "src": "2466:31:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                  "typeString": "mapping(uint16 => int256)"
                },
                "typeName": {
                  "id": 919,
                  "keyType": {
                    "id": 917,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2475:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2466:26:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                    "typeString": "mapping(uint16 => int256)"
                  },
                  "valueType": {
                    "id": 918,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2485:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 924,
                "mutability": "mutable",
                "name": "feeDelta",
                "nameLocation": "2562:8:12",
                "nodeType": "VariableDeclaration",
                "scope": 925,
                "src": "2535:35:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                  "typeString": "mapping(uint16 => int256)"
                },
                "typeName": {
                  "id": 923,
                  "keyType": {
                    "id": 921,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2544:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2535:26:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                    "typeString": "mapping(uint16 => int256)"
                  },
                  "valueType": {
                    "id": 922,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2554:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "NodeInfo",
            "nameLocation": "2339:8:12",
            "nodeType": "StructDefinition",
            "scope": 3682,
            "src": "2332:245:12",
            "visibility": "public"
          },
          {
            "canonicalName": "PolicyManager.MemoryNodeInfo",
            "id": 934,
            "members": [
              {
                "constant": false,
                "id": 927,
                "mutability": "mutable",
                "name": "fee",
                "nameLocation": "2709:3:12",
                "nodeType": "VariableDeclaration",
                "scope": 934,
                "src": "2701:11:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 926,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "2701:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 929,
                "mutability": "mutable",
                "name": "previousFeePeriod",
                "nameLocation": "2729:17:12",
                "nodeType": "VariableDeclaration",
                "scope": 934,
                "src": "2722:24:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 928,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2722:6:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 931,
                "mutability": "mutable",
                "name": "feeRate",
                "nameLocation": "2764:7:12",
                "nodeType": "VariableDeclaration",
                "scope": 934,
                "src": "2756:15:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 930,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2756:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 933,
                "mutability": "mutable",
                "name": "minFeeRate",
                "nameLocation": "2789:10:12",
                "nodeType": "VariableDeclaration",
                "scope": 934,
                "src": "2781:18:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 932,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2781:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "MemoryNodeInfo",
            "nameLocation": "2676:14:12",
            "nodeType": "StructDefinition",
            "scope": 3682,
            "src": "2669:137:12",
            "visibility": "public"
          },
          {
            "canonicalName": "PolicyManager.Range",
            "id": 941,
            "members": [
              {
                "constant": false,
                "id": 936,
                "mutability": "mutable",
                "name": "min",
                "nameLocation": "2843:3:12",
                "nodeType": "VariableDeclaration",
                "scope": 941,
                "src": "2835:11:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 935,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "2835:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 938,
                "mutability": "mutable",
                "name": "defaultValue",
                "nameLocation": "2864:12:12",
                "nodeType": "VariableDeclaration",
                "scope": 941,
                "src": "2856:20:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 937,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "2856:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 940,
                "mutability": "mutable",
                "name": "max",
                "nameLocation": "2894:3:12",
                "nodeType": "VariableDeclaration",
                "scope": 941,
                "src": "2886:11:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 939,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "2886:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Range",
            "nameLocation": "2819:5:12",
            "nodeType": "StructDefinition",
            "scope": 3682,
            "src": "2812:92:12",
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 947,
            "mutability": "constant",
            "name": "RESERVED_POLICY_ID",
            "nameLocation": "2936:18:12",
            "nodeType": "VariableDeclaration",
            "scope": 3682,
            "src": "2910:57:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes16",
              "typeString": "bytes16"
            },
            "typeName": {
              "id": 942,
              "name": "bytes16",
              "nodeType": "ElementaryTypeName",
              "src": "2910:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes16",
                "typeString": "bytes16"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30",
                  "id": 945,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2965:1:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 944,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2957:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes16_$",
                  "typeString": "type(bytes16)"
                },
                "typeName": {
                  "id": 943,
                  "name": "bytes16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2957:7:12",
                  "typeDescriptions": {}
                }
              },
              "id": 946,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2957:10:12",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes16",
                "typeString": "bytes16"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 953,
            "mutability": "constant",
            "name": "RESERVED_NODE",
            "nameLocation": "2999:13:12",
            "nodeType": "VariableDeclaration",
            "scope": 3682,
            "src": "2973:52:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 948,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2973:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30",
                  "id": 951,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3023:1:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 950,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3015:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 949,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3015:7:12",
                  "typeDescriptions": {}
                }
              },
              "id": 952,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3015:10:12",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 963,
            "mutability": "constant",
            "name": "MAX_BALANCE",
            "nameLocation": "3057:11:12",
            "nodeType": "VariableDeclaration",
            "scope": 3682,
            "src": "3031:66:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 954,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3031:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "arguments": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3084:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint128_$",
                          "typeString": "type(uint128)"
                        },
                        "typeName": {
                          "id": 958,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3084:7:12",
                          "typeDescriptions": {}
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_type$_t_uint128_$",
                          "typeString": "type(uint128)"
                        }
                      ],
                      "id": 957,
                      "name": "type",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -27,
                      "src": "3079:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3079:13:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_magic_meta_type_t_uint128",
                      "typeString": "type(uint128)"
                    }
                  },
                  "id": 961,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "memberName": "max",
                  "nodeType": "MemberAccess",
                  "src": "3079:17:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                ],
                "id": 956,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3071:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_uint256_$",
                  "typeString": "type(uint256)"
                },
                "typeName": {
                  "id": 955,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3071:7:12",
                  "typeDescriptions": {}
                }
              },
              "id": 962,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3071:26:12",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "functionSelector": "4b8fed4f",
            "id": 976,
            "mutability": "constant",
            "name": "DEFAULT_FEE_DELTA",
            "nameLocation": "3171:17:12",
            "nodeType": "VariableDeclaration",
            "scope": 3682,
            "src": "3148:75:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 964,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "3148:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "value": {
              "arguments": [
                {
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "id": 974,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "components": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3204:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 968,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3204:7:12",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 967,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3199:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3199:13:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "3199:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 972,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3198:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": ">>",
                  "rightExpression": {
                    "hexValue": "31",
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3221:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "src": "3198:24:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                ],
                "id": 966,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3191:6:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_int256_$",
                  "typeString": "type(int256)"
                },
                "typeName": {
                  "id": 965,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3191:6:12",
                  "typeDescriptions": {}
                }
              },
              "id": 975,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3191:32:12",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e2fdcc17",
            "id": 979,
            "mutability": "immutable",
            "name": "escrow",
            "nameLocation": "3262:6:12",
            "nodeType": "VariableDeclaration",
            "scope": 3682,
            "src": "3230:38:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStakingEscrow_$691",
              "typeString": "contract IStakingEscrow"
            },
            "typeName": {
              "id": 978,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 977,
                "name": "IStakingEscrow",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 691,
                "src": "3230:14:12"
              },
              "referencedDeclaration": 691,
              "src": "3230:14:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                "typeString": "contract IStakingEscrow"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d808a4ee",
            "id": 981,
            "mutability": "immutable",
            "name": "genesisSecondsPerPeriod",
            "nameLocation": "3298:23:12",
            "nodeType": "VariableDeclaration",
            "scope": 3682,
            "src": "3274:47:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 980,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "3274:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "407f8001",
            "id": 983,
            "mutability": "immutable",
            "name": "secondsPerPeriod",
            "nameLocation": "3351:16:12",
            "nodeType": "VariableDeclaration",
            "scope": 3682,
            "src": "3327:40:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 982,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "3327:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "713c0e57",
            "id": 988,
            "mutability": "mutable",
            "name": "policies",
            "nameLocation": "3409:8:12",
            "nodeType": "VariableDeclaration",
            "scope": 3682,
            "src": "3374:43:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$908_storage_$",
              "typeString": "mapping(bytes16 => struct PolicyManager.Policy)"
            },
            "typeName": {
              "id": 987,
              "keyType": {
                "id": 984,
                "name": "bytes16",
                "nodeType": "ElementaryTypeName",
                "src": "3383:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes16",
                  "typeString": "bytes16"
                }
              },
              "nodeType": "Mapping",
              "src": "3374:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$908_storage_$",
                "typeString": "mapping(bytes16 => struct PolicyManager.Policy)"
              },
              "valueType": {
                "id": 986,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 985,
                  "name": "Policy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 908,
                  "src": "3394:6:12"
                },
                "referencedDeclaration": 908,
                "src": "3394:6:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                  "typeString": "struct PolicyManager.Policy"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "189a5a17",
            "id": 993,
            "mutability": "mutable",
            "name": "nodes",
            "nameLocation": "3460:5:12",
            "nodeType": "VariableDeclaration",
            "scope": 3682,
            "src": "3423:42:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$925_storage_$",
              "typeString": "mapping(address => struct PolicyManager.NodeInfo)"
            },
            "typeName": {
              "id": 992,
              "keyType": {
                "id": 989,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3432:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3423:29:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$925_storage_$",
                "typeString": "mapping(address => struct PolicyManager.NodeInfo)"
              },
              "valueType": {
                "id": 991,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 990,
                  "name": "NodeInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 925,
                  "src": "3443:8:12"
                },
                "referencedDeclaration": 925,
                "src": "3443:8:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                  "typeString": "struct PolicyManager.NodeInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "65af62c3",
            "id": 996,
            "mutability": "mutable",
            "name": "feeRateRange",
            "nameLocation": "3484:12:12",
            "nodeType": "VariableDeclaration",
            "scope": 3682,
            "src": "3471:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Range_$941_storage",
              "typeString": "struct PolicyManager.Range"
            },
            "typeName": {
              "id": 995,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 994,
                "name": "Range",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 941,
                "src": "3471:5:12"
              },
              "referencedDeclaration": 941,
              "src": "3471:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Range_$941_storage_ptr",
                "typeString": "struct PolicyManager.Range"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "65a9af87",
            "id": 998,
            "mutability": "mutable",
            "name": "resetTimestamp",
            "nameLocation": "3516:14:12",
            "nodeType": "VariableDeclaration",
            "scope": 3682,
            "src": "3502:28:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 997,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "3502:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1063,
              "nodeType": "Block",
              "src": "3914:853:12",
              "statements": [
                {
                  "expression": {
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1008,
                      "name": "escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 979,
                      "src": "3924:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                        "typeString": "contract IStakingEscrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1009,
                      "name": "_escrowDispatcher",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1002,
                      "src": "3933:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                        "typeString": "contract IStakingEscrow"
                      }
                    },
                    "src": "3924:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                      "typeString": "contract IStakingEscrow"
                    }
                  },
                  "id": 1011,
                  "nodeType": "ExpressionStatement",
                  "src": "3924:26:12"
                },
                {
                  "assignments": [
                    1013
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1013,
                      "mutability": "mutable",
                      "name": "localSecondsPerPeriod",
                      "nameLocation": "4073:21:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1063,
                      "src": "4066:28:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1012,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4066:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1017,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1014,
                        "name": "_escrowImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1005,
                        "src": "4097:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                          "typeString": "contract IStakingEscrow"
                        }
                      },
                      "id": 1015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "secondsPerPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 576,
                      "src": "4097:38:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint32_$",
                        "typeString": "function () view external returns (uint32)"
                      }
                    },
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4097:40:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4066:71:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 1021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1019,
                          "name": "localSecondsPerPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1013,
                          "src": "4155:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4179:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4155:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1018,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4147:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4147:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1023,
                  "nodeType": "ExpressionStatement",
                  "src": "4147:34:12"
                },
                {
                  "expression": {
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1024,
                      "name": "secondsPerPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 983,
                      "src": "4191:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1025,
                      "name": "localSecondsPerPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1013,
                      "src": "4210:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4191:40:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1027,
                  "nodeType": "ExpressionStatement",
                  "src": "4191:40:12"
                },
                {
                  "assignments": [
                    1029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1029,
                      "mutability": "mutable",
                      "name": "localgenesisSecondsPerPeriod",
                      "nameLocation": "4248:28:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1063,
                      "src": "4241:35:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1028,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4241:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1033,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1030,
                        "name": "_escrowImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1005,
                        "src": "4279:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                          "typeString": "contract IStakingEscrow"
                        }
                      },
                      "id": 1031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "genesisSecondsPerPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 606,
                      "src": "4279:45:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint32_$",
                        "typeString": "function () view external returns (uint32)"
                      }
                    },
                    "id": 1032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4279:47:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4241:85:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 1037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1035,
                          "name": "localgenesisSecondsPerPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1029,
                          "src": "4344:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4375:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4344:32:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1034,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4336:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4336:41:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1039,
                  "nodeType": "ExpressionStatement",
                  "src": "4336:41:12"
                },
                {
                  "expression": {
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1040,
                      "name": "genesisSecondsPerPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 981,
                      "src": "4387:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1041,
                      "name": "localgenesisSecondsPerPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1029,
                      "src": "4413:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4387:54:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "4387:54:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                      "typeString": "contract IStakingEscrow"
                    },
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1044,
                      "name": "_escrowDispatcher",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1002,
                      "src": "4534:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                        "typeString": "contract IStakingEscrow"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1045,
                      "name": "_escrowImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1005,
                      "src": "4555:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                        "typeString": "contract IStakingEscrow"
                      }
                    },
                    "src": "4534:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1062,
                  "nodeType": "IfStatement",
                  "src": "4530:231:12",
                  "trueBody": {
                    "id": 1061,
                    "nodeType": "Block",
                    "src": "4578:183:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1058,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                "id": 1052,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 1048,
                                      "name": "_escrowDispatcher",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1002,
                                      "src": "4600:17:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                                        "typeString": "contract IStakingEscrow"
                                      }
                                    },
                                    "id": 1049,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "secondsPerPeriod",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 576,
                                    "src": "4600:34:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint32_$",
                                      "typeString": "function () view external returns (uint32)"
                                    }
                                  },
                                  "id": 1050,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4600:36:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 1051,
                                  "name": "localSecondsPerPeriod",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1013,
                                  "src": "4640:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "4600:61:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                "id": 1057,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 1053,
                                      "name": "_escrowDispatcher",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1002,
                                      "src": "4681:17:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                                        "typeString": "contract IStakingEscrow"
                                      }
                                    },
                                    "id": 1054,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "secondsPerPeriod",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 576,
                                    "src": "4681:34:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint32_$",
                                      "typeString": "function () view external returns (uint32)"
                                    }
                                  },
                                  "id": 1055,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4681:36:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 1056,
                                  "name": "localgenesisSecondsPerPeriod",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1029,
                                  "src": "4721:28:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "4681:68:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4600:149:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1047,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4592:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4592:158:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1060,
                        "nodeType": "ExpressionStatement",
                        "src": "4592:158:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 999,
              "nodeType": "StructuredDocumentation",
              "src": "3537:288:12",
              "text": " @notice Constructor sets address of the escrow contract\n @dev Put same address in both inputs variables except when migration is happening\n @param _escrowDispatcher Address of escrow dispatcher\n @param _escrowImplementation Address of escrow implementation"
            },
            "id": 1064,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1002,
                  "mutability": "mutable",
                  "name": "_escrowDispatcher",
                  "nameLocation": "3857:17:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "3842:32:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                    "typeString": "contract IStakingEscrow"
                  },
                  "typeName": {
                    "id": 1001,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1000,
                      "name": "IStakingEscrow",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 691,
                      "src": "3842:14:12"
                    },
                    "referencedDeclaration": 691,
                    "src": "3842:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                      "typeString": "contract IStakingEscrow"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1005,
                  "mutability": "mutable",
                  "name": "_escrowImplementation",
                  "nameLocation": "3891:21:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "3876:36:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                    "typeString": "contract IStakingEscrow"
                  },
                  "typeName": {
                    "id": 1004,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1003,
                      "name": "IStakingEscrow",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 691,
                      "src": "3876:14:12"
                    },
                    "referencedDeclaration": 691,
                    "src": "3876:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                      "typeString": "contract IStakingEscrow"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3841:72:12"
            },
            "returnParameters": {
              "id": 1007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3914:0:12"
            },
            "scope": 3682,
            "src": "3830:937:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1078,
              "nodeType": "Block",
              "src": "4882:66:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1068,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4900:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4900:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1072,
                              "name": "escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 979,
                              "src": "4922:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                                "typeString": "contract IStakingEscrow"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                                "typeString": "contract IStakingEscrow"
                              }
                            ],
                            "id": 1071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4914:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1070,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4914:7:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4914:15:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4900:29:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1067,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4892:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4892:38:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1076,
                  "nodeType": "ExpressionStatement",
                  "src": "4892:38:12"
                },
                {
                  "id": 1077,
                  "nodeType": "PlaceholderStatement",
                  "src": "4940:1:12"
                }
              ]
            },
            "documentation": {
              "id": 1065,
              "nodeType": "StructuredDocumentation",
              "src": "4773:70:12",
              "text": " @dev Checks that sender is the StakingEscrow contract"
            },
            "id": 1079,
            "name": "onlyEscrowContract",
            "nameLocation": "4857:18:12",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4875:2:12"
            },
            "src": "4848:100:12",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1093,
              "nodeType": "Block",
              "src": "5065:66:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1087,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5089:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5089:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 1089,
                          "name": "secondsPerPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 983,
                          "src": "5107:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "5089:34:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5082:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint16_$",
                        "typeString": "type(uint16)"
                      },
                      "typeName": {
                        "id": 1085,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "5082:6:12",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5082:42:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 1084,
                  "id": 1092,
                  "nodeType": "Return",
                  "src": "5075:49:12"
                }
              ]
            },
            "documentation": {
              "id": 1080,
              "nodeType": "StructuredDocumentation",
              "src": "4954:49:12",
              "text": " @return Number of current period"
            },
            "functionSelector": "086146d2",
            "id": 1094,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentPeriod",
            "nameLocation": "5017:16:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5033:2:12"
            },
            "returnParameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1083,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1094,
                  "src": "5057:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1082,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "5057:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5056:8:12"
            },
            "scope": 3682,
            "src": "5008:123:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1114,
              "nodeType": "Block",
              "src": "5281:93:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1106,
                                "name": "_period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1097,
                                "src": "5313:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              ],
                              "id": 1105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5305:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1104,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5305:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5305:16:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1108,
                            "name": "genesisSecondsPerPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 981,
                            "src": "5324:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "5305:42:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 1110,
                          "name": "secondsPerPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 983,
                          "src": "5350:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "5305:61:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5298:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint16_$",
                        "typeString": "type(uint16)"
                      },
                      "typeName": {
                        "id": 1102,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "5298:6:12",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5298:69:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 1101,
                  "id": 1113,
                  "nodeType": "Return",
                  "src": "5291:76:12"
                }
              ]
            },
            "documentation": {
              "id": 1095,
              "nodeType": "StructuredDocumentation",
              "src": "5137:65:12",
              "text": " @return Recalculate period value using new basis"
            },
            "id": 1115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recalculatePeriod",
            "nameLocation": "5216:17:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1097,
                  "mutability": "mutable",
                  "name": "_period",
                  "nameLocation": "5241:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1115,
                  "src": "5234:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1096,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "5234:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5233:16:12"
            },
            "returnParameters": {
              "id": 1101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1100,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1115,
                  "src": "5273:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1099,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "5273:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5272:8:12"
            },
            "scope": 3682,
            "src": "5207:167:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1150,
              "nodeType": "Block",
              "src": "5570:185:12",
              "statements": [
                {
                  "assignments": [
                    1127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1127,
                      "mutability": "mutable",
                      "name": "nodeInfo",
                      "nameLocation": "5597:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1150,
                      "src": "5580:25:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo"
                      },
                      "typeName": {
                        "id": 1126,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1125,
                          "name": "NodeInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 925,
                          "src": "5580:8:12"
                        },
                        "referencedDeclaration": 925,
                        "src": "5580:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1131,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1128,
                      "name": "nodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 993,
                      "src": "5608:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$925_storage_$",
                        "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                      }
                    },
                    "id": 1130,
                    "indexExpression": {
                      "id": 1129,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1118,
                      "src": "5614:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5608:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$925_storage",
                      "typeString": "struct PolicyManager.NodeInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5580:40:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 1136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1133,
                              "name": "nodeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1127,
                              "src": "5638:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                "typeString": "struct PolicyManager.NodeInfo storage pointer"
                              }
                            },
                            "id": 1134,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "previousFeePeriod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 912,
                            "src": "5638:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5668:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5638:31:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 1140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1137,
                            "name": "_period",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "5673:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1138,
                              "name": "getCurrentPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1094,
                              "src": "5683:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint16_$",
                                "typeString": "function () view returns (uint16)"
                              }
                            },
                            "id": 1139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5683:18:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "5673:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5638:63:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5630:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5630:72:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1143,
                  "nodeType": "ExpressionStatement",
                  "src": "5630:72:12"
                },
                {
                  "expression": {
                    "id": 1148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1144,
                        "name": "nodeInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1127,
                        "src": "5712:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 1146,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "previousFeePeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 912,
                      "src": "5712:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1147,
                      "name": "_period",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1120,
                      "src": "5741:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "5712:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1149,
                  "nodeType": "ExpressionStatement",
                  "src": "5712:36:12"
                }
              ]
            },
            "documentation": {
              "id": 1116,
              "nodeType": "StructuredDocumentation",
              "src": "5380:108:12",
              "text": " @notice Register a node\n @param _node Node address\n @param _period Initial period"
            },
            "functionSelector": "72be8d8d",
            "id": 1151,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1123,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1122,
                  "name": "onlyEscrowContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1079,
                  "src": "5551:18:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "5551:18:12"
              }
            ],
            "name": "register",
            "nameLocation": "5502:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1118,
                  "mutability": "mutable",
                  "name": "_node",
                  "nameLocation": "5519:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1151,
                  "src": "5511:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5511:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1120,
                  "mutability": "mutable",
                  "name": "_period",
                  "nameLocation": "5533:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1151,
                  "src": "5526:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "5526:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5510:31:12"
            },
            "returnParameters": {
              "id": 1124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5570:0:12"
            },
            "scope": 3682,
            "src": "5493:262:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1189,
              "nodeType": "Block",
              "src": "5932:382:12",
              "statements": [
                {
                  "assignments": [
                    1161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1161,
                      "mutability": "mutable",
                      "name": "nodeInfo",
                      "nameLocation": "5959:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1189,
                      "src": "5942:25:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo"
                      },
                      "typeName": {
                        "id": 1160,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1159,
                          "name": "NodeInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 925,
                          "src": "5942:8:12"
                        },
                        "referencedDeclaration": 925,
                        "src": "5942:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1165,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1162,
                      "name": "nodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 993,
                      "src": "5970:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$925_storage_$",
                        "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                      }
                    },
                    "id": 1164,
                    "indexExpression": {
                      "id": 1163,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1154,
                      "src": "5976:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5970:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$925_storage",
                      "typeString": "struct PolicyManager.NodeInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5942:40:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 1171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1167,
                            "name": "nodeInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1161,
                            "src": "6144:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                            }
                          },
                          "id": 1168,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "previousFeePeriod",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 912,
                          "src": "6144:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1169,
                            "name": "getCurrentPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1094,
                            "src": "6174:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint16_$",
                              "typeString": "function () view returns (uint16)"
                            }
                          },
                          "id": 1170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6174:18:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "src": "6144:48:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6136:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6136:57:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1173,
                  "nodeType": "ExpressionStatement",
                  "src": "6136:57:12"
                },
                {
                  "expression": {
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1174,
                        "name": "nodeInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1161,
                        "src": "6203:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 1176,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "previousFeePeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 912,
                      "src": "6203:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1178,
                            "name": "nodeInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1161,
                            "src": "6250:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                            }
                          },
                          "id": 1179,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "previousFeePeriod",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 912,
                          "src": "6250:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 1177,
                        "name": "recalculatePeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1115,
                        "src": "6232:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_uint16_$",
                          "typeString": "function (uint16) view returns (uint16)"
                        }
                      },
                      "id": 1180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6232:45:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "6203:74:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1182,
                  "nodeType": "ExpressionStatement",
                  "src": "6203:74:12"
                },
                {
                  "expression": {
                    "id": 1187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1183,
                        "name": "nodeInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1161,
                        "src": "6287:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 1185,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "feeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 914,
                      "src": "6287:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6306:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6287:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1188,
                  "nodeType": "ExpressionStatement",
                  "src": "6287:20:12"
                }
              ]
            },
            "documentation": {
              "id": 1152,
              "nodeType": "StructuredDocumentation",
              "src": "5761:106:12",
              "text": " @notice Migrate from the old period length to the new one\n @param _node Node address"
            },
            "functionSelector": "ce5494bb",
            "id": 1190,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1157,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1156,
                  "name": "onlyEscrowContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1079,
                  "src": "5913:18:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "5913:18:12"
              }
            ],
            "name": "migrate",
            "nameLocation": "5881:7:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1154,
                  "mutability": "mutable",
                  "name": "_node",
                  "nameLocation": "5897:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "5889:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5889:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5888:15:12"
            },
            "returnParameters": {
              "id": 1158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5932:0:12"
            },
            "scope": 3682,
            "src": "5872:442:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1228,
              "nodeType": "Block",
              "src": "6628:178:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 1205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1203,
                            "name": "_min",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1193,
                            "src": "6646:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1204,
                            "name": "_default",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1195,
                            "src": "6654:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "6646:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 1208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1206,
                            "name": "_default",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1195,
                            "src": "6666:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1207,
                            "name": "_max",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1197,
                            "src": "6678:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "6666:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6646:36:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1202,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6638:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6638:45:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1211,
                  "nodeType": "ExpressionStatement",
                  "src": "6638:45:12"
                },
                {
                  "expression": {
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1212,
                      "name": "feeRateRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 996,
                      "src": "6693:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Range_$941_storage",
                        "typeString": "struct PolicyManager.Range storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1214,
                          "name": "_min",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1193,
                          "src": "6714:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 1215,
                          "name": "_default",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1195,
                          "src": "6720:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 1216,
                          "name": "_max",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1197,
                          "src": "6730:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "id": 1213,
                        "name": "Range",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 941,
                        "src": "6708:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Range_$941_storage_ptr_$",
                          "typeString": "type(struct PolicyManager.Range storage pointer)"
                        }
                      },
                      "id": 1217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6708:27:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Range_$941_memory_ptr",
                        "typeString": "struct PolicyManager.Range memory"
                      }
                    },
                    "src": "6693:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Range_$941_storage",
                      "typeString": "struct PolicyManager.Range storage ref"
                    }
                  },
                  "id": 1219,
                  "nodeType": "ExpressionStatement",
                  "src": "6693:42:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1221,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6766:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6766:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1223,
                        "name": "_min",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
                        "src": "6778:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 1224,
                        "name": "_default",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1195,
                        "src": "6784:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 1225,
                        "name": "_max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1197,
                        "src": "6794:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 1220,
                      "name": "FeeRateRangeSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 866,
                      "src": "6750:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6750:49:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1227,
                  "nodeType": "EmitStatement",
                  "src": "6745:54:12"
                }
              ]
            },
            "documentation": {
              "id": 1191,
              "nodeType": "StructuredDocumentation",
              "src": "6320:118:12",
              "text": " @notice Set minimum, default & maximum fee rate for all stakers and all policies ('global fee range')"
            },
            "functionSelector": "631722f2",
            "id": 1229,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1200,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1199,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13593,
                  "src": "6618:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "6618:9:12"
              }
            ],
            "name": "setFeeRateRange",
            "nameLocation": "6547:15:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "_min",
                  "nameLocation": "6571:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1229,
                  "src": "6563:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "6563:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1195,
                  "mutability": "mutable",
                  "name": "_default",
                  "nameLocation": "6585:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1229,
                  "src": "6577:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1194,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "6577:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1197,
                  "mutability": "mutable",
                  "name": "_max",
                  "nameLocation": "6603:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1229,
                  "src": "6595:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1196,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "6595:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6562:46:12"
            },
            "returnParameters": {
              "id": 1201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6628:0:12"
            },
            "scope": 3682,
            "src": "6538:268:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1275,
              "nodeType": "Block",
              "src": "7048:414:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1236,
                            "name": "_minFeeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1232,
                            "src": "7066:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "id": 1237,
                              "name": "feeRateRange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 996,
                              "src": "7081:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Range_$941_storage",
                                "typeString": "struct PolicyManager.Range storage ref"
                              }
                            },
                            "id": 1238,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "min",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 936,
                            "src": "7081:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "7066:31:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1240,
                            "name": "_minFeeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1232,
                            "src": "7113:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "id": 1241,
                              "name": "feeRateRange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 996,
                              "src": "7128:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Range_$941_storage",
                                "typeString": "struct PolicyManager.Range storage ref"
                              }
                            },
                            "id": 1242,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 940,
                            "src": "7128:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "7113:31:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7066:78:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865207374616b65722773206d696e206665652072617465206d7573742066616c6c2077697468696e2074686520676c6f62616c206665652072616e6765",
                        "id": 1245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7158:65:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30a01091999c299dcf5ec5b0dc4c61fb2d8265f8586a3ecb4392357e9cfeaa2c",
                          "typeString": "literal_string \"The staker's min fee rate must fall within the global fee range\""
                        },
                        "value": "The staker's min fee rate must fall within the global fee range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30a01091999c299dcf5ec5b0dc4c61fb2d8265f8586a3ecb4392357e9cfeaa2c",
                          "typeString": "literal_string \"The staker's min fee rate must fall within the global fee range\""
                        }
                      ],
                      "id": 1235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7058:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7058:166:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1247,
                  "nodeType": "ExpressionStatement",
                  "src": "7058:166:12"
                },
                {
                  "assignments": [
                    1250
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1250,
                      "mutability": "mutable",
                      "name": "nodeInfo",
                      "nameLocation": "7251:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1275,
                      "src": "7234:25:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo"
                      },
                      "typeName": {
                        "id": 1249,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1248,
                          "name": "NodeInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 925,
                          "src": "7234:8:12"
                        },
                        "referencedDeclaration": 925,
                        "src": "7234:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1255,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1251,
                      "name": "nodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 993,
                      "src": "7262:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$925_storage_$",
                        "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                      }
                    },
                    "id": 1254,
                    "indexExpression": {
                      "expression": {
                        "id": 1252,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7268:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7268:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7262:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$925_storage",
                      "typeString": "struct PolicyManager.NodeInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7234:45:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1256,
                        "name": "nodeInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "7293:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 1257,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "minFeeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 916,
                      "src": "7293:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1258,
                      "name": "_minFeeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1232,
                      "src": "7316:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7293:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1262,
                  "nodeType": "IfStatement",
                  "src": "7289:71:12",
                  "trueBody": {
                    "id": 1261,
                    "nodeType": "Block",
                    "src": "7329:31:12",
                    "statements": [
                      {
                        "functionReturnParameters": 1234,
                        "id": 1260,
                        "nodeType": "Return",
                        "src": "7343:7:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1263,
                        "name": "nodeInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "7369:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 1265,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "minFeeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 916,
                      "src": "7369:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1266,
                      "name": "_minFeeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1232,
                      "src": "7391:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7369:33:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1268,
                  "nodeType": "ExpressionStatement",
                  "src": "7369:33:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1270,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7431:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7431:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1272,
                        "name": "_minFeeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1232,
                        "src": "7443:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1269,
                      "name": "MinFeeRateSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 856,
                      "src": "7417:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7417:38:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1274,
                  "nodeType": "EmitStatement",
                  "src": "7412:43:12"
                }
              ]
            },
            "documentation": {
              "id": 1230,
              "nodeType": "StructuredDocumentation",
              "src": "6812:178:12",
              "text": " @notice Set the minimum acceptable fee rate (set by staker for their associated worker)\n @dev Input value must fall within `feeRateRange` (global fee range)"
            },
            "functionSelector": "8c316b90",
            "id": 1276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMinFeeRate",
            "nameLocation": "7004:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1232,
                  "mutability": "mutable",
                  "name": "_minFeeRate",
                  "nameLocation": "7026:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "7018:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1231,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7018:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7017:21:12"
            },
            "returnParameters": {
              "id": 1234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7048:0:12"
            },
            "scope": 3682,
            "src": "6995:467:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1310,
              "nodeType": "Block",
              "src": "7660:412:12",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1285,
                            "name": "_nodeInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1280,
                            "src": "7814:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                            }
                          },
                          "id": 1286,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minFeeRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 916,
                          "src": "7814:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7838:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7814:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1289,
                            "name": "_nodeInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1280,
                            "src": "7855:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                            }
                          },
                          "id": 1290,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minFeeRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 916,
                          "src": "7855:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 1291,
                            "name": "feeRateRange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 996,
                            "src": "7878:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Range_$941_storage",
                              "typeString": "struct PolicyManager.Range storage ref"
                            }
                          },
                          "id": 1292,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "min",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 936,
                          "src": "7878:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "7855:39:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "7814:80:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1295,
                          "name": "_nodeInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1280,
                          "src": "7910:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                            "typeString": "struct PolicyManager.NodeInfo storage pointer"
                          }
                        },
                        "id": 1296,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "minFeeRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 916,
                        "src": "7910:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "id": 1297,
                          "name": "feeRateRange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 996,
                          "src": "7933:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Range_$941_storage",
                            "typeString": "struct PolicyManager.Range storage ref"
                          }
                        },
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 940,
                        "src": "7933:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "src": "7910:39:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7814:135:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1308,
                    "nodeType": "Block",
                    "src": "8014:52:12",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1305,
                            "name": "_nodeInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1280,
                            "src": "8035:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                            }
                          },
                          "id": 1306,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minFeeRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 916,
                          "src": "8035:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1284,
                        "id": 1307,
                        "nodeType": "Return",
                        "src": "8028:27:12"
                      }
                    ]
                  },
                  "id": 1309,
                  "nodeType": "IfStatement",
                  "src": "7810:256:12",
                  "trueBody": {
                    "id": 1304,
                    "nodeType": "Block",
                    "src": "7951:57:12",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1301,
                            "name": "feeRateRange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 996,
                            "src": "7972:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Range_$941_storage",
                              "typeString": "struct PolicyManager.Range storage ref"
                            }
                          },
                          "id": 1302,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "defaultValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 938,
                          "src": "7972:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "functionReturnParameters": 1284,
                        "id": 1303,
                        "nodeType": "Return",
                        "src": "7965:32:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1277,
              "nodeType": "StructuredDocumentation",
              "src": "7468:104:12",
              "text": " @notice Get the minimum acceptable fee rate (set by staker for their associated worker)"
            },
            "id": 1311,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMinFeeRate",
            "nameLocation": "7586:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1280,
                  "mutability": "mutable",
                  "name": "_nodeInfo",
                  "nameLocation": "7617:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1311,
                  "src": "7600:26:12",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                    "typeString": "struct PolicyManager.NodeInfo"
                  },
                  "typeName": {
                    "id": 1279,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1278,
                      "name": "NodeInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 925,
                      "src": "7600:8:12"
                    },
                    "referencedDeclaration": 925,
                    "src": "7600:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                      "typeString": "struct PolicyManager.NodeInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7599:28:12"
            },
            "returnParameters": {
              "id": 1284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1283,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1311,
                  "src": "7651:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7651:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7650:9:12"
            },
            "scope": 3682,
            "src": "7577:495:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1330,
              "nodeType": "Block",
              "src": "8255:97:12",
              "statements": [
                {
                  "assignments": [
                    1321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1321,
                      "mutability": "mutable",
                      "name": "nodeInfo",
                      "nameLocation": "8282:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1330,
                      "src": "8265:25:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo"
                      },
                      "typeName": {
                        "id": 1320,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1319,
                          "name": "NodeInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 925,
                          "src": "8265:8:12"
                        },
                        "referencedDeclaration": 925,
                        "src": "8265:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1325,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1322,
                      "name": "nodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 993,
                      "src": "8293:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$925_storage_$",
                        "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                      }
                    },
                    "id": 1324,
                    "indexExpression": {
                      "id": 1323,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1314,
                      "src": "8299:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8293:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$925_storage",
                      "typeString": "struct PolicyManager.NodeInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8265:40:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1327,
                        "name": "nodeInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1321,
                        "src": "8336:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      ],
                      "id": 1326,
                      "name": "getMinFeeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1311,
                        1331
                      ],
                      "referencedDeclaration": 1311,
                      "src": "8322:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_NodeInfo_$925_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct PolicyManager.NodeInfo storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8322:23:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1318,
                  "id": 1329,
                  "nodeType": "Return",
                  "src": "8315:30:12"
                }
              ]
            },
            "documentation": {
              "id": 1312,
              "nodeType": "StructuredDocumentation",
              "src": "8078:104:12",
              "text": " @notice Get the minimum acceptable fee rate (set by staker for their associated worker)"
            },
            "functionSelector": "889ddd1a",
            "id": 1331,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMinFeeRate",
            "nameLocation": "8196:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1314,
                  "mutability": "mutable",
                  "name": "_node",
                  "nameLocation": "8218:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1331,
                  "src": "8210:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8210:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8209:15:12"
            },
            "returnParameters": {
              "id": 1318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1317,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1331,
                  "src": "8246:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8246:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8245:9:12"
            },
            "scope": 3682,
            "src": "8187:165:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1475,
              "nodeType": "Block",
              "src": "8850:896:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1345,
                            "name": "_endTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1338,
                            "src": "8881:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 1346,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8897:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "8897:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8881:31:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1349,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8928:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "8928:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8940:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8928:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8881:60:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1344,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8860:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8860:91:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1355,
                  "nodeType": "ExpressionStatement",
                  "src": "8860:91:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1359,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8978:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PolicyManager_$3682",
                                  "typeString": "contract PolicyManager"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PolicyManager_$3682",
                                  "typeString": "contract PolicyManager"
                                }
                              ],
                              "id": 1358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8970:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1357,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8970:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8970:13:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "8970:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1362,
                          "name": "MAX_BALANCE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 963,
                          "src": "8995:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8970:36:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1356,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8962:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8962:45:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1365,
                  "nodeType": "ExpressionStatement",
                  "src": "8962:45:12"
                },
                {
                  "assignments": [
                    1367
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1367,
                      "mutability": "mutable",
                      "name": "currentPeriod",
                      "nameLocation": "9024:13:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1475,
                      "src": "9017:20:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 1366,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "9017:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1370,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1368,
                      "name": "getCurrentPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1094,
                      "src": "9040:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint16_$",
                        "typeString": "function () view returns (uint16)"
                      }
                    },
                    "id": 1369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9040:18:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9017:41:12"
                },
                {
                  "assignments": [
                    1372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1372,
                      "mutability": "mutable",
                      "name": "endPeriod",
                      "nameLocation": "9075:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1475,
                      "src": "9068:16:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 1371,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "9068:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1381,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 1377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1375,
                            "name": "_endTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1338,
                            "src": "9094:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1376,
                            "name": "secondsPerPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 983,
                            "src": "9110:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "9094:32:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 1374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9087:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint16_$",
                          "typeString": "type(uint16)"
                        },
                        "typeName": {
                          "id": 1373,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "9087:6:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9087:40:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9130:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9087:44:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9068:63:12"
                },
                {
                  "assignments": [
                    1383
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1383,
                      "mutability": "mutable",
                      "name": "numberOfPeriods",
                      "nameLocation": "9149:15:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1475,
                      "src": "9141:23:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1382,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9141:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1387,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1384,
                      "name": "endPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1372,
                      "src": "9167:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1385,
                      "name": "currentPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1367,
                      "src": "9179:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "9167:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9141:51:12"
                },
                {
                  "assignments": [
                    1389
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1389,
                      "mutability": "mutable",
                      "name": "feeRate",
                      "nameLocation": "9211:7:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1475,
                      "src": "9203:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1388,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "9203:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1401,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1395,
                                "name": "_nodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1341,
                                "src": "9243:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 1396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "9243:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 1392,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9229:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "9229:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13454,
                            "src": "9229:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9229:28:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 1398,
                          "name": "numberOfPeriods",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1383,
                          "src": "9260:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9229:46:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9221:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint128_$",
                        "typeString": "type(uint128)"
                      },
                      "typeName": {
                        "id": 1390,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "9221:7:12",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9221:55:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9203:73:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 1405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1403,
                            "name": "feeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1389,
                            "src": "9294:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9304:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9294:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1406,
                                "name": "feeRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1389,
                                "src": "9309:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1407,
                                "name": "numberOfPeriods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1383,
                                "src": "9319:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9309:25:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "id": 1409,
                                "name": "_nodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1341,
                                "src": "9337:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 1410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "9337:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9309:41:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1412,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9355:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "9355:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9309:55:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9294:70:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9286:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9286:79:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1417,
                  "nodeType": "ExpressionStatement",
                  "src": "9286:79:12"
                },
                {
                  "assignments": [
                    1420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1420,
                      "mutability": "mutable",
                      "name": "policy",
                      "nameLocation": "9391:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1475,
                      "src": "9376:21:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                        "typeString": "struct PolicyManager.Policy"
                      },
                      "typeName": {
                        "id": 1419,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1418,
                          "name": "Policy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 908,
                          "src": "9376:6:12"
                        },
                        "referencedDeclaration": 908,
                        "src": "9376:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1429,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1422,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1334,
                        "src": "9413:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "id": 1423,
                        "name": "_policyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1336,
                        "src": "9424:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1424,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1338,
                        "src": "9438:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 1425,
                        "name": "feeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1389,
                        "src": "9453:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 1426,
                          "name": "_nodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1341,
                          "src": "9462:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          }
                        },
                        "id": 1427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "9462:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1421,
                      "name": "createPolicy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1779,
                      "src": "9400:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes16_$_t_address_$_t_uint64_$_t_uint128_$_t_uint256_$returns$_t_struct$_Policy_$908_storage_ptr_$",
                        "typeString": "function (bytes16,address,uint64,uint128,uint256) returns (struct PolicyManager.Policy storage pointer)"
                      }
                    },
                    "id": 1428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9400:76:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                      "typeString": "struct PolicyManager.Policy storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9376:100:12"
                },
                {
                  "body": {
                    "id": 1473,
                    "nodeType": "Block",
                    "src": "9531:209:12",
                    "statements": [
                      {
                        "assignments": [
                          1442
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1442,
                            "mutability": "mutable",
                            "name": "node",
                            "nameLocation": "9553:4:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1473,
                            "src": "9545:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1441,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9545:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1446,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1443,
                            "name": "_nodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "9560:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 1445,
                          "indexExpression": {
                            "id": 1444,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1431,
                            "src": "9567:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9560:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9545:24:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1448,
                              "name": "currentPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1367,
                              "src": "9596:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "id": 1449,
                              "name": "endPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1372,
                              "src": "9611:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "id": 1450,
                              "name": "node",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1442,
                              "src": "9622:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1451,
                              "name": "feeRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1389,
                              "src": "9628:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1456,
                                      "name": "feeRate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1389,
                                      "src": "9652:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    ],
                                    "id": 1455,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9644:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1454,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9644:7:12",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1457,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9644:16:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1453,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9637:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int256_$",
                                  "typeString": "type(int256)"
                                },
                                "typeName": {
                                  "id": 1452,
                                  "name": "int256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9637:6:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9637:24:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 1447,
                            "name": "addFeeToNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1908,
                            "src": "9583:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$_t_uint16_$_t_address_$_t_uint128_$_t_int256_$returns$__$",
                              "typeString": "function (uint16,uint16,address,uint128,int256)"
                            }
                          },
                          "id": 1459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9583:79:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1460,
                        "nodeType": "ExpressionStatement",
                        "src": "9583:79:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1467,
                                  "name": "node",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1442,
                                  "src": "9717:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 1468,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9723:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "hexValue": "30",
                                  "id": 1469,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9726:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1466,
                                "name": "ArrangementInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 881,
                                "src": "9701:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_ArrangementInfo_$881_storage_ptr_$",
                                  "typeString": "type(struct PolicyManager.ArrangementInfo storage pointer)"
                                }
                              },
                              "id": 1470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9701:27:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ArrangementInfo_$881_memory_ptr",
                                "typeString": "struct PolicyManager.ArrangementInfo memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_ArrangementInfo_$881_memory_ptr",
                                "typeString": "struct PolicyManager.ArrangementInfo memory"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 1461,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1420,
                                "src": "9676:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                  "typeString": "struct PolicyManager.Policy storage pointer"
                                }
                              },
                              "id": 1464,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "arrangements",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 907,
                              "src": "9676:19:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage",
                                "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                              }
                            },
                            "id": 1465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "9676:24:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage_ptr_$_t_struct$_ArrangementInfo_$881_storage_$returns$__$bound_to$_t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct PolicyManager.ArrangementInfo storage ref[] storage pointer,struct PolicyManager.ArrangementInfo storage ref)"
                            }
                          },
                          "id": 1471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9676:53:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1472,
                        "nodeType": "ExpressionStatement",
                        "src": "9676:53:12"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1434,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1431,
                      "src": "9507:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1435,
                        "name": "_nodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1341,
                        "src": "9511:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 1436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9511:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9507:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1474,
                  "initializationExpression": {
                    "assignments": [
                      1431
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1431,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9500:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1474,
                        "src": "9492:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1430,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9492:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1433,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9504:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9492:13:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9526:3:12",
                      "subExpression": {
                        "id": 1438,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1431,
                        "src": "9526:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1440,
                    "nodeType": "ExpressionStatement",
                    "src": "9526:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "9487:253:12"
                }
              ]
            },
            "documentation": {
              "id": 1332,
              "nodeType": "StructuredDocumentation",
              "src": "8358:308:12",
              "text": " @notice Create policy\n @dev Generate policy id before creation\n @param _policyId Policy id\n @param _policyOwner Policy owner. Zero address means sender is owner\n @param _endTimestamp End timestamp of the policy in seconds\n @param _nodes Nodes that will handle policy"
            },
            "functionSelector": "81e742a1",
            "id": 1476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPolicy",
            "nameLocation": "8680:12:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1334,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "8710:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1476,
                  "src": "8702:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 1333,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "8702:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1336,
                  "mutability": "mutable",
                  "name": "_policyOwner",
                  "nameLocation": "8737:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1476,
                  "src": "8729:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8729:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1338,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "8766:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1476,
                  "src": "8759:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 1337,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "8759:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1341,
                  "mutability": "mutable",
                  "name": "_nodes",
                  "nameLocation": "8808:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1476,
                  "src": "8789:25:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1339,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8789:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1340,
                    "nodeType": "ArrayTypeName",
                    "src": "8789:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8692:128:12"
            },
            "returnParameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8850:0:12"
            },
            "scope": 3682,
            "src": "8671:1075:12",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1666,
              "nodeType": "Block",
              "src": "10318:1168:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1491,
                              "name": "_endTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1484,
                              "src": "10349:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 1492,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "10365:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "10365:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10349:31:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1495,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10396:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "10396:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10408:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "10396:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10349:60:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1500,
                              "name": "_policyIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1480,
                              "src": "10425:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes16_$dyn_calldata_ptr",
                                "typeString": "bytes16[] calldata"
                              }
                            },
                            "id": 1501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10425:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10445:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "10425:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10349:97:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10328:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10328:128:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1506,
                  "nodeType": "ExpressionStatement",
                  "src": "10328:128:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1510,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10483:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PolicyManager_$3682",
                                  "typeString": "contract PolicyManager"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PolicyManager_$3682",
                                  "typeString": "contract PolicyManager"
                                }
                              ],
                              "id": 1509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10475:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1508,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10475:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10475:13:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "10475:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1513,
                          "name": "MAX_BALANCE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 963,
                          "src": "10500:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10475:36:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10467:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10467:45:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1516,
                  "nodeType": "ExpressionStatement",
                  "src": "10467:45:12"
                },
                {
                  "assignments": [
                    1518
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1518,
                      "mutability": "mutable",
                      "name": "currentPeriod",
                      "nameLocation": "10529:13:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1666,
                      "src": "10522:20:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 1517,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "10522:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1521,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1519,
                      "name": "getCurrentPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1094,
                      "src": "10545:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint16_$",
                        "typeString": "function () view returns (uint16)"
                      }
                    },
                    "id": 1520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10545:18:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10522:41:12"
                },
                {
                  "assignments": [
                    1523
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1523,
                      "mutability": "mutable",
                      "name": "endPeriod",
                      "nameLocation": "10580:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1666,
                      "src": "10573:16:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 1522,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "10573:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1532,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 1528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1526,
                            "name": "_endTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1484,
                            "src": "10599:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1527,
                            "name": "secondsPerPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 983,
                            "src": "10615:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "10599:32:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 1525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10592:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint16_$",
                          "typeString": "type(uint16)"
                        },
                        "typeName": {
                          "id": 1524,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "10592:6:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10592:40:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10635:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10592:44:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10573:63:12"
                },
                {
                  "assignments": [
                    1534
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1534,
                      "mutability": "mutable",
                      "name": "numberOfPeriods",
                      "nameLocation": "10654:15:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1666,
                      "src": "10646:23:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1533,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10646:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1538,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1535,
                      "name": "endPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1523,
                      "src": "10672:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1536,
                      "name": "currentPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1518,
                      "src": "10684:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "10672:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10646:51:12"
                },
                {
                  "assignments": [
                    1540
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1540,
                      "mutability": "mutable",
                      "name": "feeRate",
                      "nameLocation": "10716:7:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1666,
                      "src": "10708:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1539,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "10708:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1555,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1546,
                                  "name": "_nodes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1487,
                                  "src": "10748:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 1547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "10748:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 1543,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "10734:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1544,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "10734:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13454,
                              "src": "10734:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10734:28:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1549,
                            "name": "numberOfPeriods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1534,
                            "src": "10765:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10734:46:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "expression": {
                            "id": 1551,
                            "name": "_policyIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1480,
                            "src": "10783:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes16_$dyn_calldata_ptr",
                              "typeString": "bytes16[] calldata"
                            }
                          },
                          "id": 1552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "10783:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10734:66:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10726:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint128_$",
                        "typeString": "type(uint128)"
                      },
                      "typeName": {
                        "id": 1541,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "10726:7:12",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10726:75:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10708:93:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 1559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1557,
                            "name": "feeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1540,
                            "src": "10819:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10829:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10819:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1560,
                                  "name": "feeRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1540,
                                  "src": "10834:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1561,
                                  "name": "numberOfPeriods",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1534,
                                  "src": "10844:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10834:25:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 1563,
                                  "name": "_nodes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1487,
                                  "src": "10862:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 1564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "10862:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10834:41:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "id": 1566,
                                "name": "_policyIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1480,
                                "src": "10878:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes16_$dyn_calldata_ptr",
                                  "typeString": "bytes16[] calldata"
                                }
                              },
                              "id": 1567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "10878:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10834:61:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1569,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10899:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "10899:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10834:74:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10819:89:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1556,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10811:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10811:98:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1574,
                  "nodeType": "ExpressionStatement",
                  "src": "10811:98:12"
                },
                {
                  "body": {
                    "id": 1627,
                    "nodeType": "Block",
                    "src": "10968:278:12",
                    "statements": [
                      {
                        "assignments": [
                          1588
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1588,
                            "mutability": "mutable",
                            "name": "policy",
                            "nameLocation": "10997:6:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1627,
                            "src": "10982:21:12",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                              "typeString": "struct PolicyManager.Policy"
                            },
                            "typeName": {
                              "id": 1587,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1586,
                                "name": "Policy",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 908,
                                "src": "10982:6:12"
                              },
                              "referencedDeclaration": 908,
                              "src": "10982:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                "typeString": "struct PolicyManager.Policy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1599,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1590,
                                "name": "_policyIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1480,
                                "src": "11019:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes16_$dyn_calldata_ptr",
                                  "typeString": "bytes16[] calldata"
                                }
                              },
                              "id": 1592,
                              "indexExpression": {
                                "id": 1591,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1576,
                                "src": "11030:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11019:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            },
                            {
                              "id": 1593,
                              "name": "_policyOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1482,
                              "src": "11034:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1594,
                              "name": "_endTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1484,
                              "src": "11048:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 1595,
                              "name": "feeRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1540,
                              "src": "11063:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "expression": {
                                "id": 1596,
                                "name": "_nodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1487,
                                "src": "11072:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 1597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "11072:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1589,
                            "name": "createPolicy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1779,
                            "src": "11006:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes16_$_t_address_$_t_uint64_$_t_uint128_$_t_uint256_$returns$_t_struct$_Policy_$908_storage_ptr_$",
                              "typeString": "function (bytes16,address,uint64,uint128,uint256) returns (struct PolicyManager.Policy storage pointer)"
                            }
                          },
                          "id": 1598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11006:80:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                            "typeString": "struct PolicyManager.Policy storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10982:104:12"
                      },
                      {
                        "body": {
                          "id": 1625,
                          "nodeType": "Block",
                          "src": "11145:91:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 1617,
                                          "name": "_nodes",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1487,
                                          "src": "11204:6:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                            "typeString": "address[] calldata"
                                          }
                                        },
                                        "id": 1619,
                                        "indexExpression": {
                                          "id": 1618,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1601,
                                          "src": "11211:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "11204:9:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "hexValue": "30",
                                        "id": 1620,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11215:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      {
                                        "hexValue": "30",
                                        "id": 1621,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11218:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1616,
                                      "name": "ArrangementInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 881,
                                      "src": "11188:15:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_struct$_ArrangementInfo_$881_storage_ptr_$",
                                        "typeString": "type(struct PolicyManager.ArrangementInfo storage pointer)"
                                      }
                                    },
                                    "id": 1622,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "structConstructorCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11188:32:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ArrangementInfo_$881_memory_ptr",
                                      "typeString": "struct PolicyManager.ArrangementInfo memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_ArrangementInfo_$881_memory_ptr",
                                      "typeString": "struct PolicyManager.ArrangementInfo memory"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "id": 1611,
                                      "name": "policy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1588,
                                      "src": "11163:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                        "typeString": "struct PolicyManager.Policy storage pointer"
                                      }
                                    },
                                    "id": 1614,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "arrangements",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 907,
                                    "src": "11163:19:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage",
                                      "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                                    }
                                  },
                                  "id": 1615,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "11163:24:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage_ptr_$_t_struct$_ArrangementInfo_$881_storage_$returns$__$bound_to$_t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage_ptr_$",
                                    "typeString": "function (struct PolicyManager.ArrangementInfo storage ref[] storage pointer,struct PolicyManager.ArrangementInfo storage ref)"
                                  }
                                },
                                "id": 1623,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11163:58:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1624,
                              "nodeType": "ExpressionStatement",
                              "src": "11163:58:12"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1604,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1601,
                            "src": "11121:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1605,
                              "name": "_nodes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1487,
                              "src": "11125:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 1606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "11125:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11121:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1626,
                        "initializationExpression": {
                          "assignments": [
                            1601
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1601,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "11114:1:12",
                              "nodeType": "VariableDeclaration",
                              "scope": 1626,
                              "src": "11106:9:12",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1600,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11106:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1603,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11118:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11106:13:12"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "11140:3:12",
                            "subExpression": {
                              "id": 1608,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1601,
                              "src": "11140:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1610,
                          "nodeType": "ExpressionStatement",
                          "src": "11140:3:12"
                        },
                        "nodeType": "ForStatement",
                        "src": "11101:135:12"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1579,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1576,
                      "src": "10940:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1580,
                        "name": "_policyIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1480,
                        "src": "10944:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes16_$dyn_calldata_ptr",
                          "typeString": "bytes16[] calldata"
                        }
                      },
                      "id": 1581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10944:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10940:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1628,
                  "initializationExpression": {
                    "assignments": [
                      1576
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1576,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10933:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1628,
                        "src": "10925:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1575,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10925:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1578,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10937:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10925:13:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10963:3:12",
                      "subExpression": {
                        "id": 1583,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1576,
                        "src": "10963:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1585,
                    "nodeType": "ExpressionStatement",
                    "src": "10963:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "10920:326:12"
                },
                {
                  "assignments": [
                    1630
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1630,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "11263:3:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1666,
                      "src": "11256:10:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 1629,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11256:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1638,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1633,
                            "name": "_policyIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1480,
                            "src": "11276:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes16_$dyn_calldata_ptr",
                              "typeString": "bytes16[] calldata"
                            }
                          },
                          "id": 1634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "11276:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 1635,
                          "name": "feeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1540,
                          "src": "11296:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "11276:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "11269:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int256_$",
                        "typeString": "type(int256)"
                      },
                      "typeName": {
                        "id": 1631,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11269:6:12",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11269:35:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11256:48:12"
                },
                {
                  "body": {
                    "id": 1664,
                    "nodeType": "Block",
                    "src": "11359:121:12",
                    "statements": [
                      {
                        "assignments": [
                          1651
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1651,
                            "mutability": "mutable",
                            "name": "node",
                            "nameLocation": "11381:4:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1664,
                            "src": "11373:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1650,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11373:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1655,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1652,
                            "name": "_nodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1487,
                            "src": "11388:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 1654,
                          "indexExpression": {
                            "id": 1653,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1640,
                            "src": "11395:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11388:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11373:24:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1657,
                              "name": "currentPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1518,
                              "src": "11424:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "id": 1658,
                              "name": "endPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1523,
                              "src": "11439:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "id": 1659,
                              "name": "node",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1651,
                              "src": "11450:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1660,
                              "name": "feeRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1540,
                              "src": "11456:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "id": 1661,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1630,
                              "src": "11465:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 1656,
                            "name": "addFeeToNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1908,
                            "src": "11411:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$_t_uint16_$_t_address_$_t_uint128_$_t_int256_$returns$__$",
                              "typeString": "function (uint16,uint16,address,uint128,int256)"
                            }
                          },
                          "id": 1662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11411:58:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1663,
                        "nodeType": "ExpressionStatement",
                        "src": "11411:58:12"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1643,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1640,
                      "src": "11335:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1644,
                        "name": "_nodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1487,
                        "src": "11339:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 1645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11339:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11335:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1665,
                  "initializationExpression": {
                    "assignments": [
                      1640
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1640,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11328:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1665,
                        "src": "11320:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1639,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11320:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1642,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11332:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11320:13:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11354:3:12",
                      "subExpression": {
                        "id": 1647,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1640,
                        "src": "11354:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1649,
                    "nodeType": "ExpressionStatement",
                    "src": "11354:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "11315:165:12"
                }
              ]
            },
            "documentation": {
              "id": 1477,
              "nodeType": "StructuredDocumentation",
              "src": "9752:368:12",
              "text": " @notice Create multiple policies with the same owner, nodes and length\n @dev Generate policy ids before creation\n @param _policyIds Policy ids\n @param _policyOwner Policy owner. Zero address means sender is owner\n @param _endTimestamp End timestamp of all policies in seconds\n @param _nodes Nodes that will handle all policies"
            },
            "functionSelector": "3735e106",
            "id": 1667,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPolicies",
            "nameLocation": "10134:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1480,
                  "mutability": "mutable",
                  "name": "_policyIds",
                  "nameLocation": "10177:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "10158:29:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes16_$dyn_calldata_ptr",
                    "typeString": "bytes16[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1478,
                      "name": "bytes16",
                      "nodeType": "ElementaryTypeName",
                      "src": "10158:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      }
                    },
                    "id": 1479,
                    "nodeType": "ArrayTypeName",
                    "src": "10158:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes16_$dyn_storage_ptr",
                      "typeString": "bytes16[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1482,
                  "mutability": "mutable",
                  "name": "_policyOwner",
                  "nameLocation": "10205:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "10197:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10197:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1484,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "10234:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "10227:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 1483,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "10227:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1487,
                  "mutability": "mutable",
                  "name": "_nodes",
                  "nameLocation": "10276:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "10257:25:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1485,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10257:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1486,
                    "nodeType": "ArrayTypeName",
                    "src": "10257:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10148:140:12"
            },
            "returnParameters": {
              "id": 1489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10318:0:12"
            },
            "scope": 3682,
            "src": "10125:1361:12",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1778,
              "nodeType": "Block",
              "src": "12041:762:12",
              "statements": [
                {
                  "expression": {
                    "id": 1688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1684,
                      "name": "policy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1682,
                      "src": "12051:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                        "typeString": "struct PolicyManager.Policy storage pointer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 1685,
                        "name": "policies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 988,
                        "src": "12060:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$908_storage_$",
                          "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                        }
                      },
                      "id": 1687,
                      "indexExpression": {
                        "id": 1686,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1670,
                        "src": "12069:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12060:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$908_storage",
                        "typeString": "struct PolicyManager.Policy storage ref"
                      }
                    },
                    "src": "12051:28:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                      "typeString": "struct PolicyManager.Policy storage pointer"
                    }
                  },
                  "id": 1689,
                  "nodeType": "ExpressionStatement",
                  "src": "12051:28:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes16",
                              "typeString": "bytes16"
                            },
                            "id": 1693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1691,
                              "name": "_policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1670,
                              "src": "12110:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 1692,
                              "name": "RESERVED_POLICY_ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 947,
                              "src": "12123:18:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            },
                            "src": "12110:31:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 1697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1694,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1682,
                                "src": "12157:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                  "typeString": "struct PolicyManager.Policy storage pointer"
                                }
                              },
                              "id": 1695,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "feeRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 889,
                              "src": "12157:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12175:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "12157:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "12110:66:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 1701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "12192:16:12",
                          "subExpression": {
                            "expression": {
                              "id": 1699,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1682,
                              "src": "12193:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 1700,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "disabled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 883,
                            "src": "12193:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12110:98:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1690,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12089:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12089:129:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1704,
                  "nodeType": "ExpressionStatement",
                  "src": "12089:129:12"
                },
                {
                  "expression": {
                    "id": 1713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1705,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1682,
                        "src": "12229:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 1707,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sponsor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 885,
                      "src": "12229:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1710,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12254:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12254:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12246:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 1708,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12246:8:12",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12246:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "12229:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1714,
                  "nodeType": "ExpressionStatement",
                  "src": "12229:36:12"
                },
                {
                  "expression": {
                    "id": 1723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1715,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1682,
                        "src": "12275:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 1717,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "startTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 891,
                      "src": "12275:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1720,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12306:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12306:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12299:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 1718,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "12299:6:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12299:23:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "12275:47:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 1724,
                  "nodeType": "ExpressionStatement",
                  "src": "12275:47:12"
                },
                {
                  "expression": {
                    "id": 1729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1725,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1682,
                        "src": "12332:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 1727,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 893,
                      "src": "12332:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1728,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1674,
                      "src": "12354:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "12332:35:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 1730,
                  "nodeType": "ExpressionStatement",
                  "src": "12332:35:12"
                },
                {
                  "expression": {
                    "id": 1735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1731,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1682,
                        "src": "12377:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 1733,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "feeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 889,
                      "src": "12377:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1734,
                      "name": "_feeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1676,
                      "src": "12394:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "12377:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 1736,
                  "nodeType": "ExpressionStatement",
                  "src": "12377:25:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1737,
                        "name": "_policyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1672,
                        "src": "12417:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 1738,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12433:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12433:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "12417:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1741,
                        "name": "_policyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1672,
                        "src": "12447:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12471:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12463:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1742,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12463:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12463:10:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "12447:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12417:56:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1755,
                  "nodeType": "IfStatement",
                  "src": "12413:114:12",
                  "trueBody": {
                    "id": 1754,
                    "nodeType": "Block",
                    "src": "12475:52:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1748,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1682,
                              "src": "12489:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 1750,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 887,
                            "src": "12489:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1751,
                            "name": "_policyOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1672,
                            "src": "12504:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12489:27:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1753,
                        "nodeType": "ExpressionStatement",
                        "src": "12489:27:12"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1757,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1670,
                        "src": "12569:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "expression": {
                          "id": 1758,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12592:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12592:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1760,
                            "name": "_policyOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1672,
                            "src": "12616:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1763,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12640:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12632:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1761,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12632:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12632:10:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12616:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 1768,
                          "name": "_policyOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1672,
                          "src": "12658:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "12616:54:12",
                        "trueExpression": {
                          "expression": {
                            "id": 1766,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12645:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12645:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1770,
                        "name": "_feeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1676,
                        "src": "12684:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 1771,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1682,
                          "src": "12706:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                            "typeString": "struct PolicyManager.Policy storage pointer"
                          }
                        },
                        "id": 1772,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "startTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 891,
                        "src": "12706:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "id": 1773,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1682,
                          "src": "12741:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                            "typeString": "struct PolicyManager.Policy storage pointer"
                          }
                        },
                        "id": 1774,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "endTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 893,
                        "src": "12741:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 1775,
                        "name": "_nodesLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1678,
                        "src": "12774:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1756,
                      "name": "PolicyCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 814,
                      "src": "12542:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes16_$_t_address_$_t_address_$_t_uint256_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes16,address,address,uint256,uint64,uint64,uint256)"
                      }
                    },
                    "id": 1776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12542:254:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1777,
                  "nodeType": "EmitStatement",
                  "src": "12537:259:12"
                }
              ]
            },
            "documentation": {
              "id": 1668,
              "nodeType": "StructuredDocumentation",
              "src": "11492:320:12",
              "text": " @notice Create policy\n @param _policyId Policy id\n @param _policyOwner Policy owner. Zero address means sender is owner\n @param _endTimestamp End timestamp of the policy in seconds\n @param _feeRate Fee rate for policy\n @param _nodesLength Number of nodes that will handle policy"
            },
            "id": 1779,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPolicy",
            "nameLocation": "11826:12:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1670,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "11856:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "11848:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 1669,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "11848:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1672,
                  "mutability": "mutable",
                  "name": "_policyOwner",
                  "nameLocation": "11883:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "11875:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1671,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11875:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1674,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "11912:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "11905:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 1673,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "11905:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1676,
                  "mutability": "mutable",
                  "name": "_feeRate",
                  "nameLocation": "11943:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "11935:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1675,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "11935:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1678,
                  "mutability": "mutable",
                  "name": "_nodesLength",
                  "nameLocation": "11969:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "11961:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11961:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11838:149:12"
            },
            "returnParameters": {
              "id": 1683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1682,
                  "mutability": "mutable",
                  "name": "policy",
                  "nameLocation": "12029:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "12014:21:12",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                    "typeString": "struct PolicyManager.Policy"
                  },
                  "typeName": {
                    "id": 1681,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1680,
                      "name": "Policy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 908,
                      "src": "12014:6:12"
                    },
                    "referencedDeclaration": 908,
                    "src": "12014:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                      "typeString": "struct PolicyManager.Policy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12013:23:12"
            },
            "scope": 3682,
            "src": "11817:986:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1907,
              "nodeType": "Block",
              "src": "13300:1139:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1794,
                          "name": "_node",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1786,
                          "src": "13318:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1795,
                          "name": "RESERVED_NODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 953,
                          "src": "13327:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13318:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1793,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13310:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13310:31:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1798,
                  "nodeType": "ExpressionStatement",
                  "src": "13310:31:12"
                },
                {
                  "assignments": [
                    1801
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1801,
                      "mutability": "mutable",
                      "name": "nodeInfo",
                      "nameLocation": "13368:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1907,
                      "src": "13351:25:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo"
                      },
                      "typeName": {
                        "id": 1800,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1799,
                          "name": "NodeInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 925,
                          "src": "13351:8:12"
                        },
                        "referencedDeclaration": 925,
                        "src": "13351:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1805,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1802,
                      "name": "nodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 993,
                      "src": "13379:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$925_storage_$",
                        "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                      }
                    },
                    "id": 1804,
                    "indexExpression": {
                      "id": 1803,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1786,
                      "src": "13385:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13379:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$925_storage",
                      "typeString": "struct PolicyManager.NodeInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13351:40:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 1810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1807,
                                "name": "nodeInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1801,
                                "src": "13409:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              },
                              "id": 1808,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "previousFeePeriod",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 912,
                              "src": "13409:26:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13439:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "13409:31:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 1814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1811,
                                "name": "nodeInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1801,
                                "src": "13456:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              },
                              "id": 1812,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "previousFeePeriod",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 912,
                              "src": "13456:26:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 1813,
                              "name": "_currentPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1782,
                              "src": "13485:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "src": "13456:43:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13409:90:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1816,
                            "name": "_feeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1788,
                            "src": "13515:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 1818,
                                "name": "nodeInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1801,
                                "src": "13541:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              ],
                              "id": 1817,
                              "name": "getMinFeeRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                1311,
                                1331
                              ],
                              "referencedDeclaration": 1311,
                              "src": "13527:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_NodeInfo_$925_storage_ptr_$returns$_t_uint256_$",
                                "typeString": "function (struct PolicyManager.NodeInfo storage pointer) view returns (uint256)"
                              }
                            },
                            "id": 1819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13527:23:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13515:35:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13409:141:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1806,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13401:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13401:150:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1823,
                  "nodeType": "ExpressionStatement",
                  "src": "13401:150:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 1829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 1824,
                          "name": "nodeInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1801,
                          "src": "13609:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                            "typeString": "struct PolicyManager.NodeInfo storage pointer"
                          }
                        },
                        "id": 1825,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feeDelta",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 924,
                        "src": "13609:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                          "typeString": "mapping(uint16 => int256)"
                        }
                      },
                      "id": 1827,
                      "indexExpression": {
                        "id": 1826,
                        "name": "_currentPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1782,
                        "src": "13627:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13609:33:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1828,
                      "name": "DEFAULT_FEE_DELTA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 976,
                      "src": "13646:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "13609:54:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1847,
                    "nodeType": "Block",
                    "src": "13747:171:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 1839,
                                "name": "nodeInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1801,
                                "src": "13855:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              },
                              "id": 1842,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "feeDelta",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 924,
                              "src": "13855:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                "typeString": "mapping(uint16 => int256)"
                              }
                            },
                            "id": 1843,
                            "indexExpression": {
                              "id": 1841,
                              "name": "_currentPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1782,
                              "src": "13873:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13855:33:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1844,
                            "name": "_overallFeeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1790,
                            "src": "13892:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "13855:52:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 1846,
                        "nodeType": "ExpressionStatement",
                        "src": "13855:52:12"
                      }
                    ]
                  },
                  "id": 1848,
                  "nodeType": "IfStatement",
                  "src": "13605:313:12",
                  "trueBody": {
                    "id": 1838,
                    "nodeType": "Block",
                    "src": "13665:76:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 1830,
                                "name": "nodeInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1801,
                                "src": "13679:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              },
                              "id": 1833,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "feeDelta",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 924,
                              "src": "13679:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                "typeString": "mapping(uint16 => int256)"
                              }
                            },
                            "id": 1834,
                            "indexExpression": {
                              "id": 1832,
                              "name": "_currentPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1782,
                              "src": "13697:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13679:33:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1835,
                            "name": "_overallFeeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1790,
                            "src": "13715:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "13679:51:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 1837,
                        "nodeType": "ExpressionStatement",
                        "src": "13679:51:12"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 1854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 1849,
                          "name": "nodeInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1801,
                          "src": "13931:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                            "typeString": "struct PolicyManager.NodeInfo storage pointer"
                          }
                        },
                        "id": 1850,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feeDelta",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 924,
                        "src": "13931:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                          "typeString": "mapping(uint16 => int256)"
                        }
                      },
                      "id": 1852,
                      "indexExpression": {
                        "id": 1851,
                        "name": "_endPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1784,
                        "src": "13949:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13931:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1853,
                      "name": "DEFAULT_FEE_DELTA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 976,
                      "src": "13964:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "13931:50:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1873,
                    "nodeType": "Block",
                    "src": "14062:73:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 1865,
                                "name": "nodeInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1801,
                                "src": "14076:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              },
                              "id": 1868,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "feeDelta",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 924,
                              "src": "14076:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                "typeString": "mapping(uint16 => int256)"
                              }
                            },
                            "id": 1869,
                            "indexExpression": {
                              "id": 1867,
                              "name": "_endPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1784,
                              "src": "14094:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14076:29:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1870,
                            "name": "_overallFeeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1790,
                            "src": "14109:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "14076:48:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 1872,
                        "nodeType": "ExpressionStatement",
                        "src": "14076:48:12"
                      }
                    ]
                  },
                  "id": 1874,
                  "nodeType": "IfStatement",
                  "src": "13927:208:12",
                  "trueBody": {
                    "id": 1864,
                    "nodeType": "Block",
                    "src": "13983:73:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 1855,
                                "name": "nodeInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1801,
                                "src": "13997:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              },
                              "id": 1858,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "feeDelta",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 924,
                              "src": "13997:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                "typeString": "mapping(uint16 => int256)"
                              }
                            },
                            "id": 1859,
                            "indexExpression": {
                              "id": 1857,
                              "name": "_endPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1784,
                              "src": "14015:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13997:29:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "14029:16:12",
                            "subExpression": {
                              "id": 1860,
                              "name": "_overallFeeRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1790,
                              "src": "14030:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "13997:48:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 1863,
                        "nodeType": "ExpressionStatement",
                        "src": "13997:48:12"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 1880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 1875,
                          "name": "nodeInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1801,
                          "src": "14192:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                            "typeString": "struct PolicyManager.NodeInfo storage pointer"
                          }
                        },
                        "id": 1876,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feeDelta",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 924,
                        "src": "14192:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                          "typeString": "mapping(uint16 => int256)"
                        }
                      },
                      "id": 1878,
                      "indexExpression": {
                        "id": 1877,
                        "name": "_currentPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1782,
                        "src": "14210:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14192:33:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14229:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14192:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1890,
                  "nodeType": "IfStatement",
                  "src": "14188:122:12",
                  "trueBody": {
                    "id": 1889,
                    "nodeType": "Block",
                    "src": "14232:78:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 1881,
                                "name": "nodeInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1801,
                                "src": "14246:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              },
                              "id": 1884,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "feeDelta",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 924,
                              "src": "14246:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                "typeString": "mapping(uint16 => int256)"
                              }
                            },
                            "id": 1885,
                            "indexExpression": {
                              "id": 1883,
                              "name": "_currentPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1782,
                              "src": "14264:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14246:33:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1886,
                            "name": "DEFAULT_FEE_DELTA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 976,
                            "src": "14282:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "14246:53:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 1888,
                        "nodeType": "ExpressionStatement",
                        "src": "14246:53:12"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 1896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 1891,
                          "name": "nodeInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1801,
                          "src": "14323:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                            "typeString": "struct PolicyManager.NodeInfo storage pointer"
                          }
                        },
                        "id": 1892,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feeDelta",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 924,
                        "src": "14323:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                          "typeString": "mapping(uint16 => int256)"
                        }
                      },
                      "id": 1894,
                      "indexExpression": {
                        "id": 1893,
                        "name": "_endPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1784,
                        "src": "14341:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14323:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14356:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14323:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1906,
                  "nodeType": "IfStatement",
                  "src": "14319:114:12",
                  "trueBody": {
                    "id": 1905,
                    "nodeType": "Block",
                    "src": "14359:74:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 1897,
                                "name": "nodeInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1801,
                                "src": "14373:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              },
                              "id": 1900,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "feeDelta",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 924,
                              "src": "14373:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                "typeString": "mapping(uint16 => int256)"
                              }
                            },
                            "id": 1901,
                            "indexExpression": {
                              "id": 1899,
                              "name": "_endPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1784,
                              "src": "14391:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14373:29:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1902,
                            "name": "DEFAULT_FEE_DELTA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 976,
                            "src": "14405:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "14373:49:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 1904,
                        "nodeType": "ExpressionStatement",
                        "src": "14373:49:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1780,
              "nodeType": "StructuredDocumentation",
              "src": "12809:298:12",
              "text": " @notice Increase fee rate for specified node\n @param _currentPeriod Current period\n @param _endPeriod End period of policy\n @param _node Node that will handle policy\n @param _feeRate Fee rate for one policy\n @param _overallFeeRate Fee rate for all policies"
            },
            "id": 1908,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addFeeToNode",
            "nameLocation": "13121:12:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1782,
                  "mutability": "mutable",
                  "name": "_currentPeriod",
                  "nameLocation": "13150:14:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1908,
                  "src": "13143:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1781,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13143:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1784,
                  "mutability": "mutable",
                  "name": "_endPeriod",
                  "nameLocation": "13181:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1908,
                  "src": "13174:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1783,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13174:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1786,
                  "mutability": "mutable",
                  "name": "_node",
                  "nameLocation": "13209:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1908,
                  "src": "13201:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13201:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1788,
                  "mutability": "mutable",
                  "name": "_feeRate",
                  "nameLocation": "13232:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1908,
                  "src": "13224:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1787,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "13224:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1790,
                  "mutability": "mutable",
                  "name": "_overallFeeRate",
                  "nameLocation": "13257:15:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1908,
                  "src": "13250:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1789,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13250:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13133:145:12"
            },
            "returnParameters": {
              "id": 1792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13300:0:12"
            },
            "scope": 3682,
            "src": "13112:1327:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1936,
              "nodeType": "Block",
              "src": "14564:135:12",
              "statements": [
                {
                  "assignments": [
                    1918
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1918,
                      "mutability": "mutable",
                      "name": "policy",
                      "nameLocation": "14589:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1936,
                      "src": "14574:21:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                        "typeString": "struct PolicyManager.Policy"
                      },
                      "typeName": {
                        "id": 1917,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1916,
                          "name": "Policy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 908,
                          "src": "14574:6:12"
                        },
                        "referencedDeclaration": 908,
                        "src": "14574:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1922,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1919,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 988,
                      "src": "14598:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$908_storage_$",
                        "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                      }
                    },
                    "id": 1921,
                    "indexExpression": {
                      "id": 1920,
                      "name": "_policyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1911,
                      "src": "14607:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14598:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$908_storage",
                      "typeString": "struct PolicyManager.Policy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14574:43:12"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1923,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1918,
                          "src": "14634:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                            "typeString": "struct PolicyManager.Policy storage pointer"
                          }
                        },
                        "id": 1924,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 887,
                        "src": "14634:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14658:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14650:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1925,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14650:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14650:10:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "14634:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 1932,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1918,
                        "src": "14680:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 1933,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 887,
                      "src": "14680:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "14634:58:12",
                    "trueExpression": {
                      "expression": {
                        "id": 1930,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1918,
                        "src": "14663:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 1931,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sponsor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 885,
                      "src": "14663:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1915,
                  "id": 1935,
                  "nodeType": "Return",
                  "src": "14627:65:12"
                }
              ]
            },
            "documentation": {
              "id": 1909,
              "nodeType": "StructuredDocumentation",
              "src": "14445:41:12",
              "text": " @notice Get policy owner"
            },
            "functionSelector": "58cf15fb",
            "id": 1937,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPolicyOwner",
            "nameLocation": "14500:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1911,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "14523:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1937,
                  "src": "14515:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 1910,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "14515:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14514:19:12"
            },
            "returnParameters": {
              "id": 1915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1914,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1937,
                  "src": "14555:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14555:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14554:9:12"
            },
            "scope": 3682,
            "src": "14491:208:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2006,
              "nodeType": "Block",
              "src": "15233:633:12",
              "statements": [
                {
                  "assignments": [
                    1953
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1953,
                      "mutability": "mutable",
                      "name": "node",
                      "nameLocation": "15260:4:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2006,
                      "src": "15243:21:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo"
                      },
                      "typeName": {
                        "id": 1952,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1951,
                          "name": "NodeInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 925,
                          "src": "15243:8:12"
                        },
                        "referencedDeclaration": 925,
                        "src": "15243:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1957,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1954,
                      "name": "nodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 993,
                      "src": "15267:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$925_storage_$",
                        "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                      }
                    },
                    "id": 1956,
                    "indexExpression": {
                      "id": 1955,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1940,
                      "src": "15273:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15267:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$925_storage",
                      "typeString": "struct PolicyManager.NodeInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15243:36:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 1963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1959,
                            "name": "node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1953,
                            "src": "15365:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                            }
                          },
                          "id": 1960,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "previousFeePeriod",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 912,
                          "src": "15365:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1961,
                            "name": "getCurrentPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1094,
                            "src": "15391:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint16_$",
                              "typeString": "function () view returns (uint16)"
                            }
                          },
                          "id": 1962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15391:18:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "src": "15365:44:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1958,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15357:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15357:53:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1965,
                  "nodeType": "ExpressionStatement",
                  "src": "15357:53:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1966,
                      "name": "_processedPeriod1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1942,
                      "src": "15424:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15445:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "15424:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1975,
                  "nodeType": "IfStatement",
                  "src": "15420:87:12",
                  "trueBody": {
                    "id": 1974,
                    "nodeType": "Block",
                    "src": "15448:59:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1970,
                              "name": "node",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1953,
                              "src": "15472:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                "typeString": "struct PolicyManager.NodeInfo storage pointer"
                              }
                            },
                            {
                              "id": 1971,
                              "name": "_processedPeriod1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1942,
                              "src": "15478:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                "typeString": "struct PolicyManager.NodeInfo storage pointer"
                              },
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            ],
                            "id": 1969,
                            "name": "updateFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2099,
                            "src": "15462:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_NodeInfo_$925_storage_ptr_$_t_uint16_$returns$__$",
                              "typeString": "function (struct PolicyManager.NodeInfo storage pointer,uint16)"
                            }
                          },
                          "id": 1972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15462:34:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1973,
                        "nodeType": "ExpressionStatement",
                        "src": "15462:34:12"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1976,
                      "name": "_processedPeriod2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1944,
                      "src": "15520:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15541:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "15520:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1985,
                  "nodeType": "IfStatement",
                  "src": "15516:87:12",
                  "trueBody": {
                    "id": 1984,
                    "nodeType": "Block",
                    "src": "15544:59:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1980,
                              "name": "node",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1953,
                              "src": "15568:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                "typeString": "struct PolicyManager.NodeInfo storage pointer"
                              }
                            },
                            {
                              "id": 1981,
                              "name": "_processedPeriod2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1944,
                              "src": "15574:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                "typeString": "struct PolicyManager.NodeInfo storage pointer"
                              },
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            ],
                            "id": 1979,
                            "name": "updateFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2099,
                            "src": "15558:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_NodeInfo_$925_storage_ptr_$_t_uint16_$returns$__$",
                              "typeString": "function (struct PolicyManager.NodeInfo storage pointer,uint16)"
                            }
                          },
                          "id": 1982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15558:34:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1983,
                        "nodeType": "ExpressionStatement",
                        "src": "15558:34:12"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "id": 1988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1986,
                        "name": "_periodToSetDefault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1946,
                        "src": "15712:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15735:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "15712:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 1994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "expression": {
                            "id": 1989,
                            "name": "node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1953,
                            "src": "15740:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                            }
                          },
                          "id": 1990,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeDelta",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 924,
                          "src": "15740:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                            "typeString": "mapping(uint16 => int256)"
                          }
                        },
                        "id": 1992,
                        "indexExpression": {
                          "id": 1991,
                          "name": "_periodToSetDefault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1946,
                          "src": "15754:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15740:34:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15778:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "15740:39:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15712:67:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2005,
                  "nodeType": "IfStatement",
                  "src": "15708:152:12",
                  "trueBody": {
                    "id": 2004,
                    "nodeType": "Block",
                    "src": "15781:79:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 2002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 1996,
                                "name": "node",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1953,
                                "src": "15795:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              },
                              "id": 1999,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "feeDelta",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 924,
                              "src": "15795:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                "typeString": "mapping(uint16 => int256)"
                              }
                            },
                            "id": 2000,
                            "indexExpression": {
                              "id": 1998,
                              "name": "_periodToSetDefault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1946,
                              "src": "15809:19:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "15795:34:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2001,
                            "name": "DEFAULT_FEE_DELTA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 976,
                            "src": "15832:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "15795:54:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 2003,
                        "nodeType": "ExpressionStatement",
                        "src": "15795:54:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1938,
              "nodeType": "StructuredDocumentation",
              "src": "14705:336:12",
              "text": " @notice Call from StakingEscrow to update node info once per period.\n Set default `feeDelta` value for specified period and update node fee\n @param _node Node address\n @param _processedPeriod1 Processed period\n @param _processedPeriod2 Processed period\n @param _periodToSetDefault Period to set"
            },
            "functionSelector": "b46ffb45",
            "id": 2007,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1949,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1948,
                  "name": "onlyEscrowContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1079,
                  "src": "15210:18:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "15210:18:12"
              }
            ],
            "name": "ping",
            "nameLocation": "15055:4:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1940,
                  "mutability": "mutable",
                  "name": "_node",
                  "nameLocation": "15077:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2007,
                  "src": "15069:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15069:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1942,
                  "mutability": "mutable",
                  "name": "_processedPeriod1",
                  "nameLocation": "15099:17:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2007,
                  "src": "15092:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1941,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "15092:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1944,
                  "mutability": "mutable",
                  "name": "_processedPeriod2",
                  "nameLocation": "15133:17:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2007,
                  "src": "15126:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1943,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "15126:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1946,
                  "mutability": "mutable",
                  "name": "_periodToSetDefault",
                  "nameLocation": "15167:19:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2007,
                  "src": "15160:26:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1945,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "15160:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15059:133:12"
            },
            "returnParameters": {
              "id": 1950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15233:0:12"
            },
            "scope": 3682,
            "src": "15046:820:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2098,
              "nodeType": "Block",
              "src": "16062:614:12",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "id": 2019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2016,
                          "name": "_info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2011,
                          "src": "16076:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                            "typeString": "struct PolicyManager.NodeInfo storage pointer"
                          }
                        },
                        "id": 2017,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "previousFeePeriod",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 912,
                        "src": "16076:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16103:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "16076:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "id": 2023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2020,
                        "name": "_period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "16108:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "expression": {
                          "id": 2021,
                          "name": "_info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2011,
                          "src": "16119:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                            "typeString": "struct PolicyManager.NodeInfo storage pointer"
                          }
                        },
                        "id": 2022,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "previousFeePeriod",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 912,
                        "src": "16119:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "src": "16108:34:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "16076:66:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2027,
                  "nodeType": "IfStatement",
                  "src": "16072:103:12",
                  "trueBody": {
                    "id": 2026,
                    "nodeType": "Block",
                    "src": "16144:31:12",
                    "statements": [
                      {
                        "functionReturnParameters": 2015,
                        "id": 2025,
                        "nodeType": "Return",
                        "src": "16158:7:12"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 2080,
                    "nodeType": "Block",
                    "src": "16248:334:12",
                    "statements": [
                      {
                        "assignments": [
                          2042
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2042,
                            "mutability": "mutable",
                            "name": "delta",
                            "nameLocation": "16269:5:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2080,
                            "src": "16262:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 2041,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16262:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2047,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 2043,
                              "name": "_info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2011,
                              "src": "16277:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                "typeString": "struct PolicyManager.NodeInfo storage pointer"
                              }
                            },
                            "id": 2044,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "feeDelta",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 924,
                            "src": "16277:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                              "typeString": "mapping(uint16 => int256)"
                            }
                          },
                          "id": 2046,
                          "indexExpression": {
                            "id": 2045,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2029,
                            "src": "16292:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16277:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16262:32:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 2050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2048,
                            "name": "delta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2042,
                            "src": "16312:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2049,
                            "name": "DEFAULT_FEE_DELTA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 976,
                            "src": "16321:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "16312:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2061,
                        "nodeType": "IfStatement",
                        "src": "16308:142:12",
                        "trueBody": {
                          "id": 2060,
                          "nodeType": "Block",
                          "src": "16340:110:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 2057,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 2051,
                                      "name": "_info",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2011,
                                      "src": "16388:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 2054,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 924,
                                    "src": "16388:14:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                      "typeString": "mapping(uint16 => int256)"
                                    }
                                  },
                                  "id": 2055,
                                  "indexExpression": {
                                    "id": 2053,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2029,
                                    "src": "16403:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16388:17:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 2056,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16408:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "16388:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 2058,
                              "nodeType": "ExpressionStatement",
                              "src": "16388:21:12"
                            },
                            {
                              "id": 2059,
                              "nodeType": "Continue",
                              "src": "16427:8:12"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2062,
                              "name": "_info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2011,
                              "src": "16464:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                "typeString": "struct PolicyManager.NodeInfo storage pointer"
                              }
                            },
                            "id": 2064,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "feeRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 914,
                            "src": "16464:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2068,
                                "name": "delta",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2042,
                                "src": "16504:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 2065,
                                  "name": "_info",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2011,
                                  "src": "16480:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                    "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                  }
                                },
                                "id": 2066,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "feeRate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 914,
                                "src": "16480:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addSigned",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7279,
                              "src": "16480:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_int256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,int256) pure returns (uint256)"
                              }
                            },
                            "id": 2069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16480:30:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16464:46:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2071,
                        "nodeType": "ExpressionStatement",
                        "src": "16464:46:12"
                      },
                      {
                        "expression": {
                          "id": 2078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 2072,
                                "name": "_info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2011,
                                "src": "16550:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              },
                              "id": 2075,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "feeDelta",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 924,
                              "src": "16550:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                "typeString": "mapping(uint16 => int256)"
                              }
                            },
                            "id": 2076,
                            "indexExpression": {
                              "id": 2074,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2029,
                              "src": "16565:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16550:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 2077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16570:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "16550:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 2079,
                        "nodeType": "ExpressionStatement",
                        "src": "16550:21:12"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 2037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2035,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2029,
                      "src": "16229:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 2036,
                      "name": "_period",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2013,
                      "src": "16234:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "16229:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2081,
                  "initializationExpression": {
                    "assignments": [
                      2029
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2029,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "16196:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2081,
                        "src": "16189:8:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 2028,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "16189:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2034,
                    "initialValue": {
                      "commonType": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "id": 2033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2030,
                          "name": "_info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2011,
                          "src": "16200:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                            "typeString": "struct PolicyManager.NodeInfo storage pointer"
                          }
                        },
                        "id": 2031,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "previousFeePeriod",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 912,
                        "src": "16200:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 2032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16226:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "16200:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16189:38:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "16243:3:12",
                      "subExpression": {
                        "id": 2038,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2029,
                        "src": "16243:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 2040,
                    "nodeType": "ExpressionStatement",
                    "src": "16243:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "16184:398:12"
                },
                {
                  "expression": {
                    "id": 2086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2082,
                        "name": "_info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2011,
                        "src": "16591:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 2084,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "previousFeePeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 912,
                      "src": "16591:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2085,
                      "name": "_period",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2013,
                      "src": "16617:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "16591:33:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 2087,
                  "nodeType": "ExpressionStatement",
                  "src": "16591:33:12"
                },
                {
                  "expression": {
                    "id": 2096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2088,
                        "name": "_info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2011,
                        "src": "16634:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 2090,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 910,
                      "src": "16634:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2093,
                            "name": "_info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2011,
                            "src": "16655:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                            }
                          },
                          "id": 2094,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 914,
                          "src": "16655:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16647:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint128_$",
                          "typeString": "type(uint128)"
                        },
                        "typeName": {
                          "id": 2091,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "16647:7:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16647:22:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "16634:35:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 2097,
                  "nodeType": "ExpressionStatement",
                  "src": "16634:35:12"
                }
              ]
            },
            "documentation": {
              "id": 2008,
              "nodeType": "StructuredDocumentation",
              "src": "15872:117:12",
              "text": " @notice Update node fee\n @param _info Node info structure\n @param _period Processed period"
            },
            "id": 2099,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateFee",
            "nameLocation": "16003:9:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2011,
                  "mutability": "mutable",
                  "name": "_info",
                  "nameLocation": "16030:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2099,
                  "src": "16013:22:12",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                    "typeString": "struct PolicyManager.NodeInfo"
                  },
                  "typeName": {
                    "id": 2010,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2009,
                      "name": "NodeInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 925,
                      "src": "16013:8:12"
                    },
                    "referencedDeclaration": 925,
                    "src": "16013:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                      "typeString": "struct PolicyManager.NodeInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2013,
                  "mutability": "mutable",
                  "name": "_period",
                  "nameLocation": "16044:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2099,
                  "src": "16037:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2012,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "16037:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16012:40:12"
            },
            "returnParameters": {
              "id": 2015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16062:0:12"
            },
            "scope": 3682,
            "src": "15994:682:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2113,
              "nodeType": "Block",
              "src": "16779:53:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2108,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16813:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "16813:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16805:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 2106,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16805:8:12",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16805:19:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2105,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2163,
                      "src": "16796:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$_t_uint256_$",
                        "typeString": "function (address payable) returns (uint256)"
                      }
                    },
                    "id": 2111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16796:29:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2104,
                  "id": 2112,
                  "nodeType": "Return",
                  "src": "16789:36:12"
                }
              ]
            },
            "documentation": {
              "id": 2100,
              "nodeType": "StructuredDocumentation",
              "src": "16682:45:12",
              "text": " @notice Withdraw fee by node"
            },
            "functionSelector": "3ccfd60b",
            "id": 2114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "16741:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16749:2:12"
            },
            "returnParameters": {
              "id": 2104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2103,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2114,
                  "src": "16770:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16770:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16769:9:12"
            },
            "scope": 3682,
            "src": "16732:100:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2162,
              "nodeType": "Block",
              "src": "17004:247:12",
              "statements": [
                {
                  "assignments": [
                    2124
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2124,
                      "mutability": "mutable",
                      "name": "node",
                      "nameLocation": "17031:4:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2162,
                      "src": "17014:21:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo"
                      },
                      "typeName": {
                        "id": 2123,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2122,
                          "name": "NodeInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 925,
                          "src": "17014:8:12"
                        },
                        "referencedDeclaration": 925,
                        "src": "17014:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2129,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2125,
                      "name": "nodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 993,
                      "src": "17038:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$925_storage_$",
                        "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                      }
                    },
                    "id": 2128,
                    "indexExpression": {
                      "expression": {
                        "id": 2126,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "17044:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "17044:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17038:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$925_storage",
                      "typeString": "struct PolicyManager.NodeInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17014:41:12"
                },
                {
                  "assignments": [
                    2131
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2131,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "17073:3:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2162,
                      "src": "17065:11:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2130,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17065:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2134,
                  "initialValue": {
                    "expression": {
                      "id": 2132,
                      "name": "node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2124,
                      "src": "17079:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                      }
                    },
                    "id": 2133,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "fee",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 910,
                    "src": "17079:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17065:22:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2136,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2131,
                          "src": "17105:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17112:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17105:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17097:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17097:17:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2140,
                  "nodeType": "ExpressionStatement",
                  "src": "17097:17:12"
                },
                {
                  "expression": {
                    "id": 2145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2141,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2124,
                        "src": "17124:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 2143,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 910,
                      "src": "17124:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17135:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17124:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 2146,
                  "nodeType": "ExpressionStatement",
                  "src": "17124:12:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2150,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2131,
                        "src": "17167:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2147,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2117,
                        "src": "17146:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 2149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14513,
                      "src": "17146:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 2151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17146:25:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2152,
                  "nodeType": "ExpressionStatement",
                  "src": "17146:25:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2154,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17196:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17196:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2156,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2117,
                        "src": "17208:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2157,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2131,
                        "src": "17220:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2153,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 874,
                      "src": "17186:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17186:38:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2159,
                  "nodeType": "EmitStatement",
                  "src": "17181:43:12"
                },
                {
                  "expression": {
                    "id": 2160,
                    "name": "fee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2131,
                    "src": "17241:3:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2121,
                  "id": 2161,
                  "nodeType": "Return",
                  "src": "17234:10:12"
                }
              ]
            },
            "documentation": {
              "id": 2115,
              "nodeType": "StructuredDocumentation",
              "src": "16838:90:12",
              "text": " @notice Withdraw fee by node\n @param _recipient Recipient of the fee"
            },
            "functionSelector": "51cff8d9",
            "id": 2163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "16942:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2117,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "16967:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "16951:26:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16951:15:12",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16950:28:12"
            },
            "returnParameters": {
              "id": 2121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2120,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "16995:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16995:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16994:9:12"
            },
            "scope": 3682,
            "src": "16933:318:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2349,
              "nodeType": "Block",
              "src": "17586:1941:12",
              "statements": [
                {
                  "assignments": [
                    2180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2180,
                      "mutability": "mutable",
                      "name": "policyStartPeriod",
                      "nameLocation": "17603:17:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2349,
                      "src": "17596:24:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 2179,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "17596:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2188,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 2186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2183,
                            "name": "_policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2167,
                            "src": "17630:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                              "typeString": "struct PolicyManager.Policy storage pointer"
                            }
                          },
                          "id": 2184,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 891,
                          "src": "17630:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 2185,
                          "name": "secondsPerPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 983,
                          "src": "17655:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "17630:41:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 2182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "17623:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint16_$",
                        "typeString": "type(uint16)"
                      },
                      "typeName": {
                        "id": 2181,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "17623:6:12",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17623:49:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17596:76:12"
                },
                {
                  "assignments": [
                    2190
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2190,
                      "mutability": "mutable",
                      "name": "maxPeriod",
                      "nameLocation": "17689:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2349,
                      "src": "17682:16:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 2189,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "17682:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2203,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2193,
                          "name": "getCurrentPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1094,
                          "src": "17722:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint16_$",
                            "typeString": "function () view returns (uint16)"
                          }
                        },
                        "id": 2194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17722:18:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 2200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2197,
                                "name": "_policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2167,
                                "src": "17749:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                  "typeString": "struct PolicyManager.Policy storage pointer"
                                }
                              },
                              "id": 2198,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 893,
                              "src": "17749:20:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 2199,
                              "name": "secondsPerPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 983,
                              "src": "17772:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "17749:39:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          ],
                          "id": 2196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17742:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint16_$",
                            "typeString": "type(uint16)"
                          },
                          "typeName": {
                            "id": 2195,
                            "name": "uint16",
                            "nodeType": "ElementaryTypeName",
                            "src": "17742:6:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17742:47:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 2191,
                        "name": "AdditionalMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7462,
                        "src": "17701:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AdditionalMath_$7462_$",
                          "typeString": "type(library AdditionalMath)"
                        }
                      },
                      "id": 2192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min16",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7224,
                      "src": "17701:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint16_$returns$_t_uint16_$",
                        "typeString": "function (uint16,uint16) pure returns (uint16)"
                      }
                    },
                    "id": 2202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17701:89:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17682:108:12"
                },
                {
                  "assignments": [
                    2205
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2205,
                      "mutability": "mutable",
                      "name": "minPeriod",
                      "nameLocation": "17807:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2349,
                      "src": "17800:16:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 2204,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "17800:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2212,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2208,
                        "name": "policyStartPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2180,
                        "src": "17840:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "expression": {
                          "id": 2209,
                          "name": "_arrangement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2170,
                          "src": "17859:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                            "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                          }
                        },
                        "id": 2210,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastRefundedPeriod",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 880,
                        "src": "17859:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 2206,
                        "name": "AdditionalMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7462,
                        "src": "17819:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AdditionalMath_$7462_$",
                          "typeString": "type(library AdditionalMath)"
                        }
                      },
                      "id": 2207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "max16",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7207,
                      "src": "17819:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint16_$returns$_t_uint16_$",
                        "typeString": "function (uint16,uint16) pure returns (uint16)"
                      }
                    },
                    "id": 2211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17819:72:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17800:91:12"
                },
                {
                  "assignments": [
                    2214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2214,
                      "mutability": "mutable",
                      "name": "downtimePeriods",
                      "nameLocation": "17908:15:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2349,
                      "src": "17901:22:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 2213,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "17901:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2216,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "17926:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17901:26:12"
                },
                {
                  "assignments": [
                    2218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2218,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "17945:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2349,
                      "src": "17937:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2217,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17937:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2224,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2221,
                          "name": "_arrangement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2170,
                          "src": "17983:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                            "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                          }
                        },
                        "id": 2222,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "node",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 876,
                        "src": "17983:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2219,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 979,
                        "src": "17954:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                          "typeString": "contract IStakingEscrow"
                        }
                      },
                      "id": 2220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPastDowntimeLength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 613,
                      "src": "17954:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17954:47:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17937:64:12"
                },
                {
                  "assignments": [
                    2226
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2226,
                      "mutability": "mutable",
                      "name": "initialIndexOfDowntimePeriods",
                      "nameLocation": "18019:29:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2349,
                      "src": "18011:37:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2225,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18011:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2227,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18011:37:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 2231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2228,
                        "name": "_arrangement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2170,
                        "src": "18062:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                          "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                        }
                      },
                      "id": 2229,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastRefundedPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 880,
                      "src": "18062:31:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18097:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18062:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2247,
                    "nodeType": "Block",
                    "src": "18231:92:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 2245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2242,
                            "name": "initialIndexOfDowntimePeriods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2226,
                            "src": "18245:29:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2243,
                              "name": "_arrangement",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2170,
                              "src": "18277:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                              }
                            },
                            "id": 2244,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "indexOfDowntimePeriods",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 878,
                            "src": "18277:35:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18245:67:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2246,
                        "nodeType": "ExpressionStatement",
                        "src": "18245:67:12"
                      }
                    ]
                  },
                  "id": 2248,
                  "nodeType": "IfStatement",
                  "src": "18058:265:12",
                  "trueBody": {
                    "id": 2241,
                    "nodeType": "Block",
                    "src": "18100:125:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 2239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2232,
                            "name": "initialIndexOfDowntimePeriods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2226,
                            "src": "18114:29:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2235,
                                  "name": "_arrangement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2170,
                                  "src": "18177:12:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                    "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                  }
                                },
                                "id": 2236,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "node",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 876,
                                "src": "18177:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 2237,
                                "name": "policyStartPeriod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2180,
                                "src": "18196:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              ],
                              "expression": {
                                "id": 2233,
                                "name": "escrow",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 979,
                                "src": "18146:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                                  "typeString": "contract IStakingEscrow"
                                }
                              },
                              "id": 2234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "findIndexOfPastDowntime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 622,
                              "src": "18146:30:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_uint16_$returns$_t_uint256_$",
                                "typeString": "function (address,uint16) view external returns (uint256)"
                              }
                            },
                            "id": 2238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18146:68:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18114:100:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2240,
                        "nodeType": "ExpressionStatement",
                        "src": "18114:100:12"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 2305,
                    "nodeType": "Block",
                    "src": "18487:528:12",
                    "statements": [
                      {
                        "assignments": [
                          2260,
                          2262
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2260,
                            "mutability": "mutable",
                            "name": "startPeriod",
                            "nameLocation": "18509:11:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2305,
                            "src": "18502:18:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "typeName": {
                              "id": 2259,
                              "name": "uint16",
                              "nodeType": "ElementaryTypeName",
                              "src": "18502:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2262,
                            "mutability": "mutable",
                            "name": "endPeriod",
                            "nameLocation": "18529:9:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2305,
                            "src": "18522:16:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "typeName": {
                              "id": 2261,
                              "name": "uint16",
                              "nodeType": "ElementaryTypeName",
                              "src": "18522:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2269,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2265,
                                "name": "_arrangement",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2170,
                                "src": "18581:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                  "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                }
                              },
                              "id": 2266,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "node",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 876,
                              "src": "18581:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2267,
                              "name": "indexOfDowntimePeriods",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2175,
                              "src": "18600:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2263,
                              "name": "escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 979,
                              "src": "18558:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                                "typeString": "contract IStakingEscrow"
                              }
                            },
                            "id": 2264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPastDowntime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 633,
                            "src": "18558:22:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint16_$_t_uint16_$",
                              "typeString": "function (address,uint256) view external returns (uint16,uint16)"
                            }
                          },
                          "id": 2268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18558:65:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint16_$_t_uint16_$",
                            "typeString": "tuple(uint16,uint16)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18501:122:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 2272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2270,
                            "name": "startPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2260,
                            "src": "18641:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 2271,
                            "name": "maxPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2190,
                            "src": "18655:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "18641:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 2277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2275,
                              "name": "endPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2262,
                              "src": "18714:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 2276,
                              "name": "minPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2205,
                              "src": "18726:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "src": "18714:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2280,
                          "nodeType": "IfStatement",
                          "src": "18710:68:12",
                          "trueBody": {
                            "id": 2279,
                            "nodeType": "Block",
                            "src": "18737:41:12",
                            "statements": [
                              {
                                "id": 2278,
                                "nodeType": "Continue",
                                "src": "18755:8:12"
                              }
                            ]
                          }
                        },
                        "id": 2281,
                        "nodeType": "IfStatement",
                        "src": "18637:141:12",
                        "trueBody": {
                          "id": 2274,
                          "nodeType": "Block",
                          "src": "18666:38:12",
                          "statements": [
                            {
                              "id": 2273,
                              "nodeType": "Break",
                              "src": "18684:5:12"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2282,
                            "name": "downtimePeriods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2214,
                            "src": "18791:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 2296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 2291,
                                      "name": "minPeriod",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2205,
                                      "src": "18897:9:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    },
                                    {
                                      "id": 2292,
                                      "name": "startPeriod",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2260,
                                      "src": "18908:11:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      },
                                      {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2289,
                                      "name": "AdditionalMath",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7462,
                                      "src": "18876:14:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_AdditionalMath_$7462_$",
                                        "typeString": "type(library AdditionalMath)"
                                      }
                                    },
                                    "id": 2290,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "max16",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7207,
                                    "src": "18876:20:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint16_$returns$_t_uint16_$",
                                      "typeString": "function (uint16,uint16) pure returns (uint16)"
                                    }
                                  },
                                  "id": 2293,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18876:44:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2285,
                                      "name": "maxPeriod",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2190,
                                      "src": "18831:9:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    },
                                    {
                                      "id": 2286,
                                      "name": "endPeriod",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2262,
                                      "src": "18842:9:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      },
                                      {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2283,
                                      "name": "AdditionalMath",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7462,
                                      "src": "18810:14:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_AdditionalMath_$7462_$",
                                        "typeString": "type(library AdditionalMath)"
                                      }
                                    },
                                    "id": 2284,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "min16",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7224,
                                    "src": "18810:20:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint16_$returns$_t_uint16_$",
                                      "typeString": "function (uint16,uint16) pure returns (uint16)"
                                    }
                                  },
                                  "id": 2287,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18810:42:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "id": 2288,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub16",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7393,
                                "src": "18810:65:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint16_$returns$_t_uint16_$bound_to$_t_uint16_$",
                                  "typeString": "function (uint16,uint16) pure returns (uint16)"
                                }
                              },
                              "id": 2294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18810:111:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 2295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18924:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "18810:115:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "18791:134:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 2298,
                        "nodeType": "ExpressionStatement",
                        "src": "18791:134:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 2301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2299,
                            "name": "maxPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2190,
                            "src": "18943:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 2300,
                            "name": "endPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2262,
                            "src": "18956:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "18943:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2304,
                        "nodeType": "IfStatement",
                        "src": "18939:66:12",
                        "trueBody": {
                          "id": 2303,
                          "nodeType": "Block",
                          "src": "18967:38:12",
                          "statements": [
                            {
                              "id": 2302,
                              "nodeType": "Break",
                              "src": "18985:5:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2253,
                      "name": "indexOfDowntimePeriods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2175,
                      "src": "18407:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2254,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2218,
                      "src": "18432:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18407:31:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2306,
                  "initializationExpression": {
                    "expression": {
                      "id": 2251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2249,
                        "name": "indexOfDowntimePeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2175,
                        "src": "18338:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 2250,
                        "name": "initialIndexOfDowntimePeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2226,
                        "src": "18363:29:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "18338:54:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2252,
                    "nodeType": "ExpressionStatement",
                    "src": "18338:54:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "18453:24:12",
                      "subExpression": {
                        "id": 2256,
                        "name": "indexOfDowntimePeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2175,
                        "src": "18453:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2258,
                    "nodeType": "ExpressionStatement",
                    "src": "18453:24:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "18333:682:12"
                },
                {
                  "assignments": [
                    2308
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2308,
                      "mutability": "mutable",
                      "name": "lastCommittedPeriod",
                      "nameLocation": "19032:19:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2349,
                      "src": "19025:26:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 2307,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "19025:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2314,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2311,
                          "name": "_arrangement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2170,
                          "src": "19084:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                            "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                          }
                        },
                        "id": 2312,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "node",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 876,
                        "src": "19084:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2309,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 979,
                        "src": "19054:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                          "typeString": "contract IStakingEscrow"
                        }
                      },
                      "id": 2310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getLastCommittedPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 640,
                      "src": "19054:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint16_$",
                        "typeString": "function (address) view external returns (uint16)"
                      }
                    },
                    "id": 2313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19054:48:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19025:77:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2315,
                        "name": "indexOfDowntimePeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2175,
                        "src": "19116:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 2316,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2218,
                        "src": "19142:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "19116:32:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "id": 2320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2318,
                        "name": "lastCommittedPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2308,
                        "src": "19152:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 2319,
                        "name": "maxPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2190,
                        "src": "19174:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "src": "19152:31:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "19116:67:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2335,
                  "nodeType": "IfStatement",
                  "src": "19112:307:12",
                  "trueBody": {
                    "id": 2334,
                    "nodeType": "Block",
                    "src": "19185:234:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 2332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2322,
                            "name": "downtimePeriods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2214,
                            "src": "19321:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 2331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2323,
                              "name": "maxPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2190,
                              "src": "19340:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  "id": 2328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2326,
                                    "name": "minPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2205,
                                    "src": "19373:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 2327,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "19385:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "19373:13:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                {
                                  "id": 2329,
                                  "name": "lastCommittedPeriod",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2308,
                                  "src": "19388:19:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                ],
                                "expression": {
                                  "id": 2324,
                                  "name": "AdditionalMath",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7462,
                                  "src": "19352:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AdditionalMath_$7462_$",
                                    "typeString": "type(library AdditionalMath)"
                                  }
                                },
                                "id": 2325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "max16",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7207,
                                "src": "19352:20:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint16_$returns$_t_uint16_$",
                                  "typeString": "function (uint16,uint16) pure returns (uint16)"
                                }
                              },
                              "id": 2330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19352:56:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "src": "19340:68:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "19321:87:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 2333,
                        "nodeType": "ExpressionStatement",
                        "src": "19321:87:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2336,
                      "name": "refundValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2173,
                      "src": "19429:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "id": 2340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2337,
                          "name": "_policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2167,
                          "src": "19443:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                            "typeString": "struct PolicyManager.Policy storage pointer"
                          }
                        },
                        "id": 2338,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feeRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 889,
                        "src": "19443:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 2339,
                        "name": "downtimePeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2214,
                        "src": "19461:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "src": "19443:33:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "19429:47:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2342,
                  "nodeType": "ExpressionStatement",
                  "src": "19429:47:12"
                },
                {
                  "expression": {
                    "id": 2347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2343,
                      "name": "lastRefundedPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2177,
                      "src": "19486:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "id": 2346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2344,
                        "name": "maxPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2190,
                        "src": "19507:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 2345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19519:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "19507:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "19486:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 2348,
                  "nodeType": "ExpressionStatement",
                  "src": "19486:34:12"
                }
              ]
            },
            "documentation": {
              "id": 2164,
              "nodeType": "StructuredDocumentation",
              "src": "17257:117:12",
              "text": " @notice Calculate amount of refund\n @param _policy Policy\n @param _arrangement Arrangement"
            },
            "id": 2350,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateRefundValue",
            "nameLocation": "17388:20:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2167,
                  "mutability": "mutable",
                  "name": "_policy",
                  "nameLocation": "17424:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2350,
                  "src": "17409:22:12",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                    "typeString": "struct PolicyManager.Policy"
                  },
                  "typeName": {
                    "id": 2166,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2165,
                      "name": "Policy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 908,
                      "src": "17409:6:12"
                    },
                    "referencedDeclaration": 908,
                    "src": "17409:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                      "typeString": "struct PolicyManager.Policy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2170,
                  "mutability": "mutable",
                  "name": "_arrangement",
                  "nameLocation": "17457:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2350,
                  "src": "17433:36:12",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                    "typeString": "struct PolicyManager.ArrangementInfo"
                  },
                  "typeName": {
                    "id": 2169,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2168,
                      "name": "ArrangementInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 881,
                      "src": "17433:15:12"
                    },
                    "referencedDeclaration": 881,
                    "src": "17433:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                      "typeString": "struct PolicyManager.ArrangementInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17408:62:12"
            },
            "returnParameters": {
              "id": 2178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2173,
                  "mutability": "mutable",
                  "name": "refundValue",
                  "nameLocation": "17510:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2350,
                  "src": "17502:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17502:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2175,
                  "mutability": "mutable",
                  "name": "indexOfDowntimePeriods",
                  "nameLocation": "17531:22:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2350,
                  "src": "17523:30:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17523:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2177,
                  "mutability": "mutable",
                  "name": "lastRefundedPeriod",
                  "nameLocation": "17562:18:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2350,
                  "src": "17555:25:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2176,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "17555:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17501:80:12"
            },
            "scope": 3682,
            "src": "17379:2148:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2750,
              "nodeType": "Block",
              "src": "19922:3561:12",
              "statements": [
                {
                  "expression": {
                    "id": 2364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2362,
                      "name": "refundValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2360,
                      "src": "19932:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19946:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19932:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2365,
                  "nodeType": "ExpressionStatement",
                  "src": "19932:15:12"
                },
                {
                  "assignments": [
                    2368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2368,
                      "mutability": "mutable",
                      "name": "policy",
                      "nameLocation": "19972:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2750,
                      "src": "19957:21:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                        "typeString": "struct PolicyManager.Policy"
                      },
                      "typeName": {
                        "id": 2367,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2366,
                          "name": "Policy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 908,
                          "src": "19957:6:12"
                        },
                        "referencedDeclaration": 908,
                        "src": "19957:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2372,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2369,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 988,
                      "src": "19981:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$908_storage_$",
                        "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                      }
                    },
                    "id": 2371,
                    "indexExpression": {
                      "id": 2370,
                      "name": "_policyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2353,
                      "src": "19990:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19981:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$908_storage",
                      "typeString": "struct PolicyManager.Policy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19957:43:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "20018:16:12",
                          "subExpression": {
                            "expression": {
                              "id": 2374,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2368,
                              "src": "20019:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 2375,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "disabled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 883,
                            "src": "20019:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 2380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2377,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2368,
                              "src": "20038:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 2378,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "startTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 891,
                            "src": "20038:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 2379,
                            "name": "resetTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 998,
                            "src": "20063:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "20038:39:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "20018:59:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20010:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20010:68:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2383,
                  "nodeType": "ExpressionStatement",
                  "src": "20010:68:12"
                },
                {
                  "assignments": [
                    2385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2385,
                      "mutability": "mutable",
                      "name": "endPeriod",
                      "nameLocation": "20095:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2750,
                      "src": "20088:16:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 2384,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "20088:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2395,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 2394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 2391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2388,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2368,
                              "src": "20114:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 2389,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "endTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 893,
                            "src": "20114:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 2390,
                            "name": "secondsPerPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 983,
                            "src": "20136:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "20114:38:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 2387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20107:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint16_$",
                          "typeString": "type(uint16)"
                        },
                        "typeName": {
                          "id": 2386,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "20107:6:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20107:46:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 2393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20156:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "20107:50:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20088:69:12"
                },
                {
                  "assignments": [
                    2397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2397,
                      "mutability": "mutable",
                      "name": "numberOfActive",
                      "nameLocation": "20175:14:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2750,
                      "src": "20167:22:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2396,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20167:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2401,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 2398,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2368,
                        "src": "20192:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 2399,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "arrangements",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 907,
                      "src": "20192:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage",
                        "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "20192:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20167:51:12"
                },
                {
                  "assignments": [
                    2403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2403,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "20236:1:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2750,
                      "src": "20228:9:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2402,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20228:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2405,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "20240:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20228:13:12"
                },
                {
                  "body": {
                    "id": 2653,
                    "nodeType": "Block",
                    "src": "20295:2373:12",
                    "statements": [
                      {
                        "assignments": [
                          2416
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2416,
                            "mutability": "mutable",
                            "name": "arrangement",
                            "nameLocation": "20333:11:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2653,
                            "src": "20309:35:12",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                              "typeString": "struct PolicyManager.ArrangementInfo"
                            },
                            "typeName": {
                              "id": 2415,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2414,
                                "name": "ArrangementInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 881,
                                "src": "20309:15:12"
                              },
                              "referencedDeclaration": 881,
                              "src": "20309:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                "typeString": "struct PolicyManager.ArrangementInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2421,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 2417,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2368,
                              "src": "20347:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 2418,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "arrangements",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 907,
                            "src": "20347:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage",
                              "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                            }
                          },
                          "id": 2420,
                          "indexExpression": {
                            "id": 2419,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2403,
                            "src": "20367:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20347:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage",
                            "typeString": "struct PolicyManager.ArrangementInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20309:60:12"
                      },
                      {
                        "assignments": [
                          2423
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2423,
                            "mutability": "mutable",
                            "name": "node",
                            "nameLocation": "20391:4:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2653,
                            "src": "20383:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2422,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "20383:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2426,
                        "initialValue": {
                          "expression": {
                            "id": 2424,
                            "name": "arrangement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2416,
                            "src": "20398:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                              "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                            }
                          },
                          "id": 2425,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "node",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 876,
                          "src": "20398:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20383:31:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2427,
                              "name": "node",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2423,
                              "src": "20432:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2428,
                              "name": "RESERVED_NODE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 953,
                              "src": "20440:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "20432:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2430,
                                "name": "_node",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2355,
                                "src": "20457:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 2431,
                                "name": "RESERVED_NODE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 953,
                                "src": "20466:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "20457:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2433,
                                "name": "_node",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2355,
                                "src": "20483:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 2434,
                                "name": "node",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2423,
                                "src": "20492:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "20483:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "20457:39:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "20432:64:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2443,
                        "nodeType": "IfStatement",
                        "src": "20428:145:12",
                        "trueBody": {
                          "id": 2442,
                          "nodeType": "Block",
                          "src": "20498:75:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 2439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "--",
                                "prefix": false,
                                "src": "20516:16:12",
                                "subExpression": {
                                  "id": 2438,
                                  "name": "numberOfActive",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2397,
                                  "src": "20516:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2440,
                              "nodeType": "ExpressionStatement",
                              "src": "20516:16:12"
                            },
                            {
                              "id": 2441,
                              "nodeType": "Continue",
                              "src": "20550:8:12"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2445
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2445,
                            "mutability": "mutable",
                            "name": "nodeRefundValue",
                            "nameLocation": "20594:15:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2653,
                            "src": "20586:23:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2444,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "20586:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2446,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20586:23:12"
                      },
                      {
                        "expression": {
                          "id": 2457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 2447,
                                "name": "nodeRefundValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2445,
                                "src": "20624:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2448,
                                  "name": "arrangement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2416,
                                  "src": "20641:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                    "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                  }
                                },
                                "id": 2449,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "indexOfDowntimePeriods",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 878,
                                "src": "20641:34:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2450,
                                  "name": "arrangement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2416,
                                  "src": "20677:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                    "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                  }
                                },
                                "id": 2451,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "lastRefundedPeriod",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 880,
                                "src": "20677:30:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              }
                            ],
                            "id": 2452,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "20623:85:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint16_$",
                              "typeString": "tuple(uint256,uint256,uint16)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2454,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2368,
                                "src": "20748:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                  "typeString": "struct PolicyManager.Policy storage pointer"
                                }
                              },
                              {
                                "id": 2455,
                                "name": "arrangement",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2416,
                                "src": "20756:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                  "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                  "typeString": "struct PolicyManager.Policy storage pointer"
                                },
                                {
                                  "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                  "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                }
                              ],
                              "id": 2453,
                              "name": "calculateRefundValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2350,
                              "src": "20727:20:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_Policy_$908_storage_ptr_$_t_struct$_ArrangementInfo_$881_storage_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint16_$",
                                "typeString": "function (struct PolicyManager.Policy storage pointer,struct PolicyManager.ArrangementInfo storage pointer) view returns (uint256,uint256,uint16)"
                              }
                            },
                            "id": 2456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20727:41:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint16_$",
                              "typeString": "tuple(uint256,uint256,uint16)"
                            }
                          },
                          "src": "20623:145:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2458,
                        "nodeType": "ExpressionStatement",
                        "src": "20623:145:12"
                      },
                      {
                        "condition": {
                          "id": 2459,
                          "name": "_forceRevoke",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2357,
                          "src": "20786:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2596,
                        "nodeType": "IfStatement",
                        "src": "20782:1271:12",
                        "trueBody": {
                          "id": 2595,
                          "nodeType": "Block",
                          "src": "20800:1253:12",
                          "statements": [
                            {
                              "assignments": [
                                2462
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2462,
                                  "mutability": "mutable",
                                  "name": "nodeInfo",
                                  "nameLocation": "20835:8:12",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2595,
                                  "src": "20818:25:12",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                    "typeString": "struct PolicyManager.NodeInfo"
                                  },
                                  "typeName": {
                                    "id": 2461,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2460,
                                      "name": "NodeInfo",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 925,
                                      "src": "20818:8:12"
                                    },
                                    "referencedDeclaration": 925,
                                    "src": "20818:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                      "typeString": "struct PolicyManager.NodeInfo"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2466,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 2463,
                                  "name": "nodes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 993,
                                  "src": "20846:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$925_storage_$",
                                    "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                                  }
                                },
                                "id": 2465,
                                "indexExpression": {
                                  "id": 2464,
                                  "name": "node",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2423,
                                  "src": "20852:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20846:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$925_storage",
                                  "typeString": "struct PolicyManager.NodeInfo storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20818:39:12"
                            },
                            {
                              "assignments": [
                                2468
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2468,
                                  "mutability": "mutable",
                                  "name": "lastRefundedPeriod",
                                  "nameLocation": "20935:18:12",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2595,
                                  "src": "20928:25:12",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  "typeName": {
                                    "id": 2467,
                                    "name": "uint16",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20928:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2471,
                              "initialValue": {
                                "expression": {
                                  "id": 2469,
                                  "name": "arrangement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2416,
                                  "src": "20956:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                    "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                  }
                                },
                                "id": 2470,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lastRefundedPeriod",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 880,
                                "src": "20956:30:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20928:58:12"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 2477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 2472,
                                      "name": "nodeInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2462,
                                      "src": "21008:8:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 2473,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 924,
                                    "src": "21008:17:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                      "typeString": "mapping(uint16 => int256)"
                                    }
                                  },
                                  "id": 2475,
                                  "indexExpression": {
                                    "id": 2474,
                                    "name": "lastRefundedPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2468,
                                    "src": "21026:18:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "21008:37:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 2476,
                                  "name": "DEFAULT_FEE_DELTA",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 976,
                                  "src": "21049:17:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "21008:58:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 2510,
                                "nodeType": "Block",
                                "src": "21187:113:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2508,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "expression": {
                                            "id": 2495,
                                            "name": "nodeInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2462,
                                            "src": "21209:8:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                            }
                                          },
                                          "id": 2498,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "feeDelta",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 924,
                                          "src": "21209:17:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                            "typeString": "mapping(uint16 => int256)"
                                          }
                                        },
                                        "id": 2499,
                                        "indexExpression": {
                                          "id": 2497,
                                          "name": "lastRefundedPeriod",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2468,
                                          "src": "21227:18:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "21209:37:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "-=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 2504,
                                                  "name": "policy",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2368,
                                                  "src": "21265:6:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                                    "typeString": "struct PolicyManager.Policy storage pointer"
                                                  }
                                                },
                                                "id": 2505,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "feeRate",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 889,
                                                "src": "21265:14:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint128",
                                                  "typeString": "uint128"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint128",
                                                  "typeString": "uint128"
                                                }
                                              ],
                                              "id": 2503,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "21257:7:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 2502,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "21257:7:12",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2506,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "21257:23:12",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 2501,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "21250:6:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_int256_$",
                                            "typeString": "type(int256)"
                                          },
                                          "typeName": {
                                            "id": 2500,
                                            "name": "int256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "21250:6:12",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 2507,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "21250:31:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "src": "21209:72:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "id": 2509,
                                    "nodeType": "ExpressionStatement",
                                    "src": "21209:72:12"
                                  }
                                ]
                              },
                              "id": 2511,
                              "nodeType": "IfStatement",
                              "src": "21004:296:12",
                              "trueBody": {
                                "id": 2494,
                                "nodeType": "Block",
                                "src": "21068:113:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2492,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "expression": {
                                            "id": 2478,
                                            "name": "nodeInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2462,
                                            "src": "21090:8:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                            }
                                          },
                                          "id": 2481,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "feeDelta",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 924,
                                          "src": "21090:17:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                            "typeString": "mapping(uint16 => int256)"
                                          }
                                        },
                                        "id": 2482,
                                        "indexExpression": {
                                          "id": 2480,
                                          "name": "lastRefundedPeriod",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2468,
                                          "src": "21108:18:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "21090:37:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 2491,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "-",
                                        "prefix": true,
                                        "src": "21130:32:12",
                                        "subExpression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "expression": {
                                                    "id": 2487,
                                                    "name": "policy",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2368,
                                                    "src": "21146:6:12",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                                    }
                                                  },
                                                  "id": 2488,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "feeRate",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 889,
                                                  "src": "21146:14:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint128",
                                                    "typeString": "uint128"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint128",
                                                    "typeString": "uint128"
                                                  }
                                                ],
                                                "id": 2486,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "21138:7:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_uint256_$",
                                                  "typeString": "type(uint256)"
                                                },
                                                "typeName": {
                                                  "id": 2485,
                                                  "name": "uint256",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "21138:7:12",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 2489,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "21138:23:12",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 2484,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "21131:6:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_int256_$",
                                              "typeString": "type(int256)"
                                            },
                                            "typeName": {
                                              "id": 2483,
                                              "name": "int256",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "21131:6:12",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 2490,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "21131:31:12",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "src": "21090:72:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "id": 2493,
                                    "nodeType": "ExpressionStatement",
                                    "src": "21090:72:12"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 2517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 2512,
                                      "name": "nodeInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2462,
                                      "src": "21321:8:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 2513,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 924,
                                    "src": "21321:17:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                      "typeString": "mapping(uint16 => int256)"
                                    }
                                  },
                                  "id": 2515,
                                  "indexExpression": {
                                    "id": 2514,
                                    "name": "endPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2385,
                                    "src": "21339:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "21321:28:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 2516,
                                  "name": "DEFAULT_FEE_DELTA",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 976,
                                  "src": "21353:17:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "21321:49:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 2549,
                                "nodeType": "Block",
                                "src": "21481:104:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2547,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "expression": {
                                            "id": 2534,
                                            "name": "nodeInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2462,
                                            "src": "21503:8:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                            }
                                          },
                                          "id": 2537,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "feeDelta",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 924,
                                          "src": "21503:17:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                            "typeString": "mapping(uint16 => int256)"
                                          }
                                        },
                                        "id": 2538,
                                        "indexExpression": {
                                          "id": 2536,
                                          "name": "endPeriod",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2385,
                                          "src": "21521:9:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "21503:28:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 2543,
                                                  "name": "policy",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2368,
                                                  "src": "21550:6:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                                    "typeString": "struct PolicyManager.Policy storage pointer"
                                                  }
                                                },
                                                "id": 2544,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "feeRate",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 889,
                                                "src": "21550:14:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint128",
                                                  "typeString": "uint128"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint128",
                                                  "typeString": "uint128"
                                                }
                                              ],
                                              "id": 2542,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "21542:7:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 2541,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "21542:7:12",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2545,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "21542:23:12",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 2540,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "21535:6:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_int256_$",
                                            "typeString": "type(int256)"
                                          },
                                          "typeName": {
                                            "id": 2539,
                                            "name": "int256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "21535:6:12",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 2546,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "21535:31:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "src": "21503:63:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "id": 2548,
                                    "nodeType": "ExpressionStatement",
                                    "src": "21503:63:12"
                                  }
                                ]
                              },
                              "id": 2550,
                              "nodeType": "IfStatement",
                              "src": "21317:268:12",
                              "trueBody": {
                                "id": 2533,
                                "nodeType": "Block",
                                "src": "21372:103:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2531,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "expression": {
                                            "id": 2518,
                                            "name": "nodeInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2462,
                                            "src": "21394:8:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                            }
                                          },
                                          "id": 2521,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "feeDelta",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 924,
                                          "src": "21394:17:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                            "typeString": "mapping(uint16 => int256)"
                                          }
                                        },
                                        "id": 2522,
                                        "indexExpression": {
                                          "id": 2520,
                                          "name": "endPeriod",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2385,
                                          "src": "21412:9:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "21394:28:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 2527,
                                                  "name": "policy",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2368,
                                                  "src": "21440:6:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                                    "typeString": "struct PolicyManager.Policy storage pointer"
                                                  }
                                                },
                                                "id": 2528,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "feeRate",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 889,
                                                "src": "21440:14:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint128",
                                                  "typeString": "uint128"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint128",
                                                  "typeString": "uint128"
                                                }
                                              ],
                                              "id": 2526,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "21432:7:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 2525,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "21432:7:12",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2529,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "21432:23:12",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 2524,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "21425:6:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_int256_$",
                                            "typeString": "type(int256)"
                                          },
                                          "typeName": {
                                            "id": 2523,
                                            "name": "int256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "21425:6:12",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 2530,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "21425:31:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "src": "21394:62:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "id": 2532,
                                    "nodeType": "ExpressionStatement",
                                    "src": "21394:62:12"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 2556,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 2551,
                                      "name": "nodeInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2462,
                                      "src": "21659:8:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 2552,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 924,
                                    "src": "21659:17:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                      "typeString": "mapping(uint16 => int256)"
                                    }
                                  },
                                  "id": 2554,
                                  "indexExpression": {
                                    "id": 2553,
                                    "name": "lastRefundedPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2468,
                                    "src": "21677:18:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "21659:37:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2555,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21700:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "21659:42:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2566,
                              "nodeType": "IfStatement",
                              "src": "21655:146:12",
                              "trueBody": {
                                "id": 2565,
                                "nodeType": "Block",
                                "src": "21703:98:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2563,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "expression": {
                                            "id": 2557,
                                            "name": "nodeInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2462,
                                            "src": "21725:8:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                            }
                                          },
                                          "id": 2560,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "feeDelta",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 924,
                                          "src": "21725:17:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                            "typeString": "mapping(uint16 => int256)"
                                          }
                                        },
                                        "id": 2561,
                                        "indexExpression": {
                                          "id": 2559,
                                          "name": "lastRefundedPeriod",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2468,
                                          "src": "21743:18:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "21725:37:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 2562,
                                        "name": "DEFAULT_FEE_DELTA",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 976,
                                        "src": "21765:17:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "src": "21725:57:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "id": 2564,
                                    "nodeType": "ExpressionStatement",
                                    "src": "21725:57:12"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 2572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 2567,
                                      "name": "nodeInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2462,
                                      "src": "21822:8:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                        "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                      }
                                    },
                                    "id": 2568,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 924,
                                    "src": "21822:17:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                      "typeString": "mapping(uint16 => int256)"
                                    }
                                  },
                                  "id": 2570,
                                  "indexExpression": {
                                    "id": 2569,
                                    "name": "endPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2385,
                                    "src": "21840:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "21822:28:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2571,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21854:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "21822:33:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2582,
                              "nodeType": "IfStatement",
                              "src": "21818:128:12",
                              "trueBody": {
                                "id": 2581,
                                "nodeType": "Block",
                                "src": "21857:89:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2579,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "expression": {
                                            "id": 2573,
                                            "name": "nodeInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2462,
                                            "src": "21879:8:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                              "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                            }
                                          },
                                          "id": 2576,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "feeDelta",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 924,
                                          "src": "21879:17:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                                            "typeString": "mapping(uint16 => int256)"
                                          }
                                        },
                                        "id": 2577,
                                        "indexExpression": {
                                          "id": 2575,
                                          "name": "endPeriod",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2385,
                                          "src": "21897:9:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "21879:28:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 2578,
                                        "name": "DEFAULT_FEE_DELTA",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 976,
                                        "src": "21910:17:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "src": "21879:48:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "id": 2580,
                                    "nodeType": "ExpressionStatement",
                                    "src": "21879:48:12"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 2593,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2583,
                                  "name": "nodeRefundValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2445,
                                  "src": "21963:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2592,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        },
                                        "id": 2588,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2586,
                                          "name": "endPeriod",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2385,
                                          "src": "21990:9:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 2587,
                                          "name": "lastRefundedPeriod",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2468,
                                          "src": "22002:18:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "src": "21990:30:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      ],
                                      "id": 2585,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "21982:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 2584,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "21982:7:12",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2589,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "21982:39:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 2590,
                                      "name": "policy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2368,
                                      "src": "22024:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                        "typeString": "struct PolicyManager.Policy storage pointer"
                                      }
                                    },
                                    "id": 2591,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "feeRate",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 889,
                                    "src": "22024:14:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "src": "21982:56:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "21963:75:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2594,
                              "nodeType": "ExpressionStatement",
                              "src": "21963:75:12"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2597,
                            "name": "_forceRevoke",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2357,
                            "src": "22070:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 2601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2598,
                                "name": "arrangement",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2416,
                                "src": "22086:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                  "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                }
                              },
                              "id": 2599,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lastRefundedPeriod",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 880,
                              "src": "22086:30:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 2600,
                              "name": "endPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2385,
                              "src": "22120:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "src": "22086:43:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "22070:59:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2641,
                          "nodeType": "Block",
                          "src": "22431:104:12",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2634,
                                    "name": "_policyId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2353,
                                    "src": "22475:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes16",
                                      "typeString": "bytes16"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2635,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "22486:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2636,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "22486:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2637,
                                    "name": "node",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2423,
                                    "src": "22498:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2638,
                                    "name": "nodeRefundValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2445,
                                    "src": "22504:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes16",
                                      "typeString": "bytes16"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2633,
                                  "name": "RefundForArrangement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 834,
                                  "src": "22454:20:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes16_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (bytes16,address,address,uint256)"
                                  }
                                },
                                "id": 2639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22454:66:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2640,
                              "nodeType": "EmitStatement",
                              "src": "22449:71:12"
                            }
                          ]
                        },
                        "id": 2642,
                        "nodeType": "IfStatement",
                        "src": "22066:469:12",
                        "trueBody": {
                          "id": 2632,
                          "nodeType": "Block",
                          "src": "22131:294:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 2607,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2603,
                                    "name": "arrangement",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2416,
                                    "src": "22149:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                      "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                    }
                                  },
                                  "id": 2605,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "node",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 876,
                                  "src": "22149:16:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2606,
                                  "name": "RESERVED_NODE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 953,
                                  "src": "22168:13:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "22149:32:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2608,
                              "nodeType": "ExpressionStatement",
                              "src": "22149:32:12"
                            },
                            {
                              "expression": {
                                "id": 2613,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2609,
                                    "name": "arrangement",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2416,
                                    "src": "22199:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                      "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                    }
                                  },
                                  "id": 2611,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "indexOfDowntimePeriods",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 878,
                                  "src": "22199:34:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 2612,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "22236:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "22199:38:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2614,
                              "nodeType": "ExpressionStatement",
                              "src": "22199:38:12"
                            },
                            {
                              "expression": {
                                "id": 2619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2615,
                                    "name": "arrangement",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2416,
                                    "src": "22255:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                      "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                    }
                                  },
                                  "id": 2617,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "lastRefundedPeriod",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 880,
                                  "src": "22255:30:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 2618,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "22288:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "22255:34:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 2620,
                              "nodeType": "ExpressionStatement",
                              "src": "22255:34:12"
                            },
                            {
                              "expression": {
                                "id": 2622,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "--",
                                "prefix": false,
                                "src": "22307:16:12",
                                "subExpression": {
                                  "id": 2621,
                                  "name": "numberOfActive",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2397,
                                  "src": "22307:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2623,
                              "nodeType": "ExpressionStatement",
                              "src": "22307:16:12"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2625,
                                    "name": "_policyId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2353,
                                    "src": "22365:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes16",
                                      "typeString": "bytes16"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2626,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "22376:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2627,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "22376:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2628,
                                    "name": "node",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2423,
                                    "src": "22388:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2629,
                                    "name": "nodeRefundValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2445,
                                    "src": "22394:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes16",
                                      "typeString": "bytes16"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2624,
                                  "name": "ArrangementRevoked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 824,
                                  "src": "22346:18:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes16_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (bytes16,address,address,uint256)"
                                  }
                                },
                                "id": 2630,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22346:64:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2631,
                              "nodeType": "EmitStatement",
                              "src": "22341:69:12"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2643,
                            "name": "refundValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2360,
                            "src": "22549:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2644,
                            "name": "nodeRefundValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2445,
                            "src": "22564:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22549:30:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2646,
                        "nodeType": "ExpressionStatement",
                        "src": "22549:30:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2647,
                            "name": "_node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2355,
                            "src": "22597:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 2648,
                            "name": "RESERVED_NODE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 953,
                            "src": "22606:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "22597:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2652,
                        "nodeType": "IfStatement",
                        "src": "22593:65:12",
                        "trueBody": {
                          "id": 2651,
                          "nodeType": "Block",
                          "src": "22621:37:12",
                          "statements": [
                            {
                              "id": 2650,
                              "nodeType": "Break",
                              "src": "22638:5:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2406,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2403,
                      "src": "20258:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 2407,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2368,
                          "src": "20262:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                            "typeString": "struct PolicyManager.Policy storage pointer"
                          }
                        },
                        "id": 2408,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arrangements",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 907,
                        "src": "20262:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage",
                          "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                        }
                      },
                      "id": 2409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "20262:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20258:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2654,
                  "loopExpression": {
                    "expression": {
                      "id": 2412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "20290:3:12",
                      "subExpression": {
                        "id": 2411,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2403,
                        "src": "20290:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2413,
                    "nodeType": "ExpressionStatement",
                    "src": "20290:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "20251:2417:12"
                },
                {
                  "assignments": [
                    2656
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2656,
                      "mutability": "mutable",
                      "name": "policySponsor",
                      "nameLocation": "22693:13:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2750,
                      "src": "22677:29:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2655,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "22677:15:12",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2659,
                  "initialValue": {
                    "expression": {
                      "id": 2657,
                      "name": "policy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2368,
                      "src": "22709:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                        "typeString": "struct PolicyManager.Policy storage pointer"
                      }
                    },
                    "id": 2658,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sponsor",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 885,
                    "src": "22709:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22677:46:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2660,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2355,
                      "src": "22737:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2661,
                      "name": "RESERVED_NODE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 953,
                      "src": "22746:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "22737:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2737,
                    "nodeType": "Block",
                    "src": "23285:101:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2730,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2403,
                                "src": "23344:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 2731,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2368,
                                    "src": "23348:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 2732,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "arrangements",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 907,
                                  "src": "23348:19:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage",
                                    "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                                  }
                                },
                                "id": 2733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "23348:26:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "23344:30:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2729,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "23336:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23336:39:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2736,
                        "nodeType": "ExpressionStatement",
                        "src": "23336:39:12"
                      }
                    ]
                  },
                  "id": 2738,
                  "nodeType": "IfStatement",
                  "src": "22733:653:12",
                  "trueBody": {
                    "id": 2728,
                    "nodeType": "Block",
                    "src": "22761:518:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2663,
                            "name": "numberOfActive",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2397,
                            "src": "22779:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22797:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "22779:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2726,
                          "nodeType": "Block",
                          "src": "23180:89:12",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2720,
                                    "name": "_policyId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2353,
                                    "src": "23219:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes16",
                                      "typeString": "bytes16"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2721,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "23230:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2722,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "23230:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2723,
                                    "name": "refundValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2360,
                                    "src": "23242:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes16",
                                      "typeString": "bytes16"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2719,
                                  "name": "RefundForPolicy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 850,
                                  "src": "23203:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes16_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (bytes16,address,uint256)"
                                  }
                                },
                                "id": 2724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23203:51:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2725,
                              "nodeType": "EmitStatement",
                              "src": "23198:56:12"
                            }
                          ]
                        },
                        "id": 2727,
                        "nodeType": "IfStatement",
                        "src": "22775:494:12",
                        "trueBody": {
                          "id": 2718,
                          "nodeType": "Block",
                          "src": "22800:374:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 2670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2666,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2368,
                                    "src": "22818:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 2668,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "disabled",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 883,
                                  "src": "22818:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 2669,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "22836:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "22818:22:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2671,
                              "nodeType": "ExpressionStatement",
                              "src": "22818:22:12"
                            },
                            {
                              "expression": {
                                "id": 2682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2672,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2368,
                                    "src": "22888:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 2674,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "sponsor",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 885,
                                  "src": "22888:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 2679,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "22921:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 2678,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "22913:7:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 2677,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "22913:7:12",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 2680,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22913:10:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2676,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "22905:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_payable_$",
                                      "typeString": "type(address payable)"
                                    },
                                    "typeName": {
                                      "id": 2675,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "22905:8:12",
                                      "stateMutability": "payable",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2681,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22905:19:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "22888:36:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 2683,
                              "nodeType": "ExpressionStatement",
                              "src": "22888:36:12"
                            },
                            {
                              "expression": {
                                "id": 2691,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2684,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2368,
                                    "src": "22942:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 2686,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 887,
                                  "src": "22942:12:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 2689,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "22965:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 2688,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "22957:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2687,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "22957:7:12",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2690,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22957:10:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "22942:25:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2692,
                              "nodeType": "ExpressionStatement",
                              "src": "22942:25:12"
                            },
                            {
                              "expression": {
                                "id": 2697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2693,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2368,
                                    "src": "22985:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 2695,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "feeRate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 889,
                                  "src": "22985:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 2696,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "23002:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "22985:18:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "id": 2698,
                              "nodeType": "ExpressionStatement",
                              "src": "22985:18:12"
                            },
                            {
                              "expression": {
                                "id": 2703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2699,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2368,
                                    "src": "23021:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 2701,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "startTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 891,
                                  "src": "23021:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 2702,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "23045:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "23021:25:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "id": 2704,
                              "nodeType": "ExpressionStatement",
                              "src": "23021:25:12"
                            },
                            {
                              "expression": {
                                "id": 2709,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 2705,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2368,
                                    "src": "23064:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 2707,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "endTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 893,
                                  "src": "23064:19:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 2708,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "23086:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "23064:23:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "id": 2710,
                              "nodeType": "ExpressionStatement",
                              "src": "23064:23:12"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2712,
                                    "name": "_policyId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2353,
                                    "src": "23124:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes16",
                                      "typeString": "bytes16"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2713,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "23135:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2714,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "23135:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2715,
                                    "name": "refundValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2360,
                                    "src": "23147:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes16",
                                      "typeString": "bytes16"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2711,
                                  "name": "PolicyRevoked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 842,
                                  "src": "23110:13:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes16_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (bytes16,address,uint256)"
                                  }
                                },
                                "id": 2716,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23110:49:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2717,
                              "nodeType": "EmitStatement",
                              "src": "23105:54:12"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2739,
                      "name": "refundValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2360,
                      "src": "23399:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23413:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "23399:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2749,
                  "nodeType": "IfStatement",
                  "src": "23395:82:12",
                  "trueBody": {
                    "id": 2748,
                    "nodeType": "Block",
                    "src": "23416:61:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2745,
                              "name": "refundValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2360,
                              "src": "23454:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2742,
                              "name": "policySponsor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2656,
                              "src": "23430:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sendValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14513,
                            "src": "23430:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$",
                              "typeString": "function (address payable,uint256)"
                            }
                          },
                          "id": 2746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23430:36:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2747,
                        "nodeType": "ExpressionStatement",
                        "src": "23430:36:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2351,
              "nodeType": "StructuredDocumentation",
              "src": "19533:256:12",
              "text": " @notice Revoke/refund arrangement/policy by the sponsor\n @param _policyId Policy id\n @param _node Node that will be excluded or RESERVED_NODE if full policy should be used\n( @param _forceRevoke Force revoke arrangement/policy"
            },
            "id": 2751,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refundInternal",
            "nameLocation": "19803:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2353,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "19826:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2751,
                  "src": "19818:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 2352,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "19818:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2355,
                  "mutability": "mutable",
                  "name": "_node",
                  "nameLocation": "19845:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2751,
                  "src": "19837:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19837:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2357,
                  "mutability": "mutable",
                  "name": "_forceRevoke",
                  "nameLocation": "19857:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2751,
                  "src": "19852:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2356,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19852:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19817:53:12"
            },
            "returnParameters": {
              "id": 2361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2360,
                  "mutability": "mutable",
                  "name": "refundValue",
                  "nameLocation": "19905:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2751,
                  "src": "19897:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19897:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19896:21:12"
            },
            "scope": 3682,
            "src": "19794:3689:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2859,
              "nodeType": "Block",
              "src": "23775:838:12",
              "statements": [
                {
                  "expression": {
                    "id": 2763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2761,
                      "name": "refundValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2759,
                      "src": "23785:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23799:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "23785:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2764,
                  "nodeType": "ExpressionStatement",
                  "src": "23785:15:12"
                },
                {
                  "assignments": [
                    2767
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2767,
                      "mutability": "mutable",
                      "name": "policy",
                      "nameLocation": "23825:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2859,
                      "src": "23810:21:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                        "typeString": "struct PolicyManager.Policy"
                      },
                      "typeName": {
                        "id": 2766,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2765,
                          "name": "Policy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 908,
                          "src": "23810:6:12"
                        },
                        "referencedDeclaration": 908,
                        "src": "23810:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2771,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2768,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 988,
                      "src": "23834:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$908_storage_$",
                        "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                      }
                    },
                    "id": 2770,
                    "indexExpression": {
                      "id": 2769,
                      "name": "_policyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2754,
                      "src": "23843:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23834:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$908_storage",
                      "typeString": "struct PolicyManager.Policy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23810:43:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2773,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2767,
                                    "src": "23872:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 2774,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 887,
                                  "src": "23872:12:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 2775,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "23888:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2776,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "23888:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "23872:26:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2782,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2778,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2767,
                                    "src": "23902:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 2779,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sponsor",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 885,
                                  "src": "23902:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 2780,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "23920:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2781,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "23920:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "23902:28:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "23872:58:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 2784,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "23871:60:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 2787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "23935:16:12",
                          "subExpression": {
                            "expression": {
                              "id": 2785,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2767,
                              "src": "23936:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 2786,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "disabled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 883,
                            "src": "23936:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "23871:80:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2772,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23863:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23863:89:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2790,
                  "nodeType": "ExpressionStatement",
                  "src": "23863:89:12"
                },
                {
                  "assignments": [
                    2792
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2792,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "23970:1:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2859,
                      "src": "23962:9:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2791,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23962:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2794,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "23974:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23962:13:12"
                },
                {
                  "body": {
                    "id": 2844,
                    "nodeType": "Block",
                    "src": "24029:440:12",
                    "statements": [
                      {
                        "assignments": [
                          2805
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2805,
                            "mutability": "mutable",
                            "name": "arrangement",
                            "nameLocation": "24067:11:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2844,
                            "src": "24043:35:12",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                              "typeString": "struct PolicyManager.ArrangementInfo"
                            },
                            "typeName": {
                              "id": 2804,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2803,
                                "name": "ArrangementInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 881,
                                "src": "24043:15:12"
                              },
                              "referencedDeclaration": 881,
                              "src": "24043:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                "typeString": "struct PolicyManager.ArrangementInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2810,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 2806,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2767,
                              "src": "24081:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 2807,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "arrangements",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 907,
                            "src": "24081:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage",
                              "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                            }
                          },
                          "id": 2809,
                          "indexExpression": {
                            "id": 2808,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2792,
                            "src": "24101:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24081:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage",
                            "typeString": "struct PolicyManager.ArrangementInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "24043:60:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2811,
                                "name": "arrangement",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2805,
                                "src": "24121:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                  "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                }
                              },
                              "id": 2812,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "node",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 876,
                              "src": "24121:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2813,
                              "name": "RESERVED_NODE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 953,
                              "src": "24141:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "24121:33:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2815,
                                "name": "_node",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2756,
                                "src": "24158:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 2816,
                                "name": "RESERVED_NODE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 953,
                                "src": "24167:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "24158:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2818,
                                "name": "_node",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2756,
                                "src": "24184:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 2819,
                                  "name": "arrangement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2805,
                                  "src": "24193:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                    "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                  }
                                },
                                "id": 2820,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "node",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 876,
                                "src": "24193:16:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "24184:25:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "24158:51:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "24121:88:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2826,
                        "nodeType": "IfStatement",
                        "src": "24117:135:12",
                        "trueBody": {
                          "id": 2825,
                          "nodeType": "Block",
                          "src": "24211:41:12",
                          "statements": [
                            {
                              "id": 2824,
                              "nodeType": "Continue",
                              "src": "24229:8:12"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2828,
                          null,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2828,
                            "mutability": "mutable",
                            "name": "nodeRefundValue",
                            "nameLocation": "24274:15:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2844,
                            "src": "24266:23:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2827,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "24266:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          null
                        ],
                        "id": 2833,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2830,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2767,
                              "src": "24316:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            {
                              "id": 2831,
                              "name": "arrangement",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2805,
                              "src": "24324:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              },
                              {
                                "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                              }
                            ],
                            "id": 2829,
                            "name": "calculateRefundValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2350,
                            "src": "24295:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Policy_$908_storage_ptr_$_t_struct$_ArrangementInfo_$881_storage_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint16_$",
                              "typeString": "function (struct PolicyManager.Policy storage pointer,struct PolicyManager.ArrangementInfo storage pointer) view returns (uint256,uint256,uint16)"
                            }
                          },
                          "id": 2832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24295:41:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint16_$",
                            "typeString": "tuple(uint256,uint256,uint16)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "24265:71:12"
                      },
                      {
                        "expression": {
                          "id": 2836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2834,
                            "name": "refundValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2759,
                            "src": "24350:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2835,
                            "name": "nodeRefundValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2828,
                            "src": "24365:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24350:30:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2837,
                        "nodeType": "ExpressionStatement",
                        "src": "24350:30:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2838,
                            "name": "_node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2756,
                            "src": "24398:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 2839,
                            "name": "RESERVED_NODE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 953,
                            "src": "24407:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "24398:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2843,
                        "nodeType": "IfStatement",
                        "src": "24394:65:12",
                        "trueBody": {
                          "id": 2842,
                          "nodeType": "Block",
                          "src": "24422:37:12",
                          "statements": [
                            {
                              "id": 2841,
                              "nodeType": "Break",
                              "src": "24439:5:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2795,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2792,
                      "src": "23992:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 2796,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2767,
                          "src": "23996:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                            "typeString": "struct PolicyManager.Policy storage pointer"
                          }
                        },
                        "id": 2797,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arrangements",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 907,
                        "src": "23996:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage",
                          "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                        }
                      },
                      "id": 2798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "23996:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23992:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2845,
                  "loopExpression": {
                    "expression": {
                      "id": 2801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "24024:3:12",
                      "subExpression": {
                        "id": 2800,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2792,
                        "src": "24024:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2802,
                    "nodeType": "ExpressionStatement",
                    "src": "24024:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "23985:484:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2846,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2756,
                      "src": "24482:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2847,
                      "name": "RESERVED_NODE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 953,
                      "src": "24491:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "24482:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2858,
                  "nodeType": "IfStatement",
                  "src": "24478:129:12",
                  "trueBody": {
                    "id": 2857,
                    "nodeType": "Block",
                    "src": "24506:101:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2850,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2792,
                                "src": "24565:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 2851,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2767,
                                    "src": "24569:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 2852,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "arrangements",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 907,
                                  "src": "24569:19:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage",
                                    "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                                  }
                                },
                                "id": 2853,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "24569:26:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "24565:30:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2849,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "24557:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24557:39:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2856,
                        "nodeType": "ExpressionStatement",
                        "src": "24557:39:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2752,
              "nodeType": "StructuredDocumentation",
              "src": "23489:153:12",
              "text": " @notice Calculate amount of refund\n @param _policyId Policy id\n @param _node Node or RESERVED_NODE if all nodes should be used"
            },
            "id": 2860,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateRefundValueInternal",
            "nameLocation": "23656:28:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2754,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "23693:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2860,
                  "src": "23685:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 2753,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "23685:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2756,
                  "mutability": "mutable",
                  "name": "_node",
                  "nameLocation": "23712:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2860,
                  "src": "23704:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23704:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23684:34:12"
            },
            "returnParameters": {
              "id": 2760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2759,
                  "mutability": "mutable",
                  "name": "refundValue",
                  "nameLocation": "23758:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2860,
                  "src": "23750:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2758,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23750:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23749:21:12"
            },
            "scope": 3682,
            "src": "23647:966:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2883,
              "nodeType": "Block",
              "src": "24790:128:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2870,
                              "name": "_policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2863,
                              "src": "24823:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            ],
                            "id": 2869,
                            "name": "getPolicyOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1937,
                            "src": "24808:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes16_$returns$_t_address_$",
                              "typeString": "function (bytes16) view returns (address)"
                            }
                          },
                          "id": 2871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24808:25:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2872,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "24837:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "24837:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "24808:39:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2868,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24800:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24800:48:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2876,
                  "nodeType": "ExpressionStatement",
                  "src": "24800:48:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2878,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2863,
                        "src": "24880:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "id": 2879,
                        "name": "RESERVED_NODE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "24891:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 2880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24906:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2877,
                      "name": "refundInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2751,
                      "src": "24865:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes16_$_t_address_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (bytes16,address,bool) returns (uint256)"
                      }
                    },
                    "id": 2881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24865:46:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2867,
                  "id": 2882,
                  "nodeType": "Return",
                  "src": "24858:53:12"
                }
              ]
            },
            "documentation": {
              "id": 2861,
              "nodeType": "StructuredDocumentation",
              "src": "24619:86:12",
              "text": " @notice Revoke policy by the sponsor\n @param _policyId Policy id"
            },
            "functionSelector": "a2d1d5e2",
            "id": 2884,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokePolicy",
            "nameLocation": "24719:12:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2863,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "24740:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2884,
                  "src": "24732:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 2862,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "24732:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24731:19:12"
            },
            "returnParameters": {
              "id": 2867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2866,
                  "mutability": "mutable",
                  "name": "refundValue",
                  "nameLocation": "24777:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2884,
                  "src": "24769:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24769:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24768:21:12"
            },
            "scope": 3682,
            "src": "24710:208:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2915,
              "nodeType": "Block",
              "src": "25178:161:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2895,
                          "name": "_node",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2889,
                          "src": "25196:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 2896,
                          "name": "RESERVED_NODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 953,
                          "src": "25205:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "25196:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2894,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25188:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25188:31:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2899,
                  "nodeType": "ExpressionStatement",
                  "src": "25188:31:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2902,
                              "name": "_policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2887,
                              "src": "25252:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            ],
                            "id": 2901,
                            "name": "getPolicyOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1937,
                            "src": "25237:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes16_$returns$_t_address_$",
                              "typeString": "function (bytes16) view returns (address)"
                            }
                          },
                          "id": 2903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25237:25:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2904,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "25266:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "25266:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "25237:39:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2900,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25229:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25229:48:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2908,
                  "nodeType": "ExpressionStatement",
                  "src": "25229:48:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2910,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2887,
                        "src": "25309:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "id": 2911,
                        "name": "_node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2889,
                        "src": "25320:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 2912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25327:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2909,
                      "name": "refundInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2751,
                      "src": "25294:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes16_$_t_address_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (bytes16,address,bool) returns (uint256)"
                      }
                    },
                    "id": 2913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25294:38:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2893,
                  "id": 2914,
                  "nodeType": "Return",
                  "src": "25287:45:12"
                }
              ]
            },
            "documentation": {
              "id": 2885,
              "nodeType": "StructuredDocumentation",
              "src": "24924:137:12",
              "text": " @notice Revoke arrangement by the sponsor\n @param _policyId Policy id\n @param _node Node that will be excluded"
            },
            "functionSelector": "8d7fd2fa",
            "id": 2916,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeArrangement",
            "nameLocation": "25075:17:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2887,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "25101:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2916,
                  "src": "25093:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 2886,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "25093:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2889,
                  "mutability": "mutable",
                  "name": "_node",
                  "nameLocation": "25120:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2916,
                  "src": "25112:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25112:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25092:34:12"
            },
            "returnParameters": {
              "id": 2893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2892,
                  "mutability": "mutable",
                  "name": "refundValue",
                  "nameLocation": "25161:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2916,
                  "src": "25153:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25153:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25152:21:12"
            },
            "scope": 3682,
            "src": "25066:273:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2939,
              "nodeType": "Block",
              "src": "25634:102:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2930,
                            "name": "_policyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2919,
                            "src": "25697:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes16",
                              "typeString": "bytes16"
                            }
                          },
                          {
                            "id": 2931,
                            "name": "_node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2921,
                            "src": "25708:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes16",
                              "typeString": "bytes16"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2928,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "25680:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "25680:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25680:34:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30783435",
                            "id": 2935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "25723:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_69_by_1",
                              "typeString": "int_const 69"
                            },
                            "value": "0x45"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_69_by_1",
                              "typeString": "int_const 69"
                            }
                          ],
                          "id": 2934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "25716:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes1_$",
                            "typeString": "type(bytes1)"
                          },
                          "typeName": {
                            "id": 2933,
                            "name": "bytes1",
                            "nodeType": "ElementaryTypeName",
                            "src": "25716:6:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25716:12:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "expression": {
                        "id": 2926,
                        "name": "SignatureVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9074,
                        "src": "25651:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SignatureVerifier_$9074_$",
                          "typeString": "type(library SignatureVerifier)"
                        }
                      },
                      "id": 2927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hashEIP191",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9039,
                      "src": "25651:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes1_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory,bytes1) view returns (bytes32)"
                      }
                    },
                    "id": 2937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25651:78:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2925,
                  "id": 2938,
                  "nodeType": "Return",
                  "src": "25644:85:12"
                }
              ]
            },
            "documentation": {
              "id": 2917,
              "nodeType": "StructuredDocumentation",
              "src": "25345:193:12",
              "text": " @notice Get unsigned hash for revocation\n @param _policyId Policy id\n @param _node Node that will be excluded\n @return Revocation hash, EIP191 version 0x45 ('E')"
            },
            "functionSelector": "cbf12f2a",
            "id": 2940,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRevocationHash",
            "nameLocation": "25552:17:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2919,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "25578:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2940,
                  "src": "25570:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 2918,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "25570:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2921,
                  "mutability": "mutable",
                  "name": "_node",
                  "nameLocation": "25597:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2940,
                  "src": "25589:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25589:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25569:34:12"
            },
            "returnParameters": {
              "id": 2925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2924,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2940,
                  "src": "25625:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2923,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "25625:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25624:9:12"
            },
            "scope": 3682,
            "src": "25543:193:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2973,
              "nodeType": "Block",
              "src": "26072:197:12",
              "statements": [
                {
                  "assignments": [
                    2951
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2951,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "26090:4:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2973,
                      "src": "26082:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2950,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "26082:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2956,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2953,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2943,
                        "src": "26115:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "id": 2954,
                        "name": "_node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2945,
                        "src": "26126:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2952,
                      "name": "getRevocationHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2940,
                      "src": "26097:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes16_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bytes16,address) view returns (bytes32)"
                      }
                    },
                    "id": 2955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26097:35:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26082:50:12"
                },
                {
                  "assignments": [
                    2958
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2958,
                      "mutability": "mutable",
                      "name": "recovered",
                      "nameLocation": "26150:9:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2973,
                      "src": "26142:17:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2957,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "26142:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2964,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2961,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2951,
                        "src": "26188:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2962,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2947,
                        "src": "26194:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2959,
                        "name": "SignatureVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9074,
                        "src": "26162:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SignatureVerifier_$9074_$",
                          "typeString": "type(library SignatureVerifier)"
                        }
                      },
                      "id": 2960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8801,
                      "src": "26162:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 2963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26162:43:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26142:63:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2967,
                              "name": "_policyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2943,
                              "src": "26238:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            ],
                            "id": 2966,
                            "name": "getPolicyOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1937,
                            "src": "26223:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes16_$returns$_t_address_$",
                              "typeString": "function (bytes16) view returns (address)"
                            }
                          },
                          "id": 2968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26223:25:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2969,
                          "name": "recovered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2958,
                          "src": "26252:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "26223:38:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2965,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26215:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26215:47:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2972,
                  "nodeType": "ExpressionStatement",
                  "src": "26215:47:12"
                }
              ]
            },
            "documentation": {
              "id": 2941,
              "nodeType": "StructuredDocumentation",
              "src": "25742:223:12",
              "text": " @notice Check correctness of signature\n @param _policyId Policy id\n @param _node Node that will be excluded, zero address if whole policy will be revoked\n @param _signature Signature of owner"
            },
            "id": 2974,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkOwnerSignature",
            "nameLocation": "25979:19:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2943,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "26007:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2974,
                  "src": "25999:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 2942,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "25999:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2945,
                  "mutability": "mutable",
                  "name": "_node",
                  "nameLocation": "26026:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2974,
                  "src": "26018:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26018:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2947,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "26046:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2974,
                  "src": "26033:23:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2946,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "26033:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25998:59:12"
            },
            "returnParameters": {
              "id": 2949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26072:0:12"
            },
            "scope": 3682,
            "src": "25970:299:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2998,
              "nodeType": "Block",
              "src": "26680:121:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2987,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2977,
                        "src": "26710:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "id": 2988,
                        "name": "_node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2979,
                        "src": "26721:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2989,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2981,
                        "src": "26728:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 2986,
                      "name": "checkOwnerSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2974,
                      "src": "26690:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes16_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes16,address,bytes memory) view"
                      }
                    },
                    "id": 2990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26690:49:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2991,
                  "nodeType": "ExpressionStatement",
                  "src": "26690:49:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2993,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2977,
                        "src": "26771:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "id": 2994,
                        "name": "_node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2979,
                        "src": "26782:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 2995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26789:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2992,
                      "name": "refundInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2751,
                      "src": "26756:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes16_$_t_address_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (bytes16,address,bool) returns (uint256)"
                      }
                    },
                    "id": 2996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26756:38:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2985,
                  "id": 2997,
                  "nodeType": "Return",
                  "src": "26749:45:12"
                }
              ]
            },
            "documentation": {
              "id": 2975,
              "nodeType": "StructuredDocumentation",
              "src": "26275:272:12",
              "text": " @notice Revoke policy or arrangement using owner's signature\n @param _policyId Policy id\n @param _node Node that will be excluded, zero address if whole policy will be revoked\n @param _signature Signature of owner, EIP191 version 0x45 ('E')"
            },
            "functionSelector": "076421e8",
            "id": 2999,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revoke",
            "nameLocation": "26561:6:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2977,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "26576:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2999,
                  "src": "26568:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 2976,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "26568:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2979,
                  "mutability": "mutable",
                  "name": "_node",
                  "nameLocation": "26595:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2999,
                  "src": "26587:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26587:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2981,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "26617:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2999,
                  "src": "26602:25:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2980,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "26602:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26567:61:12"
            },
            "returnParameters": {
              "id": 2985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2984,
                  "mutability": "mutable",
                  "name": "refundValue",
                  "nameLocation": "26663:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2999,
                  "src": "26655:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2983,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26655:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26654:21:12"
            },
            "scope": 3682,
            "src": "26552:249:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3032,
              "nodeType": "Block",
              "src": "26947:194:12",
              "statements": [
                {
                  "assignments": [
                    3007
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3007,
                      "mutability": "mutable",
                      "name": "policy",
                      "nameLocation": "26972:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3032,
                      "src": "26957:21:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                        "typeString": "struct PolicyManager.Policy"
                      },
                      "typeName": {
                        "id": 3006,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3005,
                          "name": "Policy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 908,
                          "src": "26957:6:12"
                        },
                        "referencedDeclaration": 908,
                        "src": "26957:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3011,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3008,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 988,
                      "src": "26981:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$908_storage_$",
                        "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                      }
                    },
                    "id": 3010,
                    "indexExpression": {
                      "id": 3009,
                      "name": "_policyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3002,
                      "src": "26990:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "26981:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$908_storage",
                      "typeString": "struct PolicyManager.Policy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26957:43:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3013,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3007,
                              "src": "27018:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 3014,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 887,
                            "src": "27018:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 3015,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "27034:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "27034:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "27018:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3018,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3007,
                              "src": "27048:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 3019,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sponsor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 885,
                            "src": "27048:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 3020,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "27066:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "27066:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "27048:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "27018:58:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3012,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27010:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27010:67:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3025,
                  "nodeType": "ExpressionStatement",
                  "src": "27010:67:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3027,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3002,
                        "src": "27102:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "id": 3028,
                        "name": "RESERVED_NODE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "27113:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 3029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27128:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3026,
                      "name": "refundInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2751,
                      "src": "27087:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes16_$_t_address_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (bytes16,address,bool) returns (uint256)"
                      }
                    },
                    "id": 3030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27087:47:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3031,
                  "nodeType": "ExpressionStatement",
                  "src": "27087:47:12"
                }
              ]
            },
            "documentation": {
              "id": 3000,
              "nodeType": "StructuredDocumentation",
              "src": "26807:91:12",
              "text": " @notice Refund part of fee by the sponsor\n @param _policyId Policy id"
            },
            "functionSelector": "dfdecfaf",
            "id": 3033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "26912:6:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3002,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "26927:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3033,
                  "src": "26919:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3001,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "26919:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26918:19:12"
            },
            "returnParameters": {
              "id": 3004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26947:0:12"
            },
            "scope": 3682,
            "src": "26903:238:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3076,
              "nodeType": "Block",
              "src": "27387:234:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3044,
                          "name": "_node",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3038,
                          "src": "27405:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 3045,
                          "name": "RESERVED_NODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 953,
                          "src": "27414:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "27405:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3043,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27397:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27397:31:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3048,
                  "nodeType": "ExpressionStatement",
                  "src": "27397:31:12"
                },
                {
                  "assignments": [
                    3051
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3051,
                      "mutability": "mutable",
                      "name": "policy",
                      "nameLocation": "27453:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3076,
                      "src": "27438:21:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                        "typeString": "struct PolicyManager.Policy"
                      },
                      "typeName": {
                        "id": 3050,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3049,
                          "name": "Policy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 908,
                          "src": "27438:6:12"
                        },
                        "referencedDeclaration": 908,
                        "src": "27438:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3055,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3052,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 988,
                      "src": "27462:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$908_storage_$",
                        "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                      }
                    },
                    "id": 3054,
                    "indexExpression": {
                      "id": 3053,
                      "name": "_policyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3036,
                      "src": "27471:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "27462:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$908_storage",
                      "typeString": "struct PolicyManager.Policy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27438:43:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3057,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3051,
                              "src": "27499:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 3058,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 887,
                            "src": "27499:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 3059,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "27515:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "27515:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "27499:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3062,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3051,
                              "src": "27529:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 3063,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sponsor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 885,
                            "src": "27529:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 3064,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "27547:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "27547:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "27529:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "27499:58:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3056,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27491:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27491:67:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3069,
                  "nodeType": "ExpressionStatement",
                  "src": "27491:67:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3071,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3036,
                        "src": "27590:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "id": 3072,
                        "name": "_node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3038,
                        "src": "27601:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 3073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27608:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3070,
                      "name": "refundInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2751,
                      "src": "27575:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes16_$_t_address_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (bytes16,address,bool) returns (uint256)"
                      }
                    },
                    "id": 3074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27575:39:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3042,
                  "id": 3075,
                  "nodeType": "Return",
                  "src": "27568:46:12"
                }
              ]
            },
            "documentation": {
              "id": 3034,
              "nodeType": "StructuredDocumentation",
              "src": "27147:134:12",
              "text": " @notice Refund part of one node's fee by the sponsor\n @param _policyId Policy id\n @param _node Node address"
            },
            "functionSelector": "63c509d5",
            "id": 3077,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "27295:6:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3036,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "27310:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "27302:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3035,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "27302:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3038,
                  "mutability": "mutable",
                  "name": "_node",
                  "nameLocation": "27329:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "27321:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27321:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27301:34:12"
            },
            "returnParameters": {
              "id": 3042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3041,
                  "mutability": "mutable",
                  "name": "refundValue",
                  "nameLocation": "27370:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "27362:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27362:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27361:21:12"
            },
            "scope": 3682,
            "src": "27286:335:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3090,
              "nodeType": "Block",
              "src": "27821:78:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3086,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3080,
                        "src": "27867:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "id": 3087,
                        "name": "RESERVED_NODE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "27878:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3085,
                      "name": "calculateRefundValueInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2860,
                      "src": "27838:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes16_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (bytes16,address) view returns (uint256)"
                      }
                    },
                    "id": 3088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27838:54:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3084,
                  "id": 3089,
                  "nodeType": "Return",
                  "src": "27831:61:12"
                }
              ]
            },
            "documentation": {
              "id": 3078,
              "nodeType": "StructuredDocumentation",
              "src": "27627:84:12",
              "text": " @notice Calculate amount of refund\n @param _policyId Policy id"
            },
            "functionSelector": "e665830d",
            "id": 3091,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateRefundValue",
            "nameLocation": "27725:20:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3080,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "27754:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3091,
                  "src": "27746:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3079,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "27746:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27745:19:12"
            },
            "returnParameters": {
              "id": 3084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3083,
                  "mutability": "mutable",
                  "name": "refundValue",
                  "nameLocation": "27804:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3091,
                  "src": "27796:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3082,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27796:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27795:21:12"
            },
            "scope": 3682,
            "src": "27716:183:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3112,
              "nodeType": "Block",
              "src": "28138:111:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3102,
                          "name": "_node",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3096,
                          "src": "28156:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 3103,
                          "name": "RESERVED_NODE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 953,
                          "src": "28165:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "28156:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28148:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28148:31:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3106,
                  "nodeType": "ExpressionStatement",
                  "src": "28148:31:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3108,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3094,
                        "src": "28225:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "id": 3109,
                        "name": "_node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3096,
                        "src": "28236:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3107,
                      "name": "calculateRefundValueInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2860,
                      "src": "28196:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes16_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (bytes16,address) view returns (uint256)"
                      }
                    },
                    "id": 3110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28196:46:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3100,
                  "id": 3111,
                  "nodeType": "Return",
                  "src": "28189:53:12"
                }
              ]
            },
            "documentation": {
              "id": 3092,
              "nodeType": "StructuredDocumentation",
              "src": "27905:108:12",
              "text": " @notice Calculate amount of refund\n @param _policyId Policy id\n @param _node Node"
            },
            "functionSelector": "a87d40d9",
            "id": 3113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateRefundValue",
            "nameLocation": "28027:20:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3094,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "28056:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3113,
                  "src": "28048:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3093,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "28048:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3096,
                  "mutability": "mutable",
                  "name": "_node",
                  "nameLocation": "28075:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3113,
                  "src": "28067:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28067:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28047:34:12"
            },
            "returnParameters": {
              "id": 3100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3099,
                  "mutability": "mutable",
                  "name": "refundValue",
                  "nameLocation": "28121:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3113,
                  "src": "28113:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28113:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28112:21:12"
            },
            "scope": 3682,
            "src": "28018:231:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3127,
              "nodeType": "Block",
              "src": "28440:63:12",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "baseExpression": {
                          "id": 3121,
                          "name": "policies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 988,
                          "src": "28457:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$908_storage_$",
                            "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                          }
                        },
                        "id": 3123,
                        "indexExpression": {
                          "id": 3122,
                          "name": "_policyId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3116,
                          "src": "28466:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes16",
                            "typeString": "bytes16"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "28457:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage",
                          "typeString": "struct PolicyManager.Policy storage ref"
                        }
                      },
                      "id": 3124,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "arrangements",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 907,
                      "src": "28457:32:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage",
                        "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                      }
                    },
                    "id": 3125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "28457:39:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3120,
                  "id": 3126,
                  "nodeType": "Return",
                  "src": "28450:46:12"
                }
              ]
            },
            "documentation": {
              "id": 3114,
              "nodeType": "StructuredDocumentation",
              "src": "28255:98:12",
              "text": " @notice Get number of arrangements in the policy\n @param _policyId Policy id"
            },
            "functionSelector": "6bd2af57",
            "id": 3128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getArrangementsLength",
            "nameLocation": "28367:21:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3116,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "28397:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3128,
                  "src": "28389:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3115,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "28389:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28388:19:12"
            },
            "returnParameters": {
              "id": 3120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3119,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3128,
                  "src": "28431:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28431:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28430:9:12"
            },
            "scope": 3682,
            "src": "28358:145:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3156,
              "nodeType": "Block",
              "src": "28844:185:12",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3138,
                        "name": "_node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3131,
                        "src": "28901:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 3139,
                        "name": "RESERVED_NODE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "28910:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "28901:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "id": 3143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3141,
                        "name": "_period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3133,
                        "src": "28927:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "3131",
                        "id": 3142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28938:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_11_by_1",
                          "typeString": "int_const 11"
                        },
                        "value": "11"
                      },
                      "src": "28927:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "28901:39:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3148,
                  "nodeType": "IfStatement",
                  "src": "28897:79:12",
                  "trueBody": {
                    "id": 3147,
                    "nodeType": "Block",
                    "src": "28942:34:12",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3535",
                          "id": 3145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "28963:2:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_55_by_1",
                            "typeString": "int_const 55"
                          },
                          "value": "55"
                        },
                        "functionReturnParameters": 3137,
                        "id": 3146,
                        "nodeType": "Return",
                        "src": "28956:9:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 3149,
                          "name": "nodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 993,
                          "src": "28992:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$925_storage_$",
                            "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                          }
                        },
                        "id": 3151,
                        "indexExpression": {
                          "id": 3150,
                          "name": "_node",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3131,
                          "src": "28998:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "28992:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage",
                          "typeString": "struct PolicyManager.NodeInfo storage ref"
                        }
                      },
                      "id": 3152,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "feeDelta",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 924,
                      "src": "28992:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                        "typeString": "mapping(uint16 => int256)"
                      }
                    },
                    "id": 3154,
                    "indexExpression": {
                      "id": 3153,
                      "name": "_period",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3133,
                      "src": "29014:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "28992:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 3137,
                  "id": 3155,
                  "nodeType": "Return",
                  "src": "28985:37:12"
                }
              ]
            },
            "documentation": {
              "id": 3129,
              "nodeType": "StructuredDocumentation",
              "src": "28509:146:12",
              "text": " @notice Get information about staker's fee rate\n @param _node Address of staker\n @param _period Period to get fee delta"
            },
            "functionSelector": "8e81ca5a",
            "id": 3157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNodeFeeDelta",
            "nameLocation": "28669:15:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3131,
                  "mutability": "mutable",
                  "name": "_node",
                  "nameLocation": "28693:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "28685:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28685:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3133,
                  "mutability": "mutable",
                  "name": "_period",
                  "nameLocation": "28707:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "28700:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 3132,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "28700:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28684:31:12"
            },
            "returnParameters": {
              "id": 3137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3136,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "28832:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 3135,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28832:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28831:8:12"
            },
            "scope": 3682,
            "src": "28660:369:12",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3196,
              "nodeType": "Block",
              "src": "29394:230:12",
              "statements": [
                {
                  "assignments": [
                    3173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3173,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "29428:4:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3196,
                      "src": "29404:28:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                        "typeString": "struct PolicyManager.ArrangementInfo"
                      },
                      "typeName": {
                        "id": 3172,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3171,
                          "name": "ArrangementInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 881,
                          "src": "29404:15:12"
                        },
                        "referencedDeclaration": 881,
                        "src": "29404:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                          "typeString": "struct PolicyManager.ArrangementInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3180,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 3174,
                          "name": "policies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 988,
                          "src": "29435:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$908_storage_$",
                            "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                          }
                        },
                        "id": 3176,
                        "indexExpression": {
                          "id": 3175,
                          "name": "_policyId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3160,
                          "src": "29444:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes16",
                            "typeString": "bytes16"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "29435:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage",
                          "typeString": "struct PolicyManager.Policy storage ref"
                        }
                      },
                      "id": 3177,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "arrangements",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 907,
                      "src": "29435:32:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage",
                        "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                      }
                    },
                    "id": 3179,
                    "indexExpression": {
                      "id": 3178,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3162,
                      "src": "29468:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "29435:40:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage",
                      "typeString": "struct PolicyManager.ArrangementInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29404:71:12"
                },
                {
                  "expression": {
                    "id": 3184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3181,
                      "name": "node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3165,
                      "src": "29485:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3182,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3173,
                        "src": "29492:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                          "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                        }
                      },
                      "id": 3183,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "node",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 876,
                      "src": "29492:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "29485:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3185,
                  "nodeType": "ExpressionStatement",
                  "src": "29485:16:12"
                },
                {
                  "expression": {
                    "id": 3189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3186,
                      "name": "indexOfDowntimePeriods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3167,
                      "src": "29511:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3187,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3173,
                        "src": "29536:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                          "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                        }
                      },
                      "id": 3188,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "indexOfDowntimePeriods",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 878,
                      "src": "29536:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "29511:52:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3190,
                  "nodeType": "ExpressionStatement",
                  "src": "29511:52:12"
                },
                {
                  "expression": {
                    "id": 3194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3191,
                      "name": "lastRefundedPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3169,
                      "src": "29573:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3192,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3173,
                        "src": "29594:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                          "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                        }
                      },
                      "id": 3193,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastRefundedPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 880,
                      "src": "29594:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "29573:44:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 3195,
                  "nodeType": "ExpressionStatement",
                  "src": "29573:44:12"
                }
              ]
            },
            "documentation": {
              "id": 3158,
              "nodeType": "StructuredDocumentation",
              "src": "29035:65:12",
              "text": " @notice Return the information about arrangement"
            },
            "functionSelector": "d845f4fb",
            "id": 3197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getArrangementInfo",
            "nameLocation": "29114:18:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3160,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "29141:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3197,
                  "src": "29133:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3159,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "29133:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3162,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "29160:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3197,
                  "src": "29152:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29152:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29132:35:12"
            },
            "returnParameters": {
              "id": 3170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3165,
                  "mutability": "mutable",
                  "name": "node",
                  "nameLocation": "29325:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3197,
                  "src": "29317:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29317:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3167,
                  "mutability": "mutable",
                  "name": "indexOfDowntimePeriods",
                  "nameLocation": "29339:22:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3197,
                  "src": "29331:30:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29331:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3169,
                  "mutability": "mutable",
                  "name": "lastRefundedPeriod",
                  "nameLocation": "29370:18:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3197,
                  "src": "29363:25:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 3168,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "29363:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29316:73:12"
            },
            "scope": 3682,
            "src": "29105:519:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3224,
              "nodeType": "Block",
              "src": "29809:180:12",
              "statements": [
                {
                  "assignments": [
                    3209
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3209,
                      "mutability": "mutable",
                      "name": "memoryAddress",
                      "nameLocation": "29827:13:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3224,
                      "src": "29819:21:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3208,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "29819:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3222,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3211,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3200,
                        "src": "29859:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 3212,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "29868:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyManager_$3682",
                              "typeString": "contract PolicyManager"
                            }
                          },
                          "id": 3213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "policies",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 988,
                          "src": "29868:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes16_$returns$_t_bool_$_t_address_payable_$_t_address_$_t_uint128_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "function (bytes16) view external returns (bool,address payable,address,uint128,uint64,uint64,uint256,uint256,uint256,uint256,uint256)"
                          }
                        },
                        "id": 3214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "29868:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 3215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29892:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 3218,
                            "name": "_policyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3202,
                            "src": "29903:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes16",
                              "typeString": "bytes16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes16",
                              "typeString": "bytes16"
                            }
                          ],
                          "id": 3217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "29895:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 3216,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "29895:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29895:18:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 3220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29915:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3210,
                      "name": "delegateGetData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10812,
                      "src": "29843:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (address,bytes4,uint8,bytes32,bytes32) returns (bytes32)"
                      }
                    },
                    "id": 3221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29843:74:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29819:98:12"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "29936:47:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "29950:23:12",
                        "value": {
                          "name": "memoryAddress",
                          "nodeType": "YulIdentifier",
                          "src": "29960:13:12"
                        },
                        "variableNames": [
                          {
                            "name": "result",
                            "nodeType": "YulIdentifier",
                            "src": "29950:6:12"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 3209,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "29960:13:12",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3206,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "29950:6:12",
                      "valueSize": 1
                    }
                  ],
                  "id": 3223,
                  "nodeType": "InlineAssembly",
                  "src": "29927:56:12"
                }
              ]
            },
            "documentation": {
              "id": 3198,
              "nodeType": "StructuredDocumentation",
              "src": "29631:58:12",
              "text": " @dev Get Policy structure by delegatecall"
            },
            "id": 3225,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateGetPolicy",
            "nameLocation": "29703:17:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3200,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "29729:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3225,
                  "src": "29721:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29721:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3202,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "29746:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3225,
                  "src": "29738:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3201,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "29738:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29720:36:12"
            },
            "returnParameters": {
              "id": 3207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3206,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "29797:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3225,
                  "src": "29783:20:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Policy_$908_memory_ptr",
                    "typeString": "struct PolicyManager.Policy"
                  },
                  "typeName": {
                    "id": 3205,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3204,
                      "name": "Policy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 908,
                      "src": "29783:6:12"
                    },
                    "referencedDeclaration": 908,
                    "src": "29783:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                      "typeString": "struct PolicyManager.Policy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29782:22:12"
            },
            "scope": 3682,
            "src": "29694:295:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3257,
              "nodeType": "Block",
              "src": "30216:217:12",
              "statements": [
                {
                  "assignments": [
                    3239
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3239,
                      "mutability": "mutable",
                      "name": "memoryAddress",
                      "nameLocation": "30234:13:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3257,
                      "src": "30226:21:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3238,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "30226:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3255,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3241,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3228,
                        "src": "30279:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 3242,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "30288:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyManager_$3682",
                              "typeString": "contract PolicyManager"
                            }
                          },
                          "id": 3243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getArrangementInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3197,
                          "src": "30288:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes16_$_t_uint256_$returns$_t_address_$_t_uint256_$_t_uint16_$",
                            "typeString": "function (bytes16,uint256) view external returns (address,uint256,uint16)"
                          }
                        },
                        "id": 3244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "30288:32:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 3245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30322:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "arguments": [
                          {
                            "id": 3248,
                            "name": "_policyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3230,
                            "src": "30333:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes16",
                              "typeString": "bytes16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes16",
                              "typeString": "bytes16"
                            }
                          ],
                          "id": 3247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "30325:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 3246,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "30325:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30325:18:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3252,
                            "name": "_index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3232,
                            "src": "30353:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "30345:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 3250,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "30345:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30345:15:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3240,
                      "name": "delegateGetData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10812,
                      "src": "30250:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (address,bytes4,uint8,bytes32,bytes32) returns (bytes32)"
                      }
                    },
                    "id": 3254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30250:111:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30226:135:12"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "30380:47:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "30394:23:12",
                        "value": {
                          "name": "memoryAddress",
                          "nodeType": "YulIdentifier",
                          "src": "30404:13:12"
                        },
                        "variableNames": [
                          {
                            "name": "result",
                            "nodeType": "YulIdentifier",
                            "src": "30394:6:12"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 3239,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "30404:13:12",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3236,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "30394:6:12",
                      "valueSize": 1
                    }
                  ],
                  "id": 3256,
                  "nodeType": "InlineAssembly",
                  "src": "30371:56:12"
                }
              ]
            },
            "documentation": {
              "id": 3226,
              "nodeType": "StructuredDocumentation",
              "src": "29995:67:12",
              "text": " @dev Get ArrangementInfo structure by delegatecall"
            },
            "id": 3258,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateGetArrangementInfo",
            "nameLocation": "30076:26:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3228,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "30111:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3258,
                  "src": "30103:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30103:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3230,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "30128:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3258,
                  "src": "30120:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 3229,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "30120:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3232,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "30147:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3258,
                  "src": "30139:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3231,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30139:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30102:52:12"
            },
            "returnParameters": {
              "id": 3237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3236,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "30204:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3258,
                  "src": "30181:29:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ArrangementInfo_$881_memory_ptr",
                    "typeString": "struct PolicyManager.ArrangementInfo"
                  },
                  "typeName": {
                    "id": 3235,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3234,
                      "name": "ArrangementInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 881,
                      "src": "30181:15:12"
                    },
                    "referencedDeclaration": 881,
                    "src": "30181:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                      "typeString": "struct PolicyManager.ArrangementInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30180:31:12"
            },
            "scope": 3682,
            "src": "30067:366:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3291,
              "nodeType": "Block",
              "src": "30625:191:12",
              "statements": [
                {
                  "assignments": [
                    3270
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3270,
                      "mutability": "mutable",
                      "name": "memoryAddress",
                      "nameLocation": "30643:13:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3291,
                      "src": "30635:21:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3269,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "30635:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3289,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3272,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3261,
                        "src": "30675:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 3273,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "30684:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyManager_$3682",
                              "typeString": "contract PolicyManager"
                            }
                          },
                          "id": 3274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nodes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 993,
                          "src": "30684:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint128_$_t_uint16_$_t_uint256_$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint128,uint16,uint256,uint256)"
                          }
                        },
                        "id": 3275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "30684:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 3276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30705:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3283,
                                    "name": "_node",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3263,
                                    "src": "30732:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3282,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "30724:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 3281,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "30724:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "30724:14:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 3280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "30716:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 3279,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "30716:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30716:23:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "30708:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 3277,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "30708:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30708:32:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 3287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30742:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3271,
                      "name": "delegateGetData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10812,
                      "src": "30659:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (address,bytes4,uint8,bytes32,bytes32) returns (bytes32)"
                      }
                    },
                    "id": 3288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30659:85:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30635:109:12"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "30763:47:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "30777:23:12",
                        "value": {
                          "name": "memoryAddress",
                          "nodeType": "YulIdentifier",
                          "src": "30787:13:12"
                        },
                        "variableNames": [
                          {
                            "name": "result",
                            "nodeType": "YulIdentifier",
                            "src": "30777:6:12"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 3270,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "30787:13:12",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3267,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "30777:6:12",
                      "valueSize": 1
                    }
                  ],
                  "id": 3290,
                  "nodeType": "InlineAssembly",
                  "src": "30754:56:12"
                }
              ]
            },
            "documentation": {
              "id": 3259,
              "nodeType": "StructuredDocumentation",
              "src": "30439:60:12",
              "text": " @dev Get NodeInfo structure by delegatecall"
            },
            "id": 3292,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateGetNodeInfo",
            "nameLocation": "30513:19:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3261,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "30541:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3292,
                  "src": "30533:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30533:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3263,
                  "mutability": "mutable",
                  "name": "_node",
                  "nameLocation": "30558:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3292,
                  "src": "30550:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30550:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30532:32:12"
            },
            "returnParameters": {
              "id": 3268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3267,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "30613:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3292,
                  "src": "30591:28:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MemoryNodeInfo_$934_memory_ptr",
                    "typeString": "struct PolicyManager.MemoryNodeInfo"
                  },
                  "typeName": {
                    "id": 3266,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3265,
                      "name": "MemoryNodeInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 934,
                      "src": "30591:14:12"
                    },
                    "referencedDeclaration": 934,
                    "src": "30591:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MemoryNodeInfo_$934_storage_ptr",
                      "typeString": "struct PolicyManager.MemoryNodeInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30590:30:12"
            },
            "scope": 3682,
            "src": "30504:312:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3314,
              "nodeType": "Block",
              "src": "30980:167:12",
              "statements": [
                {
                  "assignments": [
                    3302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3302,
                      "mutability": "mutable",
                      "name": "memoryAddress",
                      "nameLocation": "30998:13:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3314,
                      "src": "30990:21:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3301,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "30990:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3312,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3304,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3295,
                        "src": "31030:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 3305,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "31039:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyManager_$3682",
                              "typeString": "contract PolicyManager"
                            }
                          },
                          "id": 3306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeRateRange",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 996,
                          "src": "31039:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                            "typeString": "function () view external returns (uint128,uint128,uint128)"
                          }
                        },
                        "id": 3307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "31039:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 3308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31067:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31070:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31073:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3303,
                      "name": "delegateGetData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10812,
                      "src": "31014:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (address,bytes4,uint8,bytes32,bytes32) returns (bytes32)"
                      }
                    },
                    "id": 3311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31014:61:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30990:85:12"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "31094:47:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "31108:23:12",
                        "value": {
                          "name": "memoryAddress",
                          "nodeType": "YulIdentifier",
                          "src": "31118:13:12"
                        },
                        "variableNames": [
                          {
                            "name": "result",
                            "nodeType": "YulIdentifier",
                            "src": "31108:6:12"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 3302,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "31118:13:12",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3299,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "31108:6:12",
                      "valueSize": 1
                    }
                  ],
                  "id": 3313,
                  "nodeType": "InlineAssembly",
                  "src": "31085:56:12"
                }
              ]
            },
            "documentation": {
              "id": 3293,
              "nodeType": "StructuredDocumentation",
              "src": "30822:64:12",
              "text": " @dev Get feeRateRange structure by delegatecall"
            },
            "id": 3315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateGetFeeRateRange",
            "nameLocation": "30900:23:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3295,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "30932:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3315,
                  "src": "30924:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3294,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30924:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30923:17:12"
            },
            "returnParameters": {
              "id": 3300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3299,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "30972:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3315,
                  "src": "30959:19:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Range_$941_memory_ptr",
                    "typeString": "struct PolicyManager.Range"
                  },
                  "typeName": {
                    "id": 3298,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3297,
                      "name": "Range",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 941,
                      "src": "30959:5:12"
                    },
                    "referencedDeclaration": 941,
                    "src": "30959:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Range_$941_storage_ptr",
                      "typeString": "struct PolicyManager.Range"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30958:21:12"
            },
            "scope": 3682,
            "src": "30891:256:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              10779
            ],
            "body": {
              "id": 3552,
              "nodeType": "Block",
              "src": "31315:2173:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3325,
                        "name": "_testTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3318,
                        "src": "31343:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3322,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "31325:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PolicyManager_$3682_$",
                          "typeString": "type(contract super PolicyManager)"
                        }
                      },
                      "id": 3324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verifyState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10779,
                      "src": "31325:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31325:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3327,
                  "nodeType": "ExpressionStatement",
                  "src": "31325:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 3339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3332,
                                  "name": "_testTarget",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3318,
                                  "src": "31392:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 3333,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "31405:4:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PolicyManager_$3682",
                                        "typeString": "contract PolicyManager"
                                      }
                                    },
                                    "id": 3334,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "resetTimestamp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 998,
                                    "src": "31405:19:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint64_$",
                                      "typeString": "function () view external returns (uint64)"
                                    }
                                  },
                                  "id": 3335,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "31405:28:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "id": 3331,
                                "name": "delegateGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  10834,
                                  10858,
                                  10884
                                ],
                                "referencedDeclaration": 10834,
                                "src": "31380:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$_t_uint256_$",
                                  "typeString": "function (address,bytes4) returns (uint256)"
                                }
                              },
                              "id": 3336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "31380:54:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "31373:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 3329,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "31373:6:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31373:62:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3338,
                          "name": "resetTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 998,
                          "src": "31439:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "31373:80:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "31365:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31365:89:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3341,
                  "nodeType": "ExpressionStatement",
                  "src": "31365:89:12"
                },
                {
                  "assignments": [
                    3344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3344,
                      "mutability": "mutable",
                      "name": "rangeToCheck",
                      "nameLocation": "31478:12:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3552,
                      "src": "31465:25:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Range_$941_memory_ptr",
                        "typeString": "struct PolicyManager.Range"
                      },
                      "typeName": {
                        "id": 3343,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3342,
                          "name": "Range",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 941,
                          "src": "31465:5:12"
                        },
                        "referencedDeclaration": 941,
                        "src": "31465:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Range_$941_storage_ptr",
                          "typeString": "struct PolicyManager.Range"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3348,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3346,
                        "name": "_testTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3318,
                        "src": "31517:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3345,
                      "name": "delegateGetFeeRateRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3315,
                      "src": "31493:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_struct$_Range_$941_memory_ptr_$",
                        "typeString": "function (address) returns (struct PolicyManager.Range memory)"
                      }
                    },
                    "id": 3347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31493:36:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Range_$941_memory_ptr",
                      "typeString": "struct PolicyManager.Range memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31465:64:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 3354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3350,
                                "name": "feeRateRange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 996,
                                "src": "31547:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Range_$941_storage",
                                  "typeString": "struct PolicyManager.Range storage ref"
                                }
                              },
                              "id": 3351,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "min",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 936,
                              "src": "31547:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 3352,
                                "name": "rangeToCheck",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3344,
                                "src": "31567:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Range_$941_memory_ptr",
                                  "typeString": "struct PolicyManager.Range memory"
                                }
                              },
                              "id": 3353,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "min",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 936,
                              "src": "31567:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "31547:36:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 3359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3355,
                                "name": "feeRateRange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 996,
                                "src": "31599:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Range_$941_storage",
                                  "typeString": "struct PolicyManager.Range storage ref"
                                }
                              },
                              "id": 3356,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "defaultValue",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 938,
                              "src": "31599:25:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 3357,
                                "name": "rangeToCheck",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3344,
                                "src": "31628:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Range_$941_memory_ptr",
                                  "typeString": "struct PolicyManager.Range memory"
                                }
                              },
                              "id": 3358,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "defaultValue",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 938,
                              "src": "31628:25:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "31599:54:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "31547:106:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 3365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3361,
                              "name": "feeRateRange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 996,
                              "src": "31669:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Range_$941_storage",
                                "typeString": "struct PolicyManager.Range storage ref"
                              }
                            },
                            "id": 3362,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 940,
                            "src": "31669:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 3363,
                              "name": "rangeToCheck",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3344,
                              "src": "31689:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Range_$941_memory_ptr",
                                "typeString": "struct PolicyManager.Range memory"
                              }
                            },
                            "id": 3364,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 940,
                            "src": "31689:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "31669:36:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "31547:158:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "31539:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31539:167:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3368,
                  "nodeType": "ExpressionStatement",
                  "src": "31539:167:12"
                },
                {
                  "assignments": [
                    3371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3371,
                      "mutability": "mutable",
                      "name": "policy",
                      "nameLocation": "31732:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3552,
                      "src": "31717:21:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                        "typeString": "struct PolicyManager.Policy"
                      },
                      "typeName": {
                        "id": 3370,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3369,
                          "name": "Policy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 908,
                          "src": "31717:6:12"
                        },
                        "referencedDeclaration": 908,
                        "src": "31717:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3375,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3372,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 988,
                      "src": "31741:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$908_storage_$",
                        "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                      }
                    },
                    "id": 3374,
                    "indexExpression": {
                      "id": 3373,
                      "name": "RESERVED_POLICY_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 947,
                      "src": "31750:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "31741:28:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$908_storage",
                      "typeString": "struct PolicyManager.Policy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31717:52:12"
                },
                {
                  "assignments": [
                    3378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3378,
                      "mutability": "mutable",
                      "name": "policyToCheck",
                      "nameLocation": "31793:13:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3552,
                      "src": "31779:27:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$908_memory_ptr",
                        "typeString": "struct PolicyManager.Policy"
                      },
                      "typeName": {
                        "id": 3377,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3376,
                          "name": "Policy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 908,
                          "src": "31779:6:12"
                        },
                        "referencedDeclaration": 908,
                        "src": "31779:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3383,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3380,
                        "name": "_testTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3318,
                        "src": "31827:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3381,
                        "name": "RESERVED_POLICY_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "31840:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      ],
                      "id": 3379,
                      "name": "delegateGetPolicy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3225,
                      "src": "31809:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes16_$returns$_t_struct$_Policy_$908_memory_ptr_$",
                        "typeString": "function (address,bytes16) returns (struct PolicyManager.Policy memory)"
                      }
                    },
                    "id": 3382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31809:50:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$908_memory_ptr",
                      "typeString": "struct PolicyManager.Policy memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31779:80:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 3407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 3395,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "id": 3389,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 3385,
                                      "name": "policyToCheck",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3378,
                                      "src": "31877:13:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Policy_$908_memory_ptr",
                                        "typeString": "struct PolicyManager.Policy memory"
                                      }
                                    },
                                    "id": 3386,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sponsor",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 885,
                                    "src": "31877:21:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 3387,
                                      "name": "policy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3371,
                                      "src": "31902:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                        "typeString": "struct PolicyManager.Policy storage pointer"
                                      }
                                    },
                                    "id": 3388,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sponsor",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 885,
                                    "src": "31902:14:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "src": "31877:39:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 3394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 3390,
                                      "name": "policyToCheck",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3378,
                                      "src": "31932:13:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Policy_$908_memory_ptr",
                                        "typeString": "struct PolicyManager.Policy memory"
                                      }
                                    },
                                    "id": 3391,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "owner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 887,
                                    "src": "31932:19:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 3392,
                                      "name": "policy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3371,
                                      "src": "31955:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                        "typeString": "struct PolicyManager.Policy storage pointer"
                                      }
                                    },
                                    "id": 3393,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "owner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 887,
                                    "src": "31955:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "31932:35:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "31877:90:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 3400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3396,
                                    "name": "policyToCheck",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3378,
                                    "src": "31983:13:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$908_memory_ptr",
                                      "typeString": "struct PolicyManager.Policy memory"
                                    }
                                  },
                                  "id": 3397,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "feeRate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 889,
                                  "src": "31983:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 3398,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3371,
                                    "src": "32008:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                      "typeString": "struct PolicyManager.Policy storage pointer"
                                    }
                                  },
                                  "id": 3399,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "feeRate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 889,
                                  "src": "32008:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "31983:39:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "31877:145:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              "id": 3406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3402,
                                  "name": "policyToCheck",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3378,
                                  "src": "32038:13:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Policy_$908_memory_ptr",
                                    "typeString": "struct PolicyManager.Policy memory"
                                  }
                                },
                                "id": 3403,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 891,
                                "src": "32038:28:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 3404,
                                  "name": "policy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3371,
                                  "src": "32070:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                    "typeString": "struct PolicyManager.Policy storage pointer"
                                  }
                                },
                                "id": 3405,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 891,
                                "src": "32070:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "src": "32038:53:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "31877:214:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 3412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3408,
                                "name": "policyToCheck",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3378,
                                "src": "32107:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Policy_$908_memory_ptr",
                                  "typeString": "struct PolicyManager.Policy memory"
                                }
                              },
                              "id": 3409,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 893,
                              "src": "32107:26:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 3410,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3371,
                                "src": "32137:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                  "typeString": "struct PolicyManager.Policy storage pointer"
                                }
                              },
                              "id": 3411,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 893,
                              "src": "32137:19:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "src": "32107:49:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "31877:279:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3414,
                              "name": "policyToCheck",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3378,
                              "src": "32172:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$908_memory_ptr",
                                "typeString": "struct PolicyManager.Policy memory"
                              }
                            },
                            "id": 3415,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "disabled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 883,
                            "src": "32172:22:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 3416,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3371,
                              "src": "32198:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 3417,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "disabled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 883,
                            "src": "32198:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "32172:41:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "31877:336:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "31869:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31869:345:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3421,
                  "nodeType": "ExpressionStatement",
                  "src": "31869:345:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3424,
                              "name": "_testTarget",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3318,
                              "src": "32245:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 3425,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "32258:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PolicyManager_$3682",
                                    "typeString": "contract PolicyManager"
                                  }
                                },
                                "id": 3426,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getArrangementsLength",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3128,
                                "src": "32258:26:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes16_$returns$_t_uint256_$",
                                  "typeString": "function (bytes16) view external returns (uint256)"
                                }
                              },
                              "id": 3427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "32258:35:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "id": 3428,
                              "name": "RESERVED_POLICY_ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 947,
                              "src": "32295:18:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            ],
                            "id": 3423,
                            "name": "delegateGet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              10834,
                              10858,
                              10884
                            ],
                            "referencedDeclaration": 10858,
                            "src": "32233:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$_t_bytes32_$returns$_t_uint256_$",
                              "typeString": "function (address,bytes4,bytes32) returns (uint256)"
                            }
                          },
                          "id": 3429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32233:81:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 3430,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3371,
                              "src": "32330:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 3431,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "arrangements",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 907,
                            "src": "32330:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage",
                              "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                            }
                          },
                          "id": 3432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "32330:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "32233:123:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3422,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "32225:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32225:132:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3435,
                  "nodeType": "ExpressionStatement",
                  "src": "32225:132:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 3436,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3371,
                          "src": "32371:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                            "typeString": "struct PolicyManager.Policy storage pointer"
                          }
                        },
                        "id": 3437,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arrangements",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 907,
                        "src": "32371:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage",
                          "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                        }
                      },
                      "id": 3438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "32371:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "32400:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "32371:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3479,
                  "nodeType": "IfStatement",
                  "src": "32367:514:12",
                  "trueBody": {
                    "id": 3478,
                    "nodeType": "Block",
                    "src": "32403:478:12",
                    "statements": [
                      {
                        "assignments": [
                          3443
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3443,
                            "mutability": "mutable",
                            "name": "arrangement",
                            "nameLocation": "32441:11:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 3478,
                            "src": "32417:35:12",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                              "typeString": "struct PolicyManager.ArrangementInfo"
                            },
                            "typeName": {
                              "id": 3442,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3441,
                                "name": "ArrangementInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 881,
                                "src": "32417:15:12"
                              },
                              "referencedDeclaration": 881,
                              "src": "32417:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                "typeString": "struct PolicyManager.ArrangementInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3448,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 3444,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3371,
                              "src": "32455:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                                "typeString": "struct PolicyManager.Policy storage pointer"
                              }
                            },
                            "id": 3445,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "arrangements",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 907,
                            "src": "32455:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage",
                              "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                            }
                          },
                          "id": 3447,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 3446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "32475:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "32455:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage",
                            "typeString": "struct PolicyManager.ArrangementInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "32417:60:12"
                      },
                      {
                        "assignments": [
                          3451
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3451,
                            "mutability": "mutable",
                            "name": "arrangementToCheck",
                            "nameLocation": "32514:18:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 3478,
                            "src": "32491:41:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ArrangementInfo_$881_memory_ptr",
                              "typeString": "struct PolicyManager.ArrangementInfo"
                            },
                            "typeName": {
                              "id": 3450,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3449,
                                "name": "ArrangementInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 881,
                                "src": "32491:15:12"
                              },
                              "referencedDeclaration": 881,
                              "src": "32491:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                "typeString": "struct PolicyManager.ArrangementInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3457,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3453,
                              "name": "_testTarget",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3318,
                              "src": "32579:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3454,
                              "name": "RESERVED_POLICY_ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 947,
                              "src": "32592:18:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 3455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "32612:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3452,
                            "name": "delegateGetArrangementInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3258,
                            "src": "32535:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes16_$_t_uint256_$returns$_t_struct$_ArrangementInfo_$881_memory_ptr_$",
                              "typeString": "function (address,bytes16,uint256) returns (struct PolicyManager.ArrangementInfo memory)"
                            }
                          },
                          "id": 3456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32535:79:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ArrangementInfo_$881_memory_ptr",
                            "typeString": "struct PolicyManager.ArrangementInfo memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "32491:123:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 3469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 3463,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 3459,
                                      "name": "arrangementToCheck",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3451,
                                      "src": "32636:18:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ArrangementInfo_$881_memory_ptr",
                                        "typeString": "struct PolicyManager.ArrangementInfo memory"
                                      }
                                    },
                                    "id": 3460,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "node",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 876,
                                    "src": "32636:23:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 3461,
                                      "name": "arrangement",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3443,
                                      "src": "32663:11:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                        "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                      }
                                    },
                                    "id": 3462,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "node",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 876,
                                    "src": "32663:16:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "32636:43:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3468,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 3464,
                                      "name": "arrangementToCheck",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3451,
                                      "src": "32699:18:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ArrangementInfo_$881_memory_ptr",
                                        "typeString": "struct PolicyManager.ArrangementInfo memory"
                                      }
                                    },
                                    "id": 3465,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "indexOfDowntimePeriods",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 878,
                                    "src": "32699:41:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 3466,
                                      "name": "arrangement",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3443,
                                      "src": "32744:11:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                        "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                      }
                                    },
                                    "id": 3467,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "indexOfDowntimePeriods",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 878,
                                    "src": "32744:34:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "32699:79:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "32636:142:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                },
                                "id": 3474,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3470,
                                    "name": "arrangementToCheck",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3451,
                                    "src": "32798:18:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ArrangementInfo_$881_memory_ptr",
                                      "typeString": "struct PolicyManager.ArrangementInfo memory"
                                    }
                                  },
                                  "id": 3471,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lastRefundedPeriod",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 880,
                                  "src": "32798:37:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 3472,
                                    "name": "arrangement",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3443,
                                    "src": "32839:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ArrangementInfo_$881_storage_ptr",
                                      "typeString": "struct PolicyManager.ArrangementInfo storage pointer"
                                    }
                                  },
                                  "id": 3473,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lastRefundedPeriod",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 880,
                                  "src": "32839:30:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "32798:71:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "32636:233:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 3458,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "32628:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 3476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32628:242:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3477,
                        "nodeType": "ExpressionStatement",
                        "src": "32628:242:12"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3482,
                      "mutability": "mutable",
                      "name": "nodeInfo",
                      "nameLocation": "32908:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3552,
                      "src": "32891:25:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo"
                      },
                      "typeName": {
                        "id": 3481,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3480,
                          "name": "NodeInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 925,
                          "src": "32891:8:12"
                        },
                        "referencedDeclaration": 925,
                        "src": "32891:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3486,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3483,
                      "name": "nodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 993,
                      "src": "32919:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$925_storage_$",
                        "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                      }
                    },
                    "id": 3485,
                    "indexExpression": {
                      "id": 3484,
                      "name": "RESERVED_NODE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 953,
                      "src": "32925:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "32919:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$925_storage",
                      "typeString": "struct PolicyManager.NodeInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32891:48:12"
                },
                {
                  "assignments": [
                    3489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3489,
                      "mutability": "mutable",
                      "name": "nodeInfoToCheck",
                      "nameLocation": "32971:15:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3552,
                      "src": "32949:37:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MemoryNodeInfo_$934_memory_ptr",
                        "typeString": "struct PolicyManager.MemoryNodeInfo"
                      },
                      "typeName": {
                        "id": 3488,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3487,
                          "name": "MemoryNodeInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 934,
                          "src": "32949:14:12"
                        },
                        "referencedDeclaration": 934,
                        "src": "32949:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemoryNodeInfo_$934_storage_ptr",
                          "typeString": "struct PolicyManager.MemoryNodeInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3494,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3491,
                        "name": "_testTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3318,
                        "src": "33009:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3492,
                        "name": "RESERVED_NODE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "33022:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3490,
                      "name": "delegateGetNodeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3292,
                      "src": "32989:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_struct$_MemoryNodeInfo_$934_memory_ptr_$",
                        "typeString": "function (address,address) returns (struct PolicyManager.MemoryNodeInfo memory)"
                      }
                    },
                    "id": 3493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32989:47:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MemoryNodeInfo_$934_memory_ptr",
                      "typeString": "struct PolicyManager.MemoryNodeInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32949:87:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 3506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 3500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3496,
                                  "name": "nodeInfoToCheck",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3489,
                                  "src": "33054:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MemoryNodeInfo_$934_memory_ptr",
                                    "typeString": "struct PolicyManager.MemoryNodeInfo memory"
                                  }
                                },
                                "id": 3497,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "fee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 927,
                                "src": "33054:19:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 3498,
                                  "name": "nodeInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3482,
                                  "src": "33077:8:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                    "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                  }
                                },
                                "id": 3499,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "fee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 910,
                                "src": "33077:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "src": "33054:35:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3501,
                                  "name": "nodeInfoToCheck",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3489,
                                  "src": "33105:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MemoryNodeInfo_$934_memory_ptr",
                                    "typeString": "struct PolicyManager.MemoryNodeInfo memory"
                                  }
                                },
                                "id": 3502,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "feeRate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 931,
                                "src": "33105:23:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 3503,
                                  "name": "nodeInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3482,
                                  "src": "33132:8:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                    "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                  }
                                },
                                "id": 3504,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "feeRate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 914,
                                "src": "33132:16:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "33105:43:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "33054:94:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 3511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3507,
                                "name": "nodeInfoToCheck",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3489,
                                "src": "33164:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MemoryNodeInfo_$934_memory_ptr",
                                  "typeString": "struct PolicyManager.MemoryNodeInfo memory"
                                }
                              },
                              "id": 3508,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "previousFeePeriod",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 929,
                              "src": "33164:33:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 3509,
                                "name": "nodeInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3482,
                                "src": "33201:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                  "typeString": "struct PolicyManager.NodeInfo storage pointer"
                                }
                              },
                              "id": 3510,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "previousFeePeriod",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 912,
                              "src": "33201:26:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "src": "33164:63:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "33054:173:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3513,
                              "name": "nodeInfoToCheck",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3489,
                              "src": "33243:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MemoryNodeInfo_$934_memory_ptr",
                                "typeString": "struct PolicyManager.MemoryNodeInfo memory"
                              }
                            },
                            "id": 3514,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "minFeeRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 933,
                            "src": "33243:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 3515,
                              "name": "nodeInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3482,
                              "src": "33273:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                                "typeString": "struct PolicyManager.NodeInfo storage pointer"
                              }
                            },
                            "id": 3516,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "minFeeRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 916,
                            "src": "33273:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "33243:49:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "33054:238:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3495,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "33046:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33046:247:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3520,
                  "nodeType": "ExpressionStatement",
                  "src": "33046:247:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 3549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3525,
                                  "name": "_testTarget",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3318,
                                  "src": "33331:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 3526,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "33344:4:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PolicyManager_$3682",
                                        "typeString": "contract PolicyManager"
                                      }
                                    },
                                    "id": 3527,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getNodeFeeDelta",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3157,
                                    "src": "33344:20:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$_t_uint16_$returns$_t_int256_$",
                                      "typeString": "function (address,uint16) view external returns (int256)"
                                    }
                                  },
                                  "id": 3528,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "33344:29:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 3533,
                                          "name": "RESERVED_NODE",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 953,
                                          "src": "33403:13:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 3532,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "33395:7:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes20_$",
                                          "typeString": "type(bytes20)"
                                        },
                                        "typeName": {
                                          "id": 3531,
                                          "name": "bytes20",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "33395:7:12",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3534,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "33395:22:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes20",
                                        "typeString": "bytes20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes20",
                                        "typeString": "bytes20"
                                      }
                                    ],
                                    "id": 3530,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "33387:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 3529,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "33387:7:12",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3535,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "33387:31:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "3131",
                                          "id": 3540,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "33436:2:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_11_by_1",
                                            "typeString": "int_const 11"
                                          },
                                          "value": "11"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_11_by_1",
                                            "typeString": "int_const 11"
                                          }
                                        ],
                                        "id": 3539,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "33428:7:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 3538,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "33428:7:12",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3541,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "33428:11:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 3537,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "33420:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 3536,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "33420:7:12",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3542,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "33420:20:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 3524,
                                "name": "delegateGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  10834,
                                  10858,
                                  10884
                                ],
                                "referencedDeclaration": 10884,
                                "src": "33319:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$_t_bytes32_$_t_bytes32_$returns$_t_uint256_$",
                                  "typeString": "function (address,bytes4,bytes32,bytes32) returns (uint256)"
                                }
                              },
                              "id": 3543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "33319:122:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "33312:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 3522,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "33312:6:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33312:130:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3546,
                              "name": "RESERVED_NODE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 953,
                              "src": "33462:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "3131",
                              "id": 3547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "33477:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_11_by_1",
                                "typeString": "int_const 11"
                              },
                              "value": "11"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_11_by_1",
                                "typeString": "int_const 11"
                              }
                            ],
                            "id": 3545,
                            "name": "getNodeFeeDelta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3157,
                            "src": "33446:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint16_$returns$_t_int256_$",
                              "typeString": "function (address,uint16) view returns (int256)"
                            }
                          },
                          "id": 3548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33446:34:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "33312:168:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3521,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "33304:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33304:177:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3551,
                  "nodeType": "ExpressionStatement",
                  "src": "33304:177:12"
                }
              ]
            },
            "documentation": {
              "id": 3316,
              "nodeType": "StructuredDocumentation",
              "src": "31153:91:12",
              "text": "@dev the `onlyWhileUpgrading` modifier works through a call to the parent `verifyState`"
            },
            "functionSelector": "b9626d21",
            "id": 3553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyState",
            "nameLocation": "31258:11:12",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3320,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "31298:8:12"
            },
            "parameters": {
              "id": 3319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3318,
                  "mutability": "mutable",
                  "name": "_testTarget",
                  "nameLocation": "31278:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3553,
                  "src": "31270:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "31270:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31269:21:12"
            },
            "returnParameters": {
              "id": 3321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31315:0:12"
            },
            "scope": 3682,
            "src": "31249:2239:12",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10794
            ],
            "body": {
              "id": 3680,
              "nodeType": "Block",
              "src": "33656:802:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3563,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3556,
                        "src": "33686:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3560,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "33666:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PolicyManager_$3682_$",
                          "typeString": "type(contract super PolicyManager)"
                        }
                      },
                      "id": 3562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finishUpgrade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10794,
                      "src": "33666:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33666:28:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3565,
                  "nodeType": "ExpressionStatement",
                  "src": "33666:28:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 3568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3566,
                      "name": "resetTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "33709:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "33727:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "33709:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3578,
                  "nodeType": "IfStatement",
                  "src": "33705:90:12",
                  "trueBody": {
                    "id": 3577,
                    "nodeType": "Block",
                    "src": "33730:65:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 3575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3569,
                            "name": "resetTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 998,
                            "src": "33744:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3572,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "33768:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "33768:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "33761:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 3570,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "33761:6:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "33761:23:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "33744:40:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 3576,
                        "nodeType": "ExpressionStatement",
                        "src": "33744:40:12"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3581
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3581,
                      "mutability": "mutable",
                      "name": "policy",
                      "nameLocation": "33899:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3680,
                      "src": "33884:21:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                        "typeString": "struct PolicyManager.Policy"
                      },
                      "typeName": {
                        "id": 3580,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3579,
                          "name": "Policy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 908,
                          "src": "33884:6:12"
                        },
                        "referencedDeclaration": 908,
                        "src": "33884:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3585,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3582,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 988,
                      "src": "33908:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$908_storage_$",
                        "typeString": "mapping(bytes16 => struct PolicyManager.Policy storage ref)"
                      }
                    },
                    "id": 3584,
                    "indexExpression": {
                      "id": 3583,
                      "name": "RESERVED_POLICY_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 947,
                      "src": "33917:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "33908:28:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$908_storage",
                      "typeString": "struct PolicyManager.Policy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33884:52:12"
                },
                {
                  "expression": {
                    "id": 3594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3586,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3581,
                        "src": "33946:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 3588,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sponsor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 885,
                      "src": "33946:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3591,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "33971:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "33971:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "33963:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 3589,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "33963:8:12",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "33963:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "33946:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3595,
                  "nodeType": "ExpressionStatement",
                  "src": "33946:36:12"
                },
                {
                  "expression": {
                    "id": 3603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3596,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3581,
                        "src": "33992:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 3598,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 887,
                      "src": "33992:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3601,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "34015:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PolicyManager_$3682",
                            "typeString": "contract PolicyManager"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PolicyManager_$3682",
                            "typeString": "contract PolicyManager"
                          }
                        ],
                        "id": 3600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "34007:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3599,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "34007:7:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "34007:13:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "33992:28:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3604,
                  "nodeType": "ExpressionStatement",
                  "src": "33992:28:12"
                },
                {
                  "expression": {
                    "id": 3609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3605,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3581,
                        "src": "34030:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 3607,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "startTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 891,
                      "src": "34030:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "34054:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "34030:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 3610,
                  "nodeType": "ExpressionStatement",
                  "src": "34030:25:12"
                },
                {
                  "expression": {
                    "id": 3615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3611,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3581,
                        "src": "34065:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 3613,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 893,
                      "src": "34065:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 3614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "34087:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "34065:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 3616,
                  "nodeType": "ExpressionStatement",
                  "src": "34065:23:12"
                },
                {
                  "expression": {
                    "id": 3621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3617,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3581,
                        "src": "34098:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 3619,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "feeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 889,
                      "src": "34098:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "33",
                      "id": 3620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "34115:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "34098:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 3622,
                  "nodeType": "ExpressionStatement",
                  "src": "34098:18:12"
                },
                {
                  "expression": {
                    "id": 3627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3623,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3581,
                        "src": "34126:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                          "typeString": "struct PolicyManager.Policy storage pointer"
                        }
                      },
                      "id": 3625,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "disabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 883,
                      "src": "34126:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "34144:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "34126:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3628,
                  "nodeType": "ExpressionStatement",
                  "src": "34126:22:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3635,
                            "name": "RESERVED_NODE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 953,
                            "src": "34199:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "3131",
                            "id": 3636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "34214:2:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_11_by_1",
                              "typeString": "int_const 11"
                            },
                            "value": "11"
                          },
                          {
                            "hexValue": "3232",
                            "id": 3637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "34218:2:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_22_by_1",
                              "typeString": "int_const 22"
                            },
                            "value": "22"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_11_by_1",
                              "typeString": "int_const 11"
                            },
                            {
                              "typeIdentifier": "t_rational_22_by_1",
                              "typeString": "int_const 22"
                            }
                          ],
                          "id": 3634,
                          "name": "ArrangementInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 881,
                          "src": "34183:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_ArrangementInfo_$881_storage_ptr_$",
                            "typeString": "type(struct PolicyManager.ArrangementInfo storage pointer)"
                          }
                        },
                        "id": 3638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "34183:38:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ArrangementInfo_$881_memory_ptr",
                          "typeString": "struct PolicyManager.ArrangementInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ArrangementInfo_$881_memory_ptr",
                          "typeString": "struct PolicyManager.ArrangementInfo memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 3629,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3581,
                          "src": "34158:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$908_storage_ptr",
                            "typeString": "struct PolicyManager.Policy storage pointer"
                          }
                        },
                        "id": 3632,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arrangements",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 907,
                        "src": "34158:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage",
                          "typeString": "struct PolicyManager.ArrangementInfo storage ref[] storage ref"
                        }
                      },
                      "id": 3633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "34158:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage_ptr_$_t_struct$_ArrangementInfo_$881_storage_$returns$__$bound_to$_t_array$_t_struct$_ArrangementInfo_$881_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct PolicyManager.ArrangementInfo storage ref[] storage pointer,struct PolicyManager.ArrangementInfo storage ref)"
                      }
                    },
                    "id": 3639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34158:64:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3640,
                  "nodeType": "ExpressionStatement",
                  "src": "34158:64:12"
                },
                {
                  "assignments": [
                    3643
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3643,
                      "mutability": "mutable",
                      "name": "nodeInfo",
                      "nameLocation": "34249:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 3680,
                      "src": "34232:25:12",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                        "typeString": "struct PolicyManager.NodeInfo"
                      },
                      "typeName": {
                        "id": 3642,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3641,
                          "name": "NodeInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 925,
                          "src": "34232:8:12"
                        },
                        "referencedDeclaration": 925,
                        "src": "34232:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3647,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3644,
                      "name": "nodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 993,
                      "src": "34260:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NodeInfo_$925_storage_$",
                        "typeString": "mapping(address => struct PolicyManager.NodeInfo storage ref)"
                      }
                    },
                    "id": 3646,
                    "indexExpression": {
                      "id": 3645,
                      "name": "RESERVED_NODE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 953,
                      "src": "34266:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "34260:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NodeInfo_$925_storage",
                      "typeString": "struct PolicyManager.NodeInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "34232:48:12"
                },
                {
                  "expression": {
                    "id": 3652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3648,
                        "name": "nodeInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3643,
                        "src": "34290:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 3650,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 910,
                      "src": "34290:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030",
                      "id": 3651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "34305:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "34290:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 3653,
                  "nodeType": "ExpressionStatement",
                  "src": "34290:18:12"
                },
                {
                  "expression": {
                    "id": 3658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3654,
                        "name": "nodeInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3643,
                        "src": "34318:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 3656,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "feeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 914,
                      "src": "34318:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3333",
                      "id": 3657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "34337:2:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_33_by_1",
                        "typeString": "int_const 33"
                      },
                      "value": "33"
                    },
                    "src": "34318:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3659,
                  "nodeType": "ExpressionStatement",
                  "src": "34318:21:12"
                },
                {
                  "expression": {
                    "id": 3664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3660,
                        "name": "nodeInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3643,
                        "src": "34349:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 3662,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "previousFeePeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 912,
                      "src": "34349:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3434",
                      "id": 3663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "34378:2:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_44_by_1",
                        "typeString": "int_const 44"
                      },
                      "value": "44"
                    },
                    "src": "34349:31:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 3665,
                  "nodeType": "ExpressionStatement",
                  "src": "34349:31:12"
                },
                {
                  "expression": {
                    "id": 3672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 3666,
                          "name": "nodeInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3643,
                          "src": "34390:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                            "typeString": "struct PolicyManager.NodeInfo storage pointer"
                          }
                        },
                        "id": 3669,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feeDelta",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 924,
                        "src": "34390:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint16_$_t_int256_$",
                          "typeString": "mapping(uint16 => int256)"
                        }
                      },
                      "id": 3670,
                      "indexExpression": {
                        "hexValue": "3131",
                        "id": 3668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "34408:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_11_by_1",
                          "typeString": "int_const 11"
                        },
                        "value": "11"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "34390:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3535",
                      "id": 3671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "34414:2:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_55_by_1",
                        "typeString": "int_const 55"
                      },
                      "value": "55"
                    },
                    "src": "34390:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 3673,
                  "nodeType": "ExpressionStatement",
                  "src": "34390:26:12"
                },
                {
                  "expression": {
                    "id": 3678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3674,
                        "name": "nodeInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3643,
                        "src": "34426:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NodeInfo_$925_storage_ptr",
                          "typeString": "struct PolicyManager.NodeInfo storage pointer"
                        }
                      },
                      "id": 3676,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "minFeeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 916,
                      "src": "34426:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "373737",
                      "id": 3677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "34448:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_777_by_1",
                        "typeString": "int_const 777"
                      },
                      "value": "777"
                    },
                    "src": "34426:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3679,
                  "nodeType": "ExpressionStatement",
                  "src": "34426:25:12"
                }
              ]
            },
            "documentation": {
              "id": 3554,
              "nodeType": "StructuredDocumentation",
              "src": "33494:93:12",
              "text": "@dev the `onlyWhileUpgrading` modifier works through a call to the parent `finishUpgrade`"
            },
            "functionSelector": "e8dccd06",
            "id": 3681,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "finishUpgrade",
            "nameLocation": "33601:13:12",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3558,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "33639:8:12"
            },
            "parameters": {
              "id": 3557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3556,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "33623:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3681,
                  "src": "33615:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "33615:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33614:17:12"
            },
            "returnParameters": {
              "id": 3559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "33656:0:12"
            },
            "scope": 3682,
            "src": "33592:866:12",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 3683,
        "src": "520:33940:12",
        "usedErrors": []
      }
    ],
    "src": "47:34414:12"
  },
  "bytecode": "60e06040523480156200001157600080fd5b5060405162004138380380620041388339810160408190526200003491620002d8565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3816001600160a01b03166080816001600160a01b0316815250506000816001600160a01b031663407f80016040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000f4919062000310565b905060008163ffffffff16116200010a57600080fd5b8063ffffffff1660c08163ffffffff16815250506000826001600160a01b031663d808a4ee6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200015f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000185919062000310565b905060008163ffffffff16116200019b57600080fd5b63ffffffff811660a0526001600160a01b0384811690841614620002b1578163ffffffff16846001600160a01b031663407f80016040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000225919062000310565b63ffffffff161480620002a757508063ffffffff16846001600160a01b031663407f80016040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000279573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029f919062000310565b63ffffffff16145b620002b157600080fd5b505050506200033f565b80516001600160a01b0381168114620002d357600080fd5b919050565b60008060408385031215620002ec57600080fd5b620002f783620002bb565b91506200030760208401620002bb565b90509250929050565b6000602082840312156200032357600080fd5b815163ffffffff811681146200033857600080fd5b9392505050565b60805160a05160c051613d60620003d860003960008181610356015281816109f501528181610a790152818161105301528181611d4701528181612e4c01528181613039015261309a01526000818161083f0152612e730152600081816108dc01528181610f72015281816113f2015281816118500152818161311d015281816131c60152818161327a015261339f0152613d606000f3fe60806040526004361061023b5760003560e01c80638c316b901161012e578063ce5494bb116100ab578063e2fdcc171161006f578063e2fdcc17146108ca578063e38a303b146108fe578063e665830d14610931578063e8dccd0614610951578063f2fde38b1461097157600080fd5b8063ce5494bb146107ed578063d4b839921461080d578063d808a4ee1461082d578063d845f4fb14610861578063dfdecfaf146108aa57600080fd5b8063a2d1d5e2116100f2578063a2d1d5e21461074d578063a87d40d91461076d578063b46ffb451461078d578063b9626d21146107ad578063cbf12f2a146107cd57600080fd5b80638c316b90146106a45780638d7fd2fa146106c45780638da5cb5b146106e45780638e81ca5a146107025780638f32d59b1461072257600080fd5b8063631722f2116101bc578063713c0e5711610180578063713c0e571461052e578063715018a61461063c57806372be8d8d1461065157806381e742a114610671578063889ddd1a1461068457600080fd5b8063631722f21461042057806363c509d51461044057806365a9af871461046057806365af62c3146104985780636bd2af57146104f457600080fd5b8063407f800111610203578063407f8001146103445780634b2cd1181461038d5780634b8fed4f146103c557806351cff8d9146103e057806358cf15fb1461040057600080fd5b8063076421e814610240578063086146d214610273578063189a5a171461029b5780633735e1061461031a5780633ccfd60b1461032f575b600080fd5b34801561024c57600080fd5b5061026061025b3660046135b1565b610991565b6040519081526020015b60405180910390f35b34801561027f57600080fd5b506102886109e9565b60405161ffff909116815260200161026a565b3480156102a757600080fd5b506102ed6102b6366004613640565b6005602052600090815260409020805460018201546002909201546001600160801b03821692600160801b90920461ffff16919084565b604080516001600160801b03909516855261ffff909316602085015291830152606082015260800161026a565b61032d6103283660046136bf565b610a20565b005b34801561033b57600080fd5b50610260610cc2565b34801561035057600080fd5b506103787f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161026a565b34801561039957600080fd5b506002546103ad906001600160a01b031681565b6040516001600160a01b03909116815260200161026a565b3480156103d157600080fd5b506102606001600160ff1b0381565b3480156103ec57600080fd5b506102606103fb366004613640565b610cc9565b34801561040c57600080fd5b506103ad61041b366004613754565b610d55565b34801561042c57600080fd5b5061032d61043b366004613786565b610dac565b34801561044c57600080fd5b5061026061045b3660046137c9565b610e90565b34801561046c57600080fd5b50600854610480906001600160401b031681565b6040516001600160401b03909116815260200161026a565b3480156104a457600080fd5b506006546007546104ca916001600160801b0380821692600160801b9092048116911683565b604080516001600160801b039485168152928416602084015292169181019190915260600161026a565b34801561050057600080fd5b5061026061050f366004613754565b6001600160801b03191660009081526004602052604090206008015490565b34801561053a57600080fd5b506105c7610549366004613754565b60046020819052600091825260409091208054600182015460028301546003840154948401546005850154600686015460079096015460ff8616976001600160a01b0361010090970487169795909616956001600160801b038516956001600160401b03600160801b8704811696600160c01b90041694919391928b565b604080519b15158c526001600160a01b039a8b1660208d015299909816988a01989098526001600160801b0390951660608901526001600160401b0393841660808901529290911660a087015260c086015260e08501526101008401526101208301919091526101408201526101600161026a565b34801561064857600080fd5b5061032d610f06565b34801561065d57600080fd5b5061032d61066c366004613810565b610f67565b61032d61067f36600461383e565b611006565b34801561069057600080fd5b5061026061069f366004613640565b6111e5565b3480156106b057600080fd5b5061032d6106bf3660046138b5565b611206565b3480156106d057600080fd5b506102606106df3660046137c9565b611302565b3480156106f057600080fd5b506000546001600160a01b03166103ad565b34801561070e57600080fd5b5061026061071d366004613810565b611340565b34801561072e57600080fd5b506000546001600160a01b03163314604051901515815260200161026a565b34801561075957600080fd5b50610260610768366004613754565b61139c565b34801561077957600080fd5b506102606107883660046137c9565b6113c8565b34801561079957600080fd5b5061032d6107a83660046138ce565b6113e7565b3480156107b957600080fd5b5061032d6107c8366004613640565b6114d4565b3480156107d957600080fd5b506102606107e83660046137c9565b6117f5565b3480156107f957600080fd5b5061032d610808366004613640565b611845565b34801561081957600080fd5b506001546103ad906001600160a01b031681565b34801561083957600080fd5b506103787f000000000000000000000000000000000000000000000000000000000000000081565b34801561086d57600080fd5b5061088161087c36600461392a565b6118f5565b604080516001600160a01b039094168452602084019290925261ffff169082015260600161026a565b3480156108b657600080fd5b5061032d6108c5366004613754565b611963565b3480156108d657600080fd5b506103ad7f000000000000000000000000000000000000000000000000000000000000000081565b34801561090a57600080fd5b5060025461091f90600160a01b900460ff1681565b60405160ff909116815260200161026a565b34801561093d57600080fd5b5061026061094c366004613754565b6119bf565b34801561095d57600080fd5b5061032d61096c366004613640565b6119cc565b34801561097d57600080fd5b5061032d61098c366004613640565b611c84565b60006109d4858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611ca792505050565b6109e085856001611ce9565b95945050505050565b6000610a1b63ffffffff7f00000000000000000000000000000000000000000000000000000000000000001642613980565b905090565b42836001600160401b0316118015610a385750600034115b8015610a445750600185115b610a4d57600080fd5b6001600160801b03471115610a6157600080fd5b6000610a6b6109e9565b90506000610a9f63ffffffff7f00000000000000000000000000000000000000000000000000000000000000001686613994565b610aaa9060016139ba565b90506000610ab883836139e0565b61ffff16905060008882610acc3488612267565b610ad69190613980565b610ae09190613980565b90506000816001600160801b0316118015610b225750348986610b0c856001600160801b038616613a03565b610b169190613a03565b610b209190613a03565b145b610b2b57600080fd5b60005b89811015610c46576000610b6b8c8c84818110610b4d57610b4d613a22565b9050602002016020810190610b629190613754565b8b8b868b612273565b905060005b87811015610c31578160080160405180606001604052808b8b85818110610b9957610b99613a22565b9050602002016020810190610bae9190613640565b6001600160a01b03908116825260006020808401829052604093840182905285546001808201885596835291819020855160039093020180546001600160a01b031916929093169190911782558301519381019390935501516002909101805461ffff191661ffff90921691909117905580610c2981613a38565b915050610b70565b50508080610c3e90613a38565b915050610b2e565b506000610c5c6001600160801b0383168b613a03565b905060005b86811015610cb4576000888883818110610c7d57610c7d613a22565b9050602002016020810190610c929190613640565b9050610ca18787838787612412565b5080610cac81613a38565b915050610c61565b505050505050505050505050565b6000610a1b335b33600090815260056020526040812080546001600160801b031680610ced57600080fd5b81546001600160801b0319168255610d0e6001600160a01b038516826125e6565b6040518181526001600160a01b0385169033907fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb9060200160405180910390a39392505050565b6001600160801b03198116600090815260046020526040812060018101546001600160a01b031615610d945760018101546001600160a01b0316610da5565b805461010090046001600160a01b03165b9392505050565b6000546001600160a01b03163314610dc357600080fd5b816001600160801b0316836001600160801b031611158015610df75750806001600160801b0316826001600160801b031611155b610e0057600080fd5b60408051606080820183526001600160801b038681168084528682166020808601829052928716948601859052600160801b81028217600655600780546001600160801b031916861790558551918252918101919091529283019190915233917f3a93fb7c2385d29e9693a6edcd81c4cee090101cb783dc2f17a7814b79a2ecdc910160405180910390a2505050565b60006001600160a01b038216610ea557600080fd5b6001600160801b03198316600090815260046020526040902060018101546001600160a01b0316331480610ee75750805461010090046001600160a01b031633145b610ef057600080fd5b610efc84846000611ce9565b9150505b92915050565b6000546001600160a01b03163314610f1d57600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f9c57600080fd5b6001600160a01b03821660009081526005602052604090208054600160801b900461ffff16158015610fdc5750610fd16109e9565b61ffff168261ffff16105b610fe557600080fd5b805461ffff909216600160801b0261ffff60801b1990921691909117905550565b42836001600160401b031611801561101e5750600034115b61102757600080fd5b6001600160801b0347111561103b57600080fd5b60006110456109e9565b9050600061107963ffffffff7f00000000000000000000000000000000000000000000000000000000000000001686613994565b6110849060016139ba565b9050600061109283836139e0565b61ffff1690506000816110a53487612267565b6110af9190613980565b90506000816001600160801b03161180156110e6575034856110da846001600160801b038516613a03565b6110e49190613a03565b145b6110ef57600080fd5b60006110fe8a8a8a858a612273565b905060005b868110156111d857600088888381811061111f5761111f613a22565b90506020020160208101906111349190613640565b905061114c87878387886001600160801b0316612412565b604080516060810182526001600160a01b0392831681526000602080830182815293830182815260088801805460018082018355918552929093209351600390920290930180546001600160a01b03191691909516178455915191830191909155516002909101805461ffff191661ffff909216919091179055806111d081613a38565b915050611103565b5050505050505050505050565b6001600160a01b0381166000908152600560205260408120610da5816126ff565b6006546001600160801b0316811080159061122c57506007546001600160801b03168111155b6112a35760405162461bcd60e51b815260206004820152603f60248201527f546865207374616b65722773206d696e206665652072617465206d757374206660448201527f616c6c2077697468696e2074686520676c6f62616c206665652072616e67650060648201526084015b60405180910390fd5b33600090815260056020526040902060028101548214156112c2575050565b6002810182905560405182815233907f6b9024cc1bf5710f290be788dca9886db7a3d9be0df0855bfa991dbf26a256bc9060200160405180910390a25050565b60006001600160a01b03821661131757600080fd5b3361132184610d55565b6001600160a01b03161461133457600080fd5b610da583836001611ce9565b60006001600160a01b03831615801561135d57508161ffff16600b145b1561136a57506037610f00565b506001600160a01b038216600090815260056020908152604080832061ffff8516845260040190915290205492915050565b6000336113a883610d55565b6001600160a01b0316146113bb57600080fd5b610f008260006001611ce9565b60006001600160a01b0382166113dd57600080fd5b610da58383612769565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461141c57600080fd5b6001600160a01b038416600090815260056020526040902061143c6109e9565b815461ffff918216600160801b909104909116111561145a57600080fd5b61ffff84161561146e5761146e81856128ad565b61ffff8316156114825761148281846128ad565b61ffff8216158015906114a8575061ffff82166000908152600482016020526040902054155b156114cd5761ffff8216600090815260048201602052604090206001600160ff1b0390555b5050505050565b6114dd816129f2565b6008546001600160401b03166114fa826365a9af8760e01b612a4c565b6001600160401b03161461150d57600080fd5b600061151882612a65565b80516006549192506001600160801b03918216911614801561155357506020810151600654600160801b90046001600160801b039081169116145b8015611571575060408101516007546001600160801b039081169116145b61157a57600080fd5b600080805260046020527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec906115b08482612a96565b8254602082015191925061010090046001600160a01b0390811691161480156115ed5750600182015460408201516001600160a01b039081169116145b801561160d5750600282015460608201516001600160801b039081169116145b80156116345750600282015460808201516001600160401b03908116600160801b90920416145b801561165b5750600282015460a08201516001600160401b03908116600160c01b90920416145b8015611671575081548151151560ff9091161515145b61167a57600080fd5b600882015461169285636bd2af5760e01b6000612b52565b1461169c57600080fd5b600882015415611729576000826008016000815481106116be576116be613a22565b60009182526020822060039091020191506116da868280612b6d565b825481519192506001600160a01b039182169116148015611702575081600101548160200151145b801561171d57506002820154604082015161ffff9081169116145b61172657600080fd5b50505b600080805260056020527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc9061175f8682612ba9565b825481519192506001600160801b039182169116148015611787575081600101548160400151145b80156117a657508154602082015161ffff908116600160801b90920416145b80156117b9575081600201548160600151145b6117c257600080fd5b6117ce6000600b611340565b6117e387634740e52d60e11b6000600b612beb565b146117ed57600080fd5b505050505050565b6040516001600160801b0319831660208201526bffffffffffffffffffffffff19606083901b166030820152600090610da59060440160408051601f19818403018152919052604560f81b612c07565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461187a57600080fd5b6001600160a01b038116600090815260056020526040902061189a6109e9565b815461ffff918216600160801b90910490911610156118b857600080fd5b80546118ce90600160801b900461ffff16612e48565b815461ffff91909116600160801b0261ffff60801b19909116178155600060019091015550565b6001600160801b0319821660009081526004602052604081206008018054829182918291908690811061192a5761192a613a22565b60009182526020909120600390910201805460018201546002909201546001600160a01b039091169891975061ffff1695509350505050565b6001600160801b03198116600090815260046020526040902060018101546001600160a01b03163314806119a55750805461010090046001600160a01b031633145b6119ae57600080fd5b6119ba82600080611ce9565b505050565b6000610f00826000612769565b6119d581612eb1565b6008546001600160401b0316611a02576008805467ffffffffffffffff1916426001600160401b03161790555b50600460209081527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec80547f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ed8054306001600160a01b03199182161790915578020000000000000001000000000000000000000000000000037f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ee556001600160a81b0319909116336101000260ff1916176001908117909255604080516060810182526000808252600b82870181815260169484019485527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3f480549788018155835292517fdaf6a3df2e7fe032faba7f1c41811297bb73983780e1888a846f8aa1a8324d27600390970296870180549096166001600160a01b039091161790945590517fdaf6a3df2e7fe032faba7f1c41811297bb73983780e1888a846f8aa1a8324d2885015590517fdaf6a3df2e7fe032faba7f1c41811297bb73983780e1888a846f8aa1a8324d29909301805461ffff191661ffff909416939093179092557f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc805460217f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bd5571ffffffffffffffffffffffffffffffffffff1916702c0000000000000000000000000000006417905590527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746c0905260377f952b799cf669bea82d5c90b8e8004c707505141b802e28ecfb2a120a84cc5185556103097f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746be55565b6000546001600160a01b03163314611c9b57600080fd5b611ca481612f04565b50565b6000611cb384846117f5565b90506000611cc18284612f72565b9050806001600160a01b0316611cd686610d55565b6001600160a01b0316146114cd57600080fd5b6001600160801b031983166000908152600460205260408120805460ff16158015611d30575060085460028201546001600160401b03918216600160801b90910490911610155b611d3957600080fd5b6002810154600090611d82907f000000000000000000000000000000000000000000000000000000000000000063ffffffff1690600160c01b90046001600160401b0316613994565b611d8d9060016139ba565b600883015490915060005b6008840154811015612165576000846008018281548110611dbb57611dbb613a22565b6000918252602090912060039091020180549091506001600160a01b0316801580611e0b57506001600160a01b03891615801590611e0b5750806001600160a01b0316896001600160a01b031614155b15611e245783611e1a81613a53565b9450505050612153565b6000611e308784613031565b60028601805461ffff191661ffff92909216919091179055600185015590508815612037576001600160a01b0382166000908152600560209081526040808320600287015461ffff16808552600482019093529220546001600160ff1b031415611ec6576002890154611eab906001600160801b0316613a6a565b61ffff82166000908152600484016020526040902055611f02565b600289015461ffff82166000908152600484016020526040812080546001600160801b0390931692909190611efc908490613a87565b90915550505b61ffff881660009081526004830160205260409020546001600160ff1b031415611f5257600289015461ffff8916600090815260048401602052604090206001600160801b039091169055611f8e565b600289015461ffff89166000908152600484016020526040812080546001600160801b0390931692909190611f88908490613ac6565b90915550505b61ffff81166000908152600483016020526040902054611fc85761ffff8116600090815260048301602052604090206001600160ff1b0390555b61ffff881660009081526004830160205260409020546120025761ffff8816600090815260048301602052604090206001600160ff1b0390555b60028901546001600160801b031661201a828a6139e0565b61ffff166120289190613a03565b6120329084613b07565b925050505b888061204e5750600283015461ffff808816911610155b156120df5782546001600160a01b03191683556000600184015560028301805461ffff191690558461207f81613a53565b955050816001600160a01b0316336001600160a01b03168c6001600160801b0319167ff3b13df5bdd5efcb090f73617909a6295ee75815920224c512d784b2726812f1846040516120d291815260200190565b60405180910390a461212c565b6040518181526001600160a01b0383169033906001600160801b03198e16907fab654b569128c88ffcd210806a5e48ee14c541e2c76923f143281f20807090c19060200160405180910390a45b6121368189613b07565b97506001600160a01b038a161561214f57505050612165565b5050505b8061215d81613a38565b915050611d98565b83546001600160a01b03610100909104811690881661223257826121f45784546001600160a81b03191660019081178655850180546001600160a01b03191690556000600286015560405186815233906001600160801b03198b16907fd5ea25ba3600c386669c484639012a0ae266ed537f0c4ab71b651024736efff4906020015b60405180910390a3612242565b60405186815233906001600160801b03198b16907f51377f313f8c3404e86d38ae907b443ada38578fd6b9589d03f79d03ff9303c7906020016121e7565b6008850154821061224257600080fd5b851561225b5761225b6001600160a01b038216876125e6565b50505050509392505050565b6000610da58284613980565b6001600160801b03198516600081815260046020526040902090158015906122a6575060028101546001600160801b0316155b80156122b45750805460ff16155b6122bd57600080fd5b8054610100600160a81b0319163361010081029190911782556002820180546001600160801b03908116600160801b426001600160401b03908116919091026001600160c01b031691909117600160c01b91891691909102176001600160801b0319169086161790556001600160a01b0386161480159061234657506001600160a01b03851615155b15612369576001810180546001600160a01b0319166001600160a01b0387161790555b6001600160a01b0385161561237e5784612380565b335b6002820154604080516001600160801b03871681526001600160401b03600160801b840481166020830152600160c01b90930490921690820152606081018490526001600160a01b03919091169033906001600160801b03198916907f8e609dac02bd39ff24c8ad6bb9a735e739b56708b22159948ec9828ad765b4d19060800160405180910390a495945050505050565b6001600160a01b03831661242557600080fd5b6001600160a01b03831660009081526005602052604090208054600160801b900461ffff16158015906124665750805461ffff808816600160801b90920416105b80156124835750612476816126ff565b836001600160801b031610155b61248c57600080fd5b61ffff861660009081526004820160205260409020546001600160ff1b0314156124cd5761ffff8616600090815260048201602052604090208290556124f8565b61ffff86166000908152600482016020526040812080548492906124f2908490613ac6565b90915550505b61ffff851660009081526004820160205260409020546001600160ff1b0314156125405761252582613a6a565b61ffff8616600090815260048301602052604090205561256b565b61ffff8516600090815260048201602052604081208054849290612565908490613a87565b90915550505b61ffff861660009081526004820160205260409020546125a55761ffff8616600090815260048201602052604090206001600160ff1b0390555b61ffff851660009081526004820160205260409020546117ed5761ffff8516600090815260048201602052604090206001600160ff1b039055505050505050565b804710156126365760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161129a565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612683576040519150601f19603f3d011682016040523d82523d6000602084013e612688565b606091505b50509050806119ba5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161129a565b6000816002015460001480612724575060065460028301546001600160801b03909116115b8061273f575060075460028301546001600160801b03909116105b1561275c575050600654600160801b90046001600160801b031690565b506002015490565b919050565b6001600160801b03198216600090815260046020526040812060018101546001600160a01b03163314806127ab5750805461010090046001600160a01b031633145b80156127b95750805460ff16155b6127c257600080fd5b60005b60088201548110156128865760008260080182815481106127e8576127e8613a22565b6000918252602090912060039091020180549091506001600160a01b0316158061283257506001600160a01b03851615801590612832575080546001600160a01b03868116911614155b1561283d5750612874565b60006128498483613031565b5050905080856128599190613b07565b94506001600160a01b03861615612871575050612886565b50505b8061287e81613a38565b9150506127c5565b6001600160a01b038416156128a557600882015481106128a557600080fd5b505092915050565b8154600160801b900461ffff1615806128d65750815461ffff600160801b909104811690821611155b156128df575050565b81546000906128fa90600160801b900461ffff1660016139ba565b90505b8161ffff168161ffff161161298b5761ffff811660009081526004840160205260409020546001600160ff1b0381141561294d575061ffff81166000908152600484016020526040812055612979565b600184015461295c9082613495565b60018501555061ffff811660009081526004840160205260408120555b8061298381613b1f565b9150506128fd565b50815461ffff8216600160801b0261ffff60801b1982168117845560018401549184916000916129ca9185916001600160801b03918216911617613b41565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505050565b60028054600160a01b900460ff1614612a0a57600080fd5b6040513381526001600160a01b038216907f1e8d98c1b4a0d9bd2e2371026b632eb2773fcce41742e41f02f574ab69868d4c906020015b60405180910390a250565b600080612a5c84848380806134c2565b51949350505050565b6040805160608101825260008082526020820181905291810182905290610da5836365af62c360e01b8380806134c2565b612b2960405180610180016040528060001515815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160801b0316815260200160006001600160401b0316815260200160006001600160401b031681526020016000815260200160008152602001600081526020016000815260200160008152602001606081525090565b6000612b4a8463713c0e5760e01b60016001600160801b03198716856134c2565b949350505050565b600080612b638585600186856134c2565b5195945050505050565b60408051606081018252600080825260208201819052918101829052906109e08563d845f4fb60e01b60026001600160801b03198816876134c2565b604080516080810182526000808252602082018190529181018290526060810182905290612b4a8463189a5a1760e01b60016001600160a01b038716856134c2565b600080612bfc8686600287876134c2565b519695505050505050565b60006001600160f81b03198216612c54576040513090612c3690601960f81b9060009084908890602001613b9e565b60405160208183030381529060405280519060200120915050610f00565b6001600160f81b03198216604560f81b1415612e0057825180612cc95760405162461bcd60e51b815260206004820152602760248201527f456d707479206d657373616765206e6f7420616c6c6f77656420666f722076656044820152667273696f6e204560c81b606482015260840161129a565b60005b8115612cf25780612cdc81613a38565b9150612ceb9050600a83613980565b9150612ccc565b6000816001600160401b03811115612d0c57612d0c613be5565b6040519080825280601f01601f191660200182016040528015612d36576020820181803683370190505b50865193509050815b8315612da457612d50600a85613bfb565b612d5b906030613b07565b60f81b82612d6883613a53565b92508281518110612d7b57612d7b613a22565b60200101906001600160f81b031916908160001a905350612d9d600a85613980565b9350612d3f565b604051612ddf90601960f81b907f457468657265756d205369676e6564204d6573736167653a0a000000000000009085908b90602001613c0f565b60405160208183030381529060405280519060200120945050505050610f00565b60405162461bcd60e51b815260206004820152601a60248201527f556e737570706f72746564204549503139312076657273696f6e000000000000604482015260640161129a565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff167f000000000000000000000000000000000000000000000000000000000000000063ffffffff168361ffff16612ea79190613a03565b610f009190613980565b60028054600160a01b900460ff1614612ec957600080fd5b6040513381526001600160a01b038216907fd55ec27c5c6316913ed8803c18cfd1bfefea953db909dcba6140744a9d8b0d1f90602001612a41565b6001600160a01b038116612f1757600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008151604114612f8257600080fd5b60208201516040830151606084015160001a601b811015612fab57612fa8601b82613c44565b90505b8060ff16601b1480612fc057508060ff16601c145b612fc957600080fd5b60408051600081526020810180835288905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa15801561301c573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000807f000000000000000000000000000000000000000000000000000000000000000063ffffffff168660020160109054906101000a90046001600160401b03166130809190613994565b905060006130da61308f6109e9565b60028901546130d5907f000000000000000000000000000000000000000000000000000000000000000063ffffffff1690600160c01b90046001600160401b0316613994565b613512565b60028701549091506000906130f490849061ffff16613530565b87546040516390dcb51f60e01b81526001600160a01b03918216600482015291925060009182917f000000000000000000000000000000000000000000000000000000000000000016906390dcb51f90602401602060405180830381865afa158015613164573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131889190613c69565b60028a015490915060009061ffff1661323a578954604051634789d02d60e01b81526001600160a01b03918216600482015261ffff881660248201527f000000000000000000000000000000000000000000000000000000000000000090911690634789d02d90604401602060405180830381865afa15801561320f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132339190613c69565b9050613241565b5060018901545b8097505b8188101561337b578954604051638fa95a1560e01b81526001600160a01b039182166004820152602481018a905260009182917f000000000000000000000000000000000000000000000000000000000000000090911690638fa95a15906044016040805180830381865afa1580156132c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132e69190613c82565b915091508661ffff168261ffff16111561330157505061337b565b8561ffff168161ffff161015613318575050613369565b6133396133258784613530565b61332f8984613512565b61ffff1690613548565b6133449060016139ba565b61334e90866139ba565b94508061ffff168761ffff161161336657505061337b565b50505b8761337381613a38565b985050613245565b89546040516351f5e0c160e11b81526001600160a01b0391821660048201526000917f0000000000000000000000000000000000000000000000000000000000000000169063a3ebc18290602401602060405180830381865afa1580156133e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061340a9190613cb1565b9050828914801561342257508561ffff168161ffff16105b156134525761343b6134356001876139e0565b82613530565b61344590876139e0565b61344f90856139ba565b93505b60028c015461346f9061ffff8616906001600160801b0316613cce565b6001600160801b031699506134858660016139ba565b9750505050505050509250925092565b60008082126134af576134a8838361356c565b9050610f00565b6134a86134bb83613a6a565b8490613578565b60405184815283156134d5578260048201525b60018411156134e5578160248201525b6000808560200260040183895af48015613503573d6000833e613508565b600082fd5b5095945050505050565b60008161ffff168361ffff16106135295781610da5565b5090919050565b60008161ffff168361ffff1610156135295781610da5565b60008261ffff168261ffff16111561356257613562613cfd565b610da582846139e0565b6000610da58284613b07565b6000610da58284613d13565b80356001600160801b03198116811461276457600080fd5b6001600160a01b0381168114611ca457600080fd5b600080600080606085870312156135c757600080fd5b6135d085613584565b935060208501356135e08161359c565b925060408501356001600160401b03808211156135fc57600080fd5b818701915087601f83011261361057600080fd5b81358181111561361f57600080fd5b88602082850101111561363157600080fd5b95989497505060200194505050565b60006020828403121561365257600080fd5b8135610da58161359c565b60008083601f84011261366f57600080fd5b5081356001600160401b0381111561368657600080fd5b6020830191508360208260051b85010111156136a157600080fd5b9250929050565b80356001600160401b038116811461276457600080fd5b600080600080600080608087890312156136d857600080fd5b86356001600160401b03808211156136ef57600080fd5b6136fb8a838b0161365d565b9098509650602089013591506137108261359c565b81955061371f60408a016136a8565b9450606089013591508082111561373557600080fd5b5061374289828a0161365d565b979a9699509497509295939492505050565b60006020828403121561376657600080fd5b610da582613584565b80356001600160801b038116811461276457600080fd5b60008060006060848603121561379b57600080fd5b6137a48461376f565b92506137b26020850161376f565b91506137c06040850161376f565b90509250925092565b600080604083850312156137dc57600080fd5b6137e583613584565b915060208301356137f58161359c565b809150509250929050565b61ffff81168114611ca457600080fd5b6000806040838503121561382357600080fd5b823561382e8161359c565b915060208301356137f581613800565b60008060008060006080868803121561385657600080fd5b61385f86613584565b9450602086013561386f8161359c565b935061387d604087016136a8565b925060608601356001600160401b0381111561389857600080fd5b6138a48882890161365d565b969995985093965092949392505050565b6000602082840312156138c757600080fd5b5035919050565b600080600080608085870312156138e457600080fd5b84356138ef8161359c565b935060208501356138ff81613800565b9250604085013561390f81613800565b9150606085013561391f81613800565b939692955090935050565b6000806040838503121561393d57600080fd5b61394683613584565b946020939093013593505050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008261398f5761398f613954565b500490565b60006001600160401b03808416806139ae576139ae613954565b92169190910492915050565b600061ffff8083168185168083038211156139d7576139d761396a565b01949350505050565b600061ffff838116908316818110156139fb576139fb61396a565b039392505050565b6000816000190483118215151615613a1d57613a1d61396a565b500290565b634e487b7160e01b600052603260045260246000fd5b6000600019821415613a4c57613a4c61396a565b5060010190565b600081613a6257613a6261396a565b506000190190565b6000600160ff1b821415613a8057613a8061396a565b5060000390565b60008083128015600160ff1b850184121615613aa557613aa561396a565b6001600160ff1b0384018313811615613ac057613ac061396a565b50500390565b600080821280156001600160ff1b0384900385131615613ae857613ae861396a565b600160ff1b8390038412811615613b0157613b0161396a565b50500190565b60008219821115613b1a57613b1a61396a565b500190565b600061ffff80831681811415613b3757613b3761396a565b6001019392505050565b60006001600160801b038083168185168083038211156139d7576139d761396a565b6000815160005b81811015613b845760208185018101518683015201613b6a565b81811115613b93576000828601525b509290920192915050565b6001600160f81b0319858116825284166001820152606083901b6bffffffffffffffffffffffff191660028201526000613bdb6016830184613b63565b9695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082613c0a57613c0a613954565b500690565b6001600160f81b03198516815266ffffffffffffff19841660018201526000613bdb613c3e601a840186613b63565b84613b63565b600060ff821660ff84168060ff03821115613c6157613c6161396a565b019392505050565b600060208284031215613c7b57600080fd5b5051919050565b60008060408385031215613c9557600080fd5b8251613ca081613800565b60208401519092506137f581613800565b600060208284031215613cc357600080fd5b8151610da581613800565b60006001600160801b0380831681851681830481118215151615613cf457613cf461396a565b02949350505050565b634e487b7160e01b600052600160045260246000fd5b600082821015613d2557613d2561396a565b50039056fea264697066735822122054955a1253d1560a747b6409cc836f8aff98236db2c8975434d821ec25c0ce3a64736f6c634300080a0033",
  "bytecodeSha1": "fb8bf528bc9c59e154007e4046f8baa7b08e9ee0",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "PolicyManager",
  "coverageMap": {
    "branches": {
      "10": {},
      "11": {},
      "12": {
        "PolicyManager.addFeeToNode": {
          "268": [
            13318,
            13340,
            true
          ],
          "269": [
            13409,
            13440,
            false
          ],
          "270": [
            13456,
            13499,
            false
          ],
          "271": [
            13515,
            13550,
            true
          ],
          "272": [
            13609,
            13663,
            false
          ],
          "273": [
            13931,
            13981,
            false
          ]
        },
        "PolicyManager.calculateRefundValue": {
          "217": [
            28156,
            28178,
            true
          ],
          "287": [
            18641,
            18664,
            false
          ],
          "288": [
            18714,
            18735,
            false
          ],
          "289": [
            18943,
            18965,
            false
          ],
          "290": [
            19116,
            19148,
            false
          ],
          "291": [
            19152,
            19183,
            false
          ]
        },
        "PolicyManager.calculateRefundValueInternal": {
          "275": [
            23872,
            23898,
            true
          ],
          "276": [
            23902,
            23930,
            false
          ],
          "277": [
            23936,
            23951,
            true
          ],
          "278": [
            24121,
            24154,
            true
          ],
          "279": [
            24158,
            24180,
            false
          ],
          "280": [
            24184,
            24209,
            false
          ],
          "281": [
            24398,
            24420,
            false
          ],
          "282": [
            24482,
            24504,
            false
          ],
          "283": [
            24565,
            24595,
            true
          ]
        },
        "PolicyManager.checkOwnerSignature": {
          "247": [
            26223,
            26261,
            true
          ]
        },
        "PolicyManager.createPolicies": {
          "189": [
            10349,
            10380,
            false
          ],
          "190": [
            10396,
            10409,
            false
          ],
          "191": [
            10425,
            10446,
            true
          ],
          "192": [
            10475,
            10511,
            true
          ],
          "193": [
            10819,
            10830,
            false
          ],
          "194": [
            10834,
            10908,
            true
          ]
        },
        "PolicyManager.createPolicy": {
          "204": [
            8881,
            8912,
            false
          ],
          "205": [
            8928,
            8941,
            true
          ],
          "206": [
            8970,
            9006,
            true
          ],
          "207": [
            9294,
            9305,
            false
          ],
          "208": [
            9309,
            9364,
            true
          ],
          "262": [
            12110,
            12141,
            false
          ],
          "263": [
            12157,
            12176,
            false
          ],
          "264": [
            12193,
            12208,
            true
          ],
          "265": [
            12417,
            12443,
            false
          ],
          "266": [
            12447,
            12473,
            false
          ],
          "267": [
            12616,
            12642,
            true
          ]
        },
        "PolicyManager.getMinFeeRate": {
          "274": [
            7814,
            7839,
            true
          ]
        },
        "PolicyManager.getNodeFeeDelta": {
          "214": [
            28901,
            28923,
            false
          ],
          "215": [
            28927,
            28940,
            false
          ]
        },
        "PolicyManager.getPolicyOwner": {
          "196": [
            14634,
            14660,
            true
          ]
        },
        "PolicyManager.migrate": {
          "243": [
            4900,
            4929,
            true
          ],
          "244": [
            6144,
            6192,
            true
          ]
        },
        "PolicyManager.ping": {
          "218": [
            15365,
            15409,
            true
          ],
          "219": [
            15424,
            15446,
            false
          ],
          "220": [
            15520,
            15542,
            false
          ],
          "221": [
            15712,
            15736,
            false
          ],
          "222": [
            15740,
            15779,
            false
          ]
        },
        "PolicyManager.refund": {
          "199": [
            27405,
            27427,
            true
          ],
          "200": [
            27499,
            27525,
            true
          ],
          "201": [
            27529,
            27557,
            true
          ],
          "245": [
            27018,
            27044,
            true
          ],
          "246": [
            27048,
            27076,
            true
          ]
        },
        "PolicyManager.refundInternal": {
          "248": [
            20019,
            20034,
            false
          ],
          "249": [
            20038,
            20077,
            true
          ],
          "250": [
            20432,
            20453,
            true
          ],
          "251": [
            20457,
            20479,
            false
          ],
          "252": [
            20483,
            20496,
            false
          ],
          "253": [
            21008,
            21066,
            false
          ],
          "254": [
            21321,
            21370,
            false
          ],
          "255": [
            22070,
            22082,
            true
          ],
          "256": [
            22086,
            22129,
            false
          ],
          "257": [
            22597,
            22619,
            false
          ],
          "258": [
            22737,
            22759,
            false
          ],
          "259": [
            22779,
            22798,
            false
          ],
          "260": [
            23344,
            23374,
            true
          ],
          "261": [
            23399,
            23414,
            false
          ]
        },
        "PolicyManager.register": {
          "202": [
            5638,
            5669,
            false
          ],
          "203": [
            5673,
            5701,
            true
          ]
        },
        "PolicyManager.revokeArrangement": {
          "212": [
            25196,
            25218,
            true
          ],
          "213": [
            25237,
            25276,
            true
          ]
        },
        "PolicyManager.revokePolicy": {
          "216": [
            24808,
            24847,
            true
          ]
        },
        "PolicyManager.setFeeRateRange": {
          "197": [
            6646,
            6662,
            false
          ],
          "198": [
            6666,
            6682,
            true
          ]
        },
        "PolicyManager.setMinFeeRate": {
          "209": [
            7066,
            7097,
            false
          ],
          "210": [
            7113,
            7144,
            true
          ],
          "211": [
            7293,
            7327,
            false
          ]
        },
        "PolicyManager.updateFee": {
          "284": [
            16076,
            16104,
            true
          ],
          "285": [
            16108,
            16142,
            false
          ],
          "286": [
            16312,
            16338,
            false
          ]
        },
        "PolicyManager.verifyState": {
          "223": [
            31373,
            31453,
            true
          ],
          "224": [
            31547,
            31583,
            false
          ],
          "225": [
            31599,
            31653,
            false
          ],
          "226": [
            31669,
            31705,
            true
          ],
          "227": [
            31877,
            31916,
            false
          ],
          "228": [
            31932,
            31967,
            false
          ],
          "229": [
            31983,
            32022,
            false
          ],
          "230": [
            32038,
            32091,
            false
          ],
          "231": [
            32107,
            32156,
            false
          ],
          "232": [
            32172,
            32213,
            true
          ],
          "233": [
            32233,
            32356,
            true
          ],
          "234": [
            32371,
            32401,
            false
          ],
          "235": [
            32636,
            32679,
            false
          ],
          "236": [
            32699,
            32778,
            false
          ],
          "237": [
            32798,
            32869,
            true
          ],
          "238": [
            33054,
            33089,
            false
          ],
          "239": [
            33105,
            33148,
            false
          ],
          "240": [
            33164,
            33227,
            false
          ],
          "241": [
            33243,
            33292,
            true
          ],
          "242": [
            33312,
            33480,
            true
          ]
        },
        "PolicyManager.withdraw": {
          "195": [
            17105,
            17113,
            true
          ]
        }
      },
      "19": {
        "AdditionalMath.addSigned": {
          "292": [
            778,
            784,
            false
          ]
        },
        "AdditionalMath.max16": {
          "294": [
            307,
            313,
            true
          ]
        },
        "AdditionalMath.min16": {
          "293": [
            417,
            422,
            true
          ]
        }
      },
      "22": {
        "SignatureVerifier.hashEIP191": {
          "298": [
            3228,
            3252,
            false
          ],
          "299": [
            3462,
            3486,
            false
          ],
          "300": [
            3593,
            3603,
            true
          ]
        },
        "SignatureVerifier.recover": {
          "301": [
            785,
            808,
            true
          ],
          "302": [
            1141,
            1147,
            false
          ],
          "303": [
            1198,
            1205,
            true
          ],
          "304": [
            1209,
            1216,
            true
          ]
        }
      },
      "26": {},
      "33": {},
      "34": {
        "Ownable._transferOwnership": {
          "297": [
            2021,
            2043,
            true
          ]
        }
      },
      "36": {},
      "37": {},
      "38": {},
      "39": {},
      "40": {
        "Address.sendValue": {
          "295": [
            2154,
            2185,
            true
          ],
          "296": [
            2300,
            2307,
            true
          ]
        }
      }
    },
    "statements": {
      "10": {},
      "11": {},
      "12": {
        "PolicyManager.addFeeToNode": {
          "126": [
            13310,
            13341
          ],
          "127": [
            13401,
            13551
          ],
          "128": [
            13679,
            13730
          ],
          "129": [
            13855,
            13907
          ],
          "130": [
            13997,
            14045
          ],
          "131": [
            14076,
            14124
          ],
          "132": [
            14246,
            14299
          ],
          "133": [
            14373,
            14422
          ]
        },
        "PolicyManager.calculateRefundValue": {
          "49": [
            28148,
            28179
          ],
          "50": [
            28189,
            28242
          ],
          "72": [
            27831,
            27892
          ],
          "170": [
            18114,
            18214
          ],
          "171": [
            18245,
            18312
          ],
          "172": [
            18338,
            18392
          ],
          "173": [
            18684,
            18689
          ],
          "174": [
            18755,
            18763
          ],
          "175": [
            18791,
            18925
          ],
          "176": [
            18985,
            18990
          ],
          "177": [
            18453,
            18477
          ],
          "178": [
            19321,
            19408
          ],
          "179": [
            19429,
            19476
          ],
          "180": [
            19486,
            19520
          ]
        },
        "PolicyManager.calculateRefundValueInternal": {
          "138": [
            23863,
            23952
          ],
          "139": [
            24229,
            24237
          ],
          "140": [
            24350,
            24380
          ],
          "141": [
            24439,
            24444
          ],
          "142": [
            24024,
            24027
          ],
          "143": [
            24557,
            24596
          ]
        },
        "PolicyManager.checkOwnerSignature": {
          "87": [
            26215,
            26262
          ]
        },
        "PolicyManager.createPolicies": {
          "6": [
            10328,
            10456
          ],
          "7": [
            10467,
            10512
          ],
          "8": [
            10811,
            10909
          ],
          "9": [
            11163,
            11221
          ],
          "10": [
            11140,
            11143
          ],
          "11": [
            10963,
            10966
          ],
          "12": [
            11411,
            11469
          ],
          "13": [
            11354,
            11357
          ]
        },
        "PolicyManager.createPolicy": {
          "31": [
            8860,
            8951
          ],
          "32": [
            8962,
            9007
          ],
          "33": [
            9286,
            9365
          ],
          "34": [
            9583,
            9662
          ],
          "35": [
            9676,
            9729
          ],
          "36": [
            9526,
            9529
          ],
          "118": [
            12051,
            12079
          ],
          "119": [
            12089,
            12218
          ],
          "120": [
            12229,
            12265
          ],
          "121": [
            12275,
            12322
          ],
          "122": [
            12332,
            12367
          ],
          "123": [
            12377,
            12402
          ],
          "124": [
            12489,
            12516
          ],
          "125": [
            12537,
            12796
          ]
        },
        "PolicyManager.finishUpgrade": {
          "73": [
            33666,
            33694
          ],
          "74": [
            33744,
            33784
          ],
          "75": [
            33946,
            33982
          ],
          "76": [
            33992,
            34020
          ],
          "77": [
            34098,
            34116
          ],
          "78": [
            34030,
            34055
          ],
          "79": [
            34126,
            34148
          ],
          "80": [
            34158,
            34222
          ],
          "81": [
            34290,
            34308
          ],
          "82": [
            34318,
            34339
          ],
          "83": [
            34349,
            34380
          ],
          "84": [
            34390,
            34416
          ],
          "85": [
            34426,
            34451
          ]
        },
        "PolicyManager.getArrangementInfo": {
          "67": [
            29485,
            29501
          ],
          "68": [
            29511,
            29563
          ],
          "69": [
            29573,
            29617
          ]
        },
        "PolicyManager.getArrangementsLength": {
          "0": [
            28450,
            28496
          ]
        },
        "PolicyManager.getCurrentPeriod": {
          "5": [
            5075,
            5124
          ]
        },
        "PolicyManager.getMinFeeRate": {
          "37": [
            8315,
            8345
          ],
          "136": [
            7965,
            7997
          ],
          "137": [
            8028,
            8055
          ]
        },
        "PolicyManager.getNodeFeeDelta": {
          "45": [
            28956,
            28965
          ],
          "46": [
            28985,
            29022
          ]
        },
        "PolicyManager.getPolicyOwner": {
          "20": [
            14627,
            14692
          ]
        },
        "PolicyManager.getRevocationHash": {
          "63": [
            25644,
            25729
          ]
        },
        "PolicyManager.migrate": {
          "64": [
            6136,
            6193
          ],
          "65": [
            6203,
            6277
          ],
          "66": [
            6287,
            6307
          ]
        },
        "PolicyManager.ping": {
          "51": [
            15357,
            15410
          ],
          "52": [
            15462,
            15496
          ],
          "53": [
            15558,
            15592
          ],
          "54": [
            15795,
            15849
          ]
        },
        "PolicyManager.recalculatePeriod": {
          "161": [
            5291,
            5367
          ]
        },
        "PolicyManager.refund": {
          "24": [
            27397,
            27428
          ],
          "25": [
            27491,
            27558
          ],
          "26": [
            27568,
            27614
          ],
          "70": [
            27010,
            27077
          ],
          "71": [
            27087,
            27134
          ]
        },
        "PolicyManager.refundInternal": {
          "88": [
            20010,
            20078
          ],
          "89": [
            20516,
            20532
          ],
          "90": [
            20550,
            20558
          ],
          "91": [
            20623,
            20768
          ],
          "92": [
            21090,
            21162
          ],
          "93": [
            21209,
            21281
          ],
          "94": [
            21394,
            21456
          ],
          "95": [
            21503,
            21566
          ],
          "96": [
            21725,
            21782
          ],
          "97": [
            21879,
            21927
          ],
          "98": [
            21963,
            22038
          ],
          "99": [
            22149,
            22181
          ],
          "100": [
            22199,
            22237
          ],
          "101": [
            22255,
            22289
          ],
          "102": [
            22307,
            22323
          ],
          "103": [
            22341,
            22410
          ],
          "104": [
            22449,
            22520
          ],
          "105": [
            22549,
            22579
          ],
          "106": [
            22638,
            22643
          ],
          "107": [
            20290,
            20293
          ],
          "108": [
            22818,
            22840
          ],
          "109": [
            22888,
            22924
          ],
          "110": [
            22942,
            22967
          ],
          "111": [
            22985,
            23003
          ],
          "112": [
            23064,
            23087
          ],
          "113": [
            23105,
            23159
          ],
          "114": [
            23198,
            23254
          ],
          "115": [
            23336,
            23375
          ],
          "116": [
            23430,
            23466
          ]
        },
        "PolicyManager.register": {
          "29": [
            5630,
            5702
          ],
          "30": [
            5712,
            5748
          ]
        },
        "PolicyManager.revoke": {
          "3": [
            26690,
            26739
          ],
          "4": [
            26749,
            26794
          ]
        },
        "PolicyManager.revokeArrangement": {
          "42": [
            25188,
            25219
          ],
          "43": [
            25229,
            25277
          ],
          "44": [
            25287,
            25332
          ]
        },
        "PolicyManager.revokePolicy": {
          "47": [
            24800,
            24848
          ],
          "48": [
            24858,
            24911
          ]
        },
        "PolicyManager.setFeeRateRange": {
          "21": [
            6638,
            6683
          ],
          "22": [
            6693,
            6735
          ],
          "23": [
            6745,
            6799
          ]
        },
        "PolicyManager.setMinFeeRate": {
          "38": [
            7058,
            7224
          ],
          "39": [
            7343,
            7350
          ],
          "40": [
            7369,
            7402
          ],
          "41": [
            7412,
            7455
          ]
        },
        "PolicyManager.updateFee": {
          "144": [
            16388,
            16409
          ],
          "145": [
            16427,
            16435
          ],
          "146": [
            16464,
            16510
          ],
          "147": [
            16550,
            16571
          ],
          "148": [
            16243,
            16246
          ],
          "149": [
            16591,
            16624
          ],
          "150": [
            16634,
            16669
          ]
        },
        "PolicyManager.verifyState": {
          "55": [
            31325,
            31355
          ],
          "56": [
            31365,
            31454
          ],
          "57": [
            31539,
            31706
          ],
          "58": [
            31869,
            32214
          ],
          "59": [
            32225,
            32357
          ],
          "60": [
            32628,
            32870
          ],
          "61": [
            33046,
            33293
          ],
          "62": [
            33304,
            33481
          ]
        },
        "PolicyManager.withdraw": {
          "14": [
            16789,
            16825
          ],
          "15": [
            17097,
            17114
          ],
          "16": [
            17124,
            17136
          ],
          "17": [
            17146,
            17171
          ],
          "18": [
            17181,
            17224
          ],
          "19": [
            17234,
            17244
          ]
        }
      },
      "19": {
        "AdditionalMath.addSigned": {
          "181": [
            800,
            824
          ],
          "182": [
            855,
            880
          ]
        },
        "AdditionalMath.max16": {
          "184": [
            300,
            321
          ]
        },
        "AdditionalMath.min16": {
          "183": [
            410,
            430
          ]
        },
        "AdditionalMath.sub16": {
          "185": [
            1880,
            1894
          ],
          "186": [
            1904,
            1916
          ]
        }
      },
      "22": {
        "SignatureVerifier.hashEIP191": {
          "152": [
            3358,
            3441
          ],
          "153": [
            3585,
            3647
          ],
          "154": [
            3786,
            3794
          ],
          "155": [
            3812,
            3824
          ],
          "156": [
            3911,
            3935
          ],
          "157": [
            4023,
            4078
          ],
          "158": [
            4096,
            4108
          ],
          "159": [
            4137,
            4234
          ],
          "160": [
            4265,
            4301
          ]
        },
        "SignatureVerifier.recover": {
          "166": [
            777,
            809
          ],
          "167": [
            1163,
            1170
          ],
          "168": [
            1190,
            1217
          ],
          "169": [
            1227,
            1259
          ]
        }
      },
      "26": {
        "Upgradeable.finishUpgrade": {
          "162": [
            2193,
            2234
          ]
        },
        "Upgradeable.verifyState": {
          "151": [
            1923,
            1966
          ]
        }
      },
      "33": {
        "SafeMath.add": {
          "187": [
            2818,
            2830
          ]
        },
        "SafeMath.div": {
          "117": [
            3913,
            3925
          ]
        },
        "SafeMath.sub": {
          "188": [
            3185,
            3197
          ]
        }
      },
      "34": {
        "Ownable._transferOwnership": {
          "163": [
            2013,
            2044
          ],
          "164": [
            2054,
            2097
          ],
          "165": [
            2107,
            2124
          ]
        },
        "Ownable.isOwner": {
          "2": [
            1069,
            1096
          ]
        },
        "Ownable.owner": {
          "1": [
            750,
            763
          ]
        },
        "Ownable.renounceOwnership": {
          "27": [
            1437,
            1482
          ],
          "28": [
            1492,
            1511
          ]
        },
        "Ownable.transferOwnership": {
          "86": [
            1769,
            1797
          ]
        }
      },
      "36": {},
      "37": {},
      "38": {},
      "39": {},
      "40": {
        "Address.sendValue": {
          "134": [
            2146,
            2219
          ],
          "135": [
            2292,
            2370
          ]
        }
      }
    }
  },
  "dependencies": [
    "AdditionalMath",
    "Address",
    "ERC20",
    "ERC20Detailed",
    "IERC20",
    "IStakingEscrow",
    "NuCypherToken",
    "Ownable",
    "SafeERC20",
    "SafeMath",
    "SignatureVerifier",
    "TokenRecipient",
    "Upgradeable"
  ],
  "deployedBytecode": "60806040526004361061023b5760003560e01c80638c316b901161012e578063ce5494bb116100ab578063e2fdcc171161006f578063e2fdcc17146108ca578063e38a303b146108fe578063e665830d14610931578063e8dccd0614610951578063f2fde38b1461097157600080fd5b8063ce5494bb146107ed578063d4b839921461080d578063d808a4ee1461082d578063d845f4fb14610861578063dfdecfaf146108aa57600080fd5b8063a2d1d5e2116100f2578063a2d1d5e21461074d578063a87d40d91461076d578063b46ffb451461078d578063b9626d21146107ad578063cbf12f2a146107cd57600080fd5b80638c316b90146106a45780638d7fd2fa146106c45780638da5cb5b146106e45780638e81ca5a146107025780638f32d59b1461072257600080fd5b8063631722f2116101bc578063713c0e5711610180578063713c0e571461052e578063715018a61461063c57806372be8d8d1461065157806381e742a114610671578063889ddd1a1461068457600080fd5b8063631722f21461042057806363c509d51461044057806365a9af871461046057806365af62c3146104985780636bd2af57146104f457600080fd5b8063407f800111610203578063407f8001146103445780634b2cd1181461038d5780634b8fed4f146103c557806351cff8d9146103e057806358cf15fb1461040057600080fd5b8063076421e814610240578063086146d214610273578063189a5a171461029b5780633735e1061461031a5780633ccfd60b1461032f575b600080fd5b34801561024c57600080fd5b5061026061025b3660046135b1565b610991565b6040519081526020015b60405180910390f35b34801561027f57600080fd5b506102886109e9565b60405161ffff909116815260200161026a565b3480156102a757600080fd5b506102ed6102b6366004613640565b6005602052600090815260409020805460018201546002909201546001600160801b03821692600160801b90920461ffff16919084565b604080516001600160801b03909516855261ffff909316602085015291830152606082015260800161026a565b61032d6103283660046136bf565b610a20565b005b34801561033b57600080fd5b50610260610cc2565b34801561035057600080fd5b506103787f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161026a565b34801561039957600080fd5b506002546103ad906001600160a01b031681565b6040516001600160a01b03909116815260200161026a565b3480156103d157600080fd5b506102606001600160ff1b0381565b3480156103ec57600080fd5b506102606103fb366004613640565b610cc9565b34801561040c57600080fd5b506103ad61041b366004613754565b610d55565b34801561042c57600080fd5b5061032d61043b366004613786565b610dac565b34801561044c57600080fd5b5061026061045b3660046137c9565b610e90565b34801561046c57600080fd5b50600854610480906001600160401b031681565b6040516001600160401b03909116815260200161026a565b3480156104a457600080fd5b506006546007546104ca916001600160801b0380821692600160801b9092048116911683565b604080516001600160801b039485168152928416602084015292169181019190915260600161026a565b34801561050057600080fd5b5061026061050f366004613754565b6001600160801b03191660009081526004602052604090206008015490565b34801561053a57600080fd5b506105c7610549366004613754565b60046020819052600091825260409091208054600182015460028301546003840154948401546005850154600686015460079096015460ff8616976001600160a01b0361010090970487169795909616956001600160801b038516956001600160401b03600160801b8704811696600160c01b90041694919391928b565b604080519b15158c526001600160a01b039a8b1660208d015299909816988a01989098526001600160801b0390951660608901526001600160401b0393841660808901529290911660a087015260c086015260e08501526101008401526101208301919091526101408201526101600161026a565b34801561064857600080fd5b5061032d610f06565b34801561065d57600080fd5b5061032d61066c366004613810565b610f67565b61032d61067f36600461383e565b611006565b34801561069057600080fd5b5061026061069f366004613640565b6111e5565b3480156106b057600080fd5b5061032d6106bf3660046138b5565b611206565b3480156106d057600080fd5b506102606106df3660046137c9565b611302565b3480156106f057600080fd5b506000546001600160a01b03166103ad565b34801561070e57600080fd5b5061026061071d366004613810565b611340565b34801561072e57600080fd5b506000546001600160a01b03163314604051901515815260200161026a565b34801561075957600080fd5b50610260610768366004613754565b61139c565b34801561077957600080fd5b506102606107883660046137c9565b6113c8565b34801561079957600080fd5b5061032d6107a83660046138ce565b6113e7565b3480156107b957600080fd5b5061032d6107c8366004613640565b6114d4565b3480156107d957600080fd5b506102606107e83660046137c9565b6117f5565b3480156107f957600080fd5b5061032d610808366004613640565b611845565b34801561081957600080fd5b506001546103ad906001600160a01b031681565b34801561083957600080fd5b506103787f000000000000000000000000000000000000000000000000000000000000000081565b34801561086d57600080fd5b5061088161087c36600461392a565b6118f5565b604080516001600160a01b039094168452602084019290925261ffff169082015260600161026a565b3480156108b657600080fd5b5061032d6108c5366004613754565b611963565b3480156108d657600080fd5b506103ad7f000000000000000000000000000000000000000000000000000000000000000081565b34801561090a57600080fd5b5060025461091f90600160a01b900460ff1681565b60405160ff909116815260200161026a565b34801561093d57600080fd5b5061026061094c366004613754565b6119bf565b34801561095d57600080fd5b5061032d61096c366004613640565b6119cc565b34801561097d57600080fd5b5061032d61098c366004613640565b611c84565b60006109d4858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611ca792505050565b6109e085856001611ce9565b95945050505050565b6000610a1b63ffffffff7f00000000000000000000000000000000000000000000000000000000000000001642613980565b905090565b42836001600160401b0316118015610a385750600034115b8015610a445750600185115b610a4d57600080fd5b6001600160801b03471115610a6157600080fd5b6000610a6b6109e9565b90506000610a9f63ffffffff7f00000000000000000000000000000000000000000000000000000000000000001686613994565b610aaa9060016139ba565b90506000610ab883836139e0565b61ffff16905060008882610acc3488612267565b610ad69190613980565b610ae09190613980565b90506000816001600160801b0316118015610b225750348986610b0c856001600160801b038616613a03565b610b169190613a03565b610b209190613a03565b145b610b2b57600080fd5b60005b89811015610c46576000610b6b8c8c84818110610b4d57610b4d613a22565b9050602002016020810190610b629190613754565b8b8b868b612273565b905060005b87811015610c31578160080160405180606001604052808b8b85818110610b9957610b99613a22565b9050602002016020810190610bae9190613640565b6001600160a01b03908116825260006020808401829052604093840182905285546001808201885596835291819020855160039093020180546001600160a01b031916929093169190911782558301519381019390935501516002909101805461ffff191661ffff90921691909117905580610c2981613a38565b915050610b70565b50508080610c3e90613a38565b915050610b2e565b506000610c5c6001600160801b0383168b613a03565b905060005b86811015610cb4576000888883818110610c7d57610c7d613a22565b9050602002016020810190610c929190613640565b9050610ca18787838787612412565b5080610cac81613a38565b915050610c61565b505050505050505050505050565b6000610a1b335b33600090815260056020526040812080546001600160801b031680610ced57600080fd5b81546001600160801b0319168255610d0e6001600160a01b038516826125e6565b6040518181526001600160a01b0385169033907fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb9060200160405180910390a39392505050565b6001600160801b03198116600090815260046020526040812060018101546001600160a01b031615610d945760018101546001600160a01b0316610da5565b805461010090046001600160a01b03165b9392505050565b6000546001600160a01b03163314610dc357600080fd5b816001600160801b0316836001600160801b031611158015610df75750806001600160801b0316826001600160801b031611155b610e0057600080fd5b60408051606080820183526001600160801b038681168084528682166020808601829052928716948601859052600160801b81028217600655600780546001600160801b031916861790558551918252918101919091529283019190915233917f3a93fb7c2385d29e9693a6edcd81c4cee090101cb783dc2f17a7814b79a2ecdc910160405180910390a2505050565b60006001600160a01b038216610ea557600080fd5b6001600160801b03198316600090815260046020526040902060018101546001600160a01b0316331480610ee75750805461010090046001600160a01b031633145b610ef057600080fd5b610efc84846000611ce9565b9150505b92915050565b6000546001600160a01b03163314610f1d57600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f9c57600080fd5b6001600160a01b03821660009081526005602052604090208054600160801b900461ffff16158015610fdc5750610fd16109e9565b61ffff168261ffff16105b610fe557600080fd5b805461ffff909216600160801b0261ffff60801b1990921691909117905550565b42836001600160401b031611801561101e5750600034115b61102757600080fd5b6001600160801b0347111561103b57600080fd5b60006110456109e9565b9050600061107963ffffffff7f00000000000000000000000000000000000000000000000000000000000000001686613994565b6110849060016139ba565b9050600061109283836139e0565b61ffff1690506000816110a53487612267565b6110af9190613980565b90506000816001600160801b03161180156110e6575034856110da846001600160801b038516613a03565b6110e49190613a03565b145b6110ef57600080fd5b60006110fe8a8a8a858a612273565b905060005b868110156111d857600088888381811061111f5761111f613a22565b90506020020160208101906111349190613640565b905061114c87878387886001600160801b0316612412565b604080516060810182526001600160a01b0392831681526000602080830182815293830182815260088801805460018082018355918552929093209351600390920290930180546001600160a01b03191691909516178455915191830191909155516002909101805461ffff191661ffff909216919091179055806111d081613a38565b915050611103565b5050505050505050505050565b6001600160a01b0381166000908152600560205260408120610da5816126ff565b6006546001600160801b0316811080159061122c57506007546001600160801b03168111155b6112a35760405162461bcd60e51b815260206004820152603f60248201527f546865207374616b65722773206d696e206665652072617465206d757374206660448201527f616c6c2077697468696e2074686520676c6f62616c206665652072616e67650060648201526084015b60405180910390fd5b33600090815260056020526040902060028101548214156112c2575050565b6002810182905560405182815233907f6b9024cc1bf5710f290be788dca9886db7a3d9be0df0855bfa991dbf26a256bc9060200160405180910390a25050565b60006001600160a01b03821661131757600080fd5b3361132184610d55565b6001600160a01b03161461133457600080fd5b610da583836001611ce9565b60006001600160a01b03831615801561135d57508161ffff16600b145b1561136a57506037610f00565b506001600160a01b038216600090815260056020908152604080832061ffff8516845260040190915290205492915050565b6000336113a883610d55565b6001600160a01b0316146113bb57600080fd5b610f008260006001611ce9565b60006001600160a01b0382166113dd57600080fd5b610da58383612769565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461141c57600080fd5b6001600160a01b038416600090815260056020526040902061143c6109e9565b815461ffff918216600160801b909104909116111561145a57600080fd5b61ffff84161561146e5761146e81856128ad565b61ffff8316156114825761148281846128ad565b61ffff8216158015906114a8575061ffff82166000908152600482016020526040902054155b156114cd5761ffff8216600090815260048201602052604090206001600160ff1b0390555b5050505050565b6114dd816129f2565b6008546001600160401b03166114fa826365a9af8760e01b612a4c565b6001600160401b03161461150d57600080fd5b600061151882612a65565b80516006549192506001600160801b03918216911614801561155357506020810151600654600160801b90046001600160801b039081169116145b8015611571575060408101516007546001600160801b039081169116145b61157a57600080fd5b600080805260046020527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec906115b08482612a96565b8254602082015191925061010090046001600160a01b0390811691161480156115ed5750600182015460408201516001600160a01b039081169116145b801561160d5750600282015460608201516001600160801b039081169116145b80156116345750600282015460808201516001600160401b03908116600160801b90920416145b801561165b5750600282015460a08201516001600160401b03908116600160c01b90920416145b8015611671575081548151151560ff9091161515145b61167a57600080fd5b600882015461169285636bd2af5760e01b6000612b52565b1461169c57600080fd5b600882015415611729576000826008016000815481106116be576116be613a22565b60009182526020822060039091020191506116da868280612b6d565b825481519192506001600160a01b039182169116148015611702575081600101548160200151145b801561171d57506002820154604082015161ffff9081169116145b61172657600080fd5b50505b600080805260056020527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc9061175f8682612ba9565b825481519192506001600160801b039182169116148015611787575081600101548160400151145b80156117a657508154602082015161ffff908116600160801b90920416145b80156117b9575081600201548160600151145b6117c257600080fd5b6117ce6000600b611340565b6117e387634740e52d60e11b6000600b612beb565b146117ed57600080fd5b505050505050565b6040516001600160801b0319831660208201526bffffffffffffffffffffffff19606083901b166030820152600090610da59060440160408051601f19818403018152919052604560f81b612c07565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461187a57600080fd5b6001600160a01b038116600090815260056020526040902061189a6109e9565b815461ffff918216600160801b90910490911610156118b857600080fd5b80546118ce90600160801b900461ffff16612e48565b815461ffff91909116600160801b0261ffff60801b19909116178155600060019091015550565b6001600160801b0319821660009081526004602052604081206008018054829182918291908690811061192a5761192a613a22565b60009182526020909120600390910201805460018201546002909201546001600160a01b039091169891975061ffff1695509350505050565b6001600160801b03198116600090815260046020526040902060018101546001600160a01b03163314806119a55750805461010090046001600160a01b031633145b6119ae57600080fd5b6119ba82600080611ce9565b505050565b6000610f00826000612769565b6119d581612eb1565b6008546001600160401b0316611a02576008805467ffffffffffffffff1916426001600160401b03161790555b50600460209081527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec80547f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ed8054306001600160a01b03199182161790915578020000000000000001000000000000000000000000000000037f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ee556001600160a81b0319909116336101000260ff1916176001908117909255604080516060810182526000808252600b82870181815260169484019485527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3f480549788018155835292517fdaf6a3df2e7fe032faba7f1c41811297bb73983780e1888a846f8aa1a8324d27600390970296870180549096166001600160a01b039091161790945590517fdaf6a3df2e7fe032faba7f1c41811297bb73983780e1888a846f8aa1a8324d2885015590517fdaf6a3df2e7fe032faba7f1c41811297bb73983780e1888a846f8aa1a8324d29909301805461ffff191661ffff909416939093179092557f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc805460217f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bd5571ffffffffffffffffffffffffffffffffffff1916702c0000000000000000000000000000006417905590527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746c0905260377f952b799cf669bea82d5c90b8e8004c707505141b802e28ecfb2a120a84cc5185556103097f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746be55565b6000546001600160a01b03163314611c9b57600080fd5b611ca481612f04565b50565b6000611cb384846117f5565b90506000611cc18284612f72565b9050806001600160a01b0316611cd686610d55565b6001600160a01b0316146114cd57600080fd5b6001600160801b031983166000908152600460205260408120805460ff16158015611d30575060085460028201546001600160401b03918216600160801b90910490911610155b611d3957600080fd5b6002810154600090611d82907f000000000000000000000000000000000000000000000000000000000000000063ffffffff1690600160c01b90046001600160401b0316613994565b611d8d9060016139ba565b600883015490915060005b6008840154811015612165576000846008018281548110611dbb57611dbb613a22565b6000918252602090912060039091020180549091506001600160a01b0316801580611e0b57506001600160a01b03891615801590611e0b5750806001600160a01b0316896001600160a01b031614155b15611e245783611e1a81613a53565b9450505050612153565b6000611e308784613031565b60028601805461ffff191661ffff92909216919091179055600185015590508815612037576001600160a01b0382166000908152600560209081526040808320600287015461ffff16808552600482019093529220546001600160ff1b031415611ec6576002890154611eab906001600160801b0316613a6a565b61ffff82166000908152600484016020526040902055611f02565b600289015461ffff82166000908152600484016020526040812080546001600160801b0390931692909190611efc908490613a87565b90915550505b61ffff881660009081526004830160205260409020546001600160ff1b031415611f5257600289015461ffff8916600090815260048401602052604090206001600160801b039091169055611f8e565b600289015461ffff89166000908152600484016020526040812080546001600160801b0390931692909190611f88908490613ac6565b90915550505b61ffff81166000908152600483016020526040902054611fc85761ffff8116600090815260048301602052604090206001600160ff1b0390555b61ffff881660009081526004830160205260409020546120025761ffff8816600090815260048301602052604090206001600160ff1b0390555b60028901546001600160801b031661201a828a6139e0565b61ffff166120289190613a03565b6120329084613b07565b925050505b888061204e5750600283015461ffff808816911610155b156120df5782546001600160a01b03191683556000600184015560028301805461ffff191690558461207f81613a53565b955050816001600160a01b0316336001600160a01b03168c6001600160801b0319167ff3b13df5bdd5efcb090f73617909a6295ee75815920224c512d784b2726812f1846040516120d291815260200190565b60405180910390a461212c565b6040518181526001600160a01b0383169033906001600160801b03198e16907fab654b569128c88ffcd210806a5e48ee14c541e2c76923f143281f20807090c19060200160405180910390a45b6121368189613b07565b97506001600160a01b038a161561214f57505050612165565b5050505b8061215d81613a38565b915050611d98565b83546001600160a01b03610100909104811690881661223257826121f45784546001600160a81b03191660019081178655850180546001600160a01b03191690556000600286015560405186815233906001600160801b03198b16907fd5ea25ba3600c386669c484639012a0ae266ed537f0c4ab71b651024736efff4906020015b60405180910390a3612242565b60405186815233906001600160801b03198b16907f51377f313f8c3404e86d38ae907b443ada38578fd6b9589d03f79d03ff9303c7906020016121e7565b6008850154821061224257600080fd5b851561225b5761225b6001600160a01b038216876125e6565b50505050509392505050565b6000610da58284613980565b6001600160801b03198516600081815260046020526040902090158015906122a6575060028101546001600160801b0316155b80156122b45750805460ff16155b6122bd57600080fd5b8054610100600160a81b0319163361010081029190911782556002820180546001600160801b03908116600160801b426001600160401b03908116919091026001600160c01b031691909117600160c01b91891691909102176001600160801b0319169086161790556001600160a01b0386161480159061234657506001600160a01b03851615155b15612369576001810180546001600160a01b0319166001600160a01b0387161790555b6001600160a01b0385161561237e5784612380565b335b6002820154604080516001600160801b03871681526001600160401b03600160801b840481166020830152600160c01b90930490921690820152606081018490526001600160a01b03919091169033906001600160801b03198916907f8e609dac02bd39ff24c8ad6bb9a735e739b56708b22159948ec9828ad765b4d19060800160405180910390a495945050505050565b6001600160a01b03831661242557600080fd5b6001600160a01b03831660009081526005602052604090208054600160801b900461ffff16158015906124665750805461ffff808816600160801b90920416105b80156124835750612476816126ff565b836001600160801b031610155b61248c57600080fd5b61ffff861660009081526004820160205260409020546001600160ff1b0314156124cd5761ffff8616600090815260048201602052604090208290556124f8565b61ffff86166000908152600482016020526040812080548492906124f2908490613ac6565b90915550505b61ffff851660009081526004820160205260409020546001600160ff1b0314156125405761252582613a6a565b61ffff8616600090815260048301602052604090205561256b565b61ffff8516600090815260048201602052604081208054849290612565908490613a87565b90915550505b61ffff861660009081526004820160205260409020546125a55761ffff8616600090815260048201602052604090206001600160ff1b0390555b61ffff851660009081526004820160205260409020546117ed5761ffff8516600090815260048201602052604090206001600160ff1b039055505050505050565b804710156126365760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161129a565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612683576040519150601f19603f3d011682016040523d82523d6000602084013e612688565b606091505b50509050806119ba5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161129a565b6000816002015460001480612724575060065460028301546001600160801b03909116115b8061273f575060075460028301546001600160801b03909116105b1561275c575050600654600160801b90046001600160801b031690565b506002015490565b919050565b6001600160801b03198216600090815260046020526040812060018101546001600160a01b03163314806127ab5750805461010090046001600160a01b031633145b80156127b95750805460ff16155b6127c257600080fd5b60005b60088201548110156128865760008260080182815481106127e8576127e8613a22565b6000918252602090912060039091020180549091506001600160a01b0316158061283257506001600160a01b03851615801590612832575080546001600160a01b03868116911614155b1561283d5750612874565b60006128498483613031565b5050905080856128599190613b07565b94506001600160a01b03861615612871575050612886565b50505b8061287e81613a38565b9150506127c5565b6001600160a01b038416156128a557600882015481106128a557600080fd5b505092915050565b8154600160801b900461ffff1615806128d65750815461ffff600160801b909104811690821611155b156128df575050565b81546000906128fa90600160801b900461ffff1660016139ba565b90505b8161ffff168161ffff161161298b5761ffff811660009081526004840160205260409020546001600160ff1b0381141561294d575061ffff81166000908152600484016020526040812055612979565b600184015461295c9082613495565b60018501555061ffff811660009081526004840160205260408120555b8061298381613b1f565b9150506128fd565b50815461ffff8216600160801b0261ffff60801b1982168117845560018401549184916000916129ca9185916001600160801b03918216911617613b41565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505050565b60028054600160a01b900460ff1614612a0a57600080fd5b6040513381526001600160a01b038216907f1e8d98c1b4a0d9bd2e2371026b632eb2773fcce41742e41f02f574ab69868d4c906020015b60405180910390a250565b600080612a5c84848380806134c2565b51949350505050565b6040805160608101825260008082526020820181905291810182905290610da5836365af62c360e01b8380806134c2565b612b2960405180610180016040528060001515815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160801b0316815260200160006001600160401b0316815260200160006001600160401b031681526020016000815260200160008152602001600081526020016000815260200160008152602001606081525090565b6000612b4a8463713c0e5760e01b60016001600160801b03198716856134c2565b949350505050565b600080612b638585600186856134c2565b5195945050505050565b60408051606081018252600080825260208201819052918101829052906109e08563d845f4fb60e01b60026001600160801b03198816876134c2565b604080516080810182526000808252602082018190529181018290526060810182905290612b4a8463189a5a1760e01b60016001600160a01b038716856134c2565b600080612bfc8686600287876134c2565b519695505050505050565b60006001600160f81b03198216612c54576040513090612c3690601960f81b9060009084908890602001613b9e565b60405160208183030381529060405280519060200120915050610f00565b6001600160f81b03198216604560f81b1415612e0057825180612cc95760405162461bcd60e51b815260206004820152602760248201527f456d707479206d657373616765206e6f7420616c6c6f77656420666f722076656044820152667273696f6e204560c81b606482015260840161129a565b60005b8115612cf25780612cdc81613a38565b9150612ceb9050600a83613980565b9150612ccc565b6000816001600160401b03811115612d0c57612d0c613be5565b6040519080825280601f01601f191660200182016040528015612d36576020820181803683370190505b50865193509050815b8315612da457612d50600a85613bfb565b612d5b906030613b07565b60f81b82612d6883613a53565b92508281518110612d7b57612d7b613a22565b60200101906001600160f81b031916908160001a905350612d9d600a85613980565b9350612d3f565b604051612ddf90601960f81b907f457468657265756d205369676e6564204d6573736167653a0a000000000000009085908b90602001613c0f565b60405160208183030381529060405280519060200120945050505050610f00565b60405162461bcd60e51b815260206004820152601a60248201527f556e737570706f72746564204549503139312076657273696f6e000000000000604482015260640161129a565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff167f000000000000000000000000000000000000000000000000000000000000000063ffffffff168361ffff16612ea79190613a03565b610f009190613980565b60028054600160a01b900460ff1614612ec957600080fd5b6040513381526001600160a01b038216907fd55ec27c5c6316913ed8803c18cfd1bfefea953db909dcba6140744a9d8b0d1f90602001612a41565b6001600160a01b038116612f1757600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008151604114612f8257600080fd5b60208201516040830151606084015160001a601b811015612fab57612fa8601b82613c44565b90505b8060ff16601b1480612fc057508060ff16601c145b612fc957600080fd5b60408051600081526020810180835288905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa15801561301c573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000807f000000000000000000000000000000000000000000000000000000000000000063ffffffff168660020160109054906101000a90046001600160401b03166130809190613994565b905060006130da61308f6109e9565b60028901546130d5907f000000000000000000000000000000000000000000000000000000000000000063ffffffff1690600160c01b90046001600160401b0316613994565b613512565b60028701549091506000906130f490849061ffff16613530565b87546040516390dcb51f60e01b81526001600160a01b03918216600482015291925060009182917f000000000000000000000000000000000000000000000000000000000000000016906390dcb51f90602401602060405180830381865afa158015613164573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131889190613c69565b60028a015490915060009061ffff1661323a578954604051634789d02d60e01b81526001600160a01b03918216600482015261ffff881660248201527f000000000000000000000000000000000000000000000000000000000000000090911690634789d02d90604401602060405180830381865afa15801561320f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132339190613c69565b9050613241565b5060018901545b8097505b8188101561337b578954604051638fa95a1560e01b81526001600160a01b039182166004820152602481018a905260009182917f000000000000000000000000000000000000000000000000000000000000000090911690638fa95a15906044016040805180830381865afa1580156132c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132e69190613c82565b915091508661ffff168261ffff16111561330157505061337b565b8561ffff168161ffff161015613318575050613369565b6133396133258784613530565b61332f8984613512565b61ffff1690613548565b6133449060016139ba565b61334e90866139ba565b94508061ffff168761ffff161161336657505061337b565b50505b8761337381613a38565b985050613245565b89546040516351f5e0c160e11b81526001600160a01b0391821660048201526000917f0000000000000000000000000000000000000000000000000000000000000000169063a3ebc18290602401602060405180830381865afa1580156133e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061340a9190613cb1565b9050828914801561342257508561ffff168161ffff16105b156134525761343b6134356001876139e0565b82613530565b61344590876139e0565b61344f90856139ba565b93505b60028c015461346f9061ffff8616906001600160801b0316613cce565b6001600160801b031699506134858660016139ba565b9750505050505050509250925092565b60008082126134af576134a8838361356c565b9050610f00565b6134a86134bb83613a6a565b8490613578565b60405184815283156134d5578260048201525b60018411156134e5578160248201525b6000808560200260040183895af48015613503573d6000833e613508565b600082fd5b5095945050505050565b60008161ffff168361ffff16106135295781610da5565b5090919050565b60008161ffff168361ffff1610156135295781610da5565b60008261ffff168261ffff16111561356257613562613cfd565b610da582846139e0565b6000610da58284613b07565b6000610da58284613d13565b80356001600160801b03198116811461276457600080fd5b6001600160a01b0381168114611ca457600080fd5b600080600080606085870312156135c757600080fd5b6135d085613584565b935060208501356135e08161359c565b925060408501356001600160401b03808211156135fc57600080fd5b818701915087601f83011261361057600080fd5b81358181111561361f57600080fd5b88602082850101111561363157600080fd5b95989497505060200194505050565b60006020828403121561365257600080fd5b8135610da58161359c565b60008083601f84011261366f57600080fd5b5081356001600160401b0381111561368657600080fd5b6020830191508360208260051b85010111156136a157600080fd5b9250929050565b80356001600160401b038116811461276457600080fd5b600080600080600080608087890312156136d857600080fd5b86356001600160401b03808211156136ef57600080fd5b6136fb8a838b0161365d565b9098509650602089013591506137108261359c565b81955061371f60408a016136a8565b9450606089013591508082111561373557600080fd5b5061374289828a0161365d565b979a9699509497509295939492505050565b60006020828403121561376657600080fd5b610da582613584565b80356001600160801b038116811461276457600080fd5b60008060006060848603121561379b57600080fd5b6137a48461376f565b92506137b26020850161376f565b91506137c06040850161376f565b90509250925092565b600080604083850312156137dc57600080fd5b6137e583613584565b915060208301356137f58161359c565b809150509250929050565b61ffff81168114611ca457600080fd5b6000806040838503121561382357600080fd5b823561382e8161359c565b915060208301356137f581613800565b60008060008060006080868803121561385657600080fd5b61385f86613584565b9450602086013561386f8161359c565b935061387d604087016136a8565b925060608601356001600160401b0381111561389857600080fd5b6138a48882890161365d565b969995985093965092949392505050565b6000602082840312156138c757600080fd5b5035919050565b600080600080608085870312156138e457600080fd5b84356138ef8161359c565b935060208501356138ff81613800565b9250604085013561390f81613800565b9150606085013561391f81613800565b939692955090935050565b6000806040838503121561393d57600080fd5b61394683613584565b946020939093013593505050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008261398f5761398f613954565b500490565b60006001600160401b03808416806139ae576139ae613954565b92169190910492915050565b600061ffff8083168185168083038211156139d7576139d761396a565b01949350505050565b600061ffff838116908316818110156139fb576139fb61396a565b039392505050565b6000816000190483118215151615613a1d57613a1d61396a565b500290565b634e487b7160e01b600052603260045260246000fd5b6000600019821415613a4c57613a4c61396a565b5060010190565b600081613a6257613a6261396a565b506000190190565b6000600160ff1b821415613a8057613a8061396a565b5060000390565b60008083128015600160ff1b850184121615613aa557613aa561396a565b6001600160ff1b0384018313811615613ac057613ac061396a565b50500390565b600080821280156001600160ff1b0384900385131615613ae857613ae861396a565b600160ff1b8390038412811615613b0157613b0161396a565b50500190565b60008219821115613b1a57613b1a61396a565b500190565b600061ffff80831681811415613b3757613b3761396a565b6001019392505050565b60006001600160801b038083168185168083038211156139d7576139d761396a565b6000815160005b81811015613b845760208185018101518683015201613b6a565b81811115613b93576000828601525b509290920192915050565b6001600160f81b0319858116825284166001820152606083901b6bffffffffffffffffffffffff191660028201526000613bdb6016830184613b63565b9695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082613c0a57613c0a613954565b500690565b6001600160f81b03198516815266ffffffffffffff19841660018201526000613bdb613c3e601a840186613b63565b84613b63565b600060ff821660ff84168060ff03821115613c6157613c6161396a565b019392505050565b600060208284031215613c7b57600080fd5b5051919050565b60008060408385031215613c9557600080fd5b8251613ca081613800565b60208401519092506137f581613800565b600060208284031215613cc357600080fd5b8151610da581613800565b60006001600160801b0380831681851681830481118215151615613cf457613cf461396a565b02949350505050565b634e487b7160e01b600052600160045260246000fd5b600082821015613d2557613d2561396a565b50039056fea264697066735822122054955a1253d1560a747b6409cc836f8aff98236db2c8975434d821ec25c0ce3a64736f6c634300080a0033",
  "deployedSourceMap": "520:33940:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26552:249;;;;;;;;;;-1:-1:-1;26552:249:12;;;;;:::i;:::-;;:::i;:::-;;;1299:25:41;;;1287:2;1272:18;26552:249:12;;;;;;;;5008:123;;;;;;;;;;;;;:::i;:::-;;;1509:6:41;1497:19;;;1479:38;;1467:2;1452:18;5008:123:12;1335:188:41;3423:42:12;;;;;;;;;;-1:-1:-1;3423:42:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3423:42:12;;;-1:-1:-1;;;3423:42:12;;;;;;;;;;;;;-1:-1:-1;;;;;2027:47:41;;;2009:66;;2123:6;2111:19;;;2106:2;2091:18;;2084:47;2147:18;;;2140:34;2205:2;2190:18;;2183:34;1996:3;1981:19;3423:42:12;1780:443:41;10125:1361:12;;;;;;:::i;:::-;;:::i;:::-;;16732:100;;;;;;;;;;;;;:::i;3327:40::-;;;;;;;;;;;;;;;;;;3936:10:41;3924:23;;;3906:42;;3894:2;3879:18;3327:40:12;3762:192:41;1026:29:26;;;;;;;;;;-1:-1:-1;1026:29:26;;;;-1:-1:-1;;;;;1026:29:26;;;;;;-1:-1:-1;;;;;4123:32:41;;;4105:51;;4093:2;4078:18;1026:29:26;3959:203:41;3148:75:12;;;;;;;;;;-1:-1:-1;3148:75:12;-1:-1:-1;;;;;3148:75:12;;16933:318;;;;;;;;;;-1:-1:-1;16933:318:12;;;;;:::i;:::-;;:::i;14491:208::-;;;;;;;;;;-1:-1:-1;14491:208:12;;;;;:::i;:::-;;:::i;6538:268::-;;;;;;;;;;-1:-1:-1;6538:268:12;;;;;:::i;:::-;;:::i;27286:335::-;;;;;;;;;;-1:-1:-1;27286:335:12;;;;;:::i;:::-;;:::i;3502:28::-;;;;;;;;;;-1:-1:-1;3502:28:12;;;;-1:-1:-1;;;;;3502:28:12;;;;;;-1:-1:-1;;;;;5818:31:41;;;5800:50;;5788:2;5773:18;3502:28:12;5656:200:41;3471:25:12;;;;;;;;;;-1:-1:-1;3471:25:12;;;;;;-1:-1:-1;;;;;3471:25:12;;;;-1:-1:-1;;;3471:25:12;;;;;;;;;;;;;-1:-1:-1;;;;;6134:15:41;;;6116:34;;6186:15;;;6181:2;6166:18;;6159:43;6238:15;;6218:18;;;6211:43;;;;6051:2;6036:18;3471:25:12;5861:399:41;28358:145:12;;;;;;;;;;-1:-1:-1;28358:145:12;;;;;:::i;:::-;-1:-1:-1;;;;;;28457:19:12;28431:7;28457:19;;;:8;:19;;;;;:32;;:39;;28358:145;3374:43;;;;;;;;;;-1:-1:-1;3374:43:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3374:43:12;;;;;;;;;;;;-1:-1:-1;;;;;3374:43:12;;;-1:-1:-1;;;;;;;;3374:43:12;;;;;-1:-1:-1;;;3374:43:12;;;;;;;;;;;;;;6724:14:41;;6717:22;6699:41;;-1:-1:-1;;;;;6814:15:41;;;6809:2;6794:18;;6787:43;6866:15;;;;6846:18;;;6839:43;;;;-1:-1:-1;;;;;6918:47:41;;;6913:2;6898:18;;6891:75;-1:-1:-1;;;;;7040:15:41;;;7034:3;7019:19;;7012:44;7093:15;;;;6767:3;7072:19;;7065:44;7140:3;7125:19;;7118:35;7184:3;7169:19;;7162:35;7228:3;7213:19;;7206:35;7272:3;7257:19;;7250:35;;;;7316:3;7301:19;;7294:36;6686:3;6671:19;3374:43:12;6265:1071:41;1381:137:34;;;;;;;;;;;;;:::i;5493:262:12:-;;;;;;;;;;-1:-1:-1;5493:262:12;;;;;:::i;:::-;;:::i;8671:1075::-;;;;;;:::i;:::-;;:::i;8187:165::-;;;;;;;;;;-1:-1:-1;8187:165:12;;;;;:::i;:::-;;:::i;6995:467::-;;;;;;;;;;-1:-1:-1;6995:467:12;;;;;:::i;:::-;;:::i;25066:273::-;;;;;;;;;;-1:-1:-1;25066:273:12;;;;;:::i;:::-;;:::i;693:77:34:-;;;;;;;;;;-1:-1:-1;731:7:34;757:6;-1:-1:-1;;;;;757:6:34;693:77;;28660:369:12;;;;;;;;;;-1:-1:-1;28660:369:12;;;;;:::i;:::-;;:::i;1013:90:34:-;;;;;;;;;;-1:-1:-1;1053:4:34;1090:6;-1:-1:-1;;;;;1090:6:34;1076:10;:20;1013:90;;8928:14:41;;8921:22;8903:41;;8891:2;8876:18;1013:90:34;8763:187:41;24710:208:12;;;;;;;;;;-1:-1:-1;24710:208:12;;;;;:::i;:::-;;:::i;28018:231::-;;;;;;;;;;-1:-1:-1;28018:231:12;;;;;:::i;:::-;;:::i;15046:820::-;;;;;;;;;;-1:-1:-1;15046:820:12;;;;;:::i;:::-;;:::i;31249:2239::-;;;;;;;;;;-1:-1:-1;31249:2239:12;;;;;:::i;:::-;;:::i;25543:193::-;;;;;;;;;;-1:-1:-1;25543:193:12;;;;;:::i;:::-;;:::i;5872:442::-;;;;;;;;;;-1:-1:-1;5872:442:12;;;;;:::i;:::-;;:::i;912:21:26:-;;;;;;;;;;-1:-1:-1;912:21:26;;;;-1:-1:-1;;;;;912:21:26;;;3274:47:12;;;;;;;;;;;;;;;29105:519;;;;;;;;;;-1:-1:-1;29105:519:12;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;10284:32:41;;;10266:51;;10348:2;10333:18;;10326:34;;;;10408:6;10396:19;10376:18;;;10369:47;10254:2;10239:18;29105:519:12;10066:356:41;26903:238:12;;;;;;;;;;-1:-1:-1;26903:238:12;;;;;:::i;:::-;;:::i;3230:38::-;;;;;;;;;;;;;;;1185:22:26;;;;;;;;;;-1:-1:-1;1185:22:26;;;;-1:-1:-1;;;1185:22:26;;;;;;;;;10829:4:41;10817:17;;;10799:36;;10787:2;10772:18;1185:22:26;10657:184:41;27716:183:12;;;;;;;;;;-1:-1:-1;27716:183:12;;;;;:::i;:::-;;:::i;33592:866::-;;;;;;;;;;-1:-1:-1;33592:866:12;;;;;:::i;:::-;;:::i;1689:115:34:-;;;;;;;;;;-1:-1:-1;1689:115:34;;;;;:::i;:::-;;:::i;26552:249:12:-;26655:19;26690:49;26710:9;26721:5;26728:10;;26690:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26690:19:12;;-1:-1:-1;;;26690:49:12:i;:::-;26756:38;26771:9;26782:5;26789:4;26756:14;:38::i;:::-;26749:45;26552:249;-1:-1:-1;;;;;26552:249:12:o;5008:123::-;5057:6;5089:34;;5107:16;5089:34;:15;:34;:::i;:::-;5075:49;;5008:123;:::o;10125:1361::-;10365:15;10349:13;-1:-1:-1;;;;;10349:31:12;;:60;;;;;10408:1;10396:9;:13;10349:60;:97;;;;-1:-1:-1;10445:1:12;10425:21;;10349:97;10328:128;;;;;;-1:-1:-1;;;;;10475:21:12;:36;;10467:45;;;;;;10522:20;10545:18;:16;:18::i;:::-;10522:41;-1:-1:-1;10573:16:12;10599:32;;10615:16;10599:32;:13;:32;:::i;:::-;10592:44;;10635:1;10592:44;:::i;:::-;10573:63;-1:-1:-1;10646:23:12;10672:25;10684:13;10573:63;10672:25;:::i;:::-;10646:51;;;-1:-1:-1;10708:15:12;10783:10;10646:51;10734:28;:9;10748:6;10734:13;:28::i;:::-;:46;;;;:::i;:::-;:66;;;;:::i;:::-;10708:93;;10829:1;10819:7;-1:-1:-1;;;;;10819:11:12;;:89;;;;-1:-1:-1;10899:9:12;10878:10;10862:6;10834:25;10844:15;-1:-1:-1;;;;;10834:25:12;;;:::i;:::-;:41;;;;:::i;:::-;:61;;;;:::i;:::-;:74;10819:89;10811:98;;;;;;10925:9;10920:326;10940:21;;;10920:326;;;10982:21;11006:80;11019:10;;11030:1;11019:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;11034:12;11048:13;11063:7;11072:6;11006:12;:80::i;:::-;10982:104;;11106:9;11101:135;11121:17;;;11101:135;;;11163:6;:19;;11188:32;;;;;;;;11204:6;;11211:1;11204:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11188:32:12;;;;;11215:1;11188:32;;;;;;;;;;;;;;11163:58;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;11163:58:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11163:58:12;11188:32;11163:58;;;;;;;;;11140:3;;;;:::i;:::-;;;;11101:135;;;;10968:278;10963:3;;;;;:::i;:::-;;;;10920:326;;;-1:-1:-1;11256:10:12;11276:27;-1:-1:-1;;;;;11276:27:12;;:10;:27;:::i;:::-;11256:48;;11320:9;11315:165;11335:17;;;11315:165;;;11373:12;11388:6;;11395:1;11388:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;11373:24;;11411:58;11424:13;11439:9;11450:4;11456:7;11465:3;11411:12;:58::i;:::-;-1:-1:-1;11354:3:12;;;;:::i;:::-;;;;11315:165;;;;10318:1168;;;;;10125:1361;;;;;;:::o;16732:100::-;16770:7;16796:29;16813:10;16933:318;17044:10;16995:7;17038:17;;;:5;:17;;;;;17079:8;;-1:-1:-1;;;;;17079:8:12;17105;17097:17;;;;;;17124:12;;-1:-1:-1;;;;;;17124:12:12;;;17146:25;-1:-1:-1;;;;;17146:20:12;;17167:3;17146:20;:25::i;:::-;17186:38;;1299:25:41;;;-1:-1:-1;;;;;17186:38:12;;;17196:10;;17186:38;;1287:2:41;1272:18;17186:38:12;;;;;;;17241:3;16933:318;-1:-1:-1;;;16933:318:12:o;14491:208::-;-1:-1:-1;;;;;;14598:19:12;;14555:7;14598:19;;;:8;:19;;;;;14634:12;;;;-1:-1:-1;;;;;14634:12:12;:26;:58;;14680:12;;;;-1:-1:-1;;;;;14680:12:12;14634:58;;;14663:14;;;;;-1:-1:-1;;;;;14663:14:12;14634:58;14627:65;14491:208;-1:-1:-1;;;14491:208:12:o;6538:268::-;1053:4:34;1090:6;-1:-1:-1;;;;;1090:6:34;1076:10;:20;889:18;;;;;;6654:8:12::1;-1:-1:-1::0;;;;;6646:16:12::1;:4;-1:-1:-1::0;;;;;6646:16:12::1;;;:36;;;;;6678:4;-1:-1:-1::0;;;;;6666:16:12::1;:8;-1:-1:-1::0;;;;;6666:16:12::1;;;6646:36;6638:45;;;::::0;::::1;;6708:27;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;6708:27:12;;::::1;::::0;;;;;::::1;;::::0;;::::1;::::0;;;;;::::1;::::0;;;;;;-1:-1:-1;;;6693:42:12;::::1;::::0;::::1;:12;:42:::0;;;;-1:-1:-1;;;;;;6693:42:12::1;::::0;::::1;::::0;;6750:49;;6116:34:41;;;6166:18;;;6159:43;;;;6218:18;;;6211:43;;;;6766:10:12::1;::::0;6750:49:::1;::::0;6036:18:41;6750:49:12::1;;;;;;;6538:268:::0;;;:::o;27286:335::-;27362:19;-1:-1:-1;;;;;27405:22:12;;27397:31;;;;;;-1:-1:-1;;;;;;27462:19:12;;27438:21;27462:19;;;:8;:19;;;;;27499:12;;;;-1:-1:-1;;;;;27499:12:12;27515:10;27499:26;;:58;;-1:-1:-1;27529:14:12;;;;;-1:-1:-1;;;;;27529:14:12;27547:10;27529:28;27499:58;27491:67;;;;;;27575:39;27590:9;27601:5;27608;27575:14;:39::i;:::-;27568:46;;;27286:335;;;;;:::o;1381:137:34:-;1053:4;1090:6;-1:-1:-1;;;;;1090:6:34;1076:10;:20;889:18;;;;;;1479:1:::1;1463:6:::0;;1442:40:::1;::::0;-1:-1:-1;;;;;1463:6:34;;::::1;::::0;1442:40:::1;::::0;1479:1;;1442:40:::1;1509:1;1492:19:::0;;-1:-1:-1;;;;;;1492:19:34::1;::::0;;1381:137::o;5493:262:12:-;4900:10;-1:-1:-1;;;;;4922:6:12;4900:29;;4892:38;;;;;;-1:-1:-1;;;;;5608:12:12;::::1;5580:25;5608:12:::0;;;:5:::1;:12;::::0;;;;5638:26;;-1:-1:-1;;;5638:26:12;::::1;;;:31:::0;:63;::::1;;;;5683:18;:16;:18::i;:::-;5673:28;;:7;:28;;;5638:63;5630:72;;;::::0;::::1;;5712:36:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;5712:36:12::1;-1:-1:-1::0;;;;5712:36:12;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;5493:262:12:o;8671:1075::-;8897:15;8881:13;-1:-1:-1;;;;;8881:31:12;;:60;;;;;8940:1;8928:9;:13;8881:60;8860:91;;;;;;-1:-1:-1;;;;;8970:21:12;:36;;8962:45;;;;;;9017:20;9040:18;:16;:18::i;:::-;9017:41;-1:-1:-1;9068:16:12;9094:32;;9110:16;9094:32;:13;:32;:::i;:::-;9087:44;;9130:1;9087:44;:::i;:::-;9068:63;-1:-1:-1;9141:23:12;9167:25;9179:13;9068:63;9167:25;:::i;:::-;9141:51;;;-1:-1:-1;9203:15:12;9141:51;9229:28;:9;9243:6;9229:13;:28::i;:::-;:46;;;;:::i;:::-;9203:73;;9304:1;9294:7;-1:-1:-1;;;;;9294:11:12;;:70;;;;-1:-1:-1;9355:9:12;9337:6;9309:25;9319:15;-1:-1:-1;;;;;9309:25:12;;;:::i;:::-;:41;;;;:::i;:::-;:55;9294:70;9286:79;;;;;;9376:21;9400:76;9413:9;9424:12;9438:13;9453:7;9462:6;9400:12;:76::i;:::-;9376:100;;9492:9;9487:253;9507:17;;;9487:253;;;9545:12;9560:6;;9567:1;9560:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;9545:24;;9583:79;9596:13;9611:9;9622:4;9628:7;9652;-1:-1:-1;;;;;9644:16:12;9583:12;:79::i;:::-;9701:27;;;;;;;;-1:-1:-1;;;;;9701:27:12;;;;;-1:-1:-1;9701:27:12;;;;;;;;;;;;;9676:19;;;:53;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9676:53:12;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9676:53:12;9701:27;9676:53;;;;;;;;;9526:3;;;;:::i;:::-;;;;9487:253;;;;8850:896;;;;;8671:1075;;;;;:::o;8187:165::-;-1:-1:-1;;;;;8293:12:12;;8246:7;8293:12;;;:5;:12;;;;;8322:23;8293:12;8322:13;:23::i;6995:467::-;7081:12;:16;-1:-1:-1;;;;;7081:16:12;7066:31;;;;;:78;;-1:-1:-1;7128:16:12;;-1:-1:-1;;;;;7128:16:12;7113:31;;;7066:78;7058:166;;;;-1:-1:-1;;;7058:166:12;;12941:2:41;7058:166:12;;;12923:21:41;12980:2;12960:18;;;12953:30;13019:34;12999:18;;;12992:62;13090:33;13070:18;;;13063:61;13141:19;;7058:166:12;;;;;;;;;7268:10;7234:25;7262:17;;;:5;:17;;;;;7293:19;;;;:34;;7289:71;;;7343:7;6995:467;:::o;7289:71::-;7369:19;;;:33;;;7417:38;;1299:25:41;;;7431:10:12;;7417:38;;1287:2:41;1272:18;7417:38:12;;;;;;;7048:414;6995:467;:::o;25066:273::-;25153:19;-1:-1:-1;;;;;25196:22:12;;25188:31;;;;;;25266:10;25237:25;25252:9;25237:14;:25::i;:::-;-1:-1:-1;;;;;25237:39:12;;25229:48;;;;;;25294:38;25309:9;25320:5;25327:4;25294:14;:38::i;28660:369::-;28832:6;-1:-1:-1;;;;;28901:22:12;;;:39;;;;;28927:7;:13;;28938:2;28927:13;28901:39;28897:79;;;-1:-1:-1;28963:2:12;28956:9;;28897:79;-1:-1:-1;;;;;;28992:12:12;;;;;;:5;:12;;;;;;;;:30;;;;;:21;;:30;;;;;;28660:369;;;;:::o;24710:208::-;24769:19;24837:10;24808:25;24823:9;24808:14;:25::i;:::-;-1:-1:-1;;;;;24808:39:12;;24800:48;;;;;;24865:46;24880:9;3023:1;24906:4;24865:14;:46::i;28018:231::-;28113:19;-1:-1:-1;;;;;28156:22:12;;28148:31;;;;;;28196:46;28225:9;28236:5;28196:28;:46::i;15046:820::-;4900:10;-1:-1:-1;;;;;4922:6:12;4900:29;;4892:38;;;;;;-1:-1:-1;;;;;15267:12:12;::::1;15243:21;15267:12:::0;;;:5:::1;:12;::::0;;;;15391:18:::1;:16;:18::i;:::-;15365:22:::0;;:44:::1;::::0;;::::1;-1:-1:-1::0;;;15365:22:12;;::::1;::::0;;::::1;:44;;15357:53;;;::::0;::::1;;15424:22;::::0;::::1;::::0;15420:87:::1;;15462:34;15472:4;15478:17;15462:9;:34::i;:::-;15520:22;::::0;::::1;::::0;15516:87:::1;;15558:34;15568:4;15574:17;15558:9;:34::i;:::-;15712:24;::::0;::::1;::::0;;::::1;::::0;:67:::1;;-1:-1:-1::0;15740:34:12::1;::::0;::::1;;::::0;;;:13:::1;::::0;::::1;:34;::::0;;;;;:39;15712:67:::1;15708:152;;;15795:34;::::0;::::1;;::::0;;;:13:::1;::::0;::::1;:34;::::0;;;;-1:-1:-1;;;;;15795:54:12;;15708:152:::1;15233:633;15046:820:::0;;;;:::o;31249:2239::-;31325:30;31343:11;31325:17;:30::i;:::-;31439:14;;-1:-1:-1;;;;;31439:14:12;31380:54;31392:11;-1:-1:-1;;;31380:11:12;:54::i;:::-;-1:-1:-1;;;;;31373:80:12;;31365:89;;;;;;31465:25;31493:36;31517:11;31493:23;:36::i;:::-;31567:16;;31547:12;:16;31465:64;;-1:-1:-1;;;;;;31547:16:12;;;:36;;;:106;;;;-1:-1:-1;31628:25:12;;;;31599:12;:25;-1:-1:-1;;;31599:25:12;;-1:-1:-1;;;;;31599:25:12;;;:54;;;31547:106;:158;;;;-1:-1:-1;31689:16:12;;;;31669;;-1:-1:-1;;;;;31669:16:12;;;:36;;;31547:158;31539:167;;;;;;31717:21;31741:28;;;:8;:28;;;;31809:50;31827:11;31717:21;31809:17;:50::i;:::-;31902:14;;31877:21;;;;;;-1:-1:-1;31902:14:12;;;-1:-1:-1;;;;;31902:14:12;;;31877:39;;;:90;;;;-1:-1:-1;31955:12:12;;;;31932:19;;;;-1:-1:-1;;;;;31932:35:12;;;31955:12;;31932:35;31877:90;:145;;;;-1:-1:-1;32008:14:12;;;;31983:21;;;;-1:-1:-1;;;;;31983:39:12;;;32008:14;;31983:39;31877:145;:214;;;;-1:-1:-1;32070:21:12;;;;32038:28;;;;-1:-1:-1;;;;;32038:53:12;;;-1:-1:-1;;;32070:21:12;;;;32038:53;31877:214;:279;;;;-1:-1:-1;32137:19:12;;;;32107:26;;;;-1:-1:-1;;;;;32107:49:12;;;-1:-1:-1;;;32137:19:12;;;;32107:49;31877:279;:336;;;;-1:-1:-1;32198:15:12;;32172:22;;:41;;32198:15;;;;32172:41;;;31877:336;31869:345;;;;;;32330:19;;;:26;32233:81;32245:11;-1:-1:-1;;;2965:1:12;32233:11;:81::i;:::-;:123;32225:132;;;;;;32371:19;;;:26;:30;32367:514;;32417:35;32455:6;:19;;32475:1;32455:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;32535:79:12;32579:11;32455:22;;32535:26;:79::i;:::-;32663:16;;32636:23;;32491:123;;-1:-1:-1;;;;;;32636:43:12;;;32663:16;;32636:43;:142;;;;;32744:11;:34;;;32699:18;:41;;;:79;32636:142;:233;;;;-1:-1:-1;32839:30:12;;;;32798:37;;;;32839:30;32798:71;;;32839:30;;32798:71;32636:233;32628:242;;;;;;32403:478;;32367:514;32891:25;32919:20;;;:5;:20;;;;32989:47;33009:11;32891:25;32989:19;:47::i;:::-;33077:12;;33054:19;;32949:87;;-1:-1:-1;;;;;;33054:35:12;;;33077:12;;33054:35;:94;;;;;33132:8;:16;;;33105:15;:23;;;:43;33054:94;:173;;;;-1:-1:-1;33201:26:12;;33164:33;;;;33201:26;33164:63;;;-1:-1:-1;;;33201:26:12;;;;33164:63;33054:173;:238;;;;;33273:8;:19;;;33243:15;:26;;;:49;33054:238;33046:247;;;;;;33446:34;3023:1;33477:2;33446:15;:34::i;:::-;33319:122;33331:11;-1:-1:-1;;;3023:1:12;33436:2;33319:11;:122::i;:::-;33312:168;33304:177;;;;;;31315:2173;;;;;31249:2239;:::o;25543:193::-;25680:34;;-1:-1:-1;;;;;;13340:52:41;;25680:34:12;;;13328:65:41;-1:-1:-1;;13431:2:41;13427:15;;;13423:53;13409:12;;;13402:75;25625:7:12;;25651:78;;13493:12:41;;25680:34:12;;;-1:-1:-1;;25680:34:12;;;;;;;;;-1:-1:-1;;;25651:28:12;:78::i;5872:442::-;4900:10;-1:-1:-1;;;;;4922:6:12;4900:29;;4892:38;;;;;;-1:-1:-1;;;;;5970:12:12;::::1;5942:25;5970:12:::0;;;:5:::1;:12;::::0;;;;6174:18:::1;:16;:18::i;:::-;6144:26:::0;;:48:::1;::::0;;::::1;-1:-1:-1::0;;;6144:26:12;;::::1;::::0;;::::1;:48;;6136:57;;;::::0;::::1;;6250:26:::0;;6232:45:::1;::::0;-1:-1:-1;;;6250:26:12;::::1;;;6232:17;:45::i;:::-;6203:74:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;6203:74:12::1;-1:-1:-1::0;;;;6203:74:12;;::::1;;::::0;;:26:::1;-1:-1:-1::0;6287:16:12;;::::1;:20:::0;-1:-1:-1;5872:442:12:o;29105:519::-;-1:-1:-1;;;;;;29435:19:12;;29317:12;29435:19;;;:8;:19;;;;;:32;;:40;;29317:12;;;;;;29435:32;29468:6;;29435:40;;;;;;:::i;:::-;;;;;;;;;;;;;;29492:9;;;29536:27;;;29594:23;;;;;-1:-1:-1;;;;;29492:9:12;;;;29536:27;;-1:-1:-1;29594:23:12;;;-1:-1:-1;29105:519:12;-1:-1:-1;;;;29105:519:12:o;26903:238::-;-1:-1:-1;;;;;;26981:19:12;;26957:21;26981:19;;;:8;:19;;;;;27018:12;;;;-1:-1:-1;;;;;27018:12:12;27034:10;27018:26;;:58;;-1:-1:-1;27048:14:12;;;;;-1:-1:-1;;;;;27048:14:12;27066:10;27048:28;27018:58;27010:67;;;;;;27087:47;27102:9;3023:1;27128:5;27087:14;:47::i;:::-;;26947:194;26903:238;:::o;27716:183::-;27796:19;27838:54;27867:9;3023:1;27838:28;:54::i;33592:866::-;33666:28;33686:7;33666:19;:28::i;:::-;33709:14;;-1:-1:-1;;;;;33709:14:12;33705:90;;33744:14;:40;;-1:-1:-1;;33744:40:12;33768:15;-1:-1:-1;;;;;33744:40:12;;;;33705:90;-1:-1:-1;33908:8:12;:28;;;;;33946:36;;33992:12;:28;;34015:4;-1:-1:-1;;;;;;33992:28:12;;;;;;;34098:18;34030:21;34098:18;-1:-1:-1;;;;;;34126:22:12;;;33971:10;33946:36;;-1:-1:-1;;34126:22:12;;-1:-1:-1;34126:22:12;;;;;;33908:28;34183:38;;;;;;;-1:-1:-1;34183:38:12;;;34214:2;34183:38;;;;;;34218:2;34183:38;;;;;;34158:19;:64;;;;;;;;;;;;34115:1;34158:64;;;;;;;;;;;-1:-1:-1;;;;;34158:64:12;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;34158:64:12;34183:38;34158:64;;;;;;;;;;34260:20;34290:18;;34337:2;34318:16;:21;-1:-1:-1;;34349:31:12;;;;;34390:21;;:17;:21;;34414:2;34390:21;:26;34448:3;34426:19;:25;33592:866::o;1689:115:34:-;1053:4;1090:6;-1:-1:-1;;;;;1090:6:34;1076:10;:20;889:18;;;;;;1769:28:::1;1788:8;1769:18;:28::i;:::-;1689:115:::0;:::o;25970:299:12:-;26082:12;26097:35;26115:9;26126:5;26097:17;:35::i;:::-;26082:50;;26142:17;26162:43;26188:4;26194:10;26162:25;:43::i;:::-;26142:63;;26252:9;-1:-1:-1;;;;;26223:38:12;:25;26238:9;26223:14;:25::i;:::-;-1:-1:-1;;;;;26223:38:12;;26215:47;;;;;19794:3689;-1:-1:-1;;;;;;19981:19:12;;19897;19981;;;:8;:19;;;;;20019:15;;;;20018:16;:59;;;;-1:-1:-1;20063:14:12;;20038:21;;;;-1:-1:-1;;;;;20063:14:12;;;-1:-1:-1;;;20038:21:12;;;;;;:39;;20018:59;20010:68;;;;;;20114:19;;;;20088:16;;20114:38;;20136:16;20114:38;;;-1:-1:-1;;;20114:19:12;;-1:-1:-1;;;;;20114:19:12;:38;:::i;:::-;20107:50;;20156:1;20107:50;:::i;:::-;20192:19;;;:26;20088:69;;-1:-1:-1;20167:22:12;20251:2417;20262:19;;;:26;20258:30;;20251:2417;;;20309:35;20347:6;:19;;20367:1;20347:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;20398:16;;20347:22;;-1:-1:-1;;;;;;20398:16:12;20432:21;;;:64;;-1:-1:-1;;;;;;20457:22:12;;;;;;:39;;;20492:4;-1:-1:-1;;;;;20483:13:12;:5;-1:-1:-1;;;;;20483:13:12;;;20457:39;20428:145;;;20516:16;;;;:::i;:::-;;;;20550:8;;;;20428:145;20586:23;20727:41;20748:6;20756:11;20727:20;:41::i;:::-;20677:30;;;20623:145;;-1:-1:-1;;20623:145:12;;;;;;;;;;;;-1:-1:-1;20641:34:12;;20623:145;;-1:-1:-1;20782:1271:12;;;;-1:-1:-1;;;;;20846:11:12;;20818:25;20846:11;;;:5;:11;;;;;;;;20956:30;;;;;;21008:37;;;:17;;;:37;;;;;;-1:-1:-1;;;;;21008:58:12;21004:296;;;21146:14;;;;21130:32;;-1:-1:-1;;;;;21146:14:12;21130:32;:::i;:::-;21090:37;;;;;;;:17;;;:37;;;;;:72;21004:296;;;21265:14;;;;21209:37;;;21265:14;21209:37;;;:17;;;:37;;;;;:72;;-1:-1:-1;;;;;21265:14:12;;;;21209:37;;21265:14;21209:72;;21265:14;;21209:72;:::i;:::-;;;;-1:-1:-1;;21004:296:12;21321:28;;;;;;;:17;;;:28;;;;;;-1:-1:-1;;;;;21321:49:12;21317:268;;;21440:14;;;;21394:28;;;21440:14;21394:28;;;:17;;;:28;;;;;-1:-1:-1;;;;;21440:14:12;;;21394:62;;21317:268;;;21550:14;;;;21503:28;;;21550:14;21503:28;;;:17;;;:28;;;;;:63;;-1:-1:-1;;;;;21550:14:12;;;;21503:28;;21550:14;21503:63;;21550:14;;21503:63;:::i;:::-;;;;-1:-1:-1;;21317:268:12;21659:37;;;;;;;:17;;;:37;;;;;;21655:146;;21725:37;;;;;;;:17;;;:37;;;;;-1:-1:-1;;;;;21725:57:12;;21655:146;21822:28;;;;;;;:17;;;:28;;;;;;21818:128;;21879:28;;;;;;;:17;;;:28;;;;;-1:-1:-1;;;;;21879:48:12;;21818:128;22024:14;;;;-1:-1:-1;;;;;22024:14:12;21990:30;22002:18;21990:9;:30;:::i;:::-;21982:39;;:56;;;;:::i;:::-;21963:75;;;;:::i;:::-;;;20800:1253;;20782:1271;22070:12;:59;;;-1:-1:-1;22086:30:12;;;;:43;;;;:30;;:43;;22070:59;22066:469;;;22149:32;;-1:-1:-1;;;;;;22149:32:12;;;3023:1;22149:32;22199:34;;:38;22255:30;;;:34;;-1:-1:-1;;22255:34:12;;;22307:16;;;;:::i;:::-;;;;22388:4;-1:-1:-1;;;;;22346:64:12;22376:10;-1:-1:-1;;;;;22346:64:12;22365:9;-1:-1:-1;;;;;22346:64:12;;;22394:15;22346:64;;;;1299:25:41;;1287:2;1272:18;;1153:177;22346:64:12;;;;;;;;22066:469;;;22454:66;;1299:25:41;;;-1:-1:-1;;;;;22454:66:12;;;22486:10;;-1:-1:-1;;;;;;22454:66:12;;;;;1287:2:41;1272:18;22454:66:12;;;;;;;22066:469;22549:30;22564:15;22549:30;;:::i;:::-;;-1:-1:-1;;;;;;22597:22:12;;;22593:65;;22638:5;;;;;22593:65;20295:2373;;;20251:2417;20290:3;;;;:::i;:::-;;;;20251:2417;;;22709:14;;-1:-1:-1;;;;;22709:14:12;;;;;;;22737:22;;22733:653;;22779:19;22775:494;;22818:22;;-1:-1:-1;;;;;;22888:36:12;22836:4;22888:36;;;;;22942:12;;:25;;-1:-1:-1;;;;;;22942:25:12;;;-1:-1:-1;22985:14:12;;;23064:23;23110:49;;1299:25:41;;;23135:10:12;;-1:-1:-1;;;;;;23110:49:12;;;;;1287:2:41;1272:18;23110:49:12;;;;;;;;22733:653;;22775:494;23203:51;;1299:25:41;;;23230:10:12;;-1:-1:-1;;;;;;23203:51:12;;;;;1287:2:41;1272:18;23203:51:12;1153:177:41;22733:653:12;23348:19;;;:26;23344:30;;23336:39;;;;;;23399:15;;23395:82;;23430:36;-1:-1:-1;;;;;23430:23:12;;23454:11;23430:23;:36::i;:::-;19922:3561;;;;;19794:3689;;;;;:::o;3836:96:33:-;3894:7;3920:5;3924:1;3920;:5;:::i;11817:986:12:-;-1:-1:-1;;;;;;12060:19:12;;12014:21;12060:19;;;:8;:19;;;;;;12110:31;;;;:66;;-1:-1:-1;12157:14:12;;;;-1:-1:-1;;;;;12157:14:12;:19;12110:66;:98;;;;-1:-1:-1;12193:15:12;;;;12192:16;12110:98;12089:129;;;;;;12229:36;;-1:-1:-1;;;;;;12229:36:12;12254:10;12229:36;;;;;;;;;12275:21;;;:47;;-1:-1:-1;;;;;12332:35:12;;;-1:-1:-1;;;12306:15:12;-1:-1:-1;;;;;12275:47:12;;;;;;;-1:-1:-1;;;;;12332:35:12;;;;;-1:-1:-1;;;12332:35:12;;;;;;;;-1:-1:-1;;;;;;12377:25:12;;;;;;;-1:-1:-1;;;;;12417:26:12;;;;;;:56;;-1:-1:-1;;;;;;12447:26:12;;;;12417:56;12413:114;;;12489:12;;;:27;;-1:-1:-1;;;;;;12489:27:12;-1:-1:-1;;;;;12489:27:12;;;;;12413:114;-1:-1:-1;;;;;12616:26:12;;;:54;;12658:12;12616:54;;;12645:10;12616:54;12706:21;;;;12542:254;;;-1:-1:-1;;;;;14718:47:41;;14700:66;;-1:-1:-1;;;;;;;;12706:21:12;;;;14834:2:41;14819:18;;14812:43;-1:-1:-1;;;12741:19:12;;;;;;14871:18:41;;;14864:43;14938:2;14923:18;;14916:34;;;-1:-1:-1;;;;;12542:254:12;;;;;12592:10;;-1:-1:-1;;;;;;12542:254:12;;;;;14687:3:41;14672:19;12542:254:12;;;;;;;11817:986;;;;;;;:::o;13112:1327::-;-1:-1:-1;;;;;13318:22:12;;13310:31;;;;;;-1:-1:-1;;;;;13379:12:12;;13351:25;13379:12;;;:5;:12;;;;;13409:26;;-1:-1:-1;;;13409:26:12;;;;:31;;;;:90;;-1:-1:-1;13456:26:12;;:43;;;;-1:-1:-1;;;13456:26:12;;;;:43;13409:90;:141;;;;;13527:23;13541:8;13527:13;:23::i;:::-;13515:8;-1:-1:-1;;;;;13515:35:12;;;13409:141;13401:150;;;;;;13609:33;;;;;;;:17;;;:33;;;;;;-1:-1:-1;;;;;13609:54:12;13605:313;;;13679:33;;;;;;;:17;;;:33;;;;;:51;;;13605:313;;;13855:33;;;;;;;:17;;;:33;;;;;:52;;13892:15;;13855:33;:52;;13892:15;;13855:52;:::i;:::-;;;;-1:-1:-1;;13605:313:12;13931:29;;;;;;;:17;;;:29;;;;;;-1:-1:-1;;;;;13931:50:12;13927:208;;;14029:16;14030:15;14029:16;:::i;:::-;13997:29;;;;;;;:17;;;:29;;;;;:48;13927:208;;;14076:29;;;;;;;:17;;;:29;;;;;:48;;14109:15;;14076:29;:48;;14109:15;;14076:48;:::i;:::-;;;;-1:-1:-1;;13927:208:12;14192:33;;;;;;;:17;;;:33;;;;;;14188:122;;14246:33;;;;;;;:17;;;:33;;;;;-1:-1:-1;;;;;14246:53:12;;14188:122;14323:29;;;;;;;:17;;;:29;;;;;;14319:114;;14373:29;;;;;;;:17;;;:29;;;;;-1:-1:-1;;;;;14373:49:12;;13300:1139;13112:1327;;;;;:::o;2065:312:40:-;2179:6;2154:21;:31;;2146:73;;;;-1:-1:-1;;;2146:73:40;;15163:2:41;2146:73:40;;;15145:21:41;15202:2;15182:18;;;15175:30;15241:31;15221:18;;;15214:59;15290:18;;2146:73:40;14961:353:41;2146:73:40;2231:12;2249:9;-1:-1:-1;;;;;2249:14:40;2271:6;2249:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2230:52;;;2300:7;2292:78;;;;-1:-1:-1;;;2292:78:40;;15731:2:41;2292:78:40;;;15713:21:41;15770:2;15750:18;;;15743:30;15809:34;15789:18;;;15782:62;15880:28;15860:18;;;15853:56;15926:19;;2292:78:40;15529:422:41;7577:495:12;7651:7;7814:9;:20;;;7838:1;7814:25;:80;;;-1:-1:-1;7878:12:12;:16;7855:20;;;;-1:-1:-1;;;;;7878:16:12;;;-1:-1:-1;7814:80:12;:135;;;-1:-1:-1;7933:16:12;;7910:20;;;;-1:-1:-1;;;;;7933:16:12;;;-1:-1:-1;7814:135:12;7810:256;;;-1:-1:-1;;7972:12:12;:25;-1:-1:-1;;;7972:25:12;;-1:-1:-1;;;;;7972:25:12;;7577:495::o;7810:256::-;-1:-1:-1;8035:20:12;;;;7577:495::o;7810:256::-;7577:495;;;:::o;23647:966::-;-1:-1:-1;;;;;;23834:19:12;;23750;23834;;;:8;:19;;;;;23872:12;;;;-1:-1:-1;;;;;23872:12:12;23888:10;23872:26;;:58;;-1:-1:-1;23902:14:12;;;;;-1:-1:-1;;;;;23902:14:12;23920:10;23902:28;23872:58;23871:80;;;;-1:-1:-1;23936:15:12;;;;23935:16;23871:80;23863:89;;;;;;23962:9;23985:484;23996:19;;;:26;23992:30;;23985:484;;;24043:35;24081:6;:19;;24101:1;24081:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;24121:16;;24081:22;;-1:-1:-1;;;;;;24121:16:12;:33;;:88;;-1:-1:-1;;;;;;24158:22:12;;;;;;:51;;-1:-1:-1;24193:16:12;;-1:-1:-1;;;;;24184:25:12;;;24193:16;;24184:25;;24158:51;24117:135;;;24229:8;;;24117:135;24266:23;24295:41;24316:6;24324:11;24295:20;:41::i;:::-;24265:71;;;;24365:15;24350:30;;;;;:::i;:::-;;-1:-1:-1;;;;;;24398:22:12;;;24394:65;;24439:5;;;;24394:65;24029:440;;23985:484;24024:3;;;;:::i;:::-;;;;23985:484;;;-1:-1:-1;;;;;24482:22:12;;;24478:129;;24569:19;;;:26;24565:30;;24557:39;;;;;;23775:838;;23647:966;;;;:::o;15994:682::-;16076:23;;-1:-1:-1;;;16076:23:12;;;;:28;;:66;;-1:-1:-1;16119:23:12;;;-1:-1:-1;;;16119:23:12;;;;;16108:34;;;;;16076:66;16072:103;;;15994:682;;:::o;16072:103::-;16200:23;;16189:8;;16200:27;;-1:-1:-1;;;16200:23:12;;;;16226:1;16200:27;:::i;:::-;16189:38;;16184:398;16234:7;16229:12;;:1;:12;;;16184:398;;16277:17;;;16262:12;16277:17;;;:14;;;:17;;;;;;-1:-1:-1;;;;;16312:26:12;;16308:142;;;-1:-1:-1;16388:17:12;;;16408:1;16388:17;;;:14;;;:17;;;;;:21;16427:8;;16308:142;16480:13;;;;:30;;16504:5;16480:23;:30::i;:::-;16464:13;;;:46;-1:-1:-1;16550:17:12;;;16570:1;16550:17;;;:14;;;:17;;;;;:21;16184:398;16243:3;;;;:::i;:::-;;;;16184:398;;;-1:-1:-1;16591:33:12;;;;;-1:-1:-1;;;16591:33:12;-1:-1:-1;;;;16591:33:12;;;;;;-1:-1:-1;16655:13:12;;;;16591:5;;:23;;16634:35;;16655:13;;-1:-1:-1;;;;;16634:35:12;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;16634:35:12;;;;;-1:-1:-1;;;;;16634:35:12;;;;;;15994:682;;:::o;1837:136:26:-;1451:1;1653:9;;-1:-1:-1;;;1653:9:26;;:25;:9;:25;1645:34;;;;;;1928:38:::1;::::0;1955:10:::1;4105:51:41::0;;-1:-1:-1;;;;;1928:38:26;::::1;::::0;::::1;::::0;4093:2:41;4078:18;1928:38:26::1;;;;;;;;1837:136:::0;:::o;3599:259::-;3681:14;;3735:44;3751:7;3760:9;3681:14;;;3735:15;:44::i;:::-;3822:20;;3599:259;-1:-1:-1;;;;3599:259:26:o;30891:256:12:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;31014:61:12;31030:7;-1:-1:-1;;;;;;31014:15:12;:61::i;29694:295::-;29783:20;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29783:20:12;29819:21;29843:74;29859:7;-1:-1:-1;;;29892:1:12;-1:-1:-1;;;;;;29895:18:12;;29819:21;29843:15;:74::i;:::-;29819:98;29694:295;-1:-1:-1;;;;29694:295:12:o;3964:286:26:-;4065:14;;4119:52;4135:7;4144:9;4155:1;4158:9;4065:14;4119:15;:52::i;:::-;4214:20;;3964:286;-1:-1:-1;;;;;3964:286:26:o;30067:366:12:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;30250:111:12;30279:7;-1:-1:-1;;;30322:1:12;-1:-1:-1;;;;;;30325:18:12;;30353:6;30250:15;:111::i;30504:312::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30659:85:12;30675:7;-1:-1:-1;;;30705:1:12;-1:-1:-1;;;;;30716:23:12;;-1:-1:-1;30659:15:12;:85::i;4357:355:26:-;4517:14;4547:21;4571:62;4587:7;4596:9;4607:1;4610:10;4622;4571:15;:62::i;:::-;4676:20;;4357:355;-1:-1:-1;;;;;;4357:355:26:o;3066:1252:22:-;3195:14;-1:-1:-1;;;;;;3228:24:22;;3225:1087;;3375:65;;3339:4;;3375:65;;-1:-1:-1;;;3392:12:22;3311:17;;3339:4;;3431:8;;3375:65;;;:::i;:::-;;;;;;;;;;;;;3365:76;;;;;;3358:83;;;;;3225:1087;-1:-1:-1;;;;;;3462:24:22;;-1:-1:-1;;;3462:24:22;3458:854;;;3556:15;;3593:10;3585:62;;;;-1:-1:-1;;;3585:62:22;;17439:2:41;3585:62:22;;;17421:21:41;17478:2;17458:18;;;17451:30;17517:34;17497:18;;;17490:62;-1:-1:-1;;;17568:18:41;;;17561:37;17615:19;;3585:62:22;17237:403:41;3585:62:22;3716:14;3748:91;3755:11;;3748:91;;3786:8;;;;:::i;:::-;;-1:-1:-1;3812:12:22;;-1:-1:-1;3822:2:22;3812:12;;:::i;:::-;;;3748:91;;;3852:25;3890:6;-1:-1:-1;;;;;3880:17:22;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3880:17:22;-1:-1:-1;3920:15:22;;;-1:-1:-1;3852:45:22;-1:-1:-1;3965:6:22;3985:138;3992:11;;3985:138;;4065:11;4074:2;4065:6;:11;:::i;:::-;4060:16;;:2;:16;:::i;:::-;4047:31;;4023:12;4036:7;;;:::i;:::-;;;;4023:21;;;;;;;;:::i;:::-;;;;:55;-1:-1:-1;;;;;4023:55:22;;;;;;;;-1:-1:-1;4096:12:22;4106:2;4096:12;;:::i;:::-;;;3985:138;;;4154:79;;;;-1:-1:-1;;;4171:12:22;4185:23;;4210:12;;4224:8;;4154:79;;;:::i;:::-;;;;;;;;;;;;;4144:90;;;;;;4137:97;;;;;;;;3458:854;4265:36;;-1:-1:-1;;;4265:36:22;;18537:2:41;4265:36:22;;;18519:21:41;18576:2;18556:18;;;18549:30;18615:28;18595:18;;;18588:56;18661:18;;4265:36:22;18335:350:41;5207:167:12;5273:6;5350:16;5305:61;;5324:23;5305:42;;5313:7;5305:16;;:42;;;;:::i;:::-;:61;;;;:::i;2109:132:26:-;1451:1;1653:9;;-1:-1:-1;;;1653:9:26;;:25;:9;:25;1645:34;;;;;;2198:36:::1;::::0;2223:10:::1;4105:51:41::0;;-1:-1:-1;;;;;2198:36:26;::::1;::::0;::::1;::::0;4093:2:41;4078:18;2198:36:26::1;3959:203:41::0;1948:183:34;-1:-1:-1;;;;;2021:22:34;;2013:31;;;;;;2080:6;;;2059:38;;-1:-1:-1;;;;;2059:38:34;;;;2080:6;;;2059:38;;;2107:6;:17;;-1:-1:-1;;;;;;2107:17:34;-1:-1:-1;;;;;2107:17:34;;;;;;;;;;1948:183::o;650:616:22:-;754:7;785:10;:17;806:2;785:23;777:32;;;;;;925:2;909:19;;903:26;969:2;953:19;;947:26;1021:2;1005:19;;999:26;820:9;991:35;1145:2;1141:6;;1137:44;;;1163:7;1168:2;1163:7;;:::i;:::-;;;1137:44;1198:1;:7;;1203:2;1198:7;:18;;;;1209:1;:7;;1214:2;1209:7;1198:18;1190:27;;;;;;1234:25;;;;;;;;;;;;19126::41;;;19199:4;19187:17;;19167:18;;;19160:45;;;;19221:18;;;19214:34;;;19264:18;;;19257:34;;;1234:25:22;;19098:19:41;;1234:25:22;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1234:25:22;;-1:-1:-1;;1234:25:22;;;650:616;-1:-1:-1;;;;;;;650:616:22:o;17379:2148:12:-;17502:19;17523:30;17555:25;17596:24;17655:16;17630:41;;:7;:22;;;;;;;;;;-1:-1:-1;;;;;17630:22:12;:41;;;;:::i;:::-;17596:76;;17682:16;17701:89;17722:18;:16;:18::i;:::-;17749:20;;;;:39;;17772:16;17749:39;;;-1:-1:-1;;;17749:20:12;;-1:-1:-1;;;;;17749:20:12;:39;:::i;:::-;17701:20;:89::i;:::-;17859:31;;;;17682:108;;-1:-1:-1;17800:16:12;;17819:72;;17840:17;;17859:31;;17819:20;:72::i;:::-;17983:17;;17954:47;;-1:-1:-1;;;17954:47:12;;-1:-1:-1;;;;;17983:17:12;;;17954:47;;;4105:51:41;17800:91:12;;-1:-1:-1;17901:22:12;;;;17954:6;:28;;;;4078:18:41;;17954:47:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18062:31;;;;17937:64;;-1:-1:-1;18011:37:12;;18062:31;;18058:265;;18177:17;;18146:68;;-1:-1:-1;;;18146:68:12;;-1:-1:-1;;;;;18177:17:12;;;18146:68;;;19663:51:41;19762:6;19750:19;;19730:18;;;19723:47;18146:6:12;:30;;;;;;19636:18:41;;18146:68:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18114:100;;18058:265;;;-1:-1:-1;18277:35:12;;;;18058:265;18363:29;18338:54;;18333:682;18432:6;18407:22;:31;18333:682;;;18581:17;;18558:65;;-1:-1:-1;;;18558:65:12;;-1:-1:-1;;;;;18581:17:12;;;18558:65;;;19955:51:41;20022:18;;;20015:34;;;18502:18:12;;;;18558:6;:22;;;;;;19928:18:41;;18558:65:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18501:122;;;;18655:9;18641:23;;:11;:23;;;18637:141;;;18684:5;;;;18637:141;18726:9;18714:21;;:9;:21;;;18710:68;;;18755:8;;;;18710:68;18810:111;18876:44;18897:9;18908:11;18876:20;:44::i;:::-;18810:42;18831:9;18842;18810:20;:42::i;:::-;:65;;;;:111::i;:::-;:115;;18924:1;18810:115;:::i;:::-;18791:134;;;;:::i;:::-;;;18956:9;18943:22;;:9;:22;;;18939:66;;18985:5;;;;18939:66;18487:528;;18333:682;18453:24;;;;:::i;:::-;;;;18333:682;;;19084:17;;19054:48;;-1:-1:-1;;;19054:48:12;;-1:-1:-1;;;;;19084:17:12;;;19054:48;;;4105:51:41;19025:26:12;;19054:6;:29;;;;4078:18:41;;19054:48:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19025:77;;19142:6;19116:22;:32;:67;;;;;19174:9;19152:31;;:19;:31;;;19116:67;19112:307;;;19352:56;19373:13;19385:1;19373:9;:13;:::i;:::-;19388:19;19352:20;:56::i;:::-;19340:68;;:9;:68;:::i;:::-;19321:87;;;;:::i;:::-;;;19112:307;19443:15;;;;:33;;;;;;-1:-1:-1;;;;;19443:15:12;:33;:::i;:::-;-1:-1:-1;;;;;19429:47:12;;-1:-1:-1;19507:13:12;:9;19519:1;19507:13;:::i;:::-;19486:34;;17586:1941;;;;;;;17379:2148;;;;;:::o;692:205:19:-;755:7;783:1;778;:6;774:117;;807:17;:1;821;807:5;:17::i;:::-;800:24;;;;774:117;862:18;876:2;877:1;876:2;:::i;:::-;862:1;;:5;:18::i;2594:899:26:-;2875:4;2869:11;2893:32;;;2941:25;;2938:105;;3018:10;3011:4;2996:13;2992:24;2985:44;2938:105;3082:1;3062:18;3059:25;3056:105;;;3136:10;3129:4;3114:13;3110:24;3103:44;3056:105;3270:1;3267;3245:18;3239:4;3235:29;3229:4;3225:40;3210:13;3201:7;3194:5;3181:91;3289:71;;;;3442:16;3437:3;3422:13;3407:52;3174:303;;3289:71;3340:1;3325:13;3318:24;3174:303;;2594:899;;;;;;;:::o;334:103:19:-;392:6;421:1;417:5;;:1;:5;;;:13;;429:1;417:13;;;-1:-1:-1;425:1:19;;334:103;-1:-1:-1;334:103:19:o;224:104::-;282:6;312:1;307:6;;:1;:6;;;;:14;;320:1;307:14;;1804:119;1862:6;1892:1;1887:6;;:1;:6;;;;1880:14;;;;:::i;:::-;1911:5;1915:1;1911;:5;:::i;2741:96:33:-;2799:7;2825:5;2829:1;2825;:5;:::i;3108:96::-;3166:7;3192:5;3196:1;3192;:5;:::i;14:193:41:-;82:20;;-1:-1:-1;;;;;;131:51:41;;121:62;;111:90;;197:1;194;187:12;212:131;-1:-1:-1;;;;;287:31:41;;277:42;;267:70;;333:1;330;323:12;348:800;436:6;444;452;460;513:2;501:9;492:7;488:23;484:32;481:52;;;529:1;526;519:12;481:52;552:29;571:9;552:29;:::i;:::-;542:39;;631:2;620:9;616:18;603:32;644:31;669:5;644:31;:::i;:::-;694:5;-1:-1:-1;750:2:41;735:18;;722:32;-1:-1:-1;;;;;803:14:41;;;800:34;;;830:1;827;820:12;800:34;868:6;857:9;853:22;843:32;;913:7;906:4;902:2;898:13;894:27;884:55;;935:1;932;925:12;884:55;975:2;962:16;1001:2;993:6;990:14;987:34;;;1017:1;1014;1007:12;987:34;1062:7;1057:2;1048:6;1044:2;1040:15;1036:24;1033:37;1030:57;;;1083:1;1080;1073:12;1030:57;348:800;;;;-1:-1:-1;;1114:2:41;1106:11;;-1:-1:-1;;;348:800:41:o;1528:247::-;1587:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:52;;;1656:1;1653;1646:12;1608:52;1695:9;1682:23;1714:31;1739:5;1714:31;:::i;2228:367::-;2291:8;2301:6;2355:3;2348:4;2340:6;2336:17;2332:27;2322:55;;2373:1;2370;2363:12;2322:55;-1:-1:-1;2396:20:41;;-1:-1:-1;;;;;2428:30:41;;2425:50;;;2471:1;2468;2461:12;2425:50;2508:4;2500:6;2496:17;2484:29;;2568:3;2561:4;2551:6;2548:1;2544:14;2536:6;2532:27;2528:38;2525:47;2522:67;;;2585:1;2582;2575:12;2522:67;2228:367;;;;;:::o;2600:171::-;2667:20;;-1:-1:-1;;;;;2716:30:41;;2706:41;;2696:69;;2761:1;2758;2751:12;2776:981;2915:6;2923;2931;2939;2947;2955;3008:3;2996:9;2987:7;2983:23;2979:33;2976:53;;;3025:1;3022;3015:12;2976:53;3065:9;3052:23;-1:-1:-1;;;;;3135:2:41;3127:6;3124:14;3121:34;;;3151:1;3148;3141:12;3121:34;3190:70;3252:7;3243:6;3232:9;3228:22;3190:70;:::i;:::-;3279:8;;-1:-1:-1;3164:96:41;-1:-1:-1;3364:2:41;3349:18;;3336:32;;-1:-1:-1;3377:31:41;3336:32;3377:31;:::i;:::-;3427:5;3417:15;;3451:37;3484:2;3473:9;3469:18;3451:37;:::i;:::-;3441:47;;3541:2;3530:9;3526:18;3513:32;3497:48;;3570:2;3560:8;3557:16;3554:36;;;3586:1;3583;3576:12;3554:36;;3625:72;3689:7;3678:8;3667:9;3663:24;3625:72;:::i;:::-;2776:981;;;;-1:-1:-1;2776:981:41;;-1:-1:-1;2776:981:41;;3716:8;;2776:981;-1:-1:-1;;;2776:981:41:o;4607:186::-;4666:6;4719:2;4707:9;4698:7;4694:23;4690:32;4687:52;;;4735:1;4732;4725:12;4687:52;4758:29;4777:9;4758:29;:::i;4798:188::-;4866:20;;-1:-1:-1;;;;;4915:46:41;;4905:57;;4895:85;;4976:1;4973;4966:12;4991:334;5068:6;5076;5084;5137:2;5125:9;5116:7;5112:23;5108:32;5105:52;;;5153:1;5150;5143:12;5105:52;5176:29;5195:9;5176:29;:::i;:::-;5166:39;;5224:38;5258:2;5247:9;5243:18;5224:38;:::i;:::-;5214:48;;5281:38;5315:2;5304:9;5300:18;5281:38;:::i;:::-;5271:48;;4991:334;;;;;:::o;5330:321::-;5398:6;5406;5459:2;5447:9;5438:7;5434:23;5430:32;5427:52;;;5475:1;5472;5465:12;5427:52;5498:29;5517:9;5498:29;:::i;:::-;5488:39;;5577:2;5566:9;5562:18;5549:32;5590:31;5615:5;5590:31;:::i;:::-;5640:5;5630:15;;;5330:321;;;;;:::o;7341:117::-;7426:6;7419:5;7415:18;7408:5;7405:29;7395:57;;7448:1;7445;7438:12;7463:386;7530:6;7538;7591:2;7579:9;7570:7;7566:23;7562:32;7559:52;;;7607:1;7604;7597:12;7559:52;7646:9;7633:23;7665:31;7690:5;7665:31;:::i;:::-;7715:5;-1:-1:-1;7772:2:41;7757:18;;7744:32;7785;7744;7785;:::i;7854:719::-;7966:6;7974;7982;7990;7998;8051:3;8039:9;8030:7;8026:23;8022:33;8019:53;;;8068:1;8065;8058:12;8019:53;8091:29;8110:9;8091:29;:::i;:::-;8081:39;;8170:2;8159:9;8155:18;8142:32;8183:31;8208:5;8183:31;:::i;:::-;8233:5;-1:-1:-1;8257:37:41;8290:2;8275:18;;8257:37;:::i;:::-;8247:47;;8345:2;8334:9;8330:18;8317:32;-1:-1:-1;;;;;8364:6:41;8361:30;8358:50;;;8404:1;8401;8394:12;8358:50;8443:70;8505:7;8496:6;8485:9;8481:22;8443:70;:::i;:::-;7854:719;;;;-1:-1:-1;7854:719:41;;-1:-1:-1;8532:8:41;;8417:96;7854:719;-1:-1:-1;;;7854:719:41:o;8578:180::-;8637:6;8690:2;8678:9;8669:7;8665:23;8661:32;8658:52;;;8706:1;8703;8696:12;8658:52;-1:-1:-1;8729:23:41;;8578:180;-1:-1:-1;8578:180:41:o;8955:665::-;9038:6;9046;9054;9062;9115:3;9103:9;9094:7;9090:23;9086:33;9083:53;;;9132:1;9129;9122:12;9083:53;9171:9;9158:23;9190:31;9215:5;9190:31;:::i;:::-;9240:5;-1:-1:-1;9297:2:41;9282:18;;9269:32;9310;9269;9310;:::i;:::-;9361:7;-1:-1:-1;9420:2:41;9405:18;;9392:32;9433;9392;9433;:::i;:::-;9484:7;-1:-1:-1;9543:2:41;9528:18;;9515:32;9556;9515;9556;:::i;:::-;8955:665;;;;-1:-1:-1;8955:665:41;;-1:-1:-1;;8955:665:41:o;9807:254::-;9875:6;9883;9936:2;9924:9;9915:7;9911:23;9907:32;9904:52;;;9952:1;9949;9942:12;9904:52;9975:29;9994:9;9975:29;:::i;:::-;9965:39;10051:2;10036:18;;;;10023:32;;-1:-1:-1;;;9807:254:41:o;10846:127::-;10907:10;10902:3;10898:20;10895:1;10888:31;10938:4;10935:1;10928:15;10962:4;10959:1;10952:15;10978:127;11039:10;11034:3;11030:20;11027:1;11020:31;11070:4;11067:1;11060:15;11094:4;11091:1;11084:15;11110:120;11150:1;11176;11166:35;;11181:18;;:::i;:::-;-1:-1:-1;11215:9:41;;11110:120::o;11235:199::-;11274:1;-1:-1:-1;;;;;11345:2:41;11342:1;11338:10;11367:3;11357:37;;11374:18;;:::i;:::-;11412:10;;11408:20;;;;;11235:199;-1:-1:-1;;11235:199:41:o;11439:224::-;11478:3;11506:6;11539:2;11536:1;11532:10;11569:2;11566:1;11562:10;11600:3;11596:2;11592:12;11587:3;11584:21;11581:47;;;11608:18;;:::i;:::-;11644:13;;11439:224;-1:-1:-1;;;;11439:224:41:o;11668:217::-;11707:4;11736:6;11792:10;;;;11762;;11814:12;;;11811:38;;;11829:18;;:::i;:::-;11866:13;;11668:217;-1:-1:-1;;;11668:217:41:o;11890:168::-;11930:7;11996:1;11992;11988:6;11984:14;11981:1;11978:21;11973:1;11966:9;11959:17;11955:45;11952:71;;;12003:18;;:::i;:::-;-1:-1:-1;12043:9:41;;11890:168::o;12063:127::-;12124:10;12119:3;12115:20;12112:1;12105:31;12155:4;12152:1;12145:15;12179:4;12176:1;12169:15;12195:135;12234:3;-1:-1:-1;;12255:17:41;;12252:43;;;12275:18;;:::i;:::-;-1:-1:-1;12322:1:41;12311:13;;12195:135::o;13516:136::-;13555:3;13583:5;13573:39;;13592:18;;:::i;:::-;-1:-1:-1;;;13628:18:41;;13516:136::o;13657:::-;13692:3;-1:-1:-1;;;13713:22:41;;13710:48;;;13738:18;;:::i;:::-;-1:-1:-1;13778:1:41;13774:13;;13657:136::o;13798:267::-;13837:4;13866:9;;;13891:10;;-1:-1:-1;;;13910:19:41;;13903:27;;13887:44;13884:70;;;13934:18;;:::i;:::-;-1:-1:-1;;;;;13981:27:41;;13974:35;;13966:44;;13963:70;;;14013:18;;:::i;:::-;-1:-1:-1;;14050:9:41;;13798:267::o;14070:265::-;14109:3;14137:9;;;14162:10;;-1:-1:-1;;;;;14181:27:41;;;14174:35;;14158:52;14155:78;;;14213:18;;:::i;:::-;-1:-1:-1;;;14260:19:41;;;14253:27;;14245:36;;14242:62;;;14284:18;;:::i;:::-;-1:-1:-1;;14320:9:41;;14070:265::o;14340:128::-;14380:3;14411:1;14407:6;14404:1;14401:13;14398:39;;;14417:18;;:::i;:::-;-1:-1:-1;14453:9:41;;14340:128::o;15956:197::-;15994:3;16022:6;16063:2;16056:5;16052:14;16090:2;16081:7;16078:15;16075:41;;;16096:18;;:::i;:::-;16145:1;16132:15;;15956:197;-1:-1:-1;;;15956:197:41:o;16158:253::-;16198:3;-1:-1:-1;;;;;16287:2:41;16284:1;16280:10;16317:2;16314:1;16310:10;16348:3;16344:2;16340:12;16335:3;16332:21;16329:47;;;16356:18;;:::i;16416:336::-;16457:3;16495:5;16489:12;16519:1;16529:128;16543:6;16540:1;16537:13;16529:128;;;16640:4;16625:13;;;16621:24;;16615:31;16602:11;;;16595:52;16558:12;16529:128;;;16675:6;16672:1;16669:13;16666:48;;;16710:1;16701:6;16696:3;16692:16;16685:27;16666:48;-1:-1:-1;16730:16:41;;;;;16416:336;-1:-1:-1;;16416:336:41:o;16757:475::-;-1:-1:-1;;;;;;17028:15:41;;;17016:28;;17073:15;;17069:1;17060:11;;17053:36;17126:2;17122:15;;;-1:-1:-1;;17118:53:41;17114:1;17105:11;;17098:74;16966:3;17188:38;17222:2;17213:12;;17205:6;17188:38;:::i;:::-;17181:45;16757:475;-1:-1:-1;;;;;;16757:475:41:o;17645:127::-;17706:10;17701:3;17697:20;17694:1;17687:31;17737:4;17734:1;17727:15;17761:4;17758:1;17751:15;17777:112;17809:1;17835;17825:35;;17840:18;;:::i;:::-;-1:-1:-1;17874:9:41;;17777:112::o;17894:436::-;-1:-1:-1;;;;;;18153:26:41;;18141:39;;-1:-1:-1;;18209:34:41;;18205:1;18196:11;;18189:55;-1:-1:-1;18260:64:41;18285:38;18319:2;18310:12;;18302:6;18285:38;:::i;:::-;18277:6;18260:64;:::i;18690:204::-;18728:3;18764:4;18761:1;18757:12;18796:4;18793:1;18789:12;18831:3;18825:4;18821:14;18816:3;18813:23;18810:49;;;18839:18;;:::i;:::-;18875:13;;18690:204;-1:-1:-1;;;18690:204:41:o;19302:184::-;19372:6;19425:2;19413:9;19404:7;19400:23;19396:32;19393:52;;;19441:1;19438;19431:12;19393:52;-1:-1:-1;19464:16:41;;19302:184;-1:-1:-1;19302:184:41:o;20060:381::-;20137:6;20145;20198:2;20186:9;20177:7;20173:23;20169:32;20166:52;;;20214:1;20211;20204:12;20166:52;20246:9;20240:16;20265:30;20289:5;20265:30;:::i;:::-;20364:2;20349:18;;20343:25;20314:5;;-1:-1:-1;20377:32:41;20343:25;20377:32;:::i;20446:249::-;20515:6;20568:2;20556:9;20547:7;20543:23;20539:32;20536:52;;;20584:1;20581;20574:12;20536:52;20616:9;20610:16;20635:30;20659:5;20635:30;:::i;20700:287::-;20740:7;-1:-1:-1;;;;;20833:2:41;20830:1;20826:10;20863:2;20860:1;20856:10;20919:3;20915:2;20911:12;20906:3;20903:21;20896:3;20889:11;20882:19;20878:47;20875:73;;;20928:18;;:::i;:::-;20968:13;;20700:287;-1:-1:-1;;;;20700:287:41:o;20992:127::-;21053:10;21048:3;21044:20;21041:1;21034:31;21084:4;21081:1;21074:15;21108:4;21105:1;21098:15;21124:125;21164:4;21192:1;21189;21186:8;21183:34;;;21197:18;;:::i;:::-;-1:-1:-1;21234:9:41;;21124:125::o",
  "language": "Solidity",
  "natspec": {
    "details": "|v6.3.1|",
    "kind": "dev",
    "methods": {
      "calculateRefundValue(bytes16)": {
        "notice": "Calculate amount of refund",
        "params": {
          "_policyId": "Policy id"
        }
      },
      "calculateRefundValue(bytes16,address)": {
        "notice": "Calculate amount of refund",
        "params": {
          "_node": "Node",
          "_policyId": "Policy id"
        }
      },
      "constructor": {
        "details": "Put same address in both inputs variables except when migration is happening",
        "notice": "Constructor sets address of the escrow contract",
        "params": {
          "_escrowDispatcher": "Address of escrow dispatcher",
          "_escrowImplementation": "Address of escrow implementation"
        }
      },
      "createPolicies(bytes16[],address,uint64,address[])": {
        "details": "Generate policy ids before creation",
        "notice": "Create multiple policies with the same owner, nodes and length",
        "params": {
          "_endTimestamp": "End timestamp of all policies in seconds",
          "_nodes": "Nodes that will handle all policies",
          "_policyIds": "Policy ids",
          "_policyOwner": "Policy owner. Zero address means sender is owner"
        }
      },
      "createPolicy(bytes16,address,uint64,address[])": {
        "details": "Generate policy id before creation",
        "notice": "Create policy",
        "params": {
          "_endTimestamp": "End timestamp of the policy in seconds",
          "_nodes": "Nodes that will handle policy",
          "_policyId": "Policy id",
          "_policyOwner": "Policy owner. Zero address means sender is owner"
        }
      },
      "finishUpgrade(address)": {
        "details": "the `onlyWhileUpgrading` modifier works through a call to the parent `finishUpgrade`"
      },
      "getArrangementInfo(bytes16,uint256)": {
        "notice": "Return the information about arrangement"
      },
      "getArrangementsLength(bytes16)": {
        "notice": "Get number of arrangements in the policy",
        "params": {
          "_policyId": "Policy id"
        }
      },
      "getCurrentPeriod()": {
        "returns": {
          "_0": "Number of current period"
        }
      },
      "getMinFeeRate(address)": {
        "notice": "Get the minimum acceptable fee rate (set by staker for their associated worker)"
      },
      "getNodeFeeDelta(address,uint16)": {
        "notice": "Get information about staker's fee rate",
        "params": {
          "_node": "Address of staker",
          "_period": "Period to get fee delta"
        }
      },
      "getPolicyOwner(bytes16)": {
        "notice": "Get policy owner"
      },
      "getRevocationHash(bytes16,address)": {
        "notice": "Get unsigned hash for revocation",
        "params": {
          "_node": "Node that will be excluded",
          "_policyId": "Policy id"
        },
        "returns": {
          "_0": "Revocation hash, EIP191 version 0x45 ('E')"
        }
      },
      "isOwner()": {
        "returns": {
          "_0": "true if `msg.sender` is the owner of the contract."
        }
      },
      "migrate(address)": {
        "notice": "Migrate from the old period length to the new one",
        "params": {
          "_node": "Node address"
        }
      },
      "owner()": {
        "returns": {
          "_0": "the address of the owner."
        }
      },
      "ping(address,uint16,uint16,uint16)": {
        "notice": "Call from StakingEscrow to update node info once per period. Set default `feeDelta` value for specified period and update node fee",
        "params": {
          "_node": "Node address",
          "_periodToSetDefault": "Period to set",
          "_processedPeriod1": "Processed period",
          "_processedPeriod2": "Processed period"
        }
      },
      "refund(bytes16)": {
        "notice": "Refund part of fee by the sponsor",
        "params": {
          "_policyId": "Policy id"
        }
      },
      "refund(bytes16,address)": {
        "notice": "Refund part of one node's fee by the sponsor",
        "params": {
          "_node": "Node address",
          "_policyId": "Policy id"
        }
      },
      "register(address,uint16)": {
        "notice": "Register a node",
        "params": {
          "_node": "Node address",
          "_period": "Initial period"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.",
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "revoke(bytes16,address,bytes)": {
        "notice": "Revoke policy or arrangement using owner's signature",
        "params": {
          "_node": "Node that will be excluded, zero address if whole policy will be revoked",
          "_policyId": "Policy id",
          "_signature": "Signature of owner, EIP191 version 0x45 ('E')"
        }
      },
      "revokeArrangement(bytes16,address)": {
        "notice": "Revoke arrangement by the sponsor",
        "params": {
          "_node": "Node that will be excluded",
          "_policyId": "Policy id"
        }
      },
      "revokePolicy(bytes16)": {
        "notice": "Revoke policy by the sponsor",
        "params": {
          "_policyId": "Policy id"
        }
      },
      "setFeeRateRange(uint128,uint128,uint128)": {
        "notice": "Set minimum, default & maximum fee rate for all stakers and all policies ('global fee range')"
      },
      "setMinFeeRate(uint256)": {
        "details": "Input value must fall within `feeRateRange` (global fee range)",
        "notice": "Set the minimum acceptable fee rate (set by staker for their associated worker)"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "verifyState(address)": {
        "details": "the `onlyWhileUpgrading` modifier works through a call to the parent `verifyState`"
      },
      "withdraw()": {
        "notice": "Withdraw fee by node"
      },
      "withdraw(address)": {
        "notice": "Withdraw fee by node",
        "params": {
          "_recipient": "Recipient of the fee"
        }
      }
    },
    "notice": "Contract holds policy data and locks accrued policy fees",
    "title": "PolicyManager",
    "version": 1
  },
  "offset": [
    520,
    34460
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C316B90 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0xCE5494BB GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xE2FDCC17 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE2FDCC17 EQ PUSH2 0x8CA JUMPI DUP1 PUSH4 0xE38A303B EQ PUSH2 0x8FE JUMPI DUP1 PUSH4 0xE665830D EQ PUSH2 0x931 JUMPI DUP1 PUSH4 0xE8DCCD06 EQ PUSH2 0x951 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x971 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCE5494BB EQ PUSH2 0x7ED JUMPI DUP1 PUSH4 0xD4B83992 EQ PUSH2 0x80D JUMPI DUP1 PUSH4 0xD808A4EE EQ PUSH2 0x82D JUMPI DUP1 PUSH4 0xD845F4FB EQ PUSH2 0x861 JUMPI DUP1 PUSH4 0xDFDECFAF EQ PUSH2 0x8AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA2D1D5E2 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xA2D1D5E2 EQ PUSH2 0x74D JUMPI DUP1 PUSH4 0xA87D40D9 EQ PUSH2 0x76D JUMPI DUP1 PUSH4 0xB46FFB45 EQ PUSH2 0x78D JUMPI DUP1 PUSH4 0xB9626D21 EQ PUSH2 0x7AD JUMPI DUP1 PUSH4 0xCBF12F2A EQ PUSH2 0x7CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8C316B90 EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0x8D7FD2FA EQ PUSH2 0x6C4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0x8E81CA5A EQ PUSH2 0x702 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x631722F2 GT PUSH2 0x1BC JUMPI DUP1 PUSH4 0x713C0E57 GT PUSH2 0x180 JUMPI DUP1 PUSH4 0x713C0E57 EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x63C JUMPI DUP1 PUSH4 0x72BE8D8D EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0x81E742A1 EQ PUSH2 0x671 JUMPI DUP1 PUSH4 0x889DDD1A EQ PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x631722F2 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x63C509D5 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x65A9AF87 EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x65AF62C3 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0x6BD2AF57 EQ PUSH2 0x4F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x407F8001 GT PUSH2 0x203 JUMPI DUP1 PUSH4 0x407F8001 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x4B2CD118 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x4B8FED4F EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x58CF15FB EQ PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x76421E8 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x86146D2 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x189A5A17 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x3735E106 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x32F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x35B1 JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3640 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH2 0xFFFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x26A JUMP JUMPDEST PUSH2 0x32D PUSH2 0x328 CALLDATASIZE PUSH1 0x4 PUSH2 0x36BF JUMP JUMPDEST PUSH2 0xA20 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0xCC2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x378 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x3AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x3FB CALLDATASIZE PUSH1 0x4 PUSH2 0x3640 JUMP JUMPDEST PUSH2 0xCC9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AD PUSH2 0x41B CALLDATASIZE PUSH1 0x4 PUSH2 0x3754 JUMP JUMPDEST PUSH2 0xD55 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x3786 JUMP JUMPDEST PUSH2 0xDAC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x45B CALLDATASIZE PUSH1 0x4 PUSH2 0x37C9 JUMP JUMPDEST PUSH2 0xE90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x480 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0x4CA SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 AND SWAP2 AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD PUSH2 0x26A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x50F CALLDATASIZE PUSH1 0x4 PUSH2 0x3754 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C7 PUSH2 0x549 CALLDATASIZE PUSH1 0x4 PUSH2 0x3754 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP5 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 SWAP1 SWAP7 ADD SLOAD PUSH1 0xFF DUP7 AND SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP8 DIV DUP8 AND SWAP8 SWAP6 SWAP1 SWAP7 AND SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP8 DIV DUP2 AND SWAP7 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP12 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP12 ISZERO ISZERO DUP13 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP11 DUP12 AND PUSH1 0x20 DUP14 ADD MSTORE SWAP10 SWAP1 SWAP9 AND SWAP9 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP6 AND PUSH1 0x60 DUP10 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 DUP5 AND PUSH1 0x80 DUP10 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x160 ADD PUSH2 0x26A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0xF06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x66C CALLDATASIZE PUSH1 0x4 PUSH2 0x3810 JUMP JUMPDEST PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x32D PUSH2 0x67F CALLDATASIZE PUSH1 0x4 PUSH2 0x383E JUMP JUMPDEST PUSH2 0x1006 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x69F CALLDATASIZE PUSH1 0x4 PUSH2 0x3640 JUMP JUMPDEST PUSH2 0x11E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x6BF CALLDATASIZE PUSH1 0x4 PUSH2 0x38B5 JUMP JUMPDEST PUSH2 0x1206 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x6DF CALLDATASIZE PUSH1 0x4 PUSH2 0x37C9 JUMP JUMPDEST PUSH2 0x1302 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x71D CALLDATASIZE PUSH1 0x4 PUSH2 0x3810 JUMP JUMPDEST PUSH2 0x1340 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x768 CALLDATASIZE PUSH1 0x4 PUSH2 0x3754 JUMP JUMPDEST PUSH2 0x139C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x779 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x788 CALLDATASIZE PUSH1 0x4 PUSH2 0x37C9 JUMP JUMPDEST PUSH2 0x13C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x7A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x38CE JUMP JUMPDEST PUSH2 0x13E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x7C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3640 JUMP JUMPDEST PUSH2 0x14D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x7E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x37C9 JUMP JUMPDEST PUSH2 0x17F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x808 CALLDATASIZE PUSH1 0x4 PUSH2 0x3640 JUMP JUMPDEST PUSH2 0x1845 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x3AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x839 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x378 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x881 PUSH2 0x87C CALLDATASIZE PUSH1 0x4 PUSH2 0x392A JUMP JUMPDEST PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0xFFFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x26A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x8C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3754 JUMP JUMPDEST PUSH2 0x1963 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AD PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x91F SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x94C CALLDATASIZE PUSH1 0x4 PUSH2 0x3754 JUMP JUMPDEST PUSH2 0x19BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x96C CALLDATASIZE PUSH1 0x4 PUSH2 0x3640 JUMP JUMPDEST PUSH2 0x19CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x98C CALLDATASIZE PUSH1 0x4 PUSH2 0x3640 JUMP JUMPDEST PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D4 DUP6 DUP6 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1CA7 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x9E0 DUP6 DUP6 PUSH1 0x1 PUSH2 0x1CE9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1B PUSH4 0xFFFFFFFF PUSH32 0x0 AND TIMESTAMP PUSH2 0x3980 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT DUP1 ISZERO PUSH2 0xA38 JUMPI POP PUSH1 0x0 CALLVALUE GT JUMPDEST DUP1 ISZERO PUSH2 0xA44 JUMPI POP PUSH1 0x1 DUP6 GT JUMPDEST PUSH2 0xA4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SELFBALANCE GT ISZERO PUSH2 0xA61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA6B PUSH2 0x9E9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA9F PUSH4 0xFFFFFFFF PUSH32 0x0 AND DUP7 PUSH2 0x3994 JUMP JUMPDEST PUSH2 0xAAA SWAP1 PUSH1 0x1 PUSH2 0x39BA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAB8 DUP4 DUP4 PUSH2 0x39E0 JUMP JUMPDEST PUSH2 0xFFFF AND SWAP1 POP PUSH1 0x0 DUP9 DUP3 PUSH2 0xACC CALLVALUE DUP9 PUSH2 0x2267 JUMP JUMPDEST PUSH2 0xAD6 SWAP2 SWAP1 PUSH2 0x3980 JUMP JUMPDEST PUSH2 0xAE0 SWAP2 SWAP1 PUSH2 0x3980 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT DUP1 ISZERO PUSH2 0xB22 JUMPI POP CALLVALUE DUP10 DUP7 PUSH2 0xB0C DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 AND PUSH2 0x3A03 JUMP JUMPDEST PUSH2 0xB16 SWAP2 SWAP1 PUSH2 0x3A03 JUMP JUMPDEST PUSH2 0xB20 SWAP2 SWAP1 PUSH2 0x3A03 JUMP JUMPDEST EQ JUMPDEST PUSH2 0xB2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP10 DUP2 LT ISZERO PUSH2 0xC46 JUMPI PUSH1 0x0 PUSH2 0xB6B DUP13 DUP13 DUP5 DUP2 DUP2 LT PUSH2 0xB4D JUMPI PUSH2 0xB4D PUSH2 0x3A22 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB62 SWAP2 SWAP1 PUSH2 0x3754 JUMP JUMPDEST DUP12 DUP12 DUP7 DUP12 PUSH2 0x2273 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0xC31 JUMPI DUP2 PUSH1 0x8 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP12 DUP12 DUP6 DUP2 DUP2 LT PUSH2 0xB99 JUMPI PUSH2 0xB99 PUSH2 0x3A22 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xBAE SWAP2 SWAP1 PUSH2 0x3640 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP4 DUP5 ADD DUP3 SWAP1 MSTORE DUP6 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP9 SSTORE SWAP7 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP6 MLOAD PUSH1 0x3 SWAP1 SWAP4 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE DUP4 ADD MLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0xC29 DUP2 PUSH2 0x3A38 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB70 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0xC3E SWAP1 PUSH2 0x3A38 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB2E JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xC5C PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND DUP12 PUSH2 0x3A03 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xCB4 JUMPI PUSH1 0x0 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0xC7D JUMPI PUSH2 0xC7D PUSH2 0x3A22 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC92 SWAP2 SWAP1 PUSH2 0x3640 JUMP JUMPDEST SWAP1 POP PUSH2 0xCA1 DUP8 DUP8 DUP4 DUP8 DUP8 PUSH2 0x2412 JUMP JUMPDEST POP DUP1 PUSH2 0xCAC DUP2 PUSH2 0x3A38 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC61 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1B CALLER JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP1 PUSH2 0xCED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND DUP3 SSTORE PUSH2 0xD0E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP3 PUSH2 0x25E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 CALLER SWAP1 PUSH32 0xD1C19FBCD4551A5EDFB66D43D2E337C04837AFDA3482B42BDF569A8FCCDAE5FB SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xD94 JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDA5 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO DUP1 ISZERO PUSH2 0xDF7 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO JUMPDEST PUSH2 0xE00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 DUP2 AND DUP1 DUP5 MSTORE DUP7 DUP3 AND PUSH1 0x20 DUP1 DUP7 ADD DUP3 SWAP1 MSTORE SWAP3 DUP8 AND SWAP5 DUP7 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP2 MUL DUP3 OR PUSH1 0x6 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND DUP7 OR SWAP1 SSTORE DUP6 MLOAD SWAP2 DUP3 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP2 PUSH32 0x3A93FB7C2385D29E9693A6EDCD81C4CEE090101CB783DC2F17A7814B79A2ECDC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xEA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xEE7 JUMPI POP DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xEF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFC DUP5 DUP5 PUSH1 0x0 PUSH2 0x1CE9 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xF9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH2 0xFFFF AND ISZERO DUP1 ISZERO PUSH2 0xFDC JUMPI POP PUSH2 0xFD1 PUSH2 0x9E9 JUMP JUMPDEST PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0xFE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH2 0xFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST TIMESTAMP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT DUP1 ISZERO PUSH2 0x101E JUMPI POP PUSH1 0x0 CALLVALUE GT JUMPDEST PUSH2 0x1027 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SELFBALANCE GT ISZERO PUSH2 0x103B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1045 PUSH2 0x9E9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1079 PUSH4 0xFFFFFFFF PUSH32 0x0 AND DUP7 PUSH2 0x3994 JUMP JUMPDEST PUSH2 0x1084 SWAP1 PUSH1 0x1 PUSH2 0x39BA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1092 DUP4 DUP4 PUSH2 0x39E0 JUMP JUMPDEST PUSH2 0xFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x10A5 CALLVALUE DUP8 PUSH2 0x2267 JUMP JUMPDEST PUSH2 0x10AF SWAP2 SWAP1 PUSH2 0x3980 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT DUP1 ISZERO PUSH2 0x10E6 JUMPI POP CALLVALUE DUP6 PUSH2 0x10DA DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND PUSH2 0x3A03 JUMP JUMPDEST PUSH2 0x10E4 SWAP2 SWAP1 PUSH2 0x3A03 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x10EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10FE DUP11 DUP11 DUP11 DUP6 DUP11 PUSH2 0x2273 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x11D8 JUMPI PUSH1 0x0 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x111F JUMPI PUSH2 0x111F PUSH2 0x3A22 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1134 SWAP2 SWAP1 PUSH2 0x3640 JUMP JUMPDEST SWAP1 POP PUSH2 0x114C DUP8 DUP8 DUP4 DUP8 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x2412 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE SWAP4 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x8 DUP9 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP6 MSTORE SWAP3 SWAP1 SWAP4 KECCAK256 SWAP4 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP6 AND OR DUP5 SSTORE SWAP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x11D0 DUP2 PUSH2 0x3A38 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1103 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xDA5 DUP2 PUSH2 0x26FF JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 LT DUP1 ISZERO SWAP1 PUSH2 0x122C JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 GT ISZERO JUMPDEST PUSH2 0x12A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865207374616B65722773206D696E206665652072617465206D7573742066 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C6C2077697468696E2074686520676C6F62616C206665652072616E676500 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD DUP3 EQ ISZERO PUSH2 0x12C2 JUMPI POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x6B9024CC1BF5710F290BE788DCA9886DB7A3D9BE0DF0855BFA991DBF26A256BC SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH2 0x1321 DUP5 PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA5 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO PUSH2 0x135D JUMPI POP DUP2 PUSH2 0xFFFF AND PUSH1 0xB EQ JUMPDEST ISZERO PUSH2 0x136A JUMPI POP PUSH1 0x37 PUSH2 0xF00 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH2 0xFFFF DUP6 AND DUP5 MSTORE PUSH1 0x4 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x13A8 DUP4 PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x13BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF00 DUP3 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x13DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA5 DUP4 DUP4 PUSH2 0x2769 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x141C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x143C PUSH2 0x9E9 JUMP JUMPDEST DUP2 SLOAD PUSH2 0xFFFF SWAP2 DUP3 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV SWAP1 SWAP2 AND GT ISZERO PUSH2 0x145A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFFFF DUP5 AND ISZERO PUSH2 0x146E JUMPI PUSH2 0x146E DUP2 DUP6 PUSH2 0x28AD JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND ISZERO PUSH2 0x1482 JUMPI PUSH2 0x1482 DUP2 DUP5 PUSH2 0x28AD JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x14A8 JUMPI POP PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x14CD JUMPI PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB SWAP1 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14DD DUP2 PUSH2 0x29F2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x14FA DUP3 PUSH4 0x65A9AF87 PUSH1 0xE0 SHL PUSH2 0x2A4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EQ PUSH2 0x150D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1518 DUP3 PUSH2 0x2A65 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x6 SLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1553 JUMPI POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x1571 JUMPI POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x157A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EC SWAP1 PUSH2 0x15B0 DUP5 DUP3 PUSH2 0x2A96 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x20 DUP3 ADD MLOAD SWAP2 SWAP3 POP PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x15ED JUMPI POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x160D JUMPI POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x1634 JUMPI POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x165B JUMPI POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP3 DIV AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x1671 JUMPI POP DUP2 SLOAD DUP2 MLOAD ISZERO ISZERO PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO EQ JUMPDEST PUSH2 0x167A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x1692 DUP6 PUSH4 0x6BD2AF57 PUSH1 0xE0 SHL PUSH1 0x0 PUSH2 0x2B52 JUMP JUMPDEST EQ PUSH2 0x169C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 DUP3 ADD SLOAD ISZERO PUSH2 0x1729 JUMPI PUSH1 0x0 DUP3 PUSH1 0x8 ADD PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x16BE JUMPI PUSH2 0x16BE PUSH2 0x3A22 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SWAP2 POP PUSH2 0x16DA DUP7 DUP3 DUP1 PUSH2 0x2B6D JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1702 JUMPI POP DUP2 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0x20 ADD MLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x171D JUMPI POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xFFFF SWAP1 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x1726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH32 0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BC SWAP1 PUSH2 0x175F DUP7 DUP3 PUSH2 0x2BA9 JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1787 JUMPI POP DUP2 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0x40 ADD MLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x17A6 JUMPI POP DUP2 SLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x17B9 JUMPI POP DUP2 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0x60 ADD MLOAD EQ JUMPDEST PUSH2 0x17C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17CE PUSH1 0x0 PUSH1 0xB PUSH2 0x1340 JUMP JUMPDEST PUSH2 0x17E3 DUP8 PUSH4 0x4740E52D PUSH1 0xE1 SHL PUSH1 0x0 PUSH1 0xB PUSH2 0x2BEB JUMP JUMPDEST EQ PUSH2 0x17ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x30 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH2 0xDA5 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x45 PUSH1 0xF8 SHL PUSH2 0x2C07 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x187A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x189A PUSH2 0x9E9 JUMP JUMPDEST DUP2 SLOAD PUSH2 0xFFFF SWAP2 DUP3 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV SWAP1 SWAP2 AND LT ISZERO PUSH2 0x18B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SLOAD PUSH2 0x18CE SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x2E48 JUMP JUMPDEST DUP2 SLOAD PUSH2 0xFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH2 0xFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x192A JUMPI PUSH2 0x192A PUSH2 0x3A22 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP9 SWAP2 SWAP8 POP PUSH2 0xFFFF AND SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x19A5 JUMPI POP DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x19AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19BA DUP3 PUSH1 0x0 DUP1 PUSH2 0x1CE9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF00 DUP3 PUSH1 0x0 PUSH2 0x2769 JUMP JUMPDEST PUSH2 0x19D5 DUP2 PUSH2 0x2EB1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1A02 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND OR SWAP1 SSTORE JUMPDEST POP PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EC DUP1 SLOAD PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3ED DUP1 SLOAD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH25 0x2000000000000000100000000000000000000000000000003 PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EE SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND CALLER PUSH2 0x100 MUL PUSH1 0xFF NOT AND OR PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0xB DUP3 DUP8 ADD DUP2 DUP2 MSTORE PUSH1 0x16 SWAP5 DUP5 ADD SWAP5 DUP6 MSTORE PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3F4 DUP1 SLOAD SWAP8 DUP9 ADD DUP2 SSTORE DUP4 MSTORE SWAP3 MLOAD PUSH32 0xDAF6A3DF2E7FE032FABA7F1C41811297BB73983780E1888A846F8AA1A8324D27 PUSH1 0x3 SWAP1 SWAP8 MUL SWAP7 DUP8 ADD DUP1 SLOAD SWAP1 SWAP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR SWAP1 SWAP5 SSTORE SWAP1 MLOAD PUSH32 0xDAF6A3DF2E7FE032FABA7F1C41811297BB73983780E1888A846F8AA1A8324D28 DUP6 ADD SSTORE SWAP1 MLOAD PUSH32 0xDAF6A3DF2E7FE032FABA7F1C41811297BB73983780E1888A846F8AA1A8324D29 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH32 0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BC DUP1 SLOAD PUSH1 0x21 PUSH32 0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BD SSTORE PUSH18 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH17 0x2C00000000000000000000000000000064 OR SWAP1 SSTORE SWAP1 MSTORE PUSH32 0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746C0 SWAP1 MSTORE PUSH1 0x37 PUSH32 0x952B799CF669BEA82D5C90B8E8004C707505141B802E28ECFB2A120A84CC5185 SSTORE PUSH2 0x309 PUSH32 0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BE SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CA4 DUP2 PUSH2 0x2F04 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB3 DUP5 DUP5 PUSH2 0x17F5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1CC1 DUP3 DUP5 PUSH2 0x2F72 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1CD6 DUP7 PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x14CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1D30 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV SWAP1 SWAP2 AND LT ISZERO JUMPDEST PUSH2 0x1D39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1D82 SWAP1 PUSH32 0x0 PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x3994 JUMP JUMPDEST PUSH2 0x1D8D SWAP1 PUSH1 0x1 PUSH2 0x39BA JUMP JUMPDEST PUSH1 0x8 DUP4 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 DUP5 ADD SLOAD DUP2 LT ISZERO PUSH2 0x2165 JUMPI PUSH1 0x0 DUP5 PUSH1 0x8 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1DBB JUMPI PUSH2 0x1DBB PUSH2 0x3A22 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO DUP1 PUSH2 0x1E0B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1E0B JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1E24 JUMPI DUP4 PUSH2 0x1E1A DUP2 PUSH2 0x3A53 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E30 DUP8 DUP5 PUSH2 0x3031 JUMP JUMPDEST PUSH1 0x2 DUP7 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 DUP6 ADD SSTORE SWAP1 POP DUP9 ISZERO PUSH2 0x2037 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x2 DUP8 ADD SLOAD PUSH2 0xFFFF AND DUP1 DUP6 MSTORE PUSH1 0x4 DUP3 ADD SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB EQ ISZERO PUSH2 0x1EC6 JUMPI PUSH1 0x2 DUP10 ADD SLOAD PUSH2 0x1EAB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x3A6A JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x2 DUP10 ADD SLOAD PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1EFC SWAP1 DUP5 SWAP1 PUSH2 0x3A87 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH2 0xFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB EQ ISZERO PUSH2 0x1F52 JUMPI PUSH1 0x2 DUP10 ADD SLOAD PUSH2 0xFFFF DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND SWAP1 SSTORE PUSH2 0x1F8E JUMP JUMPDEST PUSH1 0x2 DUP10 ADD SLOAD PUSH2 0xFFFF DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1F88 SWAP1 DUP5 SWAP1 PUSH2 0x3AC6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH2 0xFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1FC8 JUMPI PUSH2 0xFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB SWAP1 SSTORE JUMPDEST PUSH2 0xFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2002 JUMPI PUSH2 0xFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB SWAP1 SSTORE JUMPDEST PUSH1 0x2 DUP10 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x201A DUP3 DUP11 PUSH2 0x39E0 JUMP JUMPDEST PUSH2 0xFFFF AND PUSH2 0x2028 SWAP2 SWAP1 PUSH2 0x3A03 JUMP JUMPDEST PUSH2 0x2032 SWAP1 DUP5 PUSH2 0x3B07 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST DUP9 DUP1 PUSH2 0x204E JUMPI POP PUSH1 0x2 DUP4 ADD SLOAD PUSH2 0xFFFF DUP1 DUP9 AND SWAP2 AND LT ISZERO JUMPDEST ISZERO PUSH2 0x20DF JUMPI DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 SSTORE PUSH1 0x0 PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE DUP5 PUSH2 0x207F DUP2 PUSH2 0x3A53 JUMP JUMPDEST SWAP6 POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH32 0xF3B13DF5BDD5EFCB090F73617909A6295EE75815920224C512D784B2726812F1 DUP5 PUSH1 0x40 MLOAD PUSH2 0x20D2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x212C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP15 AND SWAP1 PUSH32 0xAB654B569128C88FFCD210806A5E48EE14C541E2C76923F143281F20807090C1 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH2 0x2136 DUP2 DUP10 PUSH2 0x3B07 JUMP JUMPDEST SWAP8 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND ISZERO PUSH2 0x214F JUMPI POP POP POP PUSH2 0x2165 JUMP JUMPDEST POP POP POP JUMPDEST DUP1 PUSH2 0x215D DUP2 PUSH2 0x3A38 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D98 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP9 AND PUSH2 0x2232 JUMPI DUP3 PUSH2 0x21F4 JUMPI DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x1 SWAP1 DUP2 OR DUP7 SSTORE DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP7 ADD SSTORE PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP12 AND SWAP1 PUSH32 0xD5EA25BA3600C386669C484639012A0AE266ED537F0C4AB71B651024736EFFF4 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x2242 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP12 AND SWAP1 PUSH32 0x51377F313F8C3404E86D38AE907B443ADA38578FD6B9589D03F79D03FF9303C7 SWAP1 PUSH1 0x20 ADD PUSH2 0x21E7 JUMP JUMPDEST PUSH1 0x8 DUP6 ADD SLOAD DUP3 LT PUSH2 0x2242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ISZERO PUSH2 0x225B JUMPI PUSH2 0x225B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP8 PUSH2 0x25E6 JUMP JUMPDEST POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA5 DUP3 DUP5 PUSH2 0x3980 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x22A6 JUMPI POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x22B4 JUMPI POP DUP1 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x22BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER PUSH2 0x100 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 SWAP2 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xC0 SHL SWAP2 DUP10 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP1 DUP7 AND OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x2346 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2369 JUMPI PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x237E JUMPI DUP5 PUSH2 0x2380 JUMP JUMPDEST CALLER JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP5 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP4 DIV SWAP1 SWAP3 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP10 AND SWAP1 PUSH32 0x8E609DAC02BD39FF24C8AD6BB9A735E739B56708B22159948EC9828AD765B4D1 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH2 0xFFFF AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2466 JUMPI POP DUP1 SLOAD PUSH2 0xFFFF DUP1 DUP9 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV AND LT JUMPDEST DUP1 ISZERO PUSH2 0x2483 JUMPI POP PUSH2 0x2476 DUP2 PUSH2 0x26FF JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO JUMPDEST PUSH2 0x248C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB EQ ISZERO PUSH2 0x24CD JUMPI PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0x24F8 JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x24F2 SWAP1 DUP5 SWAP1 PUSH2 0x3AC6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB EQ ISZERO PUSH2 0x2540 JUMPI PUSH2 0x2525 DUP3 PUSH2 0x3A6A JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x256B JUMP JUMPDEST PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2565 SWAP1 DUP5 SWAP1 PUSH2 0x3A87 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x25A5 JUMPI PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB SWAP1 SSTORE JUMPDEST PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x17ED JUMPI PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x2636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x129A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2683 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2688 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x19BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x129A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x2724 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND GT JUMPDEST DUP1 PUSH2 0x273F JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND LT JUMPDEST ISZERO PUSH2 0x275C JUMPI POP POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 JUMP JUMPDEST POP PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x27AB JUMPI POP DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST DUP1 ISZERO PUSH2 0x27B9 JUMPI POP DUP1 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x27C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 DUP3 ADD SLOAD DUP2 LT ISZERO PUSH2 0x2886 JUMPI PUSH1 0x0 DUP3 PUSH1 0x8 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x27E8 JUMPI PUSH2 0x27E8 PUSH2 0x3A22 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0x2832 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2832 JUMPI POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x283D JUMPI POP PUSH2 0x2874 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2849 DUP5 DUP4 PUSH2 0x3031 JUMP JUMPDEST POP POP SWAP1 POP DUP1 DUP6 PUSH2 0x2859 SWAP2 SWAP1 PUSH2 0x3B07 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0x2871 JUMPI POP POP PUSH2 0x2886 JUMP JUMPDEST POP POP JUMPDEST DUP1 PUSH2 0x287E DUP2 PUSH2 0x3A38 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x28A5 JUMPI PUSH1 0x8 DUP3 ADD SLOAD DUP2 LT PUSH2 0x28A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH2 0xFFFF AND ISZERO DUP1 PUSH2 0x28D6 JUMPI POP DUP2 SLOAD PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP3 AND GT ISZERO JUMPDEST ISZERO PUSH2 0x28DF JUMPI POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x28FA SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0x1 PUSH2 0x39BA JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND GT PUSH2 0x298B JUMPI PUSH2 0xFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 EQ ISZERO PUSH2 0x294D JUMPI POP PUSH2 0xFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x2979 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD PUSH2 0x295C SWAP1 DUP3 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SSTORE POP PUSH2 0xFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST DUP1 PUSH2 0x2983 DUP2 PUSH2 0x3B1F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x28FD JUMP JUMPDEST POP DUP2 SLOAD PUSH2 0xFFFF DUP3 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH2 0xFFFF PUSH1 0x80 SHL NOT DUP3 AND DUP2 OR DUP5 SSTORE PUSH1 0x1 DUP5 ADD SLOAD SWAP2 DUP5 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x29CA SWAP2 DUP6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND SWAP2 AND OR PUSH2 0x3B41 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND EQ PUSH2 0x2A0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x1E8D98C1B4A0D9BD2E2371026B632EB2773FCCE41742E41F02F574AB69868D4C SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2A5C DUP5 DUP5 DUP4 DUP1 DUP1 PUSH2 0x34C2 JUMP JUMPDEST MLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH2 0xDA5 DUP4 PUSH4 0x65AF62C3 PUSH1 0xE0 SHL DUP4 DUP1 DUP1 PUSH2 0x34C2 JUMP JUMPDEST PUSH2 0x2B29 PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B4A DUP5 PUSH4 0x713C0E57 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP8 AND DUP6 PUSH2 0x34C2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2B63 DUP6 DUP6 PUSH1 0x1 DUP7 DUP6 PUSH2 0x34C2 JUMP JUMPDEST MLOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH2 0x9E0 DUP6 PUSH4 0xD845F4FB PUSH1 0xE0 SHL PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP9 AND DUP8 PUSH2 0x34C2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH2 0x2B4A DUP5 PUSH4 0x189A5A17 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP6 PUSH2 0x34C2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2BFC DUP7 DUP7 PUSH1 0x2 DUP8 DUP8 PUSH2 0x34C2 JUMP JUMPDEST MLOAD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH2 0x2C54 JUMPI PUSH1 0x40 MLOAD ADDRESS SWAP1 PUSH2 0x2C36 SWAP1 PUSH1 0x19 PUSH1 0xF8 SHL SWAP1 PUSH1 0x0 SWAP1 DUP5 SWAP1 DUP9 SWAP1 PUSH1 0x20 ADD PUSH2 0x3B9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH1 0x45 PUSH1 0xF8 SHL EQ ISZERO PUSH2 0x2E00 JUMPI DUP3 MLOAD DUP1 PUSH2 0x2CC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456D707479206D657373616765206E6F7420616C6C6F77656420666F72207665 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x7273696F6E2045 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x129A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x2CF2 JUMPI DUP1 PUSH2 0x2CDC DUP2 PUSH2 0x3A38 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CEB SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x3980 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CCC JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2D0C JUMPI PUSH2 0x2D0C PUSH2 0x3BE5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2D36 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP7 MLOAD SWAP4 POP SWAP1 POP DUP2 JUMPDEST DUP4 ISZERO PUSH2 0x2DA4 JUMPI PUSH2 0x2D50 PUSH1 0xA DUP6 PUSH2 0x3BFB JUMP JUMPDEST PUSH2 0x2D5B SWAP1 PUSH1 0x30 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0xF8 SHL DUP3 PUSH2 0x2D68 DUP4 PUSH2 0x3A53 JUMP JUMPDEST SWAP3 POP DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2D7B JUMPI PUSH2 0x2D7B PUSH2 0x3A22 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x2D9D PUSH1 0xA DUP6 PUSH2 0x3980 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DDF SWAP1 PUSH1 0x19 PUSH1 0xF8 SHL SWAP1 PUSH32 0x457468657265756D205369676E6564204D6573736167653A0A00000000000000 SWAP1 DUP6 SWAP1 DUP12 SWAP1 PUSH1 0x20 ADD PUSH2 0x3C0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP5 POP POP POP POP POP PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E737570706F72746564204549503139312076657273696F6E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x129A JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH4 0xFFFFFFFF AND PUSH32 0x0 PUSH4 0xFFFFFFFF AND DUP4 PUSH2 0xFFFF AND PUSH2 0x2EA7 SWAP2 SWAP1 PUSH2 0x3A03 JUMP JUMPDEST PUSH2 0xF00 SWAP2 SWAP1 PUSH2 0x3980 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND EQ PUSH2 0x2EC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xD55EC27C5C6316913ED8803C18CFD1BFEFEA953DB909DCBA6140744A9D8B0D1F SWAP1 PUSH1 0x20 ADD PUSH2 0x2A41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2F17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x2F82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH1 0x1B DUP2 LT ISZERO PUSH2 0x2FAB JUMPI PUSH2 0x2FA8 PUSH1 0x1B DUP3 PUSH2 0x3C44 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x2FC0 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x2FC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP9 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x301C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH4 0xFFFFFFFF AND DUP7 PUSH1 0x2 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x3080 SWAP2 SWAP1 PUSH2 0x3994 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30DA PUSH2 0x308F PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x2 DUP10 ADD SLOAD PUSH2 0x30D5 SWAP1 PUSH32 0x0 PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x3994 JUMP JUMPDEST PUSH2 0x3512 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x30F4 SWAP1 DUP5 SWAP1 PUSH2 0xFFFF AND PUSH2 0x3530 JUMP JUMPDEST DUP8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x90DCB51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x90DCB51F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3164 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3188 SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST PUSH1 0x2 DUP11 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xFFFF AND PUSH2 0x323A JUMPI DUP10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4789D02D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0xFFFF DUP9 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x4789D02D SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x320F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3233 SWAP2 SWAP1 PUSH2 0x3C69 JUMP JUMPDEST SWAP1 POP PUSH2 0x3241 JUMP JUMPDEST POP PUSH1 0x1 DUP10 ADD SLOAD JUMPDEST DUP1 SWAP8 POP JUMPDEST DUP2 DUP9 LT ISZERO PUSH2 0x337B JUMPI DUP10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8FA95A15 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x8FA95A15 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32E6 SWAP2 SWAP1 PUSH2 0x3C82 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP7 PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x3301 JUMPI POP POP PUSH2 0x337B JUMP JUMPDEST DUP6 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND LT ISZERO PUSH2 0x3318 JUMPI POP POP PUSH2 0x3369 JUMP JUMPDEST PUSH2 0x3339 PUSH2 0x3325 DUP8 DUP5 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x332F DUP10 DUP5 PUSH2 0x3512 JUMP JUMPDEST PUSH2 0xFFFF AND SWAP1 PUSH2 0x3548 JUMP JUMPDEST PUSH2 0x3344 SWAP1 PUSH1 0x1 PUSH2 0x39BA JUMP JUMPDEST PUSH2 0x334E SWAP1 DUP7 PUSH2 0x39BA JUMP JUMPDEST SWAP5 POP DUP1 PUSH2 0xFFFF AND DUP8 PUSH2 0xFFFF AND GT PUSH2 0x3366 JUMPI POP POP PUSH2 0x337B JUMP JUMPDEST POP POP JUMPDEST DUP8 PUSH2 0x3373 DUP2 PUSH2 0x3A38 JUMP JUMPDEST SWAP9 POP POP PUSH2 0x3245 JUMP JUMPDEST DUP10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x51F5E0C1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xA3EBC182 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x340A SWAP2 SWAP1 PUSH2 0x3CB1 JUMP JUMPDEST SWAP1 POP DUP3 DUP10 EQ DUP1 ISZERO PUSH2 0x3422 JUMPI POP DUP6 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND LT JUMPDEST ISZERO PUSH2 0x3452 JUMPI PUSH2 0x343B PUSH2 0x3435 PUSH1 0x1 DUP8 PUSH2 0x39E0 JUMP JUMPDEST DUP3 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x3445 SWAP1 DUP8 PUSH2 0x39E0 JUMP JUMPDEST PUSH2 0x344F SWAP1 DUP6 PUSH2 0x39BA JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH1 0x2 DUP13 ADD SLOAD PUSH2 0x346F SWAP1 PUSH2 0xFFFF DUP7 AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x3CCE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP10 POP PUSH2 0x3485 DUP7 PUSH1 0x1 PUSH2 0x39BA JUMP JUMPDEST SWAP8 POP POP POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT PUSH2 0x34AF JUMPI PUSH2 0x34A8 DUP4 DUP4 PUSH2 0x356C JUMP JUMPDEST SWAP1 POP PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x34A8 PUSH2 0x34BB DUP4 PUSH2 0x3A6A JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x3578 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP4 ISZERO PUSH2 0x34D5 JUMPI DUP3 PUSH1 0x4 DUP3 ADD MSTORE JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x34E5 JUMPI DUP2 PUSH1 0x24 DUP3 ADD MSTORE JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x20 MUL PUSH1 0x4 ADD DUP4 DUP10 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x3503 JUMPI RETURNDATASIZE PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x3508 JUMP JUMPDEST PUSH1 0x0 DUP3 REVERT JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xFFFF AND DUP4 PUSH2 0xFFFF AND LT PUSH2 0x3529 JUMPI DUP2 PUSH2 0xDA5 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xFFFF AND DUP4 PUSH2 0xFFFF AND LT ISZERO PUSH2 0x3529 JUMPI DUP2 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x3562 JUMPI PUSH2 0x3562 PUSH2 0x3CFD JUMP JUMPDEST PUSH2 0xDA5 DUP3 DUP5 PUSH2 0x39E0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA5 DUP3 DUP5 PUSH2 0x3B07 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA5 DUP3 DUP5 PUSH2 0x3D13 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x35C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35D0 DUP6 PUSH2 0x3584 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x35E0 DUP2 PUSH2 0x359C JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x35FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x361F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x3631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDA5 DUP2 PUSH2 0x359C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x366F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3686 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x36A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x36D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x36EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36FB DUP11 DUP4 DUP12 ADD PUSH2 0x365D JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3710 DUP3 PUSH2 0x359C JUMP JUMPDEST DUP2 SWAP6 POP PUSH2 0x371F PUSH1 0x40 DUP11 ADD PUSH2 0x36A8 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3742 DUP10 DUP3 DUP11 ADD PUSH2 0x365D JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3766 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA5 DUP3 PUSH2 0x3584 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x379B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37A4 DUP5 PUSH2 0x376F JUMP JUMPDEST SWAP3 POP PUSH2 0x37B2 PUSH1 0x20 DUP6 ADD PUSH2 0x376F JUMP JUMPDEST SWAP2 POP PUSH2 0x37C0 PUSH1 0x40 DUP6 ADD PUSH2 0x376F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37E5 DUP4 PUSH2 0x3584 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x37F5 DUP2 PUSH2 0x359C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1CA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3823 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x382E DUP2 PUSH2 0x359C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x37F5 DUP2 PUSH2 0x3800 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x385F DUP7 PUSH2 0x3584 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x386F DUP2 PUSH2 0x359C JUMP JUMPDEST SWAP4 POP PUSH2 0x387D PUSH1 0x40 DUP8 ADD PUSH2 0x36A8 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38A4 DUP9 DUP3 DUP10 ADD PUSH2 0x365D JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x38E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x38EF DUP2 PUSH2 0x359C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x38FF DUP2 PUSH2 0x3800 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x390F DUP2 PUSH2 0x3800 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x391F DUP2 PUSH2 0x3800 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x393D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3946 DUP4 PUSH2 0x3584 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x398F JUMPI PUSH2 0x398F PUSH2 0x3954 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x39AE JUMPI PUSH2 0x39AE PUSH2 0x3954 JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x39D7 JUMPI PUSH2 0x39D7 PUSH2 0x396A JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x39FB JUMPI PUSH2 0x39FB PUSH2 0x396A JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3A1D JUMPI PUSH2 0x3A1D PUSH2 0x396A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3A4C JUMPI PUSH2 0x3A4C PUSH2 0x396A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3A62 JUMPI PUSH2 0x3A62 PUSH2 0x396A JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 EQ ISZERO PUSH2 0x3A80 JUMPI PUSH2 0x3A80 PUSH2 0x396A JUMP JUMPDEST POP PUSH1 0x0 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0xFF SHL DUP6 ADD DUP5 SLT AND ISZERO PUSH2 0x3AA5 JUMPI PUSH2 0x3AA5 PUSH2 0x396A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 ADD DUP4 SGT DUP2 AND ISZERO PUSH2 0x3AC0 JUMPI PUSH2 0x3AC0 PUSH2 0x396A JUMP JUMPDEST POP POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x3AE8 JUMPI PUSH2 0x3AE8 PUSH2 0x396A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x3B01 JUMPI PUSH2 0x3B01 PUSH2 0x396A JUMP JUMPDEST POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3B1A JUMPI PUSH2 0x3B1A PUSH2 0x396A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x3B37 JUMPI PUSH2 0x3B37 PUSH2 0x396A JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x39D7 JUMPI PUSH2 0x39D7 PUSH2 0x396A JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3B84 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD MSTORE ADD PUSH2 0x3B6A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3B93 JUMPI PUSH1 0x0 DUP3 DUP7 ADD MSTORE JUMPDEST POP SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x1 DUP3 ADD MSTORE PUSH1 0x60 DUP4 SWAP1 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x2 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3BDB PUSH1 0x16 DUP4 ADD DUP5 PUSH2 0x3B63 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3C0A JUMPI PUSH2 0x3C0A PUSH2 0x3954 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP6 AND DUP2 MSTORE PUSH7 0xFFFFFFFFFFFFFF NOT DUP5 AND PUSH1 0x1 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3BDB PUSH2 0x3C3E PUSH1 0x1A DUP5 ADD DUP7 PUSH2 0x3B63 JUMP JUMPDEST DUP5 PUSH2 0x3B63 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x3C61 JUMPI PUSH2 0x3C61 PUSH2 0x396A JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x3CA0 DUP2 PUSH2 0x3800 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x37F5 DUP2 PUSH2 0x3800 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDA5 DUP2 PUSH2 0x3800 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND DUP2 DUP6 AND DUP2 DUP4 DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3CF4 JUMPI PUSH2 0x3CF4 PUSH2 0x396A JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3D25 JUMPI PUSH2 0x3D25 PUSH2 0x396A JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD SWAP6 GAS SLT MSTORE8 0xD1 JUMP EXP PUSH21 0x7B6409CC836F8AFF98236DB2C8975434D821EC25C0 0xCE GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        520,
        34460
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "8": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "LT",
      "path": "12"
    },
    "9": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x23B"
    },
    "12": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "16": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "SHR",
      "path": "12"
    },
    "19": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "20": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8C316B90"
    },
    "25": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "GT",
      "path": "12"
    },
    "26": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12E"
    },
    "29": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "30": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "31": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xCE5494BB"
    },
    "36": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "GT",
      "path": "12"
    },
    "37": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAB"
    },
    "40": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "41": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "42": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE2FDCC17"
    },
    "47": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "GT",
      "path": "12"
    },
    "48": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6F"
    },
    "51": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "52": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "53": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE2FDCC17"
    },
    "58": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "59": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8CA"
    },
    "62": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "63": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "64": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE38A303B"
    },
    "69": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "70": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8FE"
    },
    "73": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "74": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "75": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE665830D"
    },
    "80": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "81": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x931"
    },
    "84": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "85": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "86": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE8DCCD06"
    },
    "91": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "92": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x951"
    },
    "95": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "96": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "97": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF2FDE38B"
    },
    "102": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "103": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x971"
    },
    "106": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "107": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "110": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "REVERT",
      "path": "12"
    },
    "111": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "112": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "113": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xCE5494BB"
    },
    "118": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "119": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7ED"
    },
    "122": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "123": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "124": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD4B83992"
    },
    "129": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "130": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x80D"
    },
    "133": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "134": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "135": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD808A4EE"
    },
    "140": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "141": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x82D"
    },
    "144": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "145": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "146": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD845F4FB"
    },
    "151": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "152": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x861"
    },
    "155": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "156": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "157": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xDFDECFAF"
    },
    "162": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "163": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8AA"
    },
    "166": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "167": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "169": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "170": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "REVERT",
      "path": "12"
    },
    "171": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "172": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "173": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA2D1D5E2"
    },
    "178": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "GT",
      "path": "12"
    },
    "179": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF2"
    },
    "182": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "183": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "184": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA2D1D5E2"
    },
    "189": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "190": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x74D"
    },
    "193": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "194": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "195": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA87D40D9"
    },
    "200": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "201": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x76D"
    },
    "204": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "205": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "206": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB46FFB45"
    },
    "211": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "212": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x78D"
    },
    "215": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "216": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "217": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB9626D21"
    },
    "222": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "223": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7AD"
    },
    "226": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "227": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "228": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xCBF12F2A"
    },
    "233": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "234": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7CD"
    },
    "237": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "238": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "240": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "241": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "REVERT",
      "path": "12"
    },
    "242": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "243": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "244": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8C316B90"
    },
    "249": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "250": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6A4"
    },
    "253": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "254": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "255": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8D7FD2FA"
    },
    "260": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "261": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6C4"
    },
    "264": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "265": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "266": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8DA5CB5B"
    },
    "271": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "272": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6E4"
    },
    "275": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "276": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "277": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8E81CA5A"
    },
    "282": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "283": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x702"
    },
    "286": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "287": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "288": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8F32D59B"
    },
    "293": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "294": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x722"
    },
    "297": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "298": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "300": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "301": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "REVERT",
      "path": "12"
    },
    "302": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "303": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "304": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x631722F2"
    },
    "309": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "GT",
      "path": "12"
    },
    "310": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1BC"
    },
    "313": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "314": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "315": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x713C0E57"
    },
    "320": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "GT",
      "path": "12"
    },
    "321": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x180"
    },
    "324": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "325": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "326": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x713C0E57"
    },
    "331": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "332": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x52E"
    },
    "335": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "336": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "337": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x715018A6"
    },
    "342": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "343": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x63C"
    },
    "346": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "347": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "348": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x72BE8D8D"
    },
    "353": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "354": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x651"
    },
    "357": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "358": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "359": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x81E742A1"
    },
    "364": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "365": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x671"
    },
    "368": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "369": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "370": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x889DDD1A"
    },
    "375": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "376": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x684"
    },
    "379": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "380": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "382": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "383": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "REVERT",
      "path": "12"
    },
    "384": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "385": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "386": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x631722F2"
    },
    "391": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "392": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x420"
    },
    "395": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "396": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "397": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x63C509D5"
    },
    "402": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "403": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x440"
    },
    "406": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "407": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "408": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x65A9AF87"
    },
    "413": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "414": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x460"
    },
    "417": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "418": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "419": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x65AF62C3"
    },
    "424": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "425": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x498"
    },
    "428": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "429": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "430": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x6BD2AF57"
    },
    "435": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "436": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4F4"
    },
    "439": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "440": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "442": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "443": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "REVERT",
      "path": "12"
    },
    "444": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "445": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "446": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x407F8001"
    },
    "451": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "GT",
      "path": "12"
    },
    "452": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x203"
    },
    "455": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "456": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "457": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x407F8001"
    },
    "462": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "463": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x344"
    },
    "466": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "467": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "468": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x4B2CD118"
    },
    "473": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "474": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x38D"
    },
    "477": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "478": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "479": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x4B8FED4F"
    },
    "484": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "485": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3C5"
    },
    "488": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "489": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "490": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x51CFF8D9"
    },
    "495": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "496": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E0"
    },
    "499": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "500": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "501": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x58CF15FB"
    },
    "506": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "507": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x400"
    },
    "510": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "511": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "513": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "514": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "REVERT",
      "path": "12"
    },
    "515": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "516": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "517": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x76421E8"
    },
    "522": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "523": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x240"
    },
    "526": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "527": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "528": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x86146D2"
    },
    "533": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "534": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x273"
    },
    "537": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "538": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "539": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x189A5A17"
    },
    "544": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "545": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29B"
    },
    "548": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "549": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "550": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x3735E106"
    },
    "555": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "556": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x31A"
    },
    "559": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "560": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "561": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x3CCFD60B"
    },
    "566": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "EQ",
      "path": "12"
    },
    "567": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x32F"
    },
    "570": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "571": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "572": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "574": {
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "DUP1",
      "path": "12"
    },
    "575": {
      "first_revert": true,
      "fn": null,
      "offset": [
        520,
        34460
      ],
      "op": "REVERT",
      "path": "12"
    },
    "576": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "577": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "578": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "DUP1",
      "path": "12"
    },
    "579": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "580": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24C"
    },
    "583": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "584": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "586": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "DUP1",
      "path": "12"
    },
    "587": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "REVERT",
      "path": "12"
    },
    "588": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "589": {
      "op": "POP"
    },
    "590": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "593": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25B"
    },
    "596": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "597": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "599": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35B1"
    },
    "602": {
      "fn": "PolicyManager.revoke",
      "jump": "i",
      "offset": [
        26552,
        26801
      ],
      "op": "JUMP",
      "path": "12"
    },
    "603": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "604": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x991"
    },
    "607": {
      "fn": "PolicyManager.revoke",
      "jump": "i",
      "offset": [
        26552,
        26801
      ],
      "op": "JUMP",
      "path": "12"
    },
    "608": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "609": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "611": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "612": {
      "op": "SWAP1"
    },
    "613": {
      "op": "DUP2"
    },
    "614": {
      "op": "MSTORE"
    },
    "615": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "617": {
      "op": "ADD"
    },
    "618": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "619": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "621": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "622": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "DUP1",
      "path": "12"
    },
    "623": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "624": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "SUB",
      "path": "12"
    },
    "625": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "626": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "RETURN",
      "path": "12"
    },
    "627": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5008,
        5131
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "628": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5008,
        5131
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "629": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5008,
        5131
      ],
      "op": "DUP1",
      "path": "12"
    },
    "630": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5008,
        5131
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "631": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5008,
        5131
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27F"
    },
    "634": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5008,
        5131
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "635": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5008,
        5131
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "637": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5008,
        5131
      ],
      "op": "DUP1",
      "path": "12"
    },
    "638": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5008,
        5131
      ],
      "op": "REVERT",
      "path": "12"
    },
    "639": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5008,
        5131
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "640": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5008,
        5131
      ],
      "op": "POP",
      "path": "12"
    },
    "641": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5008,
        5131
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x288"
    },
    "644": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5008,
        5131
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9E9"
    },
    "647": {
      "fn": "PolicyManager.getCurrentPeriod",
      "jump": "i",
      "offset": [
        5008,
        5131
      ],
      "op": "JUMP",
      "path": "12"
    },
    "648": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5008,
        5131
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "649": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5008,
        5131
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "651": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5008,
        5131
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "652": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "655": {
      "op": "SWAP1"
    },
    "656": {
      "op": "SWAP2"
    },
    "657": {
      "op": "AND"
    },
    "658": {
      "op": "DUP2"
    },
    "659": {
      "op": "MSTORE"
    },
    "660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "662": {
      "op": "ADD"
    },
    "663": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5008,
        5131
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26A"
    },
    "666": {
      "op": "JUMP"
    },
    "667": {
      "offset": [
        3423,
        3465
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "668": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "669": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "DUP1",
      "path": "12"
    },
    "670": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "671": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A7"
    },
    "674": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "675": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "677": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "DUP1",
      "path": "12"
    },
    "678": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "REVERT",
      "path": "12"
    },
    "679": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "680": {
      "op": "POP"
    },
    "681": {
      "offset": [
        3423,
        3465
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2ED"
    },
    "684": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B6"
    },
    "687": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "688": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "690": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3640"
    },
    "693": {
      "fn": "PolicyManager.getCurrentPeriod",
      "jump": "i",
      "offset": [
        3423,
        3465
      ],
      "op": "JUMP",
      "path": "12"
    },
    "694": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "695": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "697": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "699": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "700": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "702": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "703": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "DUP2",
      "path": "12"
    },
    "704": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "705": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "707": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "708": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "709": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "DUP1",
      "path": "12"
    },
    "710": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "711": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "713": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "DUP3",
      "path": "12"
    },
    "714": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "ADD",
      "path": "12"
    },
    "715": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "716": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "718": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "719": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "720": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "ADD",
      "path": "12"
    },
    "721": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "728": {
      "op": "SHL"
    },
    "729": {
      "op": "SUB"
    },
    "730": {
      "offset": [
        3423,
        3465
      ],
      "op": "DUP3",
      "path": "12"
    },
    "731": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "AND",
      "path": "12"
    },
    "732": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "737": {
      "op": "SHL"
    },
    "738": {
      "offset": [
        3423,
        3465
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "739": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "740": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "DIV",
      "path": "12"
    },
    "741": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "744": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "AND",
      "path": "12"
    },
    "745": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "746": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "747": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "DUP5",
      "path": "12"
    },
    "748": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "JUMP",
      "path": "12"
    },
    "749": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "750": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "752": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "DUP1",
      "path": "12"
    },
    "753": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        3423,
        3465
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "760": {
      "op": "SHL"
    },
    "761": {
      "op": "SUB"
    },
    "762": {
      "op": "SWAP1"
    },
    "763": {
      "op": "SWAP6"
    },
    "764": {
      "op": "AND"
    },
    "765": {
      "op": "DUP6"
    },
    "766": {
      "op": "MSTORE"
    },
    "767": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "770": {
      "op": "SWAP1"
    },
    "771": {
      "op": "SWAP4"
    },
    "772": {
      "op": "AND"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "775": {
      "op": "DUP6"
    },
    "776": {
      "op": "ADD"
    },
    "777": {
      "op": "MSTORE"
    },
    "778": {
      "op": "SWAP2"
    },
    "779": {
      "op": "DUP4"
    },
    "780": {
      "op": "ADD"
    },
    "781": {
      "op": "MSTORE"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "784": {
      "op": "DUP3"
    },
    "785": {
      "op": "ADD"
    },
    "786": {
      "op": "MSTORE"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "789": {
      "op": "ADD"
    },
    "790": {
      "offset": [
        3423,
        3465
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26A"
    },
    "793": {
      "op": "JUMP"
    },
    "794": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10125,
        11486
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "795": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10125,
        11486
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x32D"
    },
    "798": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10125,
        11486
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x328"
    },
    "801": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10125,
        11486
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "802": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10125,
        11486
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "804": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10125,
        11486
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x36BF"
    },
    "807": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        10125,
        11486
      ],
      "op": "JUMP",
      "path": "12"
    },
    "808": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10125,
        11486
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "809": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10125,
        11486
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA20"
    },
    "812": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        10125,
        11486
      ],
      "op": "JUMP",
      "path": "12"
    },
    "813": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10125,
        11486
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "814": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10125,
        11486
      ],
      "op": "STOP",
      "path": "12"
    },
    "815": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16732,
        16832
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "816": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16732,
        16832
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "817": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16732,
        16832
      ],
      "op": "DUP1",
      "path": "12"
    },
    "818": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16732,
        16832
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "819": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16732,
        16832
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x33B"
    },
    "822": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16732,
        16832
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "823": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16732,
        16832
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "825": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16732,
        16832
      ],
      "op": "DUP1",
      "path": "12"
    },
    "826": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16732,
        16832
      ],
      "op": "REVERT",
      "path": "12"
    },
    "827": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16732,
        16832
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "828": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16732,
        16832
      ],
      "op": "POP",
      "path": "12"
    },
    "829": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16732,
        16832
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "832": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16732,
        16832
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCC2"
    },
    "835": {
      "fn": "PolicyManager.withdraw",
      "jump": "i",
      "offset": [
        16732,
        16832
      ],
      "op": "JUMP",
      "path": "12"
    },
    "836": {
      "offset": [
        3327,
        3367
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "837": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3327,
        3367
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "838": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3327,
        3367
      ],
      "op": "DUP1",
      "path": "12"
    },
    "839": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3327,
        3367
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "840": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3327,
        3367
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x350"
    },
    "843": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3327,
        3367
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "844": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3327,
        3367
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "846": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3327,
        3367
      ],
      "op": "DUP1",
      "path": "12"
    },
    "847": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3327,
        3367
      ],
      "op": "REVERT",
      "path": "12"
    },
    "848": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3327,
        3367
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "849": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3327,
        3367
      ],
      "op": "POP",
      "path": "12"
    },
    "850": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3327,
        3367
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x378"
    },
    "853": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3327,
        3367
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "886": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3327,
        3367
      ],
      "op": "DUP2",
      "path": "12"
    },
    "887": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3327,
        3367
      ],
      "op": "JUMP",
      "path": "12"
    },
    "888": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3327,
        3367
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "889": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3327,
        3367
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "891": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3327,
        3367
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "892": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "897": {
      "op": "SWAP1"
    },
    "898": {
      "op": "SWAP2"
    },
    "899": {
      "op": "AND"
    },
    "900": {
      "op": "DUP2"
    },
    "901": {
      "op": "MSTORE"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "904": {
      "op": "ADD"
    },
    "905": {
      "offset": [
        3327,
        3367
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26A"
    },
    "908": {
      "op": "JUMP"
    },
    "909": {
      "offset": [
        1026,
        1055
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "910": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        1026,
        1055
      ],
      "op": "CALLVALUE",
      "path": "26"
    },
    "911": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        1026,
        1055
      ],
      "op": "DUP1",
      "path": "26"
    },
    "912": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        1026,
        1055
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "913": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        1026,
        1055
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x399"
    },
    "916": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        1026,
        1055
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "917": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        1026,
        1055
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "919": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        1026,
        1055
      ],
      "op": "DUP1",
      "path": "26"
    },
    "920": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        1026,
        1055
      ],
      "op": "REVERT",
      "path": "26"
    },
    "921": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        1026,
        1055
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "922": {
      "op": "POP"
    },
    "923": {
      "offset": [
        1026,
        1055
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "925": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        1026,
        1055
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "926": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        1026,
        1055
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3AD"
    },
    "929": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        1026,
        1055
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "936": {
      "op": "SHL"
    },
    "937": {
      "op": "SUB"
    },
    "938": {
      "offset": [
        1026,
        1055
      ],
      "op": "AND",
      "path": "26"
    },
    "939": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        1026,
        1055
      ],
      "op": "DUP2",
      "path": "26"
    },
    "940": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        1026,
        1055
      ],
      "op": "JUMP",
      "path": "26"
    },
    "941": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        1026,
        1055
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "942": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        1026,
        1055
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "944": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        1026,
        1055
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "951": {
      "op": "SHL"
    },
    "952": {
      "op": "SUB"
    },
    "953": {
      "op": "SWAP1"
    },
    "954": {
      "op": "SWAP2"
    },
    "955": {
      "op": "AND"
    },
    "956": {
      "op": "DUP2"
    },
    "957": {
      "op": "MSTORE"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "960": {
      "op": "ADD"
    },
    "961": {
      "offset": [
        1026,
        1055
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x26A"
    },
    "964": {
      "op": "JUMP"
    },
    "965": {
      "offset": [
        3148,
        3223
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "966": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3148,
        3223
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "967": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3148,
        3223
      ],
      "op": "DUP1",
      "path": "12"
    },
    "968": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3148,
        3223
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "969": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3148,
        3223
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D1"
    },
    "972": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3148,
        3223
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "973": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3148,
        3223
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "975": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3148,
        3223
      ],
      "op": "DUP1",
      "path": "12"
    },
    "976": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3148,
        3223
      ],
      "op": "REVERT",
      "path": "12"
    },
    "977": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3148,
        3223
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "978": {
      "op": "POP"
    },
    "979": {
      "offset": [
        3148,
        3223
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "986": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "988": {
      "op": "SHL"
    },
    "989": {
      "op": "SUB"
    },
    "990": {
      "offset": [
        3148,
        3223
      ],
      "op": "DUP2",
      "path": "12"
    },
    "991": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        3148,
        3223
      ],
      "op": "JUMP",
      "path": "12"
    },
    "992": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16933,
        17251
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "993": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16933,
        17251
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "994": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16933,
        17251
      ],
      "op": "DUP1",
      "path": "12"
    },
    "995": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16933,
        17251
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "996": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16933,
        17251
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3EC"
    },
    "999": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16933,
        17251
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1000": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16933,
        17251
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1002": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16933,
        17251
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1003": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16933,
        17251
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1004": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16933,
        17251
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1005": {
      "op": "POP"
    },
    "1006": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16933,
        17251
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "1009": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16933,
        17251
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3FB"
    },
    "1012": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16933,
        17251
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1013": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16933,
        17251
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1015": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16933,
        17251
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3640"
    },
    "1018": {
      "fn": "PolicyManager.withdraw",
      "jump": "i",
      "offset": [
        16933,
        17251
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1019": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16933,
        17251
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1020": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16933,
        17251
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCC9"
    },
    "1023": {
      "fn": "PolicyManager.withdraw",
      "jump": "i",
      "offset": [
        16933,
        17251
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1024": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14491,
        14699
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1025": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14491,
        14699
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1026": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14491,
        14699
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1027": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14491,
        14699
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1028": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14491,
        14699
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x40C"
    },
    "1031": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14491,
        14699
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1032": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14491,
        14699
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1034": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14491,
        14699
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1035": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14491,
        14699
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1036": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14491,
        14699
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1037": {
      "op": "POP"
    },
    "1038": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14491,
        14699
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3AD"
    },
    "1041": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14491,
        14699
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x41B"
    },
    "1044": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14491,
        14699
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1045": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14491,
        14699
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1047": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14491,
        14699
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3754"
    },
    "1050": {
      "fn": "PolicyManager.getPolicyOwner",
      "jump": "i",
      "offset": [
        14491,
        14699
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1051": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14491,
        14699
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1052": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14491,
        14699
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD55"
    },
    "1055": {
      "fn": "PolicyManager.getPolicyOwner",
      "jump": "i",
      "offset": [
        14491,
        14699
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1056": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1057": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1058": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1059": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1060": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x42C"
    },
    "1063": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1064": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1066": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1067": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1068": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1069": {
      "op": "POP"
    },
    "1070": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x32D"
    },
    "1073": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x43B"
    },
    "1076": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1077": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1079": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3786"
    },
    "1082": {
      "fn": "PolicyManager.setFeeRateRange",
      "jump": "i",
      "offset": [
        6538,
        6806
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1083": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1084": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDAC"
    },
    "1087": {
      "fn": "PolicyManager.setFeeRateRange",
      "jump": "i",
      "offset": [
        6538,
        6806
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1088": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1089": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1090": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1091": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1092": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x44C"
    },
    "1095": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1096": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1098": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1099": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1100": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1101": {
      "op": "POP"
    },
    "1102": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "1105": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x45B"
    },
    "1108": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1109": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1111": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x37C9"
    },
    "1114": {
      "fn": "PolicyManager.refund",
      "jump": "i",
      "offset": [
        27286,
        27621
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1115": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1116": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE90"
    },
    "1119": {
      "fn": "PolicyManager.refund",
      "jump": "i",
      "offset": [
        27286,
        27621
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1120": {
      "offset": [
        3502,
        3530
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1121": {
      "fn": "PolicyManager.refund",
      "offset": [
        3502,
        3530
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1122": {
      "fn": "PolicyManager.refund",
      "offset": [
        3502,
        3530
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1123": {
      "fn": "PolicyManager.refund",
      "offset": [
        3502,
        3530
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1124": {
      "fn": "PolicyManager.refund",
      "offset": [
        3502,
        3530
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x46C"
    },
    "1127": {
      "fn": "PolicyManager.refund",
      "offset": [
        3502,
        3530
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1128": {
      "fn": "PolicyManager.refund",
      "offset": [
        3502,
        3530
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1130": {
      "fn": "PolicyManager.refund",
      "offset": [
        3502,
        3530
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1131": {
      "fn": "PolicyManager.refund",
      "offset": [
        3502,
        3530
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1132": {
      "fn": "PolicyManager.refund",
      "offset": [
        3502,
        3530
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1133": {
      "op": "POP"
    },
    "1134": {
      "offset": [
        3502,
        3530
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "1136": {
      "fn": "PolicyManager.refund",
      "offset": [
        3502,
        3530
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1137": {
      "fn": "PolicyManager.refund",
      "offset": [
        3502,
        3530
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x480"
    },
    "1140": {
      "fn": "PolicyManager.refund",
      "offset": [
        3502,
        3530
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1147": {
      "op": "SHL"
    },
    "1148": {
      "op": "SUB"
    },
    "1149": {
      "offset": [
        3502,
        3530
      ],
      "op": "AND",
      "path": "12"
    },
    "1150": {
      "fn": "PolicyManager.refund",
      "offset": [
        3502,
        3530
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1151": {
      "fn": "PolicyManager.refund",
      "offset": [
        3502,
        3530
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1152": {
      "fn": "PolicyManager.refund",
      "offset": [
        3502,
        3530
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1153": {
      "fn": "PolicyManager.refund",
      "offset": [
        3502,
        3530
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1155": {
      "fn": "PolicyManager.refund",
      "offset": [
        3502,
        3530
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1162": {
      "op": "SHL"
    },
    "1163": {
      "op": "SUB"
    },
    "1164": {
      "op": "SWAP1"
    },
    "1165": {
      "op": "SWAP2"
    },
    "1166": {
      "op": "AND"
    },
    "1167": {
      "op": "DUP2"
    },
    "1168": {
      "op": "MSTORE"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1171": {
      "op": "ADD"
    },
    "1172": {
      "offset": [
        3502,
        3530
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26A"
    },
    "1175": {
      "op": "JUMP"
    },
    "1176": {
      "offset": [
        3471,
        3496
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1177": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1178": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1179": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1180": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4A4"
    },
    "1183": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1184": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1186": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1187": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1188": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1189": {
      "op": "POP"
    },
    "1190": {
      "offset": [
        3471,
        3496
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "1192": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1193": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "1195": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1196": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4CA"
    },
    "1199": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1206": {
      "op": "SHL"
    },
    "1207": {
      "op": "SUB"
    },
    "1208": {
      "offset": [
        3471,
        3496
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1209": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1210": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "AND",
      "path": "12"
    },
    "1211": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1216": {
      "op": "SHL"
    },
    "1217": {
      "offset": [
        3471,
        3496
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1218": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1219": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "DIV",
      "path": "12"
    },
    "1220": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1221": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "AND",
      "path": "12"
    },
    "1222": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1223": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "AND",
      "path": "12"
    },
    "1224": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1225": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1226": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1227": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1229": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1230": {
      "fn": "PolicyManager.refund",
      "offset": [
        3471,
        3496
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1237": {
      "op": "SHL"
    },
    "1238": {
      "op": "SUB"
    },
    "1239": {
      "op": "SWAP5"
    },
    "1240": {
      "op": "DUP6"
    },
    "1241": {
      "op": "AND"
    },
    "1242": {
      "op": "DUP2"
    },
    "1243": {
      "op": "MSTORE"
    },
    "1244": {
      "op": "SWAP3"
    },
    "1245": {
      "op": "DUP5"
    },
    "1246": {
      "op": "AND"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1249": {
      "op": "DUP5"
    },
    "1250": {
      "op": "ADD"
    },
    "1251": {
      "op": "MSTORE"
    },
    "1252": {
      "op": "SWAP3"
    },
    "1253": {
      "op": "AND"
    },
    "1254": {
      "op": "SWAP2"
    },
    "1255": {
      "op": "DUP2"
    },
    "1256": {
      "op": "ADD"
    },
    "1257": {
      "op": "SWAP2"
    },
    "1258": {
      "op": "SWAP1"
    },
    "1259": {
      "op": "SWAP2"
    },
    "1260": {
      "op": "MSTORE"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1263": {
      "op": "ADD"
    },
    "1264": {
      "offset": [
        3471,
        3496
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26A"
    },
    "1267": {
      "op": "JUMP"
    },
    "1268": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28358,
        28503
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1269": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28358,
        28503
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1270": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28358,
        28503
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1271": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28358,
        28503
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1272": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28358,
        28503
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x500"
    },
    "1275": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28358,
        28503
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1276": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28358,
        28503
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1278": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28358,
        28503
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1279": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28358,
        28503
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1280": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28358,
        28503
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1281": {
      "op": "POP"
    },
    "1282": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28358,
        28503
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "1285": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28358,
        28503
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x50F"
    },
    "1288": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28358,
        28503
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1289": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28358,
        28503
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1291": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28358,
        28503
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3754"
    },
    "1294": {
      "fn": "PolicyManager.getArrangementsLength",
      "jump": "i",
      "offset": [
        28358,
        28503
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1295": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28358,
        28503
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1302": {
      "op": "SHL"
    },
    "1303": {
      "op": "SUB"
    },
    "1304": {
      "op": "NOT"
    },
    "1305": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28457,
        28476
      ],
      "op": "AND",
      "path": "12",
      "statement": 0
    },
    "1306": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28431,
        28438
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1308": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28457,
        28476
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1309": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28457,
        28476
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1310": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28457,
        28476
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1311": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28457,
        28465
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1313": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28457,
        28476
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1315": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28457,
        28476
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1316": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28457,
        28476
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1318": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28457,
        28476
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1319": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28457,
        28476
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1320": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28457,
        28489
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "1322": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28457,
        28489
      ],
      "op": "ADD",
      "path": "12"
    },
    "1323": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28457,
        28496
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1324": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28457,
        28496
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1325": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        28358,
        28503
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1326": {
      "offset": [
        3374,
        3417
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1327": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1328": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1329": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1330": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x53A"
    },
    "1333": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1334": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1336": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1337": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1338": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1339": {
      "op": "POP"
    },
    "1340": {
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5C7"
    },
    "1343": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x549"
    },
    "1346": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1347": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1349": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3754"
    },
    "1352": {
      "fn": "PolicyManager.getArrangementsLength",
      "jump": "i",
      "offset": [
        3374,
        3417
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1353": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1354": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1356": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1358": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1359": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1360": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1361": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1363": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1364": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1365": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1366": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1368": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1369": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1370": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1371": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1372": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1373": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1375": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1376": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "ADD",
      "path": "12"
    },
    "1377": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1378": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "1380": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1381": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "ADD",
      "path": "12"
    },
    "1382": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1383": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "1385": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1386": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "ADD",
      "path": "12"
    },
    "1387": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1388": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "1389": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1390": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "ADD",
      "path": "12"
    },
    "1391": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1392": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "1394": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1395": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "ADD",
      "path": "12"
    },
    "1396": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1397": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "1399": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1400": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "ADD",
      "path": "12"
    },
    "1401": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1402": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "1404": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1405": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "1406": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "ADD",
      "path": "12"
    },
    "1407": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1408": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "1410": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1411": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "AND",
      "path": "12"
    },
    "1412": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1419": {
      "op": "SHL"
    },
    "1420": {
      "op": "SUB"
    },
    "1421": {
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "1424": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1425": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "1426": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "DIV",
      "path": "12"
    },
    "1427": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1428": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "AND",
      "path": "12"
    },
    "1429": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "1430": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "1431": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1432": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "1433": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "AND",
      "path": "12"
    },
    "1434": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1441": {
      "op": "SHL"
    },
    "1442": {
      "op": "SUB"
    },
    "1443": {
      "offset": [
        3374,
        3417
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1444": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "AND",
      "path": "12"
    },
    "1445": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1452": {
      "op": "SHL"
    },
    "1453": {
      "op": "SUB"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1458": {
      "op": "SHL"
    },
    "1459": {
      "offset": [
        3374,
        3417
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1460": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "DIV",
      "path": "12"
    },
    "1461": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1462": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "AND",
      "path": "12"
    },
    "1463": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1468": {
      "op": "SHL"
    },
    "1469": {
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1470": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "DIV",
      "path": "12"
    },
    "1471": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "AND",
      "path": "12"
    },
    "1472": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "1473": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1474": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1475": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1476": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1477": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "DUP12",
      "path": "12"
    },
    "1478": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1479": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1480": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1482": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1483": {
      "fn": "PolicyManager.getArrangementsLength",
      "offset": [
        3374,
        3417
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1484": {
      "op": "SWAP12"
    },
    "1485": {
      "op": "ISZERO"
    },
    "1486": {
      "op": "ISZERO"
    },
    "1487": {
      "op": "DUP13"
    },
    "1488": {
      "op": "MSTORE"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1495": {
      "op": "SHL"
    },
    "1496": {
      "op": "SUB"
    },
    "1497": {
      "op": "SWAP11"
    },
    "1498": {
      "op": "DUP12"
    },
    "1499": {
      "op": "AND"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1502": {
      "op": "DUP14"
    },
    "1503": {
      "op": "ADD"
    },
    "1504": {
      "op": "MSTORE"
    },
    "1505": {
      "op": "SWAP10"
    },
    "1506": {
      "op": "SWAP1"
    },
    "1507": {
      "op": "SWAP9"
    },
    "1508": {
      "op": "AND"
    },
    "1509": {
      "op": "SWAP9"
    },
    "1510": {
      "op": "DUP11"
    },
    "1511": {
      "op": "ADD"
    },
    "1512": {
      "op": "SWAP9"
    },
    "1513": {
      "op": "SWAP1"
    },
    "1514": {
      "op": "SWAP9"
    },
    "1515": {
      "op": "MSTORE"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "op": "SUB"
    },
    "1524": {
      "op": "SWAP1"
    },
    "1525": {
      "op": "SWAP6"
    },
    "1526": {
      "op": "AND"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1529": {
      "op": "DUP10"
    },
    "1530": {
      "op": "ADD"
    },
    "1531": {
      "op": "MSTORE"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1538": {
      "op": "SHL"
    },
    "1539": {
      "op": "SUB"
    },
    "1540": {
      "op": "SWAP4"
    },
    "1541": {
      "op": "DUP5"
    },
    "1542": {
      "op": "AND"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1545": {
      "op": "DUP10"
    },
    "1546": {
      "op": "ADD"
    },
    "1547": {
      "op": "MSTORE"
    },
    "1548": {
      "op": "SWAP3"
    },
    "1549": {
      "op": "SWAP1"
    },
    "1550": {
      "op": "SWAP2"
    },
    "1551": {
      "op": "AND"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1554": {
      "op": "DUP8"
    },
    "1555": {
      "op": "ADD"
    },
    "1556": {
      "op": "MSTORE"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1559": {
      "op": "DUP7"
    },
    "1560": {
      "op": "ADD"
    },
    "1561": {
      "op": "MSTORE"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1564": {
      "op": "DUP6"
    },
    "1565": {
      "op": "ADD"
    },
    "1566": {
      "op": "MSTORE"
    },
    "1567": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1570": {
      "op": "DUP5"
    },
    "1571": {
      "op": "ADD"
    },
    "1572": {
      "op": "MSTORE"
    },
    "1573": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "1576": {
      "op": "DUP4"
    },
    "1577": {
      "op": "ADD"
    },
    "1578": {
      "op": "SWAP2"
    },
    "1579": {
      "op": "SWAP1"
    },
    "1580": {
      "op": "SWAP2"
    },
    "1581": {
      "op": "MSTORE"
    },
    "1582": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "1585": {
      "op": "DUP3"
    },
    "1586": {
      "op": "ADD"
    },
    "1587": {
      "op": "MSTORE"
    },
    "1588": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "1591": {
      "op": "ADD"
    },
    "1592": {
      "offset": [
        3374,
        3417
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26A"
    },
    "1595": {
      "op": "JUMP"
    },
    "1596": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1597": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "CALLVALUE",
      "path": "34"
    },
    "1598": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1599": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "1600": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x648"
    },
    "1603": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1604": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1606": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1607": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "REVERT",
      "path": "34"
    },
    "1608": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1609": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "POP",
      "path": "34"
    },
    "1610": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x32D"
    },
    "1613": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0xF06"
    },
    "1616": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1617": {
      "fn": "PolicyManager.register",
      "offset": [
        5493,
        5755
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1618": {
      "fn": "PolicyManager.register",
      "offset": [
        5493,
        5755
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1619": {
      "fn": "PolicyManager.register",
      "offset": [
        5493,
        5755
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1620": {
      "fn": "PolicyManager.register",
      "offset": [
        5493,
        5755
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1621": {
      "fn": "PolicyManager.register",
      "offset": [
        5493,
        5755
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x65D"
    },
    "1624": {
      "fn": "PolicyManager.register",
      "offset": [
        5493,
        5755
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1625": {
      "fn": "PolicyManager.register",
      "offset": [
        5493,
        5755
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1627": {
      "fn": "PolicyManager.register",
      "offset": [
        5493,
        5755
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1628": {
      "fn": "PolicyManager.register",
      "offset": [
        5493,
        5755
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1629": {
      "fn": "PolicyManager.register",
      "offset": [
        5493,
        5755
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1630": {
      "op": "POP"
    },
    "1631": {
      "fn": "PolicyManager.register",
      "offset": [
        5493,
        5755
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x32D"
    },
    "1634": {
      "fn": "PolicyManager.register",
      "offset": [
        5493,
        5755
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x66C"
    },
    "1637": {
      "fn": "PolicyManager.register",
      "offset": [
        5493,
        5755
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1638": {
      "fn": "PolicyManager.register",
      "offset": [
        5493,
        5755
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1640": {
      "fn": "PolicyManager.register",
      "offset": [
        5493,
        5755
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3810"
    },
    "1643": {
      "fn": "PolicyManager.register",
      "jump": "i",
      "offset": [
        5493,
        5755
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1644": {
      "fn": "PolicyManager.register",
      "offset": [
        5493,
        5755
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1645": {
      "fn": "PolicyManager.register",
      "offset": [
        5493,
        5755
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF67"
    },
    "1648": {
      "fn": "PolicyManager.register",
      "jump": "i",
      "offset": [
        5493,
        5755
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1649": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8671,
        9746
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1650": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8671,
        9746
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x32D"
    },
    "1653": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8671,
        9746
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x67F"
    },
    "1656": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8671,
        9746
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1657": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8671,
        9746
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1659": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8671,
        9746
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x383E"
    },
    "1662": {
      "fn": "PolicyManager.createPolicy",
      "jump": "i",
      "offset": [
        8671,
        9746
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1663": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8671,
        9746
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1664": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8671,
        9746
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1006"
    },
    "1667": {
      "fn": "PolicyManager.createPolicy",
      "jump": "i",
      "offset": [
        8671,
        9746
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1668": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8187,
        8352
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1669": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8187,
        8352
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1670": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8187,
        8352
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1671": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8187,
        8352
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1672": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8187,
        8352
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x690"
    },
    "1675": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8187,
        8352
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1676": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8187,
        8352
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1678": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8187,
        8352
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1679": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8187,
        8352
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1680": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8187,
        8352
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1681": {
      "op": "POP"
    },
    "1682": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8187,
        8352
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "1685": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8187,
        8352
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x69F"
    },
    "1688": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8187,
        8352
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1689": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8187,
        8352
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1691": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8187,
        8352
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3640"
    },
    "1694": {
      "fn": "PolicyManager.getMinFeeRate",
      "jump": "i",
      "offset": [
        8187,
        8352
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1695": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8187,
        8352
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1696": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8187,
        8352
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11E5"
    },
    "1699": {
      "fn": "PolicyManager.getMinFeeRate",
      "jump": "i",
      "offset": [
        8187,
        8352
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1700": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1701": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1702": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1703": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1704": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6B0"
    },
    "1707": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1708": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1710": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1711": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1712": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1713": {
      "op": "POP"
    },
    "1714": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x32D"
    },
    "1717": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6BF"
    },
    "1720": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1721": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1723": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x38B5"
    },
    "1726": {
      "fn": "PolicyManager.setMinFeeRate",
      "jump": "i",
      "offset": [
        6995,
        7462
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1727": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1728": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1206"
    },
    "1731": {
      "fn": "PolicyManager.setMinFeeRate",
      "jump": "i",
      "offset": [
        6995,
        7462
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1732": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25066,
        25339
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1733": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25066,
        25339
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1734": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25066,
        25339
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1735": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25066,
        25339
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1736": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25066,
        25339
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6D0"
    },
    "1739": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25066,
        25339
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1740": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25066,
        25339
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1742": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25066,
        25339
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1743": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25066,
        25339
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1744": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25066,
        25339
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1745": {
      "op": "POP"
    },
    "1746": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25066,
        25339
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "1749": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25066,
        25339
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6DF"
    },
    "1752": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25066,
        25339
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1753": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25066,
        25339
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1755": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25066,
        25339
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x37C9"
    },
    "1758": {
      "fn": "PolicyManager.revokeArrangement",
      "jump": "i",
      "offset": [
        25066,
        25339
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1759": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25066,
        25339
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1760": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25066,
        25339
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1302"
    },
    "1763": {
      "fn": "PolicyManager.revokeArrangement",
      "jump": "i",
      "offset": [
        25066,
        25339
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1764": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1765": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "CALLVALUE",
      "path": "34"
    },
    "1766": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1767": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "1768": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6F0"
    },
    "1771": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1772": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1774": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1775": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "REVERT",
      "path": "34"
    },
    "1776": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1777": {
      "op": "POP"
    },
    "1778": {
      "fn": "Ownable.owner",
      "offset": [
        731,
        738
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1780": {
      "fn": "Ownable.owner",
      "offset": [
        757,
        763
      ],
      "op": "SLOAD",
      "path": "34",
      "statement": 1
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1787": {
      "op": "SHL"
    },
    "1788": {
      "op": "SUB"
    },
    "1789": {
      "fn": "Ownable.owner",
      "offset": [
        757,
        763
      ],
      "op": "AND",
      "path": "34"
    },
    "1790": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x3AD"
    },
    "1793": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1794": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1795": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1796": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1797": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1798": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x70E"
    },
    "1801": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1802": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1804": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1805": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1806": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1807": {
      "op": "POP"
    },
    "1808": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "1811": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x71D"
    },
    "1814": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1815": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1817": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3810"
    },
    "1820": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "jump": "i",
      "offset": [
        28660,
        29029
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1821": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1822": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1340"
    },
    "1825": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "jump": "i",
      "offset": [
        28660,
        29029
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1826": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1827": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "CALLVALUE",
      "path": "34"
    },
    "1828": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1829": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "1830": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x72E"
    },
    "1833": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1834": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1836": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1837": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "REVERT",
      "path": "34"
    },
    "1838": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1839": {
      "op": "POP"
    },
    "1840": {
      "fn": "Ownable.isOwner",
      "offset": [
        1053,
        1057
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1842": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "SLOAD",
      "path": "34",
      "statement": 2
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1849": {
      "op": "SHL"
    },
    "1850": {
      "op": "SUB"
    },
    "1851": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "AND",
      "path": "34"
    },
    "1852": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "34"
    },
    "1853": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1096
      ],
      "op": "EQ",
      "path": "34"
    },
    "1854": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "1856": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "1857": {
      "op": "SWAP1"
    },
    "1858": {
      "op": "ISZERO"
    },
    "1859": {
      "op": "ISZERO"
    },
    "1860": {
      "op": "DUP2"
    },
    "1861": {
      "op": "MSTORE"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1864": {
      "op": "ADD"
    },
    "1865": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x26A"
    },
    "1868": {
      "op": "JUMP"
    },
    "1869": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24710,
        24918
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1870": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24710,
        24918
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1871": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24710,
        24918
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1872": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24710,
        24918
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1873": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24710,
        24918
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x759"
    },
    "1876": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24710,
        24918
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1877": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24710,
        24918
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1879": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24710,
        24918
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1880": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24710,
        24918
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1881": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24710,
        24918
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1882": {
      "op": "POP"
    },
    "1883": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24710,
        24918
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "1886": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24710,
        24918
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x768"
    },
    "1889": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24710,
        24918
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1890": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24710,
        24918
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1892": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24710,
        24918
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3754"
    },
    "1895": {
      "fn": "PolicyManager.revokePolicy",
      "jump": "i",
      "offset": [
        24710,
        24918
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1896": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24710,
        24918
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1897": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24710,
        24918
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x139C"
    },
    "1900": {
      "fn": "PolicyManager.revokePolicy",
      "jump": "i",
      "offset": [
        24710,
        24918
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1901": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28018,
        28249
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1902": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28018,
        28249
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1903": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28018,
        28249
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1904": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28018,
        28249
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1905": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28018,
        28249
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x779"
    },
    "1908": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28018,
        28249
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1909": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28018,
        28249
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1911": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28018,
        28249
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1912": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28018,
        28249
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1913": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28018,
        28249
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1914": {
      "op": "POP"
    },
    "1915": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28018,
        28249
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "1918": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28018,
        28249
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x788"
    },
    "1921": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28018,
        28249
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1922": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28018,
        28249
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1924": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28018,
        28249
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x37C9"
    },
    "1927": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        28018,
        28249
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1928": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28018,
        28249
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1929": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28018,
        28249
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13C8"
    },
    "1932": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        28018,
        28249
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1933": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1934": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1935": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1936": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1937": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x799"
    },
    "1940": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1941": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1943": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1944": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1945": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1946": {
      "op": "POP"
    },
    "1947": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x32D"
    },
    "1950": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7A8"
    },
    "1953": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1954": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1956": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x38CE"
    },
    "1959": {
      "fn": "PolicyManager.ping",
      "jump": "i",
      "offset": [
        15046,
        15866
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1960": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1961": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13E7"
    },
    "1964": {
      "fn": "PolicyManager.ping",
      "jump": "i",
      "offset": [
        15046,
        15866
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1965": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31249,
        33488
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1966": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31249,
        33488
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1967": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31249,
        33488
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1968": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31249,
        33488
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1969": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31249,
        33488
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B9"
    },
    "1972": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31249,
        33488
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1973": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31249,
        33488
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1975": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31249,
        33488
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1976": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31249,
        33488
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1977": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31249,
        33488
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1978": {
      "op": "POP"
    },
    "1979": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31249,
        33488
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x32D"
    },
    "1982": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31249,
        33488
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7C8"
    },
    "1985": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31249,
        33488
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1986": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31249,
        33488
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1988": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31249,
        33488
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3640"
    },
    "1991": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        31249,
        33488
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1992": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31249,
        33488
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1993": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31249,
        33488
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14D4"
    },
    "1996": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        31249,
        33488
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1997": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25543,
        25736
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1998": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25543,
        25736
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1999": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25543,
        25736
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2000": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25543,
        25736
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2001": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25543,
        25736
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7D9"
    },
    "2004": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25543,
        25736
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2005": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25543,
        25736
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2007": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25543,
        25736
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2008": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25543,
        25736
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2009": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25543,
        25736
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2010": {
      "op": "POP"
    },
    "2011": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25543,
        25736
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "2014": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25543,
        25736
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7E8"
    },
    "2017": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25543,
        25736
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "2018": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25543,
        25736
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2020": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25543,
        25736
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x37C9"
    },
    "2023": {
      "fn": "PolicyManager.getRevocationHash",
      "jump": "i",
      "offset": [
        25543,
        25736
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2024": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25543,
        25736
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2025": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25543,
        25736
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17F5"
    },
    "2028": {
      "fn": "PolicyManager.getRevocationHash",
      "jump": "i",
      "offset": [
        25543,
        25736
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2029": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5872,
        6314
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2030": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5872,
        6314
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2031": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5872,
        6314
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2032": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5872,
        6314
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2033": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5872,
        6314
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7F9"
    },
    "2036": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5872,
        6314
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2037": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5872,
        6314
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2039": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5872,
        6314
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2040": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5872,
        6314
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2041": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5872,
        6314
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2042": {
      "op": "POP"
    },
    "2043": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5872,
        6314
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x32D"
    },
    "2046": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5872,
        6314
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x808"
    },
    "2049": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5872,
        6314
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "2050": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5872,
        6314
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2052": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5872,
        6314
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3640"
    },
    "2055": {
      "fn": "PolicyManager.migrate",
      "jump": "i",
      "offset": [
        5872,
        6314
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2056": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5872,
        6314
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2057": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5872,
        6314
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1845"
    },
    "2060": {
      "fn": "PolicyManager.migrate",
      "jump": "i",
      "offset": [
        5872,
        6314
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2061": {
      "offset": [
        912,
        933
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2062": {
      "fn": "PolicyManager.migrate",
      "offset": [
        912,
        933
      ],
      "op": "CALLVALUE",
      "path": "26"
    },
    "2063": {
      "fn": "PolicyManager.migrate",
      "offset": [
        912,
        933
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2064": {
      "fn": "PolicyManager.migrate",
      "offset": [
        912,
        933
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2065": {
      "fn": "PolicyManager.migrate",
      "offset": [
        912,
        933
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x819"
    },
    "2068": {
      "fn": "PolicyManager.migrate",
      "offset": [
        912,
        933
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2069": {
      "fn": "PolicyManager.migrate",
      "offset": [
        912,
        933
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2071": {
      "fn": "PolicyManager.migrate",
      "offset": [
        912,
        933
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2072": {
      "fn": "PolicyManager.migrate",
      "offset": [
        912,
        933
      ],
      "op": "REVERT",
      "path": "26"
    },
    "2073": {
      "fn": "PolicyManager.migrate",
      "offset": [
        912,
        933
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2074": {
      "op": "POP"
    },
    "2075": {
      "offset": [
        912,
        933
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "2077": {
      "fn": "PolicyManager.migrate",
      "offset": [
        912,
        933
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2078": {
      "fn": "PolicyManager.migrate",
      "offset": [
        912,
        933
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3AD"
    },
    "2081": {
      "fn": "PolicyManager.migrate",
      "offset": [
        912,
        933
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2088": {
      "op": "SHL"
    },
    "2089": {
      "op": "SUB"
    },
    "2090": {
      "offset": [
        912,
        933
      ],
      "op": "AND",
      "path": "26"
    },
    "2091": {
      "fn": "PolicyManager.migrate",
      "offset": [
        912,
        933
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2092": {
      "fn": "PolicyManager.migrate",
      "offset": [
        912,
        933
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2093": {
      "offset": [
        3274,
        3321
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2094": {
      "fn": "PolicyManager.migrate",
      "offset": [
        3274,
        3321
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2095": {
      "fn": "PolicyManager.migrate",
      "offset": [
        3274,
        3321
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2096": {
      "fn": "PolicyManager.migrate",
      "offset": [
        3274,
        3321
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2097": {
      "fn": "PolicyManager.migrate",
      "offset": [
        3274,
        3321
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x839"
    },
    "2100": {
      "fn": "PolicyManager.migrate",
      "offset": [
        3274,
        3321
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2101": {
      "fn": "PolicyManager.migrate",
      "offset": [
        3274,
        3321
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2103": {
      "fn": "PolicyManager.migrate",
      "offset": [
        3274,
        3321
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2104": {
      "fn": "PolicyManager.migrate",
      "offset": [
        3274,
        3321
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2105": {
      "fn": "PolicyManager.migrate",
      "offset": [
        3274,
        3321
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2106": {
      "fn": "PolicyManager.migrate",
      "offset": [
        3274,
        3321
      ],
      "op": "POP",
      "path": "12"
    },
    "2107": {
      "fn": "PolicyManager.migrate",
      "offset": [
        3274,
        3321
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x378"
    },
    "2110": {
      "fn": "PolicyManager.migrate",
      "offset": [
        3274,
        3321
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "2143": {
      "fn": "PolicyManager.migrate",
      "offset": [
        3274,
        3321
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2144": {
      "fn": "PolicyManager.migrate",
      "offset": [
        3274,
        3321
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2145": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2146": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2147": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2148": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2149": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x86D"
    },
    "2152": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2153": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2155": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2156": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2157": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2158": {
      "op": "POP"
    },
    "2159": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x881"
    },
    "2162": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x87C"
    },
    "2165": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "2166": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2168": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x392A"
    },
    "2171": {
      "fn": "PolicyManager.getArrangementInfo",
      "jump": "i",
      "offset": [
        29105,
        29624
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2172": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2173": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x18F5"
    },
    "2176": {
      "fn": "PolicyManager.getArrangementInfo",
      "jump": "i",
      "offset": [
        29105,
        29624
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2177": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2178": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2180": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2181": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2188": {
      "op": "SHL"
    },
    "2189": {
      "op": "SUB"
    },
    "2190": {
      "op": "SWAP1"
    },
    "2191": {
      "op": "SWAP5"
    },
    "2192": {
      "op": "AND"
    },
    "2193": {
      "op": "DUP5"
    },
    "2194": {
      "op": "MSTORE"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2197": {
      "op": "DUP5"
    },
    "2198": {
      "op": "ADD"
    },
    "2199": {
      "op": "SWAP3"
    },
    "2200": {
      "op": "SWAP1"
    },
    "2201": {
      "op": "SWAP3"
    },
    "2202": {
      "op": "MSTORE"
    },
    "2203": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "2206": {
      "op": "AND"
    },
    "2207": {
      "op": "SWAP1"
    },
    "2208": {
      "op": "DUP3"
    },
    "2209": {
      "op": "ADD"
    },
    "2210": {
      "op": "MSTORE"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2213": {
      "op": "ADD"
    },
    "2214": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26A"
    },
    "2217": {
      "op": "JUMP"
    },
    "2218": {
      "fn": "PolicyManager.refund",
      "offset": [
        26903,
        27141
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2219": {
      "fn": "PolicyManager.refund",
      "offset": [
        26903,
        27141
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2220": {
      "fn": "PolicyManager.refund",
      "offset": [
        26903,
        27141
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2221": {
      "fn": "PolicyManager.refund",
      "offset": [
        26903,
        27141
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2222": {
      "fn": "PolicyManager.refund",
      "offset": [
        26903,
        27141
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8B6"
    },
    "2225": {
      "fn": "PolicyManager.refund",
      "offset": [
        26903,
        27141
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2226": {
      "fn": "PolicyManager.refund",
      "offset": [
        26903,
        27141
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2228": {
      "fn": "PolicyManager.refund",
      "offset": [
        26903,
        27141
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2229": {
      "fn": "PolicyManager.refund",
      "offset": [
        26903,
        27141
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2230": {
      "fn": "PolicyManager.refund",
      "offset": [
        26903,
        27141
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2231": {
      "op": "POP"
    },
    "2232": {
      "fn": "PolicyManager.refund",
      "offset": [
        26903,
        27141
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x32D"
    },
    "2235": {
      "fn": "PolicyManager.refund",
      "offset": [
        26903,
        27141
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8C5"
    },
    "2238": {
      "fn": "PolicyManager.refund",
      "offset": [
        26903,
        27141
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "2239": {
      "fn": "PolicyManager.refund",
      "offset": [
        26903,
        27141
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2241": {
      "fn": "PolicyManager.refund",
      "offset": [
        26903,
        27141
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3754"
    },
    "2244": {
      "fn": "PolicyManager.refund",
      "jump": "i",
      "offset": [
        26903,
        27141
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2245": {
      "fn": "PolicyManager.refund",
      "offset": [
        26903,
        27141
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2246": {
      "fn": "PolicyManager.refund",
      "offset": [
        26903,
        27141
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1963"
    },
    "2249": {
      "fn": "PolicyManager.refund",
      "jump": "i",
      "offset": [
        26903,
        27141
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2250": {
      "offset": [
        3230,
        3268
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2251": {
      "fn": "PolicyManager.refund",
      "offset": [
        3230,
        3268
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2252": {
      "fn": "PolicyManager.refund",
      "offset": [
        3230,
        3268
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2253": {
      "fn": "PolicyManager.refund",
      "offset": [
        3230,
        3268
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2254": {
      "fn": "PolicyManager.refund",
      "offset": [
        3230,
        3268
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8D6"
    },
    "2257": {
      "fn": "PolicyManager.refund",
      "offset": [
        3230,
        3268
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2258": {
      "fn": "PolicyManager.refund",
      "offset": [
        3230,
        3268
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2260": {
      "fn": "PolicyManager.refund",
      "offset": [
        3230,
        3268
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2261": {
      "fn": "PolicyManager.refund",
      "offset": [
        3230,
        3268
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2262": {
      "fn": "PolicyManager.refund",
      "offset": [
        3230,
        3268
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2263": {
      "fn": "PolicyManager.refund",
      "offset": [
        3230,
        3268
      ],
      "op": "POP",
      "path": "12"
    },
    "2264": {
      "fn": "PolicyManager.refund",
      "offset": [
        3230,
        3268
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3AD"
    },
    "2267": {
      "fn": "PolicyManager.refund",
      "offset": [
        3230,
        3268
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "2300": {
      "fn": "PolicyManager.refund",
      "offset": [
        3230,
        3268
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2301": {
      "fn": "PolicyManager.refund",
      "offset": [
        3230,
        3268
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2302": {
      "offset": [
        1185,
        1207
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2303": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "CALLVALUE",
      "path": "26"
    },
    "2304": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2305": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2306": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x90A"
    },
    "2309": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2310": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2312": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2313": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "REVERT",
      "path": "26"
    },
    "2314": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2315": {
      "op": "POP"
    },
    "2316": {
      "offset": [
        1185,
        1207
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "2318": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2319": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x91F"
    },
    "2322": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2327": {
      "op": "SHL"
    },
    "2328": {
      "offset": [
        1185,
        1207
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2329": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "DIV",
      "path": "26"
    },
    "2330": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xFF"
    },
    "2332": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "AND",
      "path": "26"
    },
    "2333": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2334": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2335": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2336": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2338": {
      "fn": "PolicyManager.refund",
      "offset": [
        1185,
        1207
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2341": {
      "op": "SWAP1"
    },
    "2342": {
      "op": "SWAP2"
    },
    "2343": {
      "op": "AND"
    },
    "2344": {
      "op": "DUP2"
    },
    "2345": {
      "op": "MSTORE"
    },
    "2346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2348": {
      "op": "ADD"
    },
    "2349": {
      "offset": [
        1185,
        1207
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x26A"
    },
    "2352": {
      "op": "JUMP"
    },
    "2353": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27716,
        27899
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2354": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27716,
        27899
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2355": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27716,
        27899
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2356": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27716,
        27899
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2357": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27716,
        27899
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x93D"
    },
    "2360": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27716,
        27899
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2361": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27716,
        27899
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2363": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27716,
        27899
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2364": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27716,
        27899
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2365": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27716,
        27899
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2366": {
      "op": "POP"
    },
    "2367": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27716,
        27899
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x260"
    },
    "2370": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27716,
        27899
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x94C"
    },
    "2373": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27716,
        27899
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "2374": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27716,
        27899
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2376": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27716,
        27899
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3754"
    },
    "2379": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        27716,
        27899
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2380": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27716,
        27899
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2381": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27716,
        27899
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x19BF"
    },
    "2384": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        27716,
        27899
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2385": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33592,
        34458
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2386": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33592,
        34458
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2387": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33592,
        34458
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2388": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33592,
        34458
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2389": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33592,
        34458
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x95D"
    },
    "2392": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33592,
        34458
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2393": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33592,
        34458
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2395": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33592,
        34458
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2396": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33592,
        34458
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2397": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33592,
        34458
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2398": {
      "op": "POP"
    },
    "2399": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33592,
        34458
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x32D"
    },
    "2402": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33592,
        34458
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x96C"
    },
    "2405": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33592,
        34458
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "2406": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33592,
        34458
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2408": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33592,
        34458
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3640"
    },
    "2411": {
      "fn": "PolicyManager.finishUpgrade",
      "jump": "i",
      "offset": [
        33592,
        34458
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2412": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33592,
        34458
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2413": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33592,
        34458
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x19CC"
    },
    "2416": {
      "fn": "PolicyManager.finishUpgrade",
      "jump": "i",
      "offset": [
        33592,
        34458
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2417": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "2418": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "CALLVALUE",
      "path": "34"
    },
    "2419": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "DUP1",
      "path": "34"
    },
    "2420": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "2421": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x97D"
    },
    "2424": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "2425": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "2427": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "DUP1",
      "path": "34"
    },
    "2428": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "REVERT",
      "path": "34"
    },
    "2429": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "2430": {
      "op": "POP"
    },
    "2431": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x32D"
    },
    "2434": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x98C"
    },
    "2437": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "CALLDATASIZE",
      "path": "34"
    },
    "2438": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x4"
    },
    "2440": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x3640"
    },
    "2443": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMP",
      "path": "34"
    },
    "2444": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "2445": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x1C84"
    },
    "2448": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMP",
      "path": "34"
    },
    "2449": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2450": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26655,
        26674
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2452": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 3,
      "value": "0x9D4"
    },
    "2455": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26710,
        26719
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2456": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26721,
        26726
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2457": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26728,
        26738
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2458": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26728,
        26738
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2459": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2460": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2461": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "2463": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "ADD",
      "path": "12"
    },
    "2464": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2466": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2467": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2468": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "DIV",
      "path": "12"
    },
    "2469": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "MUL",
      "path": "12"
    },
    "2470": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2472": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "ADD",
      "path": "12"
    },
    "2473": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2475": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2476": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2477": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2478": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "ADD",
      "path": "12"
    },
    "2479": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2481": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2482": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2483": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2484": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2485": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2486": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2487": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2488": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2489": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2490": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2492": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "ADD",
      "path": "12"
    },
    "2493": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2494": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2495": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2496": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2497": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2498": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "2499": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2501": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2502": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "ADD",
      "path": "12"
    },
    "2503": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2504": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2505": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2506": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2507": {
      "op": "POP"
    },
    "2508": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26709
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CA7"
    },
    "2511": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26709
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2512": {
      "op": "POP"
    },
    "2513": {
      "op": "POP"
    },
    "2514": {
      "op": "POP"
    },
    "2515": {
      "fn": "PolicyManager.revoke",
      "jump": "i",
      "offset": [
        26690,
        26739
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2516": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26690,
        26739
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2517": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26756,
        26794
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 4,
      "value": "0x9E0"
    },
    "2520": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26771,
        26780
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2521": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26782,
        26787
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2522": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26789,
        26793
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2524": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26756,
        26770
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CE9"
    },
    "2527": {
      "fn": "PolicyManager.revoke",
      "jump": "i",
      "offset": [
        26756,
        26794
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2528": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26756,
        26794
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2529": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26749,
        26794
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "2530": {
      "fn": "PolicyManager.revoke",
      "offset": [
        26552,
        26801
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "2531": {
      "op": "POP"
    },
    "2532": {
      "op": "POP"
    },
    "2533": {
      "op": "POP"
    },
    "2534": {
      "op": "POP"
    },
    "2535": {
      "op": "POP"
    },
    "2536": {
      "fn": "PolicyManager.revoke",
      "jump": "o",
      "offset": [
        26552,
        26801
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2537": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5008,
        5131
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2538": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5057,
        5063
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2540": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5089,
        5123
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 5,
      "value": "0xA1B"
    },
    "2543": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5089,
        5123
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "2548": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5107,
        5123
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "2581": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5089,
        5123
      ],
      "op": "AND",
      "path": "12"
    },
    "2582": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5089,
        5104
      ],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "2583": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5089,
        5123
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3980"
    },
    "2586": {
      "fn": "PolicyManager.getCurrentPeriod",
      "jump": "i",
      "offset": [
        5089,
        5123
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2587": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5089,
        5123
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2588": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5075,
        5124
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2589": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5075,
        5124
      ],
      "op": "POP",
      "path": "12"
    },
    "2590": {
      "fn": "PolicyManager.getCurrentPeriod",
      "offset": [
        5008,
        5131
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2591": {
      "fn": "PolicyManager.getCurrentPeriod",
      "jump": "o",
      "offset": [
        5008,
        5131
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2592": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10125,
        11486
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2593": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10365,
        10380
      ],
      "op": "TIMESTAMP",
      "path": "12",
      "statement": 6
    },
    "2594": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10349,
        10362
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2601": {
      "op": "SHL"
    },
    "2602": {
      "op": "SUB"
    },
    "2603": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10349,
        10380
      ],
      "op": "AND",
      "path": "12"
    },
    "2604": {
      "branch": 189,
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10349,
        10380
      ],
      "op": "GT",
      "path": "12"
    },
    "2605": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10349,
        10409
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2606": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10349,
        10409
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2607": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10349,
        10409
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA38"
    },
    "2610": {
      "branch": 189,
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10349,
        10409
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2611": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10349,
        10409
      ],
      "op": "POP",
      "path": "12"
    },
    "2612": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10408,
        10409
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2614": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10396,
        10405
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2615": {
      "branch": 190,
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10396,
        10409
      ],
      "op": "GT",
      "path": "12"
    },
    "2616": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10349,
        10409
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2617": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10349,
        10446
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2618": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10349,
        10446
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2619": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10349,
        10446
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA44"
    },
    "2622": {
      "branch": 190,
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10349,
        10446
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2623": {
      "op": "POP"
    },
    "2624": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10445,
        10446
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2626": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10425,
        10446
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2627": {
      "branch": 191,
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10425,
        10446
      ],
      "op": "GT",
      "path": "12"
    },
    "2628": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10349,
        10446
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2629": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10328,
        10456
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA4D"
    },
    "2632": {
      "branch": 191,
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10328,
        10456
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2633": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10328,
        10456
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2635": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10328,
        10456
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2636": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10328,
        10456
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2637": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10328,
        10456
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2644": {
      "op": "SHL"
    },
    "2645": {
      "op": "SUB"
    },
    "2646": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10475,
        10496
      ],
      "op": "SELFBALANCE",
      "path": "12",
      "statement": 7
    },
    "2647": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10475,
        10511
      ],
      "op": "GT",
      "path": "12"
    },
    "2648": {
      "branch": 192,
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10475,
        10511
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2649": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10467,
        10512
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA61"
    },
    "2652": {
      "branch": 192,
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10467,
        10512
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2653": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10467,
        10512
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2655": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10467,
        10512
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2656": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10467,
        10512
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2657": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10467,
        10512
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2658": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10522,
        10542
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2660": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10545,
        10563
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA6B"
    },
    "2663": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10545,
        10561
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9E9"
    },
    "2666": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        10545,
        10563
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2667": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10545,
        10563
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2668": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10522,
        10563
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2669": {
      "op": "POP"
    },
    "2670": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10573,
        10589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2672": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10599,
        10631
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA9F"
    },
    "2675": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10599,
        10631
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "2680": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10615,
        10631
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "2713": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10599,
        10631
      ],
      "op": "AND",
      "path": "12"
    },
    "2714": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10599,
        10612
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2715": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10599,
        10631
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3994"
    },
    "2718": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        10599,
        10631
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2719": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10599,
        10631
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2720": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10592,
        10636
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAAA"
    },
    "2723": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10592,
        10636
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2724": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10635,
        10636
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2726": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10592,
        10636
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39BA"
    },
    "2729": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        10592,
        10636
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2730": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10592,
        10636
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2731": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10573,
        10636
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2732": {
      "op": "POP"
    },
    "2733": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10646,
        10669
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2735": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10672,
        10697
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAB8"
    },
    "2738": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10684,
        10697
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2739": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10573,
        10636
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2740": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10672,
        10697
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39E0"
    },
    "2743": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        10672,
        10697
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2744": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10672,
        10697
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2745": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10646,
        10697
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "2748": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10646,
        10697
      ],
      "op": "AND",
      "path": "12"
    },
    "2749": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10646,
        10697
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2750": {
      "op": "POP"
    },
    "2751": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10708,
        10723
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2753": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10783,
        10793
      ],
      "op": "DUP9",
      "path": "12"
    },
    "2754": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10646,
        10697
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2755": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10734,
        10762
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xACC"
    },
    "2758": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10734,
        10743
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2759": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10748,
        10754
      ],
      "op": "DUP9",
      "path": "12"
    },
    "2760": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10734,
        10747
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2267"
    },
    "2763": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        10734,
        10762
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2764": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10734,
        10762
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2765": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10734,
        10780
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAD6"
    },
    "2768": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10734,
        10780
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2769": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10734,
        10780
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2770": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10734,
        10780
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3980"
    },
    "2773": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        10734,
        10780
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2774": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10734,
        10780
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2775": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10734,
        10800
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAE0"
    },
    "2778": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10734,
        10800
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2779": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10734,
        10800
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2780": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10734,
        10800
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3980"
    },
    "2783": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        10734,
        10800
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2784": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10734,
        10800
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2785": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10708,
        10801
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2786": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10708,
        10801
      ],
      "op": "POP",
      "path": "12"
    },
    "2787": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10829,
        10830
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 8,
      "value": "0x0"
    },
    "2789": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10819,
        10826
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2796": {
      "op": "SHL"
    },
    "2797": {
      "op": "SUB"
    },
    "2798": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10819,
        10830
      ],
      "op": "AND",
      "path": "12"
    },
    "2799": {
      "branch": 193,
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10819,
        10830
      ],
      "op": "GT",
      "path": "12"
    },
    "2800": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10819,
        10908
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2801": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10819,
        10908
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2802": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10819,
        10908
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB22"
    },
    "2805": {
      "branch": 193,
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10819,
        10908
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2806": {
      "op": "POP"
    },
    "2807": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10899,
        10908
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2808": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10878,
        10888
      ],
      "op": "DUP10",
      "path": "12"
    },
    "2809": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10862,
        10868
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2810": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10834,
        10859
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB0C"
    },
    "2813": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10844,
        10859
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2820": {
      "op": "SHL"
    },
    "2821": {
      "op": "SUB"
    },
    "2822": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10834,
        10859
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2823": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10834,
        10859
      ],
      "op": "AND",
      "path": "12"
    },
    "2824": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10834,
        10859
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A03"
    },
    "2827": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        10834,
        10859
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2828": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10834,
        10859
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2829": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10834,
        10875
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB16"
    },
    "2832": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10834,
        10875
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2833": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10834,
        10875
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2834": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10834,
        10875
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A03"
    },
    "2837": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        10834,
        10875
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2838": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10834,
        10875
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2839": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10834,
        10895
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB20"
    },
    "2842": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10834,
        10895
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2843": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10834,
        10895
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2844": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10834,
        10895
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A03"
    },
    "2847": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        10834,
        10895
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2848": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10834,
        10895
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2849": {
      "branch": 194,
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10834,
        10908
      ],
      "op": "EQ",
      "path": "12"
    },
    "2850": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10819,
        10908
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2851": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10811,
        10909
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB2B"
    },
    "2854": {
      "branch": 194,
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10811,
        10909
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2855": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10811,
        10909
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2857": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10811,
        10909
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2858": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10811,
        10909
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2859": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10811,
        10909
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2860": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10925,
        10934
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2862": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10920,
        11246
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2863": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10940,
        10961
      ],
      "op": "DUP10",
      "path": "12"
    },
    "2864": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10940,
        10961
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2865": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10940,
        10961
      ],
      "op": "LT",
      "path": "12"
    },
    "2866": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10920,
        11246
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2867": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10920,
        11246
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC46"
    },
    "2870": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10920,
        11246
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2871": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10982,
        11003
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2873": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11006,
        11086
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB6B"
    },
    "2876": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11029
      ],
      "op": "DUP13",
      "path": "12"
    },
    "2877": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11029
      ],
      "op": "DUP13",
      "path": "12"
    },
    "2878": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11030,
        11031
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2879": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2880": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2881": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "LT",
      "path": "12"
    },
    "2882": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB4D"
    },
    "2885": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2886": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB4D"
    },
    "2889": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A22"
    },
    "2892": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        11019,
        11032
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2893": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2894": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2895": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "POP",
      "path": "12"
    },
    "2896": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2898": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "MUL",
      "path": "12"
    },
    "2899": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "ADD",
      "path": "12"
    },
    "2900": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2902": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2903": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "ADD",
      "path": "12"
    },
    "2904": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2905": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB62"
    },
    "2908": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2909": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2910": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3754"
    },
    "2913": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        11019,
        11032
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2914": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11019,
        11032
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2915": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11034,
        11046
      ],
      "op": "DUP12",
      "path": "12"
    },
    "2916": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11048,
        11061
      ],
      "op": "DUP12",
      "path": "12"
    },
    "2917": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11063,
        11070
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2918": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11072,
        11078
      ],
      "op": "DUP12",
      "path": "12"
    },
    "2919": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11006,
        11018
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2273"
    },
    "2922": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        11006,
        11086
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2923": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11006,
        11086
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2924": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10982,
        11086
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2925": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10982,
        11086
      ],
      "op": "POP",
      "path": "12"
    },
    "2926": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11106,
        11115
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2928": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11101,
        11236
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2929": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11121,
        11138
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2930": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11121,
        11138
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2931": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11121,
        11138
      ],
      "op": "LT",
      "path": "12"
    },
    "2932": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11101,
        11236
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2933": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11101,
        11236
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC31"
    },
    "2936": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11101,
        11236
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2937": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11169
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 9
    },
    "2938": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "2940": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11182
      ],
      "op": "ADD",
      "path": "12"
    },
    "2941": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2943": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2944": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2945": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "2947": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "ADD",
      "path": "12"
    },
    "2948": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2950": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2951": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2952": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11210
      ],
      "op": "DUP12",
      "path": "12"
    },
    "2953": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11210
      ],
      "op": "DUP12",
      "path": "12"
    },
    "2954": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11211,
        11212
      ],
      "op": "DUP6",
      "path": "12"
    },
    "2955": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2956": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2957": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "LT",
      "path": "12"
    },
    "2958": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB99"
    },
    "2961": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2962": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB99"
    },
    "2965": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A22"
    },
    "2968": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        11204,
        11213
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2969": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2970": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2971": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "POP",
      "path": "12"
    },
    "2972": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2974": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "MUL",
      "path": "12"
    },
    "2975": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "ADD",
      "path": "12"
    },
    "2976": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2978": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2979": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "ADD",
      "path": "12"
    },
    "2980": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2981": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBAE"
    },
    "2984": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2985": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2986": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3640"
    },
    "2989": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        11204,
        11213
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2990": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11204,
        11213
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2997": {
      "op": "SHL"
    },
    "2998": {
      "op": "SUB"
    },
    "2999": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3000": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3001": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "AND",
      "path": "12"
    },
    "3002": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3003": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3004": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11215,
        11216
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3006": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3008": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3009": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3010": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "ADD",
      "path": "12"
    },
    "3011": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3012": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3013": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3014": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3016": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3017": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3018": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "ADD",
      "path": "12"
    },
    "3019": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3020": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3021": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3022": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3023": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3024": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "3026": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3027": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3028": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "ADD",
      "path": "12"
    },
    "3029": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "DUP9",
      "path": "12"
    },
    "3030": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3031": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "3032": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3033": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3034": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3035": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3036": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3037": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3038": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3039": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3040": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "3042": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3043": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3044": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "MUL",
      "path": "12"
    },
    "3045": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "ADD",
      "path": "12"
    },
    "3046": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3047": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3054": {
      "op": "SHL"
    },
    "3055": {
      "op": "SUB"
    },
    "3056": {
      "op": "NOT"
    },
    "3057": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "AND",
      "path": "12"
    },
    "3058": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3059": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3060": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3061": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "AND",
      "path": "12"
    },
    "3062": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3063": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3064": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3065": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "OR",
      "path": "12"
    },
    "3066": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3067": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3068": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3069": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "ADD",
      "path": "12"
    },
    "3070": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3071": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3072": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3073": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "ADD",
      "path": "12"
    },
    "3074": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3075": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3076": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3077": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3078": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "ADD",
      "path": "12"
    },
    "3079": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3080": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "3082": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3083": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3084": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "ADD",
      "path": "12"
    },
    "3085": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3086": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3087": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "3090": {
      "op": "NOT"
    },
    "3091": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "AND",
      "path": "12"
    },
    "3092": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11188,
        11220
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "3095": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3096": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3097": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "AND",
      "path": "12"
    },
    "3098": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3099": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3100": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3101": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "OR",
      "path": "12"
    },
    "3102": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3103": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11163,
        11221
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3104": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11140,
        11143
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 10
    },
    "3105": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11140,
        11143
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC29"
    },
    "3108": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11140,
        11143
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3109": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11140,
        11143
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A38"
    },
    "3112": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        11140,
        11143
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3113": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11140,
        11143
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3114": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11140,
        11143
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3115": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11140,
        11143
      ],
      "op": "POP",
      "path": "12"
    },
    "3116": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11140,
        11143
      ],
      "op": "POP",
      "path": "12"
    },
    "3117": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11101,
        11236
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB70"
    },
    "3120": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11101,
        11236
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3121": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11101,
        11236
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3122": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11101,
        11236
      ],
      "op": "POP",
      "path": "12"
    },
    "3123": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10968,
        11246
      ],
      "op": "POP",
      "path": "12"
    },
    "3124": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10963,
        10966
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 11
    },
    "3125": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10963,
        10966
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3126": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10963,
        10966
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC3E"
    },
    "3129": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10963,
        10966
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3130": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10963,
        10966
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A38"
    },
    "3133": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        10963,
        10966
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3134": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10963,
        10966
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3135": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10963,
        10966
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3136": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10963,
        10966
      ],
      "op": "POP",
      "path": "12"
    },
    "3137": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10963,
        10966
      ],
      "op": "POP",
      "path": "12"
    },
    "3138": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10920,
        11246
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB2E"
    },
    "3141": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10920,
        11246
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3142": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10920,
        11246
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3143": {
      "op": "POP"
    },
    "3144": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11256,
        11266
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3146": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11276,
        11303
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC5C"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3155": {
      "op": "SHL"
    },
    "3156": {
      "op": "SUB"
    },
    "3157": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11276,
        11303
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3158": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11276,
        11303
      ],
      "op": "AND",
      "path": "12"
    },
    "3159": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11276,
        11286
      ],
      "op": "DUP12",
      "path": "12"
    },
    "3160": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11276,
        11303
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A03"
    },
    "3163": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        11276,
        11303
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3164": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11276,
        11303
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3165": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11256,
        11304
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3166": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11256,
        11304
      ],
      "op": "POP",
      "path": "12"
    },
    "3167": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11320,
        11329
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3169": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11315,
        11480
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3170": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11335,
        11352
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3171": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11335,
        11352
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3172": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11335,
        11352
      ],
      "op": "LT",
      "path": "12"
    },
    "3173": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11315,
        11480
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3174": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11315,
        11480
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCB4"
    },
    "3177": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11315,
        11480
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3178": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11373,
        11385
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3180": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11394
      ],
      "op": "DUP9",
      "path": "12"
    },
    "3181": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11394
      ],
      "op": "DUP9",
      "path": "12"
    },
    "3182": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11395,
        11396
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3183": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3184": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3185": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "LT",
      "path": "12"
    },
    "3186": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC7D"
    },
    "3189": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3190": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC7D"
    },
    "3193": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A22"
    },
    "3196": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        11388,
        11397
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3197": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3198": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3199": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "POP",
      "path": "12"
    },
    "3200": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3202": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "MUL",
      "path": "12"
    },
    "3203": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "ADD",
      "path": "12"
    },
    "3204": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3206": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3207": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "ADD",
      "path": "12"
    },
    "3208": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3209": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC92"
    },
    "3212": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3213": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3214": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3640"
    },
    "3217": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        11388,
        11397
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3218": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11388,
        11397
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3219": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11373,
        11397
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3220": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11373,
        11397
      ],
      "op": "POP",
      "path": "12"
    },
    "3221": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11411,
        11469
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 12,
      "value": "0xCA1"
    },
    "3224": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11424,
        11437
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3225": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11439,
        11448
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3226": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11450,
        11454
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3227": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11456,
        11463
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3228": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11465,
        11468
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3229": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11411,
        11423
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2412"
    },
    "3232": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        11411,
        11469
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3233": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11411,
        11469
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3234": {
      "op": "POP"
    },
    "3235": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11354,
        11357
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 13
    },
    "3236": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11354,
        11357
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCAC"
    },
    "3239": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11354,
        11357
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3240": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11354,
        11357
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A38"
    },
    "3243": {
      "fn": "PolicyManager.createPolicies",
      "jump": "i",
      "offset": [
        11354,
        11357
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3244": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11354,
        11357
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3245": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11354,
        11357
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3246": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11354,
        11357
      ],
      "op": "POP",
      "path": "12"
    },
    "3247": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11354,
        11357
      ],
      "op": "POP",
      "path": "12"
    },
    "3248": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11315,
        11480
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC61"
    },
    "3251": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11315,
        11480
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3252": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11315,
        11480
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3253": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        11315,
        11480
      ],
      "op": "POP",
      "path": "12"
    },
    "3254": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10318,
        11486
      ],
      "op": "POP",
      "path": "12"
    },
    "3255": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10318,
        11486
      ],
      "op": "POP",
      "path": "12"
    },
    "3256": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10318,
        11486
      ],
      "op": "POP",
      "path": "12"
    },
    "3257": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10318,
        11486
      ],
      "op": "POP",
      "path": "12"
    },
    "3258": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10318,
        11486
      ],
      "op": "POP",
      "path": "12"
    },
    "3259": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10125,
        11486
      ],
      "op": "POP",
      "path": "12"
    },
    "3260": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10125,
        11486
      ],
      "op": "POP",
      "path": "12"
    },
    "3261": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10125,
        11486
      ],
      "op": "POP",
      "path": "12"
    },
    "3262": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10125,
        11486
      ],
      "op": "POP",
      "path": "12"
    },
    "3263": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10125,
        11486
      ],
      "op": "POP",
      "path": "12"
    },
    "3264": {
      "fn": "PolicyManager.createPolicies",
      "offset": [
        10125,
        11486
      ],
      "op": "POP",
      "path": "12"
    },
    "3265": {
      "fn": "PolicyManager.createPolicies",
      "jump": "o",
      "offset": [
        10125,
        11486
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3266": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16732,
        16832
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3267": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16770,
        16777
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3269": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16796,
        16825
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 14,
      "value": "0xA1B"
    },
    "3272": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16813,
        16823
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3273": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16933,
        17251
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3274": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17044,
        17054
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3275": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16995,
        17002
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3277": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17038,
        17055
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3278": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17038,
        17055
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3279": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17038,
        17055
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3280": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17038,
        17043
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "3282": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17038,
        17055
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3284": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17038,
        17055
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3285": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17038,
        17055
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3287": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17038,
        17055
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3288": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17038,
        17055
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3289": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17079,
        17087
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3290": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17079,
        17087
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3297": {
      "op": "SHL"
    },
    "3298": {
      "op": "SUB"
    },
    "3299": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17079,
        17087
      ],
      "op": "AND",
      "path": "12"
    },
    "3300": {
      "branch": 195,
      "fn": "PolicyManager.withdraw",
      "offset": [
        17105,
        17113
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 15
    },
    "3301": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17097,
        17114
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCED"
    },
    "3304": {
      "branch": 195,
      "fn": "PolicyManager.withdraw",
      "offset": [
        17097,
        17114
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3305": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17097,
        17114
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3307": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17097,
        17114
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3308": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17097,
        17114
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3309": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17097,
        17114
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3310": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17124,
        17136
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 16
    },
    "3311": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17124,
        17136
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3318": {
      "op": "SHL"
    },
    "3319": {
      "op": "SUB"
    },
    "3320": {
      "op": "NOT"
    },
    "3321": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17124,
        17136
      ],
      "op": "AND",
      "path": "12"
    },
    "3322": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17124,
        17136
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3323": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17124,
        17136
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3324": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17146,
        17171
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 17,
      "value": "0xD0E"
    },
    "3327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3333": {
      "op": "SHL"
    },
    "3334": {
      "op": "SUB"
    },
    "3335": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17146,
        17166
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3336": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17146,
        17166
      ],
      "op": "AND",
      "path": "12"
    },
    "3337": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17167,
        17170
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3338": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17146,
        17166
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25E6"
    },
    "3341": {
      "fn": "PolicyManager.withdraw",
      "jump": "i",
      "offset": [
        17146,
        17171
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3342": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17146,
        17171
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3343": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17186,
        17224
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 18,
      "value": "0x40"
    },
    "3345": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17186,
        17224
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3346": {
      "op": "DUP2"
    },
    "3347": {
      "op": "DUP2"
    },
    "3348": {
      "op": "MSTORE"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3355": {
      "op": "SHL"
    },
    "3356": {
      "op": "SUB"
    },
    "3357": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17186,
        17224
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3358": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17186,
        17224
      ],
      "op": "AND",
      "path": "12"
    },
    "3359": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17186,
        17224
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3360": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17196,
        17206
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3361": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17196,
        17206
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3362": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17186,
        17224
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xD1C19FBCD4551A5EDFB66D43D2E337C04837AFDA3482B42BDF569A8FCCDAE5FB"
    },
    "3395": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17186,
        17224
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3398": {
      "op": "ADD"
    },
    "3399": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17186,
        17224
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3401": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17186,
        17224
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3402": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17186,
        17224
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3403": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17186,
        17224
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3404": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17186,
        17224
      ],
      "op": "SUB",
      "path": "12"
    },
    "3405": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17186,
        17224
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3406": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17186,
        17224
      ],
      "op": "LOG3",
      "path": "12"
    },
    "3407": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        17241,
        17244
      ],
      "op": "SWAP4",
      "path": "12",
      "statement": 19
    },
    "3408": {
      "fn": "PolicyManager.withdraw",
      "offset": [
        16933,
        17251
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3409": {
      "op": "POP"
    },
    "3410": {
      "op": "POP"
    },
    "3411": {
      "op": "POP"
    },
    "3412": {
      "fn": "PolicyManager.withdraw",
      "jump": "o",
      "offset": [
        16933,
        17251
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3413": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14491,
        14699
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3420": {
      "op": "SHL"
    },
    "3421": {
      "op": "SUB"
    },
    "3422": {
      "op": "NOT"
    },
    "3423": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14598,
        14617
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3424": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14598,
        14617
      ],
      "op": "AND",
      "path": "12"
    },
    "3425": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14555,
        14562
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3427": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14598,
        14617
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3428": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14598,
        14617
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3429": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14598,
        14617
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3430": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14598,
        14606
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3432": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14598,
        14617
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3434": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14598,
        14617
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3435": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14598,
        14617
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3437": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14598,
        14617
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3438": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14598,
        14617
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3439": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14634,
        14646
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 20,
      "value": "0x1"
    },
    "3441": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14634,
        14646
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3442": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14634,
        14646
      ],
      "op": "ADD",
      "path": "12"
    },
    "3443": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14634,
        14646
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3450": {
      "op": "SHL"
    },
    "3451": {
      "op": "SUB"
    },
    "3452": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14634,
        14646
      ],
      "op": "AND",
      "path": "12"
    },
    "3453": {
      "branch": 196,
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14634,
        14660
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3454": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14634,
        14692
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD94"
    },
    "3457": {
      "branch": 196,
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14634,
        14692
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3458": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14680,
        14692
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "3460": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14680,
        14692
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3461": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14680,
        14692
      ],
      "op": "ADD",
      "path": "12"
    },
    "3462": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14680,
        14692
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3469": {
      "op": "SHL"
    },
    "3470": {
      "op": "SUB"
    },
    "3471": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14680,
        14692
      ],
      "op": "AND",
      "path": "12"
    },
    "3472": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14634,
        14692
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDA5"
    },
    "3475": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14634,
        14692
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3476": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14634,
        14692
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3477": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14663,
        14677
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3478": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14663,
        14677
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3479": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14663,
        14677
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "3482": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14663,
        14677
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3483": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14663,
        14677
      ],
      "op": "DIV",
      "path": "12"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3490": {
      "op": "SHL"
    },
    "3491": {
      "op": "SUB"
    },
    "3492": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14663,
        14677
      ],
      "op": "AND",
      "path": "12"
    },
    "3493": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14634,
        14692
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3494": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14627,
        14692
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3495": {
      "fn": "PolicyManager.getPolicyOwner",
      "offset": [
        14491,
        14699
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3496": {
      "op": "POP"
    },
    "3497": {
      "op": "POP"
    },
    "3498": {
      "op": "POP"
    },
    "3499": {
      "fn": "PolicyManager.getPolicyOwner",
      "jump": "o",
      "offset": [
        14491,
        14699
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3500": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3501": {
      "fn": "Ownable.isOwner",
      "offset": [
        1053,
        1057
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "3503": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3510": {
      "op": "SHL"
    },
    "3511": {
      "op": "SUB"
    },
    "3512": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "AND",
      "path": "34"
    },
    "3513": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "34"
    },
    "3514": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1096
      ],
      "op": "EQ",
      "path": "34"
    },
    "3515": {
      "offset": [
        889,
        907
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0xDC3"
    },
    "3518": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "3519": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "3521": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "DUP1",
      "path": "34"
    },
    "3522": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "REVERT",
      "path": "34"
    },
    "3523": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "3524": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6654,
        6662
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 21
    },
    "3525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3531": {
      "op": "SHL"
    },
    "3532": {
      "op": "SUB"
    },
    "3533": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6646,
        6662
      ],
      "op": "AND",
      "path": "12"
    },
    "3534": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6646,
        6650
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3541": {
      "op": "SHL"
    },
    "3542": {
      "op": "SUB"
    },
    "3543": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6646,
        6662
      ],
      "op": "AND",
      "path": "12"
    },
    "3544": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6646,
        6662
      ],
      "op": "GT",
      "path": "12"
    },
    "3545": {
      "branch": 197,
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6646,
        6662
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3546": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6646,
        6682
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3547": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6646,
        6682
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3548": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6646,
        6682
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDF7"
    },
    "3551": {
      "branch": 197,
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6646,
        6682
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3552": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6646,
        6682
      ],
      "op": "POP",
      "path": "12"
    },
    "3553": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6678,
        6682
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3560": {
      "op": "SHL"
    },
    "3561": {
      "op": "SUB"
    },
    "3562": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6666,
        6682
      ],
      "op": "AND",
      "path": "12"
    },
    "3563": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6666,
        6674
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3570": {
      "op": "SHL"
    },
    "3571": {
      "op": "SUB"
    },
    "3572": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6666,
        6682
      ],
      "op": "AND",
      "path": "12"
    },
    "3573": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6666,
        6682
      ],
      "op": "GT",
      "path": "12"
    },
    "3574": {
      "branch": 198,
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6666,
        6682
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3575": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6646,
        6682
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3576": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6638,
        6683
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE00"
    },
    "3579": {
      "branch": 198,
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6638,
        6683
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3580": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6638,
        6683
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3582": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6638,
        6683
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3583": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6638,
        6683
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3584": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6638,
        6683
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3585": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 22,
      "value": "0x40"
    },
    "3587": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3588": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3589": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "3591": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3592": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3593": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "ADD",
      "path": "12"
    },
    "3594": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3595": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3602": {
      "op": "SHL"
    },
    "3603": {
      "op": "SUB"
    },
    "3604": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3605": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3606": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "AND",
      "path": "12"
    },
    "3607": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3608": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3609": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3610": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3611": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3612": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "AND",
      "path": "12"
    },
    "3613": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3615": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3616": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3617": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "ADD",
      "path": "12"
    },
    "3618": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3619": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3620": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3621": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3622": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3623": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "AND",
      "path": "12"
    },
    "3624": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "3625": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3626": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "ADD",
      "path": "12"
    },
    "3627": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3628": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3629": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6708,
        6735
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3634": {
      "op": "SHL"
    },
    "3635": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6693,
        6735
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3636": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6693,
        6735
      ],
      "op": "MUL",
      "path": "12"
    },
    "3637": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6693,
        6735
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3638": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6693,
        6735
      ],
      "op": "OR",
      "path": "12"
    },
    "3639": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6693,
        6705
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "3641": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6693,
        6735
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3642": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6693,
        6735
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "3644": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6693,
        6735
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3645": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6693,
        6735
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3652": {
      "op": "SHL"
    },
    "3653": {
      "op": "SUB"
    },
    "3654": {
      "op": "NOT"
    },
    "3655": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6693,
        6735
      ],
      "op": "AND",
      "path": "12"
    },
    "3656": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6693,
        6735
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3657": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6693,
        6735
      ],
      "op": "OR",
      "path": "12"
    },
    "3658": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6693,
        6735
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3659": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6693,
        6735
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3660": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6750,
        6799
      ],
      "op": "DUP6",
      "path": "12",
      "statement": 23
    },
    "3661": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6750,
        6799
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3662": {
      "op": "SWAP2"
    },
    "3663": {
      "op": "DUP3"
    },
    "3664": {
      "op": "MSTORE"
    },
    "3665": {
      "op": "SWAP2"
    },
    "3666": {
      "op": "DUP2"
    },
    "3667": {
      "op": "ADD"
    },
    "3668": {
      "op": "SWAP2"
    },
    "3669": {
      "op": "SWAP1"
    },
    "3670": {
      "op": "SWAP2"
    },
    "3671": {
      "op": "MSTORE"
    },
    "3672": {
      "op": "SWAP3"
    },
    "3673": {
      "op": "DUP4"
    },
    "3674": {
      "op": "ADD"
    },
    "3675": {
      "op": "SWAP2"
    },
    "3676": {
      "op": "SWAP1"
    },
    "3677": {
      "op": "SWAP2"
    },
    "3678": {
      "op": "MSTORE"
    },
    "3679": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6766,
        6776
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3680": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6766,
        6776
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3681": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6750,
        6799
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x3A93FB7C2385D29E9693A6EDCD81C4CEE090101CB783DC2F17A7814B79A2ECDC"
    },
    "3714": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6750,
        6799
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3715": {
      "op": "ADD"
    },
    "3716": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6750,
        6799
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3718": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6750,
        6799
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3719": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6750,
        6799
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3720": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6750,
        6799
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3721": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6750,
        6799
      ],
      "op": "SUB",
      "path": "12"
    },
    "3722": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6750,
        6799
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3723": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6750,
        6799
      ],
      "op": "LOG2",
      "path": "12"
    },
    "3724": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "POP",
      "path": "12"
    },
    "3725": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "POP",
      "path": "12"
    },
    "3726": {
      "fn": "PolicyManager.setFeeRateRange",
      "offset": [
        6538,
        6806
      ],
      "op": "POP",
      "path": "12"
    },
    "3727": {
      "fn": "PolicyManager.setFeeRateRange",
      "jump": "o",
      "offset": [
        6538,
        6806
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3728": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3729": {
      "fn": "PolicyManager.refund",
      "offset": [
        27362,
        27381
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3737": {
      "op": "SHL"
    },
    "3738": {
      "op": "SUB"
    },
    "3739": {
      "fn": "PolicyManager.refund",
      "offset": [
        27405,
        27427
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 24
    },
    "3740": {
      "branch": 199,
      "fn": "PolicyManager.refund",
      "offset": [
        27405,
        27427
      ],
      "op": "AND",
      "path": "12"
    },
    "3741": {
      "fn": "PolicyManager.refund",
      "offset": [
        27397,
        27428
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xEA5"
    },
    "3744": {
      "branch": 199,
      "fn": "PolicyManager.refund",
      "offset": [
        27397,
        27428
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3745": {
      "fn": "PolicyManager.refund",
      "offset": [
        27397,
        27428
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3747": {
      "fn": "PolicyManager.refund",
      "offset": [
        27397,
        27428
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3748": {
      "fn": "PolicyManager.refund",
      "offset": [
        27397,
        27428
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3749": {
      "fn": "PolicyManager.refund",
      "offset": [
        27397,
        27428
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3756": {
      "op": "SHL"
    },
    "3757": {
      "op": "SUB"
    },
    "3758": {
      "op": "NOT"
    },
    "3759": {
      "fn": "PolicyManager.refund",
      "offset": [
        27462,
        27481
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3760": {
      "fn": "PolicyManager.refund",
      "offset": [
        27462,
        27481
      ],
      "op": "AND",
      "path": "12"
    },
    "3761": {
      "fn": "PolicyManager.refund",
      "offset": [
        27438,
        27459
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3763": {
      "fn": "PolicyManager.refund",
      "offset": [
        27462,
        27481
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3764": {
      "fn": "PolicyManager.refund",
      "offset": [
        27462,
        27481
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3765": {
      "fn": "PolicyManager.refund",
      "offset": [
        27462,
        27481
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3766": {
      "fn": "PolicyManager.refund",
      "offset": [
        27462,
        27470
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3768": {
      "fn": "PolicyManager.refund",
      "offset": [
        27462,
        27481
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3770": {
      "fn": "PolicyManager.refund",
      "offset": [
        27462,
        27481
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3771": {
      "fn": "PolicyManager.refund",
      "offset": [
        27462,
        27481
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3773": {
      "fn": "PolicyManager.refund",
      "offset": [
        27462,
        27481
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3774": {
      "fn": "PolicyManager.refund",
      "offset": [
        27462,
        27481
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3775": {
      "fn": "PolicyManager.refund",
      "offset": [
        27499,
        27511
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 25,
      "value": "0x1"
    },
    "3777": {
      "fn": "PolicyManager.refund",
      "offset": [
        27499,
        27511
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3778": {
      "fn": "PolicyManager.refund",
      "offset": [
        27499,
        27511
      ],
      "op": "ADD",
      "path": "12"
    },
    "3779": {
      "fn": "PolicyManager.refund",
      "offset": [
        27499,
        27511
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3786": {
      "op": "SHL"
    },
    "3787": {
      "op": "SUB"
    },
    "3788": {
      "fn": "PolicyManager.refund",
      "offset": [
        27499,
        27511
      ],
      "op": "AND",
      "path": "12"
    },
    "3789": {
      "fn": "PolicyManager.refund",
      "offset": [
        27515,
        27525
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3790": {
      "fn": "PolicyManager.refund",
      "offset": [
        27499,
        27525
      ],
      "op": "EQ",
      "path": "12"
    },
    "3791": {
      "branch": 200,
      "fn": "PolicyManager.refund",
      "offset": [
        27499,
        27525
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3792": {
      "fn": "PolicyManager.refund",
      "offset": [
        27499,
        27557
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xEE7"
    },
    "3795": {
      "branch": 200,
      "fn": "PolicyManager.refund",
      "offset": [
        27499,
        27557
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3796": {
      "op": "POP"
    },
    "3797": {
      "fn": "PolicyManager.refund",
      "offset": [
        27529,
        27543
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3798": {
      "fn": "PolicyManager.refund",
      "offset": [
        27529,
        27543
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3799": {
      "fn": "PolicyManager.refund",
      "offset": [
        27529,
        27543
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "3802": {
      "fn": "PolicyManager.refund",
      "offset": [
        27529,
        27543
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3803": {
      "fn": "PolicyManager.refund",
      "offset": [
        27529,
        27543
      ],
      "op": "DIV",
      "path": "12"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3810": {
      "op": "SHL"
    },
    "3811": {
      "op": "SUB"
    },
    "3812": {
      "fn": "PolicyManager.refund",
      "offset": [
        27529,
        27543
      ],
      "op": "AND",
      "path": "12"
    },
    "3813": {
      "fn": "PolicyManager.refund",
      "offset": [
        27547,
        27557
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3814": {
      "branch": 201,
      "fn": "PolicyManager.refund",
      "offset": [
        27529,
        27557
      ],
      "op": "EQ",
      "path": "12"
    },
    "3815": {
      "fn": "PolicyManager.refund",
      "offset": [
        27499,
        27557
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3816": {
      "fn": "PolicyManager.refund",
      "offset": [
        27491,
        27558
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xEF0"
    },
    "3819": {
      "branch": 201,
      "fn": "PolicyManager.refund",
      "offset": [
        27491,
        27558
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3820": {
      "fn": "PolicyManager.refund",
      "offset": [
        27491,
        27558
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3822": {
      "fn": "PolicyManager.refund",
      "offset": [
        27491,
        27558
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3823": {
      "fn": "PolicyManager.refund",
      "offset": [
        27491,
        27558
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3824": {
      "fn": "PolicyManager.refund",
      "offset": [
        27491,
        27558
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3825": {
      "fn": "PolicyManager.refund",
      "offset": [
        27575,
        27614
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 26,
      "value": "0xEFC"
    },
    "3828": {
      "fn": "PolicyManager.refund",
      "offset": [
        27590,
        27599
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3829": {
      "fn": "PolicyManager.refund",
      "offset": [
        27601,
        27606
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3830": {
      "fn": "PolicyManager.refund",
      "offset": [
        27608,
        27613
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3832": {
      "fn": "PolicyManager.refund",
      "offset": [
        27575,
        27589
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CE9"
    },
    "3835": {
      "fn": "PolicyManager.refund",
      "jump": "i",
      "offset": [
        27575,
        27614
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3836": {
      "fn": "PolicyManager.refund",
      "offset": [
        27575,
        27614
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3837": {
      "fn": "PolicyManager.refund",
      "offset": [
        27568,
        27614
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3838": {
      "fn": "PolicyManager.refund",
      "offset": [
        27568,
        27614
      ],
      "op": "POP",
      "path": "12"
    },
    "3839": {
      "fn": "PolicyManager.refund",
      "offset": [
        27568,
        27614
      ],
      "op": "POP",
      "path": "12"
    },
    "3840": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3841": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3842": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3843": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "POP",
      "path": "12"
    },
    "3844": {
      "fn": "PolicyManager.refund",
      "offset": [
        27286,
        27621
      ],
      "op": "POP",
      "path": "12"
    },
    "3845": {
      "fn": "PolicyManager.refund",
      "jump": "o",
      "offset": [
        27286,
        27621
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3846": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "3847": {
      "fn": "Ownable.isOwner",
      "offset": [
        1053,
        1057
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "3849": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3856": {
      "op": "SHL"
    },
    "3857": {
      "op": "SUB"
    },
    "3858": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "AND",
      "path": "34"
    },
    "3859": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "34"
    },
    "3860": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1096
      ],
      "op": "EQ",
      "path": "34"
    },
    "3861": {
      "offset": [
        889,
        907
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0xF1D"
    },
    "3864": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "3865": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "3867": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "DUP1",
      "path": "34"
    },
    "3868": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "REVERT",
      "path": "34"
    },
    "3869": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "3870": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1479,
        1480
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 27,
      "value": "0x0"
    },
    "3872": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "DUP1",
      "path": "34"
    },
    "3873": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "3874": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "3876": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "3877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3883": {
      "op": "SHL"
    },
    "3884": {
      "op": "SUB"
    },
    "3885": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "3886": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "3887": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "AND",
      "path": "34"
    },
    "3888": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "3889": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "PUSH32",
      "path": "34",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3922": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "3923": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1479,
        1480
      ],
      "op": "DUP4",
      "path": "34"
    },
    "3924": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1479,
        1480
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "3925": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "LOG3",
      "path": "34"
    },
    "3926": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1509,
        1510
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 28,
      "value": "0x0"
    },
    "3928": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "DUP1",
      "path": "34"
    },
    "3929": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3936": {
      "op": "SHL"
    },
    "3937": {
      "op": "SUB"
    },
    "3938": {
      "op": "NOT"
    },
    "3939": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "AND",
      "path": "34"
    },
    "3940": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "3941": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "SSTORE",
      "path": "34"
    },
    "3942": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMP",
      "path": "34"
    },
    "3943": {
      "fn": "PolicyManager.register",
      "offset": [
        5493,
        5755
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3944": {
      "offset": [
        4900,
        4910
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3951": {
      "op": "SHL"
    },
    "3952": {
      "op": "SUB"
    },
    "3953": {
      "offset": [
        4922,
        4928
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "3986": {
      "offset": [
        4900,
        4929
      ],
      "op": "AND",
      "path": "12"
    },
    "3987": {
      "fn": "PolicyManager.register",
      "offset": [
        4900,
        4929
      ],
      "op": "EQ",
      "path": "12"
    },
    "3988": {
      "offset": [
        4892,
        4930
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF9C"
    },
    "3991": {
      "offset": [
        4892,
        4930
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3992": {
      "fn": "PolicyManager.register",
      "offset": [
        4892,
        4930
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3994": {
      "fn": "PolicyManager.register",
      "offset": [
        4892,
        4930
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3995": {
      "fn": "PolicyManager.register",
      "offset": [
        4892,
        4930
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3996": {
      "fn": "PolicyManager.register",
      "offset": [
        4892,
        4930
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4003": {
      "op": "SHL"
    },
    "4004": {
      "op": "SUB"
    },
    "4005": {
      "fn": "PolicyManager.register",
      "offset": [
        5608,
        5620
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4006": {
      "fn": "PolicyManager.register",
      "offset": [
        5608,
        5620
      ],
      "op": "AND",
      "path": "12"
    },
    "4007": {
      "fn": "PolicyManager.register",
      "offset": [
        5580,
        5605
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4009": {
      "fn": "PolicyManager.register",
      "offset": [
        5608,
        5620
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4010": {
      "fn": "PolicyManager.register",
      "offset": [
        5608,
        5620
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4011": {
      "fn": "PolicyManager.register",
      "offset": [
        5608,
        5620
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4012": {
      "fn": "PolicyManager.register",
      "offset": [
        5608,
        5613
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "4014": {
      "fn": "PolicyManager.register",
      "offset": [
        5608,
        5620
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4016": {
      "fn": "PolicyManager.register",
      "offset": [
        5608,
        5620
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4017": {
      "fn": "PolicyManager.register",
      "offset": [
        5608,
        5620
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4019": {
      "fn": "PolicyManager.register",
      "offset": [
        5608,
        5620
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4020": {
      "fn": "PolicyManager.register",
      "offset": [
        5608,
        5620
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "4021": {
      "fn": "PolicyManager.register",
      "offset": [
        5638,
        5664
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 29
    },
    "4022": {
      "fn": "PolicyManager.register",
      "offset": [
        5638,
        5664
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4025": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4027": {
      "op": "SHL"
    },
    "4028": {
      "fn": "PolicyManager.register",
      "offset": [
        5638,
        5664
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4029": {
      "fn": "PolicyManager.register",
      "offset": [
        5638,
        5664
      ],
      "op": "DIV",
      "path": "12"
    },
    "4030": {
      "fn": "PolicyManager.register",
      "offset": [
        5638,
        5664
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "4033": {
      "fn": "PolicyManager.register",
      "offset": [
        5638,
        5664
      ],
      "op": "AND",
      "path": "12"
    },
    "4034": {
      "branch": 202,
      "fn": "PolicyManager.register",
      "offset": [
        5638,
        5669
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4035": {
      "fn": "PolicyManager.register",
      "offset": [
        5638,
        5701
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4036": {
      "fn": "PolicyManager.register",
      "offset": [
        5638,
        5701
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4037": {
      "fn": "PolicyManager.register",
      "offset": [
        5638,
        5701
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFDC"
    },
    "4040": {
      "branch": 202,
      "fn": "PolicyManager.register",
      "offset": [
        5638,
        5701
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4041": {
      "fn": "PolicyManager.register",
      "offset": [
        5638,
        5701
      ],
      "op": "POP",
      "path": "12"
    },
    "4042": {
      "fn": "PolicyManager.register",
      "offset": [
        5683,
        5701
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFD1"
    },
    "4045": {
      "fn": "PolicyManager.register",
      "offset": [
        5683,
        5699
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9E9"
    },
    "4048": {
      "fn": "PolicyManager.register",
      "jump": "i",
      "offset": [
        5683,
        5701
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4049": {
      "fn": "PolicyManager.register",
      "offset": [
        5683,
        5701
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4050": {
      "fn": "PolicyManager.register",
      "offset": [
        5673,
        5701
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "4053": {
      "fn": "PolicyManager.register",
      "offset": [
        5673,
        5701
      ],
      "op": "AND",
      "path": "12"
    },
    "4054": {
      "fn": "PolicyManager.register",
      "offset": [
        5673,
        5680
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4055": {
      "fn": "PolicyManager.register",
      "offset": [
        5673,
        5701
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "4058": {
      "fn": "PolicyManager.register",
      "offset": [
        5673,
        5701
      ],
      "op": "AND",
      "path": "12"
    },
    "4059": {
      "branch": 203,
      "fn": "PolicyManager.register",
      "offset": [
        5673,
        5701
      ],
      "op": "LT",
      "path": "12"
    },
    "4060": {
      "fn": "PolicyManager.register",
      "offset": [
        5638,
        5701
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4061": {
      "fn": "PolicyManager.register",
      "offset": [
        5630,
        5702
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFE5"
    },
    "4064": {
      "branch": 203,
      "fn": "PolicyManager.register",
      "offset": [
        5630,
        5702
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4065": {
      "fn": "PolicyManager.register",
      "offset": [
        5630,
        5702
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4067": {
      "fn": "PolicyManager.register",
      "offset": [
        5630,
        5702
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4068": {
      "fn": "PolicyManager.register",
      "offset": [
        5630,
        5702
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4069": {
      "fn": "PolicyManager.register",
      "offset": [
        5630,
        5702
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4070": {
      "fn": "PolicyManager.register",
      "offset": [
        5712,
        5748
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 30
    },
    "4071": {
      "fn": "PolicyManager.register",
      "offset": [
        5712,
        5748
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4072": {
      "fn": "PolicyManager.register",
      "offset": [
        5712,
        5748
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "4075": {
      "fn": "PolicyManager.register",
      "offset": [
        5712,
        5748
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4076": {
      "fn": "PolicyManager.register",
      "offset": [
        5712,
        5748
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4077": {
      "fn": "PolicyManager.register",
      "offset": [
        5712,
        5748
      ],
      "op": "AND",
      "path": "12"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4080": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4082": {
      "op": "SHL"
    },
    "4083": {
      "fn": "PolicyManager.register",
      "offset": [
        5712,
        5748
      ],
      "op": "MUL",
      "path": "12"
    },
    "4084": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4089": {
      "op": "SHL"
    },
    "4090": {
      "op": "NOT"
    },
    "4091": {
      "fn": "PolicyManager.register",
      "offset": [
        5712,
        5748
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4092": {
      "fn": "PolicyManager.register",
      "offset": [
        5712,
        5748
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4093": {
      "fn": "PolicyManager.register",
      "offset": [
        5712,
        5748
      ],
      "op": "AND",
      "path": "12"
    },
    "4094": {
      "fn": "PolicyManager.register",
      "offset": [
        5712,
        5748
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4095": {
      "fn": "PolicyManager.register",
      "offset": [
        5712,
        5748
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4096": {
      "fn": "PolicyManager.register",
      "offset": [
        5712,
        5748
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4097": {
      "fn": "PolicyManager.register",
      "offset": [
        5712,
        5748
      ],
      "op": "OR",
      "path": "12"
    },
    "4098": {
      "fn": "PolicyManager.register",
      "offset": [
        5712,
        5748
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4099": {
      "fn": "PolicyManager.register",
      "offset": [
        5712,
        5748
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "4100": {
      "op": "POP"
    },
    "4101": {
      "fn": "PolicyManager.register",
      "jump": "o",
      "offset": [
        5493,
        5755
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4102": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8671,
        9746
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4103": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8897,
        8912
      ],
      "op": "TIMESTAMP",
      "path": "12",
      "statement": 31
    },
    "4104": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8881,
        8894
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4111": {
      "op": "SHL"
    },
    "4112": {
      "op": "SUB"
    },
    "4113": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8881,
        8912
      ],
      "op": "AND",
      "path": "12"
    },
    "4114": {
      "branch": 204,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8881,
        8912
      ],
      "op": "GT",
      "path": "12"
    },
    "4115": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8881,
        8941
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4116": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8881,
        8941
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4117": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8881,
        8941
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x101E"
    },
    "4120": {
      "branch": 204,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8881,
        8941
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4121": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8881,
        8941
      ],
      "op": "POP",
      "path": "12"
    },
    "4122": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8940,
        8941
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4124": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8928,
        8937
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4125": {
      "branch": 205,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8928,
        8941
      ],
      "op": "GT",
      "path": "12"
    },
    "4126": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8881,
        8941
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4127": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8860,
        8951
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1027"
    },
    "4130": {
      "branch": 205,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8860,
        8951
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4131": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8860,
        8951
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4133": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8860,
        8951
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4134": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8860,
        8951
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4135": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8860,
        8951
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4142": {
      "op": "SHL"
    },
    "4143": {
      "op": "SUB"
    },
    "4144": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8970,
        8991
      ],
      "op": "SELFBALANCE",
      "path": "12",
      "statement": 32
    },
    "4145": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8970,
        9006
      ],
      "op": "GT",
      "path": "12"
    },
    "4146": {
      "branch": 206,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8970,
        9006
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4147": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8962,
        9007
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x103B"
    },
    "4150": {
      "branch": 206,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8962,
        9007
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4151": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8962,
        9007
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4153": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8962,
        9007
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4154": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8962,
        9007
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4155": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8962,
        9007
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4156": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9017,
        9037
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4158": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9040,
        9058
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1045"
    },
    "4161": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9040,
        9056
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9E9"
    },
    "4164": {
      "fn": "PolicyManager.createPolicy",
      "jump": "i",
      "offset": [
        9040,
        9058
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4165": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9040,
        9058
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4166": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9017,
        9058
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4167": {
      "op": "POP"
    },
    "4168": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9068,
        9084
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4170": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9094,
        9126
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1079"
    },
    "4173": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9094,
        9126
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "4178": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9110,
        9126
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "4211": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9094,
        9126
      ],
      "op": "AND",
      "path": "12"
    },
    "4212": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9094,
        9107
      ],
      "op": "DUP7",
      "path": "12"
    },
    "4213": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9094,
        9126
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3994"
    },
    "4216": {
      "fn": "PolicyManager.createPolicy",
      "jump": "i",
      "offset": [
        9094,
        9126
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4217": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9094,
        9126
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4218": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9087,
        9131
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1084"
    },
    "4221": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9087,
        9131
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4222": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9130,
        9131
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "4224": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9087,
        9131
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39BA"
    },
    "4227": {
      "fn": "PolicyManager.createPolicy",
      "jump": "i",
      "offset": [
        9087,
        9131
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4228": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9087,
        9131
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4229": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9068,
        9131
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4230": {
      "op": "POP"
    },
    "4231": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9141,
        9164
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4233": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9167,
        9192
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1092"
    },
    "4236": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9179,
        9192
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4237": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9068,
        9131
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4238": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9167,
        9192
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39E0"
    },
    "4241": {
      "fn": "PolicyManager.createPolicy",
      "jump": "i",
      "offset": [
        9167,
        9192
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4242": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9167,
        9192
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4243": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9141,
        9192
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "4246": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9141,
        9192
      ],
      "op": "AND",
      "path": "12"
    },
    "4247": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9141,
        9192
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4248": {
      "op": "POP"
    },
    "4249": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9203,
        9218
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4251": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9141,
        9192
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4252": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9229,
        9257
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10A5"
    },
    "4255": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9229,
        9238
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4256": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9243,
        9249
      ],
      "op": "DUP8",
      "path": "12"
    },
    "4257": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9229,
        9242
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2267"
    },
    "4260": {
      "fn": "PolicyManager.createPolicy",
      "jump": "i",
      "offset": [
        9229,
        9257
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4261": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9229,
        9257
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4262": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9229,
        9275
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10AF"
    },
    "4265": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9229,
        9275
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4266": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9229,
        9275
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4267": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9229,
        9275
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3980"
    },
    "4270": {
      "fn": "PolicyManager.createPolicy",
      "jump": "i",
      "offset": [
        9229,
        9275
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4271": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9229,
        9275
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4272": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9203,
        9276
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4273": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9203,
        9276
      ],
      "op": "POP",
      "path": "12"
    },
    "4274": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9304,
        9305
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 33,
      "value": "0x0"
    },
    "4276": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9294,
        9301
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4283": {
      "op": "SHL"
    },
    "4284": {
      "op": "SUB"
    },
    "4285": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9294,
        9305
      ],
      "op": "AND",
      "path": "12"
    },
    "4286": {
      "branch": 207,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9294,
        9305
      ],
      "op": "GT",
      "path": "12"
    },
    "4287": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9294,
        9364
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4288": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9294,
        9364
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4289": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9294,
        9364
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10E6"
    },
    "4292": {
      "branch": 207,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9294,
        9364
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4293": {
      "op": "POP"
    },
    "4294": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9355,
        9364
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "4295": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9337,
        9343
      ],
      "op": "DUP6",
      "path": "12"
    },
    "4296": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9309,
        9334
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10DA"
    },
    "4299": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9319,
        9334
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4306": {
      "op": "SHL"
    },
    "4307": {
      "op": "SUB"
    },
    "4308": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9309,
        9334
      ],
      "op": "DUP6",
      "path": "12"
    },
    "4309": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9309,
        9334
      ],
      "op": "AND",
      "path": "12"
    },
    "4310": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9309,
        9334
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A03"
    },
    "4313": {
      "fn": "PolicyManager.createPolicy",
      "jump": "i",
      "offset": [
        9309,
        9334
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4314": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9309,
        9334
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4315": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9309,
        9350
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10E4"
    },
    "4318": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9309,
        9350
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4319": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9309,
        9350
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4320": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9309,
        9350
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A03"
    },
    "4323": {
      "fn": "PolicyManager.createPolicy",
      "jump": "i",
      "offset": [
        9309,
        9350
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4324": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9309,
        9350
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4325": {
      "branch": 208,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9309,
        9364
      ],
      "op": "EQ",
      "path": "12"
    },
    "4326": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9294,
        9364
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4327": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9286,
        9365
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10EF"
    },
    "4330": {
      "branch": 208,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9286,
        9365
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4331": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9286,
        9365
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4333": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9286,
        9365
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4334": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9286,
        9365
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4335": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9286,
        9365
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4336": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9376,
        9397
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4338": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9400,
        9476
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10FE"
    },
    "4341": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9413,
        9422
      ],
      "op": "DUP11",
      "path": "12"
    },
    "4342": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9424,
        9436
      ],
      "op": "DUP11",
      "path": "12"
    },
    "4343": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9438,
        9451
      ],
      "op": "DUP11",
      "path": "12"
    },
    "4344": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9453,
        9460
      ],
      "op": "DUP6",
      "path": "12"
    },
    "4345": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9462,
        9468
      ],
      "op": "DUP11",
      "path": "12"
    },
    "4346": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9400,
        9412
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2273"
    },
    "4349": {
      "fn": "PolicyManager.createPolicy",
      "jump": "i",
      "offset": [
        9400,
        9476
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4350": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9400,
        9476
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4351": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9376,
        9476
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4352": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9376,
        9476
      ],
      "op": "POP",
      "path": "12"
    },
    "4353": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9492,
        9501
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4355": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9487,
        9740
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4356": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9507,
        9524
      ],
      "op": "DUP7",
      "path": "12"
    },
    "4357": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9507,
        9524
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4358": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9507,
        9524
      ],
      "op": "LT",
      "path": "12"
    },
    "4359": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9487,
        9740
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4360": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9487,
        9740
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11D8"
    },
    "4363": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9487,
        9740
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4364": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9545,
        9557
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4366": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9566
      ],
      "op": "DUP9",
      "path": "12"
    },
    "4367": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9566
      ],
      "op": "DUP9",
      "path": "12"
    },
    "4368": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9567,
        9568
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4369": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4370": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4371": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "LT",
      "path": "12"
    },
    "4372": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x111F"
    },
    "4375": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4376": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x111F"
    },
    "4379": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A22"
    },
    "4382": {
      "fn": "PolicyManager.createPolicy",
      "jump": "i",
      "offset": [
        9560,
        9569
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4383": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4384": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4385": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "POP",
      "path": "12"
    },
    "4386": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4388": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "MUL",
      "path": "12"
    },
    "4389": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "ADD",
      "path": "12"
    },
    "4390": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4392": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4393": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "ADD",
      "path": "12"
    },
    "4394": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4395": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1134"
    },
    "4398": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4399": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4400": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3640"
    },
    "4403": {
      "fn": "PolicyManager.createPolicy",
      "jump": "i",
      "offset": [
        9560,
        9569
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4404": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9560,
        9569
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4405": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9545,
        9569
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4406": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9545,
        9569
      ],
      "op": "POP",
      "path": "12"
    },
    "4407": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9583,
        9662
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 34,
      "value": "0x114C"
    },
    "4410": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9596,
        9609
      ],
      "op": "DUP8",
      "path": "12"
    },
    "4411": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9611,
        9620
      ],
      "op": "DUP8",
      "path": "12"
    },
    "4412": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9622,
        9626
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4413": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9628,
        9635
      ],
      "op": "DUP8",
      "path": "12"
    },
    "4414": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9652,
        9659
      ],
      "op": "DUP9",
      "path": "12"
    },
    "4415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4421": {
      "op": "SHL"
    },
    "4422": {
      "op": "SUB"
    },
    "4423": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9644,
        9660
      ],
      "op": "AND",
      "path": "12"
    },
    "4424": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9583,
        9595
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2412"
    },
    "4427": {
      "fn": "PolicyManager.createPolicy",
      "jump": "i",
      "offset": [
        9583,
        9662
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4428": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9583,
        9662
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4429": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 35,
      "value": "0x40"
    },
    "4431": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4432": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4433": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "4435": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4436": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "ADD",
      "path": "12"
    },
    "4437": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4438": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4445": {
      "op": "SHL"
    },
    "4446": {
      "op": "SUB"
    },
    "4447": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4448": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4449": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "AND",
      "path": "12"
    },
    "4450": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4451": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4454": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4456": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4457": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4458": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "ADD",
      "path": "12"
    },
    "4459": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4460": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4461": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4462": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "4463": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4464": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "ADD",
      "path": "12"
    },
    "4465": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4466": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4467": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4468": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9695
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "4470": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9695
      ],
      "op": "DUP9",
      "path": "12"
    },
    "4471": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9695
      ],
      "op": "ADD",
      "path": "12"
    },
    "4472": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4473": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4474": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "4476": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4477": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4478": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "ADD",
      "path": "12"
    },
    "4479": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4480": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "4481": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4482": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "DUP6",
      "path": "12"
    },
    "4483": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4484": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4485": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4486": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "4487": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "4488": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "4489": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4490": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "4492": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4493": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4494": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "MUL",
      "path": "12"
    },
    "4495": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4496": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "4497": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "ADD",
      "path": "12"
    },
    "4498": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4499": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4504": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4506": {
      "op": "SHL"
    },
    "4507": {
      "op": "SUB"
    },
    "4508": {
      "op": "NOT"
    },
    "4509": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "AND",
      "path": "12"
    },
    "4510": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4511": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4512": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "4513": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "AND",
      "path": "12"
    },
    "4514": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "OR",
      "path": "12"
    },
    "4515": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4516": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "4517": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4518": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4519": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4520": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4521": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "ADD",
      "path": "12"
    },
    "4522": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4523": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4524": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4525": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "4526": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4527": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "4529": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4530": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4531": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "ADD",
      "path": "12"
    },
    "4532": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4533": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4534": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4537": {
      "op": "NOT"
    },
    "4538": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "AND",
      "path": "12"
    },
    "4539": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9701,
        9728
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "4542": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4543": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4544": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "AND",
      "path": "12"
    },
    "4545": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4546": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4547": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4548": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "OR",
      "path": "12"
    },
    "4549": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4550": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9676,
        9729
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "4551": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9526,
        9529
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 36
    },
    "4552": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9526,
        9529
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11D0"
    },
    "4555": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9526,
        9529
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4556": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9526,
        9529
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A38"
    },
    "4559": {
      "fn": "PolicyManager.createPolicy",
      "jump": "i",
      "offset": [
        9526,
        9529
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4560": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9526,
        9529
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4561": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9526,
        9529
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4562": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9526,
        9529
      ],
      "op": "POP",
      "path": "12"
    },
    "4563": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9526,
        9529
      ],
      "op": "POP",
      "path": "12"
    },
    "4564": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9487,
        9740
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1103"
    },
    "4567": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9487,
        9740
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4568": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9487,
        9740
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4569": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        9487,
        9740
      ],
      "op": "POP",
      "path": "12"
    },
    "4570": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8850,
        9746
      ],
      "op": "POP",
      "path": "12"
    },
    "4571": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8850,
        9746
      ],
      "op": "POP",
      "path": "12"
    },
    "4572": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8850,
        9746
      ],
      "op": "POP",
      "path": "12"
    },
    "4573": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8850,
        9746
      ],
      "op": "POP",
      "path": "12"
    },
    "4574": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8850,
        9746
      ],
      "op": "POP",
      "path": "12"
    },
    "4575": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8671,
        9746
      ],
      "op": "POP",
      "path": "12"
    },
    "4576": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8671,
        9746
      ],
      "op": "POP",
      "path": "12"
    },
    "4577": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8671,
        9746
      ],
      "op": "POP",
      "path": "12"
    },
    "4578": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8671,
        9746
      ],
      "op": "POP",
      "path": "12"
    },
    "4579": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        8671,
        9746
      ],
      "op": "POP",
      "path": "12"
    },
    "4580": {
      "fn": "PolicyManager.createPolicy",
      "jump": "o",
      "offset": [
        8671,
        9746
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4581": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8187,
        8352
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4588": {
      "op": "SHL"
    },
    "4589": {
      "op": "SUB"
    },
    "4590": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8293,
        8305
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4591": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8293,
        8305
      ],
      "op": "AND",
      "path": "12"
    },
    "4592": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8246,
        8253
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4594": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8293,
        8305
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4595": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8293,
        8305
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4596": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8293,
        8305
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4597": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8293,
        8298
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "4599": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8293,
        8305
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4601": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8293,
        8305
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4602": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8293,
        8305
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4604": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8293,
        8305
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4605": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8293,
        8305
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "4606": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8322,
        8345
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 37,
      "value": "0xDA5"
    },
    "4609": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8293,
        8305
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4610": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8322,
        8335
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26FF"
    },
    "4613": {
      "fn": "PolicyManager.getMinFeeRate",
      "jump": "i",
      "offset": [
        8322,
        8345
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4614": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4615": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7081,
        7093
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 38,
      "value": "0x6"
    },
    "4617": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7081,
        7097
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4622": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4624": {
      "op": "SHL"
    },
    "4625": {
      "op": "SUB"
    },
    "4626": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7081,
        7097
      ],
      "op": "AND",
      "path": "12"
    },
    "4627": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7066,
        7097
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4628": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7066,
        7097
      ],
      "op": "LT",
      "path": "12"
    },
    "4629": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7066,
        7097
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4630": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7066,
        7097
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4631": {
      "branch": 209,
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7066,
        7097
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4632": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7066,
        7144
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x122C"
    },
    "4635": {
      "branch": 209,
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7066,
        7144
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4636": {
      "op": "POP"
    },
    "4637": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7128,
        7144
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "4639": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7128,
        7144
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4646": {
      "op": "SHL"
    },
    "4647": {
      "op": "SUB"
    },
    "4648": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7128,
        7144
      ],
      "op": "AND",
      "path": "12"
    },
    "4649": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7113,
        7144
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4650": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7113,
        7144
      ],
      "op": "GT",
      "path": "12"
    },
    "4651": {
      "branch": 210,
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7113,
        7144
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4652": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7066,
        7144
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4653": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7058,
        7224
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12A3"
    },
    "4656": {
      "branch": 210,
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7058,
        7224
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4657": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7058,
        7224
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4659": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7058,
        7224
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4660": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4664": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4666": {
      "op": "SHL"
    },
    "4667": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7058,
        7224
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4668": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7058,
        7224
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4671": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7058,
        7224
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4673": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7058,
        7224
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4674": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7058,
        7224
      ],
      "op": "ADD",
      "path": "12"
    },
    "4675": {
      "op": "MSTORE"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4680": {
      "op": "DUP3"
    },
    "4681": {
      "op": "ADD"
    },
    "4682": {
      "op": "MSTORE"
    },
    "4683": {
      "op": "PUSH32",
      "value": "0x546865207374616B65722773206D696E206665652072617465206D7573742066"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4718": {
      "op": "DUP3"
    },
    "4719": {
      "op": "ADD"
    },
    "4720": {
      "op": "MSTORE"
    },
    "4721": {
      "op": "PUSH32",
      "value": "0x616C6C2077697468696E2074686520676C6F62616C206665652072616E676500"
    },
    "4754": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4756": {
      "op": "DUP3"
    },
    "4757": {
      "op": "ADD"
    },
    "4758": {
      "op": "MSTORE"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4761": {
      "op": "ADD"
    },
    "4762": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7058,
        7224
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4763": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7058,
        7224
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4765": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7058,
        7224
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4766": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7058,
        7224
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4767": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7058,
        7224
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4768": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7058,
        7224
      ],
      "op": "SUB",
      "path": "12"
    },
    "4769": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7058,
        7224
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4770": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7058,
        7224
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "12"
    },
    "4771": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7058,
        7224
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4772": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7268,
        7278
      ],
      "op": "CALLER",
      "path": "12"
    },
    "4773": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7234,
        7259
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4775": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7262,
        7279
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4776": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7262,
        7279
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4777": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7262,
        7279
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4778": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7262,
        7267
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "4780": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7262,
        7279
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4782": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7262,
        7279
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4783": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7262,
        7279
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4785": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7262,
        7279
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4786": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7262,
        7279
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "4787": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7293,
        7312
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "4789": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7293,
        7312
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4790": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7293,
        7312
      ],
      "op": "ADD",
      "path": "12"
    },
    "4791": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7293,
        7312
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4792": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7293,
        7327
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4793": {
      "branch": 211,
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7293,
        7327
      ],
      "op": "EQ",
      "path": "12"
    },
    "4794": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7289,
        7360
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4795": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7289,
        7360
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12C2"
    },
    "4798": {
      "branch": 211,
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7289,
        7360
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4799": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7343,
        7350
      ],
      "op": "POP",
      "path": "12",
      "statement": 39
    },
    "4800": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "POP",
      "path": "12"
    },
    "4801": {
      "fn": "PolicyManager.setMinFeeRate",
      "jump": "o",
      "offset": [
        6995,
        7462
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4802": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7289,
        7360
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4803": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7369,
        7388
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 40,
      "value": "0x2"
    },
    "4805": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7369,
        7388
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4806": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7369,
        7388
      ],
      "op": "ADD",
      "path": "12"
    },
    "4807": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7369,
        7402
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4808": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7369,
        7402
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4809": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7369,
        7402
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "4810": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7417,
        7455
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 41,
      "value": "0x40"
    },
    "4812": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7417,
        7455
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4813": {
      "op": "DUP3"
    },
    "4814": {
      "op": "DUP2"
    },
    "4815": {
      "op": "MSTORE"
    },
    "4816": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7431,
        7441
      ],
      "op": "CALLER",
      "path": "12"
    },
    "4817": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7431,
        7441
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4818": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7417,
        7455
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x6B9024CC1BF5710F290BE788DCA9886DB7A3D9BE0DF0855BFA991DBF26A256BC"
    },
    "4851": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7417,
        7455
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4854": {
      "op": "ADD"
    },
    "4855": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7417,
        7455
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4857": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7417,
        7455
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4858": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7417,
        7455
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4859": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7417,
        7455
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4860": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7417,
        7455
      ],
      "op": "SUB",
      "path": "12"
    },
    "4861": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7417,
        7455
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4862": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7417,
        7455
      ],
      "op": "LOG2",
      "path": "12"
    },
    "4863": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        7048,
        7462
      ],
      "op": "POP",
      "path": "12"
    },
    "4864": {
      "fn": "PolicyManager.setMinFeeRate",
      "offset": [
        6995,
        7462
      ],
      "op": "POP",
      "path": "12"
    },
    "4865": {
      "fn": "PolicyManager.setMinFeeRate",
      "jump": "o",
      "offset": [
        6995,
        7462
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4866": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25066,
        25339
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4867": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25153,
        25172
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4875": {
      "op": "SHL"
    },
    "4876": {
      "op": "SUB"
    },
    "4877": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25196,
        25218
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 42
    },
    "4878": {
      "branch": 212,
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25196,
        25218
      ],
      "op": "AND",
      "path": "12"
    },
    "4879": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25188,
        25219
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1317"
    },
    "4882": {
      "branch": 212,
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25188,
        25219
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4883": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25188,
        25219
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4885": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25188,
        25219
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4886": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25188,
        25219
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4887": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25188,
        25219
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4888": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25266,
        25276
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 43
    },
    "4889": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25237,
        25262
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1321"
    },
    "4892": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25252,
        25261
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4893": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25237,
        25251
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD55"
    },
    "4896": {
      "fn": "PolicyManager.revokeArrangement",
      "jump": "i",
      "offset": [
        25237,
        25262
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4897": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25237,
        25262
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4904": {
      "op": "SHL"
    },
    "4905": {
      "op": "SUB"
    },
    "4906": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25237,
        25276
      ],
      "op": "AND",
      "path": "12"
    },
    "4907": {
      "branch": 213,
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25237,
        25276
      ],
      "op": "EQ",
      "path": "12"
    },
    "4908": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25229,
        25277
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1334"
    },
    "4911": {
      "branch": 213,
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25229,
        25277
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4912": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25229,
        25277
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4914": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25229,
        25277
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4915": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25229,
        25277
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4916": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25229,
        25277
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4917": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25294,
        25332
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 44,
      "value": "0xDA5"
    },
    "4920": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25309,
        25318
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4921": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25320,
        25325
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4922": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25327,
        25331
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "4924": {
      "fn": "PolicyManager.revokeArrangement",
      "offset": [
        25294,
        25308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CE9"
    },
    "4927": {
      "fn": "PolicyManager.revokeArrangement",
      "jump": "i",
      "offset": [
        25294,
        25332
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4928": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4929": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28832,
        28838
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4937": {
      "op": "SHL"
    },
    "4938": {
      "op": "SUB"
    },
    "4939": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28901,
        28923
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4940": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28901,
        28923
      ],
      "op": "AND",
      "path": "12"
    },
    "4941": {
      "branch": 214,
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28901,
        28923
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4942": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28901,
        28940
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4943": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28901,
        28940
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4944": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28901,
        28940
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x135D"
    },
    "4947": {
      "branch": 214,
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28901,
        28940
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4948": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28901,
        28940
      ],
      "op": "POP",
      "path": "12"
    },
    "4949": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28927,
        28934
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4950": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28927,
        28940
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "4953": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28927,
        28940
      ],
      "op": "AND",
      "path": "12"
    },
    "4954": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28938,
        28940
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "4956": {
      "branch": 215,
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28927,
        28940
      ],
      "op": "EQ",
      "path": "12"
    },
    "4957": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28901,
        28940
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4958": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28897,
        28976
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4959": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28897,
        28976
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x136A"
    },
    "4962": {
      "branch": 215,
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28897,
        28976
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4963": {
      "op": "POP"
    },
    "4964": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28963,
        28965
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 45,
      "value": "0x37"
    },
    "4966": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28956,
        28965
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF00"
    },
    "4969": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28956,
        28965
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4970": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28897,
        28976
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4971": {
      "op": "POP"
    },
    "4972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4978": {
      "op": "SHL"
    },
    "4979": {
      "op": "SUB"
    },
    "4980": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29004
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 46
    },
    "4981": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29004
      ],
      "op": "AND",
      "path": "12"
    },
    "4982": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29004
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4984": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29004
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4985": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29004
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4986": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29004
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4987": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        28997
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "4989": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29004
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4991": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29004
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4992": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29004
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4993": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29004
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4994": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29004
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4996": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29004
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4997": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29004
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4998": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29004
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "4999": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29022
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "5002": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29022
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5003": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29022
      ],
      "op": "AND",
      "path": "12"
    },
    "5004": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29022
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5005": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29022
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5006": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29013
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5008": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29013
      ],
      "op": "ADD",
      "path": "12"
    },
    "5009": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29022
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5010": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29022
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5011": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29022
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5012": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29022
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5013": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29022
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5014": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28992,
        29022
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5015": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5016": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5017": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "POP",
      "path": "12"
    },
    "5018": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "offset": [
        28660,
        29029
      ],
      "op": "POP",
      "path": "12"
    },
    "5019": {
      "fn": "PolicyManager.getNodeFeeDelta",
      "jump": "o",
      "offset": [
        28660,
        29029
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5020": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24710,
        24918
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5021": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24769,
        24788
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5023": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24837,
        24847
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 47
    },
    "5024": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24808,
        24833
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13A8"
    },
    "5027": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24823,
        24832
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5028": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24808,
        24822
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD55"
    },
    "5031": {
      "fn": "PolicyManager.revokePolicy",
      "jump": "i",
      "offset": [
        24808,
        24833
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5032": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24808,
        24833
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5039": {
      "op": "SHL"
    },
    "5040": {
      "op": "SUB"
    },
    "5041": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24808,
        24847
      ],
      "op": "AND",
      "path": "12"
    },
    "5042": {
      "branch": 216,
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24808,
        24847
      ],
      "op": "EQ",
      "path": "12"
    },
    "5043": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24800,
        24848
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13BB"
    },
    "5046": {
      "branch": 216,
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24800,
        24848
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5047": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24800,
        24848
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5049": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24800,
        24848
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5050": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24800,
        24848
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5051": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24800,
        24848
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5052": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24865,
        24911
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 48,
      "value": "0xF00"
    },
    "5055": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24880,
        24889
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5056": {
      "offset": [
        3023,
        3024
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5058": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24906,
        24910
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5060": {
      "fn": "PolicyManager.revokePolicy",
      "offset": [
        24865,
        24879
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CE9"
    },
    "5063": {
      "fn": "PolicyManager.revokePolicy",
      "jump": "i",
      "offset": [
        24865,
        24911
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5064": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28018,
        28249
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5065": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28113,
        28132
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5073": {
      "op": "SHL"
    },
    "5074": {
      "op": "SUB"
    },
    "5075": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28156,
        28178
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 49
    },
    "5076": {
      "branch": 217,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28156,
        28178
      ],
      "op": "AND",
      "path": "12"
    },
    "5077": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28148,
        28179
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13DD"
    },
    "5080": {
      "branch": 217,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28148,
        28179
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5081": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28148,
        28179
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5083": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28148,
        28179
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5084": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28148,
        28179
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5085": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28148,
        28179
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5086": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28196,
        28242
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 50,
      "value": "0xDA5"
    },
    "5089": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28225,
        28234
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5090": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28236,
        28241
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5091": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        28196,
        28224
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2769"
    },
    "5094": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        28196,
        28242
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5095": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5096": {
      "offset": [
        4900,
        4910
      ],
      "op": "CALLER",
      "path": "12"
    },
    "5097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5101": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5103": {
      "op": "SHL"
    },
    "5104": {
      "op": "SUB"
    },
    "5105": {
      "offset": [
        4922,
        4928
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "5138": {
      "offset": [
        4900,
        4929
      ],
      "op": "AND",
      "path": "12"
    },
    "5139": {
      "fn": "PolicyManager.ping",
      "offset": [
        4900,
        4929
      ],
      "op": "EQ",
      "path": "12"
    },
    "5140": {
      "offset": [
        4892,
        4930
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x141C"
    },
    "5143": {
      "offset": [
        4892,
        4930
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5144": {
      "fn": "PolicyManager.ping",
      "offset": [
        4892,
        4930
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5146": {
      "fn": "PolicyManager.ping",
      "offset": [
        4892,
        4930
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5147": {
      "fn": "PolicyManager.ping",
      "offset": [
        4892,
        4930
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5148": {
      "fn": "PolicyManager.ping",
      "offset": [
        4892,
        4930
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5153": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5155": {
      "op": "SHL"
    },
    "5156": {
      "op": "SUB"
    },
    "5157": {
      "fn": "PolicyManager.ping",
      "offset": [
        15267,
        15279
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5158": {
      "fn": "PolicyManager.ping",
      "offset": [
        15267,
        15279
      ],
      "op": "AND",
      "path": "12"
    },
    "5159": {
      "fn": "PolicyManager.ping",
      "offset": [
        15243,
        15264
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5161": {
      "fn": "PolicyManager.ping",
      "offset": [
        15267,
        15279
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5162": {
      "fn": "PolicyManager.ping",
      "offset": [
        15267,
        15279
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5163": {
      "fn": "PolicyManager.ping",
      "offset": [
        15267,
        15279
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5164": {
      "fn": "PolicyManager.ping",
      "offset": [
        15267,
        15272
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "5166": {
      "fn": "PolicyManager.ping",
      "offset": [
        15267,
        15279
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5168": {
      "fn": "PolicyManager.ping",
      "offset": [
        15267,
        15279
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5169": {
      "fn": "PolicyManager.ping",
      "offset": [
        15267,
        15279
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5171": {
      "fn": "PolicyManager.ping",
      "offset": [
        15267,
        15279
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5172": {
      "fn": "PolicyManager.ping",
      "offset": [
        15267,
        15279
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5173": {
      "fn": "PolicyManager.ping",
      "offset": [
        15391,
        15409
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 51,
      "value": "0x143C"
    },
    "5176": {
      "fn": "PolicyManager.ping",
      "offset": [
        15391,
        15407
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9E9"
    },
    "5179": {
      "fn": "PolicyManager.ping",
      "jump": "i",
      "offset": [
        15391,
        15409
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5180": {
      "fn": "PolicyManager.ping",
      "offset": [
        15391,
        15409
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5181": {
      "fn": "PolicyManager.ping",
      "offset": [
        15365,
        15387
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5182": {
      "fn": "PolicyManager.ping",
      "offset": [
        15365,
        15387
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5183": {
      "fn": "PolicyManager.ping",
      "offset": [
        15365,
        15409
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "5186": {
      "fn": "PolicyManager.ping",
      "offset": [
        15365,
        15409
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5187": {
      "fn": "PolicyManager.ping",
      "offset": [
        15365,
        15409
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5188": {
      "fn": "PolicyManager.ping",
      "offset": [
        15365,
        15409
      ],
      "op": "AND",
      "path": "12"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5193": {
      "op": "SHL"
    },
    "5194": {
      "fn": "PolicyManager.ping",
      "offset": [
        15365,
        15387
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5195": {
      "fn": "PolicyManager.ping",
      "offset": [
        15365,
        15387
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5196": {
      "fn": "PolicyManager.ping",
      "offset": [
        15365,
        15387
      ],
      "op": "DIV",
      "path": "12"
    },
    "5197": {
      "fn": "PolicyManager.ping",
      "offset": [
        15365,
        15387
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5198": {
      "fn": "PolicyManager.ping",
      "offset": [
        15365,
        15387
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5199": {
      "fn": "PolicyManager.ping",
      "offset": [
        15365,
        15387
      ],
      "op": "AND",
      "path": "12"
    },
    "5200": {
      "fn": "PolicyManager.ping",
      "offset": [
        15365,
        15409
      ],
      "op": "GT",
      "path": "12"
    },
    "5201": {
      "branch": 218,
      "fn": "PolicyManager.ping",
      "offset": [
        15365,
        15409
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5202": {
      "fn": "PolicyManager.ping",
      "offset": [
        15357,
        15410
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x145A"
    },
    "5205": {
      "branch": 218,
      "fn": "PolicyManager.ping",
      "offset": [
        15357,
        15410
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5206": {
      "fn": "PolicyManager.ping",
      "offset": [
        15357,
        15410
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5208": {
      "fn": "PolicyManager.ping",
      "offset": [
        15357,
        15410
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5209": {
      "fn": "PolicyManager.ping",
      "offset": [
        15357,
        15410
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5210": {
      "fn": "PolicyManager.ping",
      "offset": [
        15357,
        15410
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5211": {
      "fn": "PolicyManager.ping",
      "offset": [
        15424,
        15446
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "5214": {
      "fn": "PolicyManager.ping",
      "offset": [
        15424,
        15446
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5215": {
      "fn": "PolicyManager.ping",
      "offset": [
        15424,
        15446
      ],
      "op": "AND",
      "path": "12"
    },
    "5216": {
      "branch": 219,
      "fn": "PolicyManager.ping",
      "offset": [
        15424,
        15446
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5217": {
      "fn": "PolicyManager.ping",
      "offset": [
        15420,
        15507
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x146E"
    },
    "5220": {
      "branch": 219,
      "fn": "PolicyManager.ping",
      "offset": [
        15420,
        15507
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5221": {
      "fn": "PolicyManager.ping",
      "offset": [
        15462,
        15496
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 52,
      "value": "0x146E"
    },
    "5224": {
      "fn": "PolicyManager.ping",
      "offset": [
        15472,
        15476
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5225": {
      "fn": "PolicyManager.ping",
      "offset": [
        15478,
        15495
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5226": {
      "fn": "PolicyManager.ping",
      "offset": [
        15462,
        15471
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28AD"
    },
    "5229": {
      "fn": "PolicyManager.ping",
      "jump": "i",
      "offset": [
        15462,
        15496
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5230": {
      "fn": "PolicyManager.ping",
      "offset": [
        15462,
        15496
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5231": {
      "fn": "PolicyManager.ping",
      "offset": [
        15520,
        15542
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "5234": {
      "fn": "PolicyManager.ping",
      "offset": [
        15520,
        15542
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5235": {
      "fn": "PolicyManager.ping",
      "offset": [
        15520,
        15542
      ],
      "op": "AND",
      "path": "12"
    },
    "5236": {
      "branch": 220,
      "fn": "PolicyManager.ping",
      "offset": [
        15520,
        15542
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5237": {
      "fn": "PolicyManager.ping",
      "offset": [
        15516,
        15603
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1482"
    },
    "5240": {
      "branch": 220,
      "fn": "PolicyManager.ping",
      "offset": [
        15516,
        15603
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5241": {
      "fn": "PolicyManager.ping",
      "offset": [
        15558,
        15592
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 53,
      "value": "0x1482"
    },
    "5244": {
      "fn": "PolicyManager.ping",
      "offset": [
        15568,
        15572
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5245": {
      "fn": "PolicyManager.ping",
      "offset": [
        15574,
        15591
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5246": {
      "fn": "PolicyManager.ping",
      "offset": [
        15558,
        15567
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28AD"
    },
    "5249": {
      "fn": "PolicyManager.ping",
      "jump": "i",
      "offset": [
        15558,
        15592
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5250": {
      "fn": "PolicyManager.ping",
      "offset": [
        15558,
        15592
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5251": {
      "fn": "PolicyManager.ping",
      "offset": [
        15712,
        15736
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "5254": {
      "fn": "PolicyManager.ping",
      "offset": [
        15712,
        15736
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5255": {
      "fn": "PolicyManager.ping",
      "offset": [
        15712,
        15736
      ],
      "op": "AND",
      "path": "12"
    },
    "5256": {
      "fn": "PolicyManager.ping",
      "offset": [
        15712,
        15736
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5257": {
      "fn": "PolicyManager.ping",
      "offset": [
        15712,
        15736
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5258": {
      "fn": "PolicyManager.ping",
      "offset": [
        15712,
        15736
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5259": {
      "branch": 221,
      "fn": "PolicyManager.ping",
      "offset": [
        15712,
        15736
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5260": {
      "fn": "PolicyManager.ping",
      "offset": [
        15712,
        15779
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14A8"
    },
    "5263": {
      "branch": 221,
      "fn": "PolicyManager.ping",
      "offset": [
        15712,
        15779
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5264": {
      "op": "POP"
    },
    "5265": {
      "fn": "PolicyManager.ping",
      "offset": [
        15740,
        15774
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "5268": {
      "fn": "PolicyManager.ping",
      "offset": [
        15740,
        15774
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5269": {
      "fn": "PolicyManager.ping",
      "offset": [
        15740,
        15774
      ],
      "op": "AND",
      "path": "12"
    },
    "5270": {
      "fn": "PolicyManager.ping",
      "offset": [
        15740,
        15774
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5272": {
      "fn": "PolicyManager.ping",
      "offset": [
        15740,
        15774
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5273": {
      "fn": "PolicyManager.ping",
      "offset": [
        15740,
        15774
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5274": {
      "fn": "PolicyManager.ping",
      "offset": [
        15740,
        15774
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5275": {
      "fn": "PolicyManager.ping",
      "offset": [
        15740,
        15753
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5277": {
      "fn": "PolicyManager.ping",
      "offset": [
        15740,
        15753
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5278": {
      "fn": "PolicyManager.ping",
      "offset": [
        15740,
        15753
      ],
      "op": "ADD",
      "path": "12"
    },
    "5279": {
      "fn": "PolicyManager.ping",
      "offset": [
        15740,
        15774
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5281": {
      "fn": "PolicyManager.ping",
      "offset": [
        15740,
        15774
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5282": {
      "fn": "PolicyManager.ping",
      "offset": [
        15740,
        15774
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5284": {
      "fn": "PolicyManager.ping",
      "offset": [
        15740,
        15774
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5285": {
      "fn": "PolicyManager.ping",
      "offset": [
        15740,
        15774
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5286": {
      "fn": "PolicyManager.ping",
      "offset": [
        15740,
        15774
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5287": {
      "branch": 222,
      "fn": "PolicyManager.ping",
      "offset": [
        15740,
        15779
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5288": {
      "fn": "PolicyManager.ping",
      "offset": [
        15712,
        15779
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5289": {
      "fn": "PolicyManager.ping",
      "offset": [
        15708,
        15860
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5290": {
      "fn": "PolicyManager.ping",
      "offset": [
        15708,
        15860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14CD"
    },
    "5293": {
      "branch": 222,
      "fn": "PolicyManager.ping",
      "offset": [
        15708,
        15860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5294": {
      "fn": "PolicyManager.ping",
      "offset": [
        15795,
        15829
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 54,
      "value": "0xFFFF"
    },
    "5297": {
      "fn": "PolicyManager.ping",
      "offset": [
        15795,
        15829
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5298": {
      "fn": "PolicyManager.ping",
      "offset": [
        15795,
        15829
      ],
      "op": "AND",
      "path": "12"
    },
    "5299": {
      "fn": "PolicyManager.ping",
      "offset": [
        15795,
        15829
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5301": {
      "fn": "PolicyManager.ping",
      "offset": [
        15795,
        15829
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5302": {
      "fn": "PolicyManager.ping",
      "offset": [
        15795,
        15829
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5303": {
      "fn": "PolicyManager.ping",
      "offset": [
        15795,
        15829
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5304": {
      "fn": "PolicyManager.ping",
      "offset": [
        15795,
        15808
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5306": {
      "fn": "PolicyManager.ping",
      "offset": [
        15795,
        15808
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5307": {
      "fn": "PolicyManager.ping",
      "offset": [
        15795,
        15808
      ],
      "op": "ADD",
      "path": "12"
    },
    "5308": {
      "fn": "PolicyManager.ping",
      "offset": [
        15795,
        15829
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5310": {
      "fn": "PolicyManager.ping",
      "offset": [
        15795,
        15829
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5311": {
      "fn": "PolicyManager.ping",
      "offset": [
        15795,
        15829
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5313": {
      "fn": "PolicyManager.ping",
      "offset": [
        15795,
        15829
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5314": {
      "fn": "PolicyManager.ping",
      "offset": [
        15795,
        15829
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5319": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5321": {
      "op": "SHL"
    },
    "5322": {
      "op": "SUB"
    },
    "5323": {
      "fn": "PolicyManager.ping",
      "offset": [
        15795,
        15849
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5324": {
      "fn": "PolicyManager.ping",
      "offset": [
        15795,
        15849
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5325": {
      "fn": "PolicyManager.ping",
      "offset": [
        15708,
        15860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5326": {
      "fn": "PolicyManager.ping",
      "offset": [
        15233,
        15866
      ],
      "op": "POP",
      "path": "12"
    },
    "5327": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "POP",
      "path": "12"
    },
    "5328": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "POP",
      "path": "12"
    },
    "5329": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "POP",
      "path": "12"
    },
    "5330": {
      "fn": "PolicyManager.ping",
      "offset": [
        15046,
        15866
      ],
      "op": "POP",
      "path": "12"
    },
    "5331": {
      "fn": "PolicyManager.ping",
      "jump": "o",
      "offset": [
        15046,
        15866
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5332": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31249,
        33488
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5333": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31325,
        31355
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 55,
      "value": "0x14DD"
    },
    "5336": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31343,
        31354
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5337": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31325,
        31342
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29F2"
    },
    "5340": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        31325,
        31355
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5341": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31325,
        31355
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5342": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31439,
        31453
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 56,
      "value": "0x8"
    },
    "5344": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31439,
        31453
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5349": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5351": {
      "op": "SHL"
    },
    "5352": {
      "op": "SUB"
    },
    "5353": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31439,
        31453
      ],
      "op": "AND",
      "path": "12"
    },
    "5354": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31380,
        31434
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14FA"
    },
    "5357": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31392,
        31403
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5358": {
      "op": "PUSH4",
      "value": "0x65A9AF87"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5365": {
      "op": "SHL"
    },
    "5366": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31380,
        31391
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A4C"
    },
    "5369": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        31380,
        31434
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5370": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31380,
        31434
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5375": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5377": {
      "op": "SHL"
    },
    "5378": {
      "op": "SUB"
    },
    "5379": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31373,
        31453
      ],
      "op": "AND",
      "path": "12"
    },
    "5380": {
      "branch": 223,
      "fn": "PolicyManager.verifyState",
      "offset": [
        31373,
        31453
      ],
      "op": "EQ",
      "path": "12"
    },
    "5381": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31365,
        31454
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x150D"
    },
    "5384": {
      "branch": 223,
      "fn": "PolicyManager.verifyState",
      "offset": [
        31365,
        31454
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5385": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31365,
        31454
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5387": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31365,
        31454
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5388": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31365,
        31454
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5389": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31365,
        31454
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5390": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31465,
        31490
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5392": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31493,
        31529
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1518"
    },
    "5395": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31517,
        31528
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5396": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31493,
        31516
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A65"
    },
    "5399": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        31493,
        31529
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5400": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31493,
        31529
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5401": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31567,
        31583
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 57
    },
    "5402": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31567,
        31583
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5403": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31547,
        31559
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "5405": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31547,
        31563
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5406": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31465,
        31529
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5407": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31465,
        31529
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5408": {
      "op": "POP"
    },
    "5409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5413": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5415": {
      "op": "SHL"
    },
    "5416": {
      "op": "SUB"
    },
    "5417": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31547,
        31563
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5418": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31547,
        31563
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5419": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31547,
        31563
      ],
      "op": "AND",
      "path": "12"
    },
    "5420": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31547,
        31583
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5421": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31547,
        31583
      ],
      "op": "AND",
      "path": "12"
    },
    "5422": {
      "branch": 224,
      "fn": "PolicyManager.verifyState",
      "offset": [
        31547,
        31583
      ],
      "op": "EQ",
      "path": "12"
    },
    "5423": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31547,
        31653
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5424": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31547,
        31653
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5425": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31547,
        31653
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1553"
    },
    "5428": {
      "branch": 224,
      "fn": "PolicyManager.verifyState",
      "offset": [
        31547,
        31653
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5429": {
      "op": "POP"
    },
    "5430": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31628,
        31653
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5432": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31628,
        31653
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5433": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31628,
        31653
      ],
      "op": "ADD",
      "path": "12"
    },
    "5434": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31628,
        31653
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5435": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31599,
        31611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "5437": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31599,
        31624
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5442": {
      "op": "SHL"
    },
    "5443": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31599,
        31624
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5444": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31599,
        31624
      ],
      "op": "DIV",
      "path": "12"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5449": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5451": {
      "op": "SHL"
    },
    "5452": {
      "op": "SUB"
    },
    "5453": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31599,
        31624
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5454": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31599,
        31624
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5455": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31599,
        31624
      ],
      "op": "AND",
      "path": "12"
    },
    "5456": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31599,
        31653
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5457": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31599,
        31653
      ],
      "op": "AND",
      "path": "12"
    },
    "5458": {
      "branch": 225,
      "fn": "PolicyManager.verifyState",
      "offset": [
        31599,
        31653
      ],
      "op": "EQ",
      "path": "12"
    },
    "5459": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31547,
        31653
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5460": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31547,
        31705
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5461": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31547,
        31705
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5462": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31547,
        31705
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1571"
    },
    "5465": {
      "branch": 225,
      "fn": "PolicyManager.verifyState",
      "offset": [
        31547,
        31705
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5466": {
      "op": "POP"
    },
    "5467": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31689,
        31705
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5469": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31689,
        31705
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5470": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31689,
        31705
      ],
      "op": "ADD",
      "path": "12"
    },
    "5471": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31689,
        31705
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5472": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31669,
        31685
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "5474": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31669,
        31685
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5479": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5481": {
      "op": "SHL"
    },
    "5482": {
      "op": "SUB"
    },
    "5483": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31669,
        31685
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5484": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31669,
        31685
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5485": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31669,
        31685
      ],
      "op": "AND",
      "path": "12"
    },
    "5486": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31669,
        31705
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5487": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31669,
        31705
      ],
      "op": "AND",
      "path": "12"
    },
    "5488": {
      "branch": 226,
      "fn": "PolicyManager.verifyState",
      "offset": [
        31669,
        31705
      ],
      "op": "EQ",
      "path": "12"
    },
    "5489": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31547,
        31705
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5490": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31539,
        31706
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x157A"
    },
    "5493": {
      "branch": 226,
      "fn": "PolicyManager.verifyState",
      "offset": [
        31539,
        31706
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5494": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31539,
        31706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5496": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31539,
        31706
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5497": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31539,
        31706
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5498": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31539,
        31706
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5499": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31717,
        31738
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5501": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31741,
        31769
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5502": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31741,
        31769
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5503": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31741,
        31769
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5504": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31741,
        31749
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5506": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31741,
        31769
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5508": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31741,
        31769
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5509": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31741,
        31769
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EC"
    },
    "5542": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31741,
        31769
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5543": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31809,
        31859
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15B0"
    },
    "5546": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31827,
        31838
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5547": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31717,
        31738
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5548": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31809,
        31826
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A96"
    },
    "5551": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        31809,
        31859
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5552": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31809,
        31859
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5553": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31902,
        31916
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 58
    },
    "5554": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31902,
        31916
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5555": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        31898
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5557": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        31898
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5558": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        31898
      ],
      "op": "ADD",
      "path": "12"
    },
    "5559": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        31898
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5560": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        31898
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5561": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        31898
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5562": {
      "op": "POP"
    },
    "5563": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31902,
        31916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "5566": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31902,
        31916
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5567": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31902,
        31916
      ],
      "op": "DIV",
      "path": "12"
    },
    "5568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5574": {
      "op": "SHL"
    },
    "5575": {
      "op": "SUB"
    },
    "5576": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31902,
        31916
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5577": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31902,
        31916
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5578": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31902,
        31916
      ],
      "op": "AND",
      "path": "12"
    },
    "5579": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        31916
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5580": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        31916
      ],
      "op": "AND",
      "path": "12"
    },
    "5581": {
      "branch": 227,
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        31916
      ],
      "op": "EQ",
      "path": "12"
    },
    "5582": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        31967
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5583": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        31967
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5584": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        31967
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15ED"
    },
    "5587": {
      "branch": 227,
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        31967
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5588": {
      "op": "POP"
    },
    "5589": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31955,
        31967
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5591": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31955,
        31967
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5592": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31955,
        31967
      ],
      "op": "ADD",
      "path": "12"
    },
    "5593": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31955,
        31967
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5594": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31932,
        31951
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5596": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31932,
        31951
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5597": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31932,
        31951
      ],
      "op": "ADD",
      "path": "12"
    },
    "5598": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31932,
        31951
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5605": {
      "op": "SHL"
    },
    "5606": {
      "op": "SUB"
    },
    "5607": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31932,
        31967
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5608": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31932,
        31967
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5609": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31932,
        31967
      ],
      "op": "AND",
      "path": "12"
    },
    "5610": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31955,
        31967
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5611": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31955,
        31967
      ],
      "op": "AND",
      "path": "12"
    },
    "5612": {
      "branch": 228,
      "fn": "PolicyManager.verifyState",
      "offset": [
        31932,
        31967
      ],
      "op": "EQ",
      "path": "12"
    },
    "5613": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        31967
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5614": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32022
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5615": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32022
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5616": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32022
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x160D"
    },
    "5619": {
      "branch": 228,
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32022
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5620": {
      "op": "POP"
    },
    "5621": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32008,
        32022
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "5623": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32008,
        32022
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5624": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32008,
        32022
      ],
      "op": "ADD",
      "path": "12"
    },
    "5625": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32008,
        32022
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5626": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31983,
        32004
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "5628": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31983,
        32004
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5629": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31983,
        32004
      ],
      "op": "ADD",
      "path": "12"
    },
    "5630": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31983,
        32004
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5635": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5637": {
      "op": "SHL"
    },
    "5638": {
      "op": "SUB"
    },
    "5639": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31983,
        32022
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5640": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31983,
        32022
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5641": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31983,
        32022
      ],
      "op": "AND",
      "path": "12"
    },
    "5642": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32008,
        32022
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5643": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32008,
        32022
      ],
      "op": "AND",
      "path": "12"
    },
    "5644": {
      "branch": 229,
      "fn": "PolicyManager.verifyState",
      "offset": [
        31983,
        32022
      ],
      "op": "EQ",
      "path": "12"
    },
    "5645": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32022
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5646": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32091
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5647": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32091
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5648": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32091
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1634"
    },
    "5651": {
      "branch": 229,
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32091
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5652": {
      "op": "POP"
    },
    "5653": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32070,
        32091
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "5655": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32070,
        32091
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5656": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32070,
        32091
      ],
      "op": "ADD",
      "path": "12"
    },
    "5657": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32070,
        32091
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5658": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32038,
        32066
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "5660": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32038,
        32066
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5661": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32038,
        32066
      ],
      "op": "ADD",
      "path": "12"
    },
    "5662": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32038,
        32066
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5667": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5669": {
      "op": "SHL"
    },
    "5670": {
      "op": "SUB"
    },
    "5671": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32038,
        32091
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5672": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32038,
        32091
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5673": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32038,
        32091
      ],
      "op": "AND",
      "path": "12"
    },
    "5674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5676": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5678": {
      "op": "SHL"
    },
    "5679": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32070,
        32091
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5680": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32070,
        32091
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5681": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32070,
        32091
      ],
      "op": "DIV",
      "path": "12"
    },
    "5682": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32070,
        32091
      ],
      "op": "AND",
      "path": "12"
    },
    "5683": {
      "branch": 230,
      "fn": "PolicyManager.verifyState",
      "offset": [
        32038,
        32091
      ],
      "op": "EQ",
      "path": "12"
    },
    "5684": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32091
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5685": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32156
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5686": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32156
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5687": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32156
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x165B"
    },
    "5690": {
      "branch": 230,
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32156
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5691": {
      "op": "POP"
    },
    "5692": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32137,
        32156
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "5694": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32137,
        32156
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5695": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32137,
        32156
      ],
      "op": "ADD",
      "path": "12"
    },
    "5696": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32137,
        32156
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5697": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32107,
        32133
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA0"
    },
    "5699": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32107,
        32133
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5700": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32107,
        32133
      ],
      "op": "ADD",
      "path": "12"
    },
    "5701": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32107,
        32133
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5706": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5708": {
      "op": "SHL"
    },
    "5709": {
      "op": "SUB"
    },
    "5710": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32107,
        32156
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5711": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32107,
        32156
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5712": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32107,
        32156
      ],
      "op": "AND",
      "path": "12"
    },
    "5713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5715": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5717": {
      "op": "SHL"
    },
    "5718": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32137,
        32156
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5719": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32137,
        32156
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5720": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32137,
        32156
      ],
      "op": "DIV",
      "path": "12"
    },
    "5721": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32137,
        32156
      ],
      "op": "AND",
      "path": "12"
    },
    "5722": {
      "branch": 231,
      "fn": "PolicyManager.verifyState",
      "offset": [
        32107,
        32156
      ],
      "op": "EQ",
      "path": "12"
    },
    "5723": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32156
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5724": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32213
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5725": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32213
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5726": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32213
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1671"
    },
    "5729": {
      "branch": 231,
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32213
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5730": {
      "op": "POP"
    },
    "5731": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32198,
        32213
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5732": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32198,
        32213
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5733": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32172,
        32194
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5734": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32172,
        32194
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5735": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32172,
        32213
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5736": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32172,
        32213
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5737": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32198,
        32213
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "5739": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32198,
        32213
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5740": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32198,
        32213
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5741": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32198,
        32213
      ],
      "op": "AND",
      "path": "12"
    },
    "5742": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32172,
        32213
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5743": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32172,
        32213
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5744": {
      "branch": 232,
      "fn": "PolicyManager.verifyState",
      "offset": [
        32172,
        32213
      ],
      "op": "EQ",
      "path": "12"
    },
    "5745": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31877,
        32213
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5746": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31869,
        32214
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x167A"
    },
    "5749": {
      "branch": 232,
      "fn": "PolicyManager.verifyState",
      "offset": [
        31869,
        32214
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5750": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31869,
        32214
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5752": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31869,
        32214
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5753": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31869,
        32214
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5754": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31869,
        32214
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5755": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32330,
        32349
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 59,
      "value": "0x8"
    },
    "5757": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32330,
        32349
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5758": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32330,
        32349
      ],
      "op": "ADD",
      "path": "12"
    },
    "5759": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32330,
        32356
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5760": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32233,
        32314
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1692"
    },
    "5763": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32245,
        32256
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5764": {
      "op": "PUSH4",
      "value": "0x6BD2AF57"
    },
    "5769": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5771": {
      "op": "SHL"
    },
    "5772": {
      "offset": [
        2965,
        2966
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5774": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32233,
        32244
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B52"
    },
    "5777": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        32233,
        32314
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5778": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32233,
        32314
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5779": {
      "branch": 233,
      "fn": "PolicyManager.verifyState",
      "offset": [
        32233,
        32356
      ],
      "op": "EQ",
      "path": "12"
    },
    "5780": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32225,
        32357
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x169C"
    },
    "5783": {
      "branch": 233,
      "fn": "PolicyManager.verifyState",
      "offset": [
        32225,
        32357
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5784": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32225,
        32357
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5786": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32225,
        32357
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5787": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32225,
        32357
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5788": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32225,
        32357
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5789": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32371,
        32390
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "5791": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32371,
        32390
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5792": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32371,
        32390
      ],
      "op": "ADD",
      "path": "12"
    },
    "5793": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32371,
        32397
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5794": {
      "branch": 234,
      "fn": "PolicyManager.verifyState",
      "offset": [
        32371,
        32401
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5795": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32367,
        32881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1729"
    },
    "5798": {
      "branch": 234,
      "fn": "PolicyManager.verifyState",
      "offset": [
        32367,
        32881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5799": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32417,
        32452
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5801": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32461
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5802": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32474
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "5804": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32474
      ],
      "op": "ADD",
      "path": "12"
    },
    "5805": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32475,
        32476
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5807": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5808": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5809": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5810": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "LT",
      "path": "12"
    },
    "5811": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16BE"
    },
    "5814": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5815": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16BE"
    },
    "5818": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A22"
    },
    "5821": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        32455,
        32477
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5822": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5823": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5825": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5826": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5827": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5828": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5830": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5831": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5832": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "5834": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5835": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5836": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "MUL",
      "path": "12"
    },
    "5837": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "ADD",
      "path": "12"
    },
    "5838": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5839": {
      "op": "POP"
    },
    "5840": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32535,
        32614
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16DA"
    },
    "5843": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32579,
        32590
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5844": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5845": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32455,
        32477
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5846": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32535,
        32561
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B6D"
    },
    "5849": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        32535,
        32614
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5850": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32535,
        32614
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5851": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32663,
        32679
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 60
    },
    "5852": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32663,
        32679
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5853": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32636,
        32659
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5854": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32636,
        32659
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5855": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32491,
        32614
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5856": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32491,
        32614
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5857": {
      "op": "POP"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5864": {
      "op": "SHL"
    },
    "5865": {
      "op": "SUB"
    },
    "5866": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32636,
        32679
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5867": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32636,
        32679
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5868": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32636,
        32679
      ],
      "op": "AND",
      "path": "12"
    },
    "5869": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32663,
        32679
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5870": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32663,
        32679
      ],
      "op": "AND",
      "path": "12"
    },
    "5871": {
      "branch": 235,
      "fn": "PolicyManager.verifyState",
      "offset": [
        32636,
        32679
      ],
      "op": "EQ",
      "path": "12"
    },
    "5872": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32636,
        32778
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5873": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32636,
        32778
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5874": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32636,
        32778
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1702"
    },
    "5877": {
      "branch": 235,
      "fn": "PolicyManager.verifyState",
      "offset": [
        32636,
        32778
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5878": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32636,
        32778
      ],
      "op": "POP",
      "path": "12"
    },
    "5879": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32744,
        32755
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5880": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32744,
        32778
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5882": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32744,
        32778
      ],
      "op": "ADD",
      "path": "12"
    },
    "5883": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32744,
        32778
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5884": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32699,
        32717
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5885": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32699,
        32740
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5887": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32699,
        32740
      ],
      "op": "ADD",
      "path": "12"
    },
    "5888": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32699,
        32740
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5889": {
      "branch": 236,
      "fn": "PolicyManager.verifyState",
      "offset": [
        32699,
        32778
      ],
      "op": "EQ",
      "path": "12"
    },
    "5890": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32636,
        32778
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5891": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32636,
        32869
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5892": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32636,
        32869
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5893": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32636,
        32869
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x171D"
    },
    "5896": {
      "branch": 236,
      "fn": "PolicyManager.verifyState",
      "offset": [
        32636,
        32869
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5897": {
      "op": "POP"
    },
    "5898": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32839,
        32869
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "5900": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32839,
        32869
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5901": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32839,
        32869
      ],
      "op": "ADD",
      "path": "12"
    },
    "5902": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32839,
        32869
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5903": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32798,
        32835
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5905": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32798,
        32835
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5906": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32798,
        32835
      ],
      "op": "ADD",
      "path": "12"
    },
    "5907": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32798,
        32835
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5908": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32839,
        32869
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "5911": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32798,
        32869
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5912": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32798,
        32869
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5913": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32798,
        32869
      ],
      "op": "AND",
      "path": "12"
    },
    "5914": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32839,
        32869
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5915": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32839,
        32869
      ],
      "op": "AND",
      "path": "12"
    },
    "5916": {
      "branch": 237,
      "fn": "PolicyManager.verifyState",
      "offset": [
        32798,
        32869
      ],
      "op": "EQ",
      "path": "12"
    },
    "5917": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32636,
        32869
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5918": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32628,
        32870
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1726"
    },
    "5921": {
      "branch": 237,
      "fn": "PolicyManager.verifyState",
      "offset": [
        32628,
        32870
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5922": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32628,
        32870
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5924": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32628,
        32870
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5925": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32628,
        32870
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5926": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32628,
        32870
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5927": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32403,
        32881
      ],
      "op": "POP",
      "path": "12"
    },
    "5928": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32403,
        32881
      ],
      "op": "POP",
      "path": "12"
    },
    "5929": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32367,
        32881
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5930": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32891,
        32916
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5932": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32919,
        32939
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5933": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32919,
        32939
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5934": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32919,
        32939
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5935": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32919,
        32924
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "5937": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32919,
        32939
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5939": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32919,
        32939
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5940": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32919,
        32939
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BC"
    },
    "5973": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32919,
        32939
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5974": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32989,
        33036
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x175F"
    },
    "5977": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33009,
        33020
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5978": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32891,
        32916
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5979": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32989,
        33008
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2BA9"
    },
    "5982": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        32989,
        33036
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5983": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32989,
        33036
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5984": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33077,
        33089
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 61
    },
    "5985": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33077,
        33089
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5986": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33073
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5987": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33073
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5988": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32949,
        33036
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5989": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        32949,
        33036
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5990": {
      "op": "POP"
    },
    "5991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5995": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5997": {
      "op": "SHL"
    },
    "5998": {
      "op": "SUB"
    },
    "5999": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33089
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6000": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33089
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6001": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33089
      ],
      "op": "AND",
      "path": "12"
    },
    "6002": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33077,
        33089
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6003": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33077,
        33089
      ],
      "op": "AND",
      "path": "12"
    },
    "6004": {
      "branch": 238,
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33089
      ],
      "op": "EQ",
      "path": "12"
    },
    "6005": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33148
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6006": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33148
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6007": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33148
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1787"
    },
    "6010": {
      "branch": 238,
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33148
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6011": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33148
      ],
      "op": "POP",
      "path": "12"
    },
    "6012": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33132,
        33140
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6013": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33132,
        33148
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "6015": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33132,
        33148
      ],
      "op": "ADD",
      "path": "12"
    },
    "6016": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33132,
        33148
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6017": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33105,
        33120
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6018": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33105,
        33128
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6020": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33105,
        33128
      ],
      "op": "ADD",
      "path": "12"
    },
    "6021": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33105,
        33128
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6022": {
      "branch": 239,
      "fn": "PolicyManager.verifyState",
      "offset": [
        33105,
        33148
      ],
      "op": "EQ",
      "path": "12"
    },
    "6023": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33148
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6024": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33227
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6025": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33227
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6026": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33227
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17A6"
    },
    "6029": {
      "branch": 239,
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33227
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6030": {
      "op": "POP"
    },
    "6031": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33201,
        33227
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6032": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33201,
        33227
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6033": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33164,
        33197
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6035": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33164,
        33197
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6036": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33164,
        33197
      ],
      "op": "ADD",
      "path": "12"
    },
    "6037": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33164,
        33197
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6038": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33201,
        33227
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "6041": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33164,
        33227
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6042": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33164,
        33227
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6043": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33164,
        33227
      ],
      "op": "AND",
      "path": "12"
    },
    "6044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6046": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6048": {
      "op": "SHL"
    },
    "6049": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33201,
        33227
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6050": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33201,
        33227
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6051": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33201,
        33227
      ],
      "op": "DIV",
      "path": "12"
    },
    "6052": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33201,
        33227
      ],
      "op": "AND",
      "path": "12"
    },
    "6053": {
      "branch": 240,
      "fn": "PolicyManager.verifyState",
      "offset": [
        33164,
        33227
      ],
      "op": "EQ",
      "path": "12"
    },
    "6054": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33227
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6055": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33292
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6056": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33292
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6057": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33292
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17B9"
    },
    "6060": {
      "branch": 240,
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33292
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6061": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33292
      ],
      "op": "POP",
      "path": "12"
    },
    "6062": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33273,
        33281
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6063": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33273,
        33292
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "6065": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33273,
        33292
      ],
      "op": "ADD",
      "path": "12"
    },
    "6066": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33273,
        33292
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6067": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33243,
        33258
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6068": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33243,
        33269
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "6070": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33243,
        33269
      ],
      "op": "ADD",
      "path": "12"
    },
    "6071": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33243,
        33269
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6072": {
      "branch": 241,
      "fn": "PolicyManager.verifyState",
      "offset": [
        33243,
        33292
      ],
      "op": "EQ",
      "path": "12"
    },
    "6073": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33054,
        33292
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6074": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33046,
        33293
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17C2"
    },
    "6077": {
      "branch": 241,
      "fn": "PolicyManager.verifyState",
      "offset": [
        33046,
        33293
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6078": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33046,
        33293
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6080": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33046,
        33293
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6081": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33046,
        33293
      ],
      "op": "REVERT",
      "path": "12"
    },
    "6082": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33046,
        33293
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6083": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33446,
        33480
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 62,
      "value": "0x17CE"
    },
    "6086": {
      "offset": [
        3023,
        3024
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6088": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33477,
        33479
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "6090": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33446,
        33461
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1340"
    },
    "6093": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        33446,
        33480
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6094": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33446,
        33480
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6095": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33319,
        33441
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17E3"
    },
    "6098": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33331,
        33342
      ],
      "op": "DUP8",
      "path": "12"
    },
    "6099": {
      "op": "PUSH4",
      "value": "0x4740E52D"
    },
    "6104": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6106": {
      "op": "SHL"
    },
    "6107": {
      "offset": [
        3023,
        3024
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6109": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33436,
        33438
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "6111": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33319,
        33330
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2BEB"
    },
    "6114": {
      "fn": "PolicyManager.verifyState",
      "jump": "i",
      "offset": [
        33319,
        33441
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6115": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33319,
        33441
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6116": {
      "branch": 242,
      "fn": "PolicyManager.verifyState",
      "offset": [
        33312,
        33480
      ],
      "op": "EQ",
      "path": "12"
    },
    "6117": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33304,
        33481
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17ED"
    },
    "6120": {
      "branch": 242,
      "fn": "PolicyManager.verifyState",
      "offset": [
        33304,
        33481
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6121": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33304,
        33481
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6123": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33304,
        33481
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6124": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33304,
        33481
      ],
      "op": "REVERT",
      "path": "12"
    },
    "6125": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        33304,
        33481
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6126": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31315,
        33488
      ],
      "op": "POP",
      "path": "12"
    },
    "6127": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31315,
        33488
      ],
      "op": "POP",
      "path": "12"
    },
    "6128": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31315,
        33488
      ],
      "op": "POP",
      "path": "12"
    },
    "6129": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31315,
        33488
      ],
      "op": "POP",
      "path": "12"
    },
    "6130": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31315,
        33488
      ],
      "op": "POP",
      "path": "12"
    },
    "6131": {
      "fn": "PolicyManager.verifyState",
      "offset": [
        31249,
        33488
      ],
      "op": "POP",
      "path": "12"
    },
    "6132": {
      "fn": "PolicyManager.verifyState",
      "jump": "o",
      "offset": [
        31249,
        33488
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6133": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25543,
        25736
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6134": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25680,
        25714
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 63,
      "value": "0x40"
    },
    "6136": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25680,
        25714
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6141": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6143": {
      "op": "SHL"
    },
    "6144": {
      "op": "SUB"
    },
    "6145": {
      "op": "NOT"
    },
    "6146": {
      "op": "DUP4"
    },
    "6147": {
      "op": "AND"
    },
    "6148": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25680,
        25714
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6150": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25680,
        25714
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6151": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25680,
        25714
      ],
      "op": "ADD",
      "path": "12"
    },
    "6152": {
      "op": "MSTORE"
    },
    "6153": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "6166": {
      "op": "NOT"
    },
    "6167": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6169": {
      "op": "DUP4"
    },
    "6170": {
      "op": "SWAP1"
    },
    "6171": {
      "op": "SHL"
    },
    "6172": {
      "op": "AND"
    },
    "6173": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "6175": {
      "op": "DUP3"
    },
    "6176": {
      "op": "ADD"
    },
    "6177": {
      "op": "MSTORE"
    },
    "6178": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25625,
        25632
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6180": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25625,
        25632
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6181": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25651,
        25729
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDA5"
    },
    "6184": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25651,
        25729
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6185": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6187": {
      "op": "ADD"
    },
    "6188": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25680,
        25714
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6190": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25680,
        25714
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6191": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25680,
        25714
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6192": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6194": {
      "op": "NOT"
    },
    "6195": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25680,
        25714
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6196": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25680,
        25714
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6197": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25680,
        25714
      ],
      "op": "SUB",
      "path": "12"
    },
    "6198": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25680,
        25714
      ],
      "op": "ADD",
      "path": "12"
    },
    "6199": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25680,
        25714
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6200": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25680,
        25714
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6201": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25680,
        25714
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6202": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25680,
        25714
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6203": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25680,
        25714
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6204": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "6206": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6208": {
      "op": "SHL"
    },
    "6209": {
      "fn": "PolicyManager.getRevocationHash",
      "offset": [
        25651,
        25679
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C07"
    },
    "6212": {
      "fn": "PolicyManager.getRevocationHash",
      "jump": "i",
      "offset": [
        25651,
        25729
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6213": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5872,
        6314
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6214": {
      "offset": [
        4900,
        4910
      ],
      "op": "CALLER",
      "path": "12"
    },
    "6215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6221": {
      "op": "SHL"
    },
    "6222": {
      "op": "SUB"
    },
    "6223": {
      "offset": [
        4922,
        4928
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "6256": {
      "offset": [
        4900,
        4929
      ],
      "op": "AND",
      "path": "12"
    },
    "6257": {
      "branch": 243,
      "fn": "PolicyManager.migrate",
      "offset": [
        4900,
        4929
      ],
      "op": "EQ",
      "path": "12"
    },
    "6258": {
      "offset": [
        4892,
        4930
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x187A"
    },
    "6261": {
      "branch": 243,
      "offset": [
        4892,
        4930
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6262": {
      "fn": "PolicyManager.migrate",
      "offset": [
        4892,
        4930
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6264": {
      "fn": "PolicyManager.migrate",
      "offset": [
        4892,
        4930
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6265": {
      "fn": "PolicyManager.migrate",
      "offset": [
        4892,
        4930
      ],
      "op": "REVERT",
      "path": "12"
    },
    "6266": {
      "fn": "PolicyManager.migrate",
      "offset": [
        4892,
        4930
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6273": {
      "op": "SHL"
    },
    "6274": {
      "op": "SUB"
    },
    "6275": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5970,
        5982
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6276": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5970,
        5982
      ],
      "op": "AND",
      "path": "12"
    },
    "6277": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5942,
        5967
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6279": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5970,
        5982
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6280": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5970,
        5982
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6281": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5970,
        5982
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6282": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5970,
        5975
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "6284": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5970,
        5982
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6286": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5970,
        5982
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6287": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5970,
        5982
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6289": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5970,
        5982
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6290": {
      "fn": "PolicyManager.migrate",
      "offset": [
        5970,
        5982
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6291": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6174,
        6192
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 64,
      "value": "0x189A"
    },
    "6294": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6174,
        6190
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9E9"
    },
    "6297": {
      "fn": "PolicyManager.migrate",
      "jump": "i",
      "offset": [
        6174,
        6192
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6298": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6174,
        6192
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6299": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6144,
        6170
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6300": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6144,
        6170
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6301": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6144,
        6192
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "6304": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6144,
        6192
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6305": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6144,
        6192
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6306": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6144,
        6192
      ],
      "op": "AND",
      "path": "12"
    },
    "6307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6309": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6311": {
      "op": "SHL"
    },
    "6312": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6144,
        6170
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6313": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6144,
        6170
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6314": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6144,
        6170
      ],
      "op": "DIV",
      "path": "12"
    },
    "6315": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6144,
        6170
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6316": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6144,
        6170
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6317": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6144,
        6170
      ],
      "op": "AND",
      "path": "12"
    },
    "6318": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6144,
        6192
      ],
      "op": "LT",
      "path": "12"
    },
    "6319": {
      "branch": 244,
      "fn": "PolicyManager.migrate",
      "offset": [
        6144,
        6192
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6320": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6136,
        6193
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x18B8"
    },
    "6323": {
      "branch": 244,
      "fn": "PolicyManager.migrate",
      "offset": [
        6136,
        6193
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6324": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6136,
        6193
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6326": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6136,
        6193
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6327": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6136,
        6193
      ],
      "op": "REVERT",
      "path": "12"
    },
    "6328": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6136,
        6193
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6329": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6250,
        6276
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 65
    },
    "6330": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6250,
        6276
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6331": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6232,
        6277
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x18CE"
    },
    "6334": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6232,
        6277
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6337": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6339": {
      "op": "SHL"
    },
    "6340": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6250,
        6276
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6341": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6250,
        6276
      ],
      "op": "DIV",
      "path": "12"
    },
    "6342": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6250,
        6276
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "6345": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6250,
        6276
      ],
      "op": "AND",
      "path": "12"
    },
    "6346": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6232,
        6249
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E48"
    },
    "6349": {
      "fn": "PolicyManager.migrate",
      "jump": "i",
      "offset": [
        6232,
        6277
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6350": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6232,
        6277
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6351": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6203,
        6277
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6352": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6203,
        6277
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6353": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6203,
        6277
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "6356": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6203,
        6277
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6357": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6203,
        6277
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6358": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6203,
        6277
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6359": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6203,
        6277
      ],
      "op": "AND",
      "path": "12"
    },
    "6360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6362": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6364": {
      "op": "SHL"
    },
    "6365": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6203,
        6277
      ],
      "op": "MUL",
      "path": "12"
    },
    "6366": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "6369": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6371": {
      "op": "SHL"
    },
    "6372": {
      "op": "NOT"
    },
    "6373": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6203,
        6277
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6374": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6203,
        6277
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6375": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6203,
        6277
      ],
      "op": "AND",
      "path": "12"
    },
    "6376": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6203,
        6277
      ],
      "op": "OR",
      "path": "12"
    },
    "6377": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6203,
        6277
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6378": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6203,
        6277
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "6379": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6203,
        6229
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6383": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6287,
        6303
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 66
    },
    "6384": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6287,
        6303
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6385": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6287,
        6303
      ],
      "op": "ADD",
      "path": "12"
    },
    "6386": {
      "fn": "PolicyManager.migrate",
      "offset": [
        6287,
        6307
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "6387": {
      "op": "POP"
    },
    "6388": {
      "fn": "PolicyManager.migrate",
      "jump": "o",
      "offset": [
        5872,
        6314
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6389": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6394": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6396": {
      "op": "SHL"
    },
    "6397": {
      "op": "SUB"
    },
    "6398": {
      "op": "NOT"
    },
    "6399": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29454
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6400": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29454
      ],
      "op": "AND",
      "path": "12"
    },
    "6401": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29317,
        29329
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6403": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29454
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6404": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29454
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6405": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29454
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6406": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29443
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6408": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29454
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6410": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29454
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6411": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29454
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6413": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29454
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6414": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29454
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6415": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29467
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "6417": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29467
      ],
      "op": "ADD",
      "path": "12"
    },
    "6418": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6419": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6420": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29317,
        29329
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6421": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29317,
        29329
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6422": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29317,
        29329
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6423": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29317,
        29329
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6424": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29317,
        29329
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6425": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29317,
        29329
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6426": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29467
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6427": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29468,
        29474
      ],
      "op": "DUP7",
      "path": "12"
    },
    "6428": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29468,
        29474
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6429": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6430": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "LT",
      "path": "12"
    },
    "6431": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x192A"
    },
    "6434": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6435": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x192A"
    },
    "6438": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A22"
    },
    "6441": {
      "fn": "PolicyManager.getArrangementInfo",
      "jump": "i",
      "offset": [
        29435,
        29475
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6442": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6443": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6445": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6446": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6447": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6448": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6450": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6451": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6452": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6453": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "6455": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6456": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6457": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "MUL",
      "path": "12"
    },
    "6458": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29435,
        29475
      ],
      "op": "ADD",
      "path": "12"
    },
    "6459": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29492,
        29501
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 67
    },
    "6460": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29492,
        29501
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6461": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29492,
        29501
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "6463": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29536,
        29563
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 68
    },
    "6464": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29536,
        29563
      ],
      "op": "ADD",
      "path": "12"
    },
    "6465": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29536,
        29563
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6466": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29594,
        29617
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 69,
      "value": "0x2"
    },
    "6468": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29594,
        29617
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6469": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29594,
        29617
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6470": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29594,
        29617
      ],
      "op": "ADD",
      "path": "12"
    },
    "6471": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29594,
        29617
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6478": {
      "op": "SHL"
    },
    "6479": {
      "op": "SUB"
    },
    "6480": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29492,
        29501
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6481": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29492,
        29501
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6482": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29492,
        29501
      ],
      "op": "AND",
      "path": "12"
    },
    "6483": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29492,
        29501
      ],
      "op": "SWAP9",
      "path": "12"
    },
    "6484": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29536,
        29563
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6485": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29536,
        29563
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "6486": {
      "op": "POP"
    },
    "6487": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29594,
        29617
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "6490": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29594,
        29617
      ],
      "op": "AND",
      "path": "12"
    },
    "6491": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29594,
        29617
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "6492": {
      "op": "POP"
    },
    "6493": {
      "fn": "PolicyManager.getArrangementInfo",
      "offset": [
        29105,
        29624
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "6494": {
      "op": "POP"
    },
    "6495": {
      "op": "POP"
    },
    "6496": {
      "op": "POP"
    },
    "6497": {
      "op": "POP"
    },
    "6498": {
      "fn": "PolicyManager.getArrangementInfo",
      "jump": "o",
      "offset": [
        29105,
        29624
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6499": {
      "fn": "PolicyManager.refund",
      "offset": [
        26903,
        27141
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6504": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6506": {
      "op": "SHL"
    },
    "6507": {
      "op": "SUB"
    },
    "6508": {
      "op": "NOT"
    },
    "6509": {
      "fn": "PolicyManager.refund",
      "offset": [
        26981,
        27000
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6510": {
      "fn": "PolicyManager.refund",
      "offset": [
        26981,
        27000
      ],
      "op": "AND",
      "path": "12"
    },
    "6511": {
      "fn": "PolicyManager.refund",
      "offset": [
        26957,
        26978
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6513": {
      "fn": "PolicyManager.refund",
      "offset": [
        26981,
        27000
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6514": {
      "fn": "PolicyManager.refund",
      "offset": [
        26981,
        27000
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6515": {
      "fn": "PolicyManager.refund",
      "offset": [
        26981,
        27000
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6516": {
      "fn": "PolicyManager.refund",
      "offset": [
        26981,
        26989
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6518": {
      "fn": "PolicyManager.refund",
      "offset": [
        26981,
        27000
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6520": {
      "fn": "PolicyManager.refund",
      "offset": [
        26981,
        27000
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6521": {
      "fn": "PolicyManager.refund",
      "offset": [
        26981,
        27000
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6523": {
      "fn": "PolicyManager.refund",
      "offset": [
        26981,
        27000
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6524": {
      "fn": "PolicyManager.refund",
      "offset": [
        26981,
        27000
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6525": {
      "fn": "PolicyManager.refund",
      "offset": [
        27018,
        27030
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 70,
      "value": "0x1"
    },
    "6527": {
      "fn": "PolicyManager.refund",
      "offset": [
        27018,
        27030
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6528": {
      "fn": "PolicyManager.refund",
      "offset": [
        27018,
        27030
      ],
      "op": "ADD",
      "path": "12"
    },
    "6529": {
      "fn": "PolicyManager.refund",
      "offset": [
        27018,
        27030
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6536": {
      "op": "SHL"
    },
    "6537": {
      "op": "SUB"
    },
    "6538": {
      "fn": "PolicyManager.refund",
      "offset": [
        27018,
        27030
      ],
      "op": "AND",
      "path": "12"
    },
    "6539": {
      "fn": "PolicyManager.refund",
      "offset": [
        27034,
        27044
      ],
      "op": "CALLER",
      "path": "12"
    },
    "6540": {
      "fn": "PolicyManager.refund",
      "offset": [
        27018,
        27044
      ],
      "op": "EQ",
      "path": "12"
    },
    "6541": {
      "branch": 245,
      "fn": "PolicyManager.refund",
      "offset": [
        27018,
        27044
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6542": {
      "fn": "PolicyManager.refund",
      "offset": [
        27018,
        27076
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x19A5"
    },
    "6545": {
      "branch": 245,
      "fn": "PolicyManager.refund",
      "offset": [
        27018,
        27076
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6546": {
      "op": "POP"
    },
    "6547": {
      "fn": "PolicyManager.refund",
      "offset": [
        27048,
        27062
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6548": {
      "fn": "PolicyManager.refund",
      "offset": [
        27048,
        27062
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6549": {
      "fn": "PolicyManager.refund",
      "offset": [
        27048,
        27062
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "6552": {
      "fn": "PolicyManager.refund",
      "offset": [
        27048,
        27062
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6553": {
      "fn": "PolicyManager.refund",
      "offset": [
        27048,
        27062
      ],
      "op": "DIV",
      "path": "12"
    },
    "6554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6560": {
      "op": "SHL"
    },
    "6561": {
      "op": "SUB"
    },
    "6562": {
      "fn": "PolicyManager.refund",
      "offset": [
        27048,
        27062
      ],
      "op": "AND",
      "path": "12"
    },
    "6563": {
      "fn": "PolicyManager.refund",
      "offset": [
        27066,
        27076
      ],
      "op": "CALLER",
      "path": "12"
    },
    "6564": {
      "branch": 246,
      "fn": "PolicyManager.refund",
      "offset": [
        27048,
        27076
      ],
      "op": "EQ",
      "path": "12"
    },
    "6565": {
      "fn": "PolicyManager.refund",
      "offset": [
        27018,
        27076
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6566": {
      "fn": "PolicyManager.refund",
      "offset": [
        27010,
        27077
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x19AE"
    },
    "6569": {
      "branch": 246,
      "fn": "PolicyManager.refund",
      "offset": [
        27010,
        27077
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6570": {
      "fn": "PolicyManager.refund",
      "offset": [
        27010,
        27077
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6572": {
      "fn": "PolicyManager.refund",
      "offset": [
        27010,
        27077
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6573": {
      "fn": "PolicyManager.refund",
      "offset": [
        27010,
        27077
      ],
      "op": "REVERT",
      "path": "12"
    },
    "6574": {
      "fn": "PolicyManager.refund",
      "offset": [
        27010,
        27077
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6575": {
      "fn": "PolicyManager.refund",
      "offset": [
        27087,
        27134
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 71,
      "value": "0x19BA"
    },
    "6578": {
      "fn": "PolicyManager.refund",
      "offset": [
        27102,
        27111
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6579": {
      "offset": [
        3023,
        3024
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6581": {
      "fn": "PolicyManager.refund",
      "offset": [
        27128,
        27133
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6582": {
      "fn": "PolicyManager.refund",
      "offset": [
        27087,
        27101
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CE9"
    },
    "6585": {
      "fn": "PolicyManager.refund",
      "jump": "i",
      "offset": [
        27087,
        27134
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6586": {
      "fn": "PolicyManager.refund",
      "offset": [
        27087,
        27134
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6587": {
      "fn": "PolicyManager.refund",
      "offset": [
        27087,
        27134
      ],
      "op": "POP",
      "path": "12"
    },
    "6588": {
      "fn": "PolicyManager.refund",
      "offset": [
        26947,
        27141
      ],
      "op": "POP",
      "path": "12"
    },
    "6589": {
      "fn": "PolicyManager.refund",
      "offset": [
        26903,
        27141
      ],
      "op": "POP",
      "path": "12"
    },
    "6590": {
      "fn": "PolicyManager.refund",
      "jump": "o",
      "offset": [
        26903,
        27141
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6591": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27716,
        27899
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6592": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27796,
        27815
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6594": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27838,
        27892
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 72,
      "value": "0xF00"
    },
    "6597": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27867,
        27876
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6598": {
      "offset": [
        3023,
        3024
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6600": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        27838,
        27866
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2769"
    },
    "6603": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        27838,
        27892
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6604": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33592,
        34458
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6605": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33666,
        33694
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 73,
      "value": "0x19D5"
    },
    "6608": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33686,
        33693
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6609": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33666,
        33685
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EB1"
    },
    "6612": {
      "fn": "PolicyManager.finishUpgrade",
      "jump": "i",
      "offset": [
        33666,
        33694
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6613": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33666,
        33694
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6614": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33709,
        33723
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "6616": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33709,
        33723
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6623": {
      "op": "SHL"
    },
    "6624": {
      "op": "SUB"
    },
    "6625": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33709,
        33723
      ],
      "op": "AND",
      "path": "12"
    },
    "6626": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33705,
        33795
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A02"
    },
    "6629": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33705,
        33795
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6630": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33744,
        33758
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 74,
      "value": "0x8"
    },
    "6632": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33744,
        33784
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6633": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33744,
        33784
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6634": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6643": {
      "op": "NOT"
    },
    "6644": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33744,
        33784
      ],
      "op": "AND",
      "path": "12"
    },
    "6645": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33768,
        33783
      ],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "6646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6650": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6652": {
      "op": "SHL"
    },
    "6653": {
      "op": "SUB"
    },
    "6654": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33744,
        33784
      ],
      "op": "AND",
      "path": "12"
    },
    "6655": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33744,
        33784
      ],
      "op": "OR",
      "path": "12"
    },
    "6656": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33744,
        33784
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6657": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33744,
        33784
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "6658": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33705,
        33795
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6659": {
      "op": "POP"
    },
    "6660": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33908,
        33916
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6662": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33908,
        33936
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6664": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33908,
        33936
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6665": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33908,
        33936
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6666": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33908,
        33936
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6667": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33908,
        33936
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EC"
    },
    "6700": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33946,
        33982
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 75
    },
    "6701": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33946,
        33982
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6702": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33992,
        34004
      ],
      "op": "PUSH32",
      "path": "12",
      "statement": 76,
      "value": "0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3ED"
    },
    "6735": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33992,
        34020
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6736": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33992,
        34020
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6737": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34015,
        34019
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "6738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6744": {
      "op": "SHL"
    },
    "6745": {
      "op": "SUB"
    },
    "6746": {
      "op": "NOT"
    },
    "6747": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33992,
        34020
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6748": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33992,
        34020
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6749": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33992,
        34020
      ],
      "op": "AND",
      "path": "12"
    },
    "6750": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33992,
        34020
      ],
      "op": "OR",
      "path": "12"
    },
    "6751": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33992,
        34020
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6752": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33992,
        34020
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6753": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33992,
        34020
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "6754": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34098,
        34116
      ],
      "op": "PUSH25",
      "path": "12",
      "statement": 77,
      "value": "0x2000000000000000100000000000000000000000000000003"
    },
    "6780": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34030,
        34051
      ],
      "op": "PUSH32",
      "path": "12",
      "statement": 78,
      "value": "0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EE"
    },
    "6813": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34098,
        34116
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "6814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6818": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6820": {
      "op": "SHL"
    },
    "6821": {
      "op": "SUB"
    },
    "6822": {
      "op": "NOT"
    },
    "6823": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34126,
        34148
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 79
    },
    "6824": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34126,
        34148
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6825": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34126,
        34148
      ],
      "op": "AND",
      "path": "12"
    },
    "6826": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33971,
        33981
      ],
      "op": "CALLER",
      "path": "12"
    },
    "6827": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33946,
        33982
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "6830": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33946,
        33982
      ],
      "op": "MUL",
      "path": "12"
    },
    "6831": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6833": {
      "op": "NOT"
    },
    "6834": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34126,
        34148
      ],
      "op": "AND",
      "path": "12"
    },
    "6835": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34126,
        34148
      ],
      "op": "OR",
      "path": "12"
    },
    "6836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6838": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34126,
        34148
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6839": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34126,
        34148
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6840": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34126,
        34148
      ],
      "op": "OR",
      "path": "12"
    },
    "6841": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34126,
        34148
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6842": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34126,
        34148
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6843": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34126,
        34148
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "6844": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        33908,
        33936
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6846": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 80
    },
    "6847": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6848": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "6850": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6851": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "ADD",
      "path": "12"
    },
    "6852": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6853": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6856": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6857": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6858": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6859": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34214,
        34216
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "6861": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6862": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "DUP8",
      "path": "12"
    },
    "6863": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "ADD",
      "path": "12"
    },
    "6864": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6865": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6866": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6867": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34218,
        34220
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x16"
    },
    "6869": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "6870": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6871": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "ADD",
      "path": "12"
    },
    "6872": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "6873": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "DUP6",
      "path": "12"
    },
    "6874": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6875": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34177
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3F4"
    },
    "6908": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6909": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6910": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "6911": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "DUP9",
      "path": "12"
    },
    "6912": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "ADD",
      "path": "12"
    },
    "6913": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6914": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "6915": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6916": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6917": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "6918": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6919": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xDAF6A3DF2E7FE032FABA7F1C41811297BB73983780E1888A846F8AA1A8324D27"
    },
    "6952": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34115,
        34116
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "6954": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6955": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "6956": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "MUL",
      "path": "12"
    },
    "6957": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "6958": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "DUP8",
      "path": "12"
    },
    "6959": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "ADD",
      "path": "12"
    },
    "6960": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6961": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6962": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6963": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "6964": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "AND",
      "path": "12"
    },
    "6965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6971": {
      "op": "SHL"
    },
    "6972": {
      "op": "SUB"
    },
    "6973": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6974": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6975": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "AND",
      "path": "12"
    },
    "6976": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "OR",
      "path": "12"
    },
    "6977": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6978": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "6979": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "6980": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6981": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6982": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xDAF6A3DF2E7FE032FABA7F1C41811297BB73983780E1888A846F8AA1A8324D28"
    },
    "7015": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "DUP6",
      "path": "12"
    },
    "7016": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "ADD",
      "path": "12"
    },
    "7017": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "7018": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7019": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7020": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xDAF6A3DF2E7FE032FABA7F1C41811297BB73983780E1888A846F8AA1A8324D29"
    },
    "7053": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7054": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7055": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "ADD",
      "path": "12"
    },
    "7056": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7057": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7058": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "7061": {
      "op": "NOT"
    },
    "7062": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "AND",
      "path": "12"
    },
    "7063": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34183,
        34221
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "7066": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7067": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "7068": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "AND",
      "path": "12"
    },
    "7069": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7070": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7071": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7072": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "OR",
      "path": "12"
    },
    "7073": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7074": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7075": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34158,
        34222
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "7076": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34260,
        34280
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BC"
    },
    "7109": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34290,
        34308
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 81
    },
    "7110": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34290,
        34308
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7111": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34337,
        34339
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 82,
      "value": "0x21"
    },
    "7113": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34318,
        34334
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BD"
    },
    "7146": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34318,
        34339
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "7147": {
      "op": "PUSH18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "7166": {
      "op": "NOT"
    },
    "7167": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34349,
        34380
      ],
      "op": "AND",
      "path": "12",
      "statement": 83
    },
    "7168": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34349,
        34380
      ],
      "op": "PUSH17",
      "path": "12",
      "value": "0x2C00000000000000000000000000000064"
    },
    "7186": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34349,
        34380
      ],
      "op": "OR",
      "path": "12"
    },
    "7187": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34349,
        34380
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7188": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34349,
        34380
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "7189": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34390,
        34411
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 84
    },
    "7190": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34390,
        34411
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7191": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34390,
        34407
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746C0"
    },
    "7224": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34390,
        34411
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7225": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34390,
        34411
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7226": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34414,
        34416
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x37"
    },
    "7228": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34390,
        34411
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x952B799CF669BEA82D5C90B8E8004C707505141B802E28ECFB2A120A84CC5185"
    },
    "7261": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34390,
        34416
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "7262": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34448,
        34451
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 85,
      "value": "0x309"
    },
    "7265": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34426,
        34445
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BE"
    },
    "7298": {
      "fn": "PolicyManager.finishUpgrade",
      "offset": [
        34426,
        34451
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "7299": {
      "fn": "PolicyManager.finishUpgrade",
      "jump": "o",
      "offset": [
        33592,
        34458
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7300": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "7301": {
      "fn": "Ownable.isOwner",
      "offset": [
        1053,
        1057
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "7303": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "7304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7310": {
      "op": "SHL"
    },
    "7311": {
      "op": "SUB"
    },
    "7312": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "AND",
      "path": "34"
    },
    "7313": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "34"
    },
    "7314": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1096
      ],
      "op": "EQ",
      "path": "34"
    },
    "7315": {
      "offset": [
        889,
        907
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x1C9B"
    },
    "7318": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "7319": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "7321": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "DUP1",
      "path": "34"
    },
    "7322": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "REVERT",
      "path": "34"
    },
    "7323": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "7324": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1769,
        1797
      ],
      "op": "PUSH2",
      "path": "34",
      "statement": 86,
      "value": "0x1CA4"
    },
    "7327": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1788,
        1796
      ],
      "op": "DUP2",
      "path": "34"
    },
    "7328": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1769,
        1787
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x2F04"
    },
    "7331": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1769,
        1797
      ],
      "op": "JUMP",
      "path": "34"
    },
    "7332": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1769,
        1797
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "7333": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "POP",
      "path": "34"
    },
    "7334": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMP",
      "path": "34"
    },
    "7335": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        25970,
        26269
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7336": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26082,
        26094
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7338": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26097,
        26132
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CB3"
    },
    "7341": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26115,
        26124
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7342": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26126,
        26131
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7343": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26097,
        26114
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17F5"
    },
    "7346": {
      "fn": "PolicyManager.checkOwnerSignature",
      "jump": "i",
      "offset": [
        26097,
        26132
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7347": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26097,
        26132
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7348": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26082,
        26132
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7349": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26082,
        26132
      ],
      "op": "POP",
      "path": "12"
    },
    "7350": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26142,
        26159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7352": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26162,
        26205
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CC1"
    },
    "7355": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26188,
        26192
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7356": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26194,
        26204
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7357": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26162,
        26187
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F72"
    },
    "7360": {
      "fn": "PolicyManager.checkOwnerSignature",
      "jump": "i",
      "offset": [
        26162,
        26205
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7361": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26162,
        26205
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7362": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26142,
        26205
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7363": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26142,
        26205
      ],
      "op": "POP",
      "path": "12"
    },
    "7364": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26252,
        26261
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 87
    },
    "7365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7371": {
      "op": "SHL"
    },
    "7372": {
      "op": "SUB"
    },
    "7373": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26223,
        26261
      ],
      "op": "AND",
      "path": "12"
    },
    "7374": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26223,
        26248
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CD6"
    },
    "7377": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26238,
        26247
      ],
      "op": "DUP7",
      "path": "12"
    },
    "7378": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26223,
        26237
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD55"
    },
    "7381": {
      "fn": "PolicyManager.checkOwnerSignature",
      "jump": "i",
      "offset": [
        26223,
        26248
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7382": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26223,
        26248
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7389": {
      "op": "SHL"
    },
    "7390": {
      "op": "SUB"
    },
    "7391": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26223,
        26261
      ],
      "op": "AND",
      "path": "12"
    },
    "7392": {
      "branch": 247,
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26223,
        26261
      ],
      "op": "EQ",
      "path": "12"
    },
    "7393": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26215,
        26262
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14CD"
    },
    "7396": {
      "branch": 247,
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26215,
        26262
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7397": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26215,
        26262
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7399": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26215,
        26262
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7400": {
      "fn": "PolicyManager.checkOwnerSignature",
      "offset": [
        26215,
        26262
      ],
      "op": "REVERT",
      "path": "12"
    },
    "7401": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19794,
        23483
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7406": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7408": {
      "op": "SHL"
    },
    "7409": {
      "op": "SUB"
    },
    "7410": {
      "op": "NOT"
    },
    "7411": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19981,
        20000
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7412": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19981,
        20000
      ],
      "op": "AND",
      "path": "12"
    },
    "7413": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19897,
        19916
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7415": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19981,
        20000
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7416": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19981,
        20000
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7417": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19981,
        20000
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7418": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19981,
        19989
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7420": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19981,
        20000
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7422": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19981,
        20000
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7423": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19981,
        20000
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7425": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19981,
        20000
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7426": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19981,
        20000
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7427": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20019,
        20034
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 88
    },
    "7428": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20019,
        20034
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7429": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20019,
        20034
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "7431": {
      "branch": 248,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20019,
        20034
      ],
      "op": "AND",
      "path": "12"
    },
    "7432": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20018,
        20034
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7433": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20018,
        20077
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7434": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20018,
        20077
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7435": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20018,
        20077
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D30"
    },
    "7438": {
      "branch": 248,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20018,
        20077
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7439": {
      "op": "POP"
    },
    "7440": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20063,
        20077
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "7442": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20063,
        20077
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7443": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20038,
        20059
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "7445": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20038,
        20059
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7446": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20038,
        20059
      ],
      "op": "ADD",
      "path": "12"
    },
    "7447": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20038,
        20059
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7452": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7454": {
      "op": "SHL"
    },
    "7455": {
      "op": "SUB"
    },
    "7456": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20063,
        20077
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7457": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20063,
        20077
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7458": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20063,
        20077
      ],
      "op": "AND",
      "path": "12"
    },
    "7459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7461": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7463": {
      "op": "SHL"
    },
    "7464": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20038,
        20059
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7465": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20038,
        20059
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7466": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20038,
        20059
      ],
      "op": "DIV",
      "path": "12"
    },
    "7467": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20038,
        20059
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7468": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20038,
        20059
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7469": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20038,
        20059
      ],
      "op": "AND",
      "path": "12"
    },
    "7470": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20038,
        20077
      ],
      "op": "LT",
      "path": "12"
    },
    "7471": {
      "branch": 249,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20038,
        20077
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7472": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20018,
        20077
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7473": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20010,
        20078
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D39"
    },
    "7476": {
      "branch": 249,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20010,
        20078
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7477": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20010,
        20078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7479": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20010,
        20078
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7480": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20010,
        20078
      ],
      "op": "REVERT",
      "path": "12"
    },
    "7481": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20010,
        20078
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7482": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20114,
        20133
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "7484": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20114,
        20133
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7485": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20114,
        20133
      ],
      "op": "ADD",
      "path": "12"
    },
    "7486": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20114,
        20133
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7487": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20088,
        20104
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7489": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20088,
        20104
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7490": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20114,
        20152
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D82"
    },
    "7493": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20114,
        20152
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7494": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20136,
        20152
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "7527": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20114,
        20152
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "7532": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20114,
        20152
      ],
      "op": "AND",
      "path": "12"
    },
    "7533": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20114,
        20152
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7536": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7538": {
      "op": "SHL"
    },
    "7539": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20114,
        20133
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7540": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20114,
        20133
      ],
      "op": "DIV",
      "path": "12"
    },
    "7541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7545": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7547": {
      "op": "SHL"
    },
    "7548": {
      "op": "SUB"
    },
    "7549": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20114,
        20133
      ],
      "op": "AND",
      "path": "12"
    },
    "7550": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20114,
        20152
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3994"
    },
    "7553": {
      "fn": "PolicyManager.refundInternal",
      "jump": "i",
      "offset": [
        20114,
        20152
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7554": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20114,
        20152
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7555": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20107,
        20157
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D8D"
    },
    "7558": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20107,
        20157
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7559": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20156,
        20157
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "7561": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20107,
        20157
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39BA"
    },
    "7564": {
      "fn": "PolicyManager.refundInternal",
      "jump": "i",
      "offset": [
        20107,
        20157
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7565": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20107,
        20157
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7566": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20192,
        20211
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "7568": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20192,
        20211
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7569": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20192,
        20211
      ],
      "op": "ADD",
      "path": "12"
    },
    "7570": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20192,
        20218
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7571": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20088,
        20157
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7572": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20088,
        20157
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7573": {
      "op": "POP"
    },
    "7574": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20167,
        20189
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7576": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20251,
        22668
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7577": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20262,
        20281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "7579": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20262,
        20281
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7580": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20262,
        20281
      ],
      "op": "ADD",
      "path": "12"
    },
    "7581": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20262,
        20288
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7582": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20258,
        20288
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7583": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20258,
        20288
      ],
      "op": "LT",
      "path": "12"
    },
    "7584": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20251,
        22668
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7585": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20251,
        22668
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2165"
    },
    "7588": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20251,
        22668
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7589": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20309,
        20344
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7591": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20353
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7592": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20366
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "7594": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20366
      ],
      "op": "ADD",
      "path": "12"
    },
    "7595": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20367,
        20368
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7596": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7597": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7598": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7599": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "LT",
      "path": "12"
    },
    "7600": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1DBB"
    },
    "7603": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7604": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1DBB"
    },
    "7607": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A22"
    },
    "7610": {
      "fn": "PolicyManager.refundInternal",
      "jump": "i",
      "offset": [
        20347,
        20369
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7611": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7612": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7614": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7615": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7616": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7617": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7619": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7620": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7621": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7622": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "7624": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7625": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7626": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "MUL",
      "path": "12"
    },
    "7627": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "ADD",
      "path": "12"
    },
    "7628": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20398,
        20414
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7629": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20398,
        20414
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7630": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7631": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20347,
        20369
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7632": {
      "op": "POP"
    },
    "7633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7639": {
      "op": "SHL"
    },
    "7640": {
      "op": "SUB"
    },
    "7641": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20398,
        20414
      ],
      "op": "AND",
      "path": "12"
    },
    "7642": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20432,
        20453
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7643": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20432,
        20453
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7644": {
      "branch": 250,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20432,
        20453
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7645": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20432,
        20496
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E0B"
    },
    "7648": {
      "branch": 250,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20432,
        20496
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7649": {
      "op": "POP"
    },
    "7650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7656": {
      "op": "SHL"
    },
    "7657": {
      "op": "SUB"
    },
    "7658": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20457,
        20479
      ],
      "op": "DUP10",
      "path": "12"
    },
    "7659": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20457,
        20479
      ],
      "op": "AND",
      "path": "12"
    },
    "7660": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20457,
        20479
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7661": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20457,
        20479
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7662": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20457,
        20479
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7663": {
      "branch": 251,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20457,
        20479
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7664": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20457,
        20496
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E0B"
    },
    "7667": {
      "branch": 251,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20457,
        20496
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7668": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20457,
        20496
      ],
      "op": "POP",
      "path": "12"
    },
    "7669": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20492,
        20496
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7676": {
      "op": "SHL"
    },
    "7677": {
      "op": "SUB"
    },
    "7678": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20483,
        20496
      ],
      "op": "AND",
      "path": "12"
    },
    "7679": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20483,
        20488
      ],
      "op": "DUP10",
      "path": "12"
    },
    "7680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7684": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7686": {
      "op": "SHL"
    },
    "7687": {
      "op": "SUB"
    },
    "7688": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20483,
        20496
      ],
      "op": "AND",
      "path": "12"
    },
    "7689": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20483,
        20496
      ],
      "op": "EQ",
      "path": "12"
    },
    "7690": {
      "branch": 252,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20483,
        20496
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7691": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20457,
        20496
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7692": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20428,
        20573
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7693": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20428,
        20573
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E24"
    },
    "7696": {
      "branch": 252,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20428,
        20573
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7697": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20516,
        20532
      ],
      "op": "DUP4",
      "path": "12",
      "statement": 89
    },
    "7698": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20516,
        20532
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E1A"
    },
    "7701": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20516,
        20532
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7702": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20516,
        20532
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A53"
    },
    "7705": {
      "fn": "PolicyManager.refundInternal",
      "jump": "i",
      "offset": [
        20516,
        20532
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7706": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20516,
        20532
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7707": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20516,
        20532
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "7708": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20516,
        20532
      ],
      "op": "POP",
      "path": "12"
    },
    "7709": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20516,
        20532
      ],
      "op": "POP",
      "path": "12"
    },
    "7710": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20550,
        20558
      ],
      "op": "POP",
      "path": "12",
      "statement": 90
    },
    "7711": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20550,
        20558
      ],
      "op": "POP",
      "path": "12"
    },
    "7712": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20550,
        20558
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2153"
    },
    "7715": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20550,
        20558
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7716": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20428,
        20573
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7717": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20586,
        20609
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7719": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20727,
        20768
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 91,
      "value": "0x1E30"
    },
    "7722": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20748,
        20754
      ],
      "op": "DUP8",
      "path": "12"
    },
    "7723": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20756,
        20767
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7724": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20727,
        20747
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3031"
    },
    "7727": {
      "fn": "PolicyManager.refundInternal",
      "jump": "i",
      "offset": [
        20727,
        20768
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7728": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20727,
        20768
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7729": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20677,
        20707
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "7731": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20677,
        20707
      ],
      "op": "DUP7",
      "path": "12"
    },
    "7732": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20677,
        20707
      ],
      "op": "ADD",
      "path": "12"
    },
    "7733": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20623,
        20768
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7734": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20623,
        20768
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7735": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "7738": {
      "op": "NOT"
    },
    "7739": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20623,
        20768
      ],
      "op": "AND",
      "path": "12"
    },
    "7740": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20623,
        20768
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "7743": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20623,
        20768
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7744": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20623,
        20768
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7745": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20623,
        20768
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7746": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20623,
        20768
      ],
      "op": "AND",
      "path": "12"
    },
    "7747": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20623,
        20768
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7748": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20623,
        20768
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7749": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20623,
        20768
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7750": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20623,
        20768
      ],
      "op": "OR",
      "path": "12"
    },
    "7751": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20623,
        20768
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7752": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20623,
        20768
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "7753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7755": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20641,
        20675
      ],
      "op": "DUP6",
      "path": "12"
    },
    "7756": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20641,
        20675
      ],
      "op": "ADD",
      "path": "12"
    },
    "7757": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20623,
        20768
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "7758": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20623,
        20768
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7759": {
      "op": "POP"
    },
    "7760": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20782,
        22053
      ],
      "op": "DUP9",
      "path": "12"
    },
    "7761": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20782,
        22053
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7762": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20782,
        22053
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2037"
    },
    "7765": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20782,
        22053
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7772": {
      "op": "SHL"
    },
    "7773": {
      "op": "SUB"
    },
    "7774": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20846,
        20857
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7775": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20846,
        20857
      ],
      "op": "AND",
      "path": "12"
    },
    "7776": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20818,
        20843
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7778": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20846,
        20857
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7779": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20846,
        20857
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7780": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20846,
        20857
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7781": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20846,
        20851
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "7783": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20846,
        20857
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7785": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20846,
        20857
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7786": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20846,
        20857
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7787": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20846,
        20857
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7788": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20846,
        20857
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7790": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20846,
        20857
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7791": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20846,
        20857
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7792": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20846,
        20857
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7793": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20956,
        20986
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "7795": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20956,
        20986
      ],
      "op": "DUP8",
      "path": "12"
    },
    "7796": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20956,
        20986
      ],
      "op": "ADD",
      "path": "12"
    },
    "7797": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20956,
        20986
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7798": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20956,
        20986
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "7801": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20956,
        20986
      ],
      "op": "AND",
      "path": "12"
    },
    "7802": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21008,
        21045
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7803": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21008,
        21045
      ],
      "op": "DUP6",
      "path": "12"
    },
    "7804": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21008,
        21045
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7805": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21008,
        21025
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7807": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21008,
        21025
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7808": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21008,
        21025
      ],
      "op": "ADD",
      "path": "12"
    },
    "7809": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21008,
        21045
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7810": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21008,
        21045
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7811": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21008,
        21045
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7812": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21008,
        21045
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7813": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21008,
        21045
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7814": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21008,
        21045
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7819": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7821": {
      "op": "SHL"
    },
    "7822": {
      "op": "SUB"
    },
    "7823": {
      "branch": 253,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21008,
        21066
      ],
      "op": "EQ",
      "path": "12"
    },
    "7824": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21004,
        21300
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7825": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21004,
        21300
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1EC6"
    },
    "7828": {
      "branch": 253,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21004,
        21300
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7829": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21146,
        21160
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 92,
      "value": "0x2"
    },
    "7831": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21146,
        21160
      ],
      "op": "DUP10",
      "path": "12"
    },
    "7832": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21146,
        21160
      ],
      "op": "ADD",
      "path": "12"
    },
    "7833": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21146,
        21160
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7834": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21130,
        21162
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1EAB"
    },
    "7837": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21130,
        21162
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7842": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7844": {
      "op": "SHL"
    },
    "7845": {
      "op": "SUB"
    },
    "7846": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21146,
        21160
      ],
      "op": "AND",
      "path": "12"
    },
    "7847": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21130,
        21162
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A6A"
    },
    "7850": {
      "fn": "PolicyManager.refundInternal",
      "jump": "i",
      "offset": [
        21130,
        21162
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7851": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21130,
        21162
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7852": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21090,
        21127
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "7855": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21090,
        21127
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7856": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21090,
        21127
      ],
      "op": "AND",
      "path": "12"
    },
    "7857": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21090,
        21127
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7859": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21090,
        21127
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7860": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21090,
        21127
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7861": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21090,
        21127
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7862": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21090,
        21107
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7864": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21090,
        21107
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7865": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21090,
        21107
      ],
      "op": "ADD",
      "path": "12"
    },
    "7866": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21090,
        21127
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7868": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21090,
        21127
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7869": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21090,
        21127
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7871": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21090,
        21127
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7872": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21090,
        21127
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7873": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21090,
        21162
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "7874": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21004,
        21300
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F02"
    },
    "7877": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21004,
        21300
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7878": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21004,
        21300
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7879": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21265,
        21279
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 93,
      "value": "0x2"
    },
    "7881": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21265,
        21279
      ],
      "op": "DUP10",
      "path": "12"
    },
    "7882": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21265,
        21279
      ],
      "op": "ADD",
      "path": "12"
    },
    "7883": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21265,
        21279
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7884": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21246
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "7887": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21246
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7888": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21246
      ],
      "op": "AND",
      "path": "12"
    },
    "7889": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21265,
        21279
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7891": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21246
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7892": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21246
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7893": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21246
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7894": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21226
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7896": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21226
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7897": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21226
      ],
      "op": "ADD",
      "path": "12"
    },
    "7898": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21246
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7900": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21246
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7901": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21246
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7903": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21246
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7904": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21246
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7905": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21281
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7906": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21281
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7911": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7913": {
      "op": "SHL"
    },
    "7914": {
      "op": "SUB"
    },
    "7915": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21265,
        21279
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7916": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21265,
        21279
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "7917": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21265,
        21279
      ],
      "op": "AND",
      "path": "12"
    },
    "7918": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21265,
        21279
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "7919": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21246
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7920": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21246
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7921": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21265,
        21279
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7922": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1EFC"
    },
    "7925": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21281
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7926": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21265,
        21279
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7927": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21265,
        21279
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7928": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A87"
    },
    "7931": {
      "fn": "PolicyManager.refundInternal",
      "jump": "i",
      "offset": [
        21209,
        21281
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7932": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7933": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21281
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7934": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21281
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "7935": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21209,
        21281
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "7936": {
      "op": "POP"
    },
    "7937": {
      "op": "POP"
    },
    "7938": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21004,
        21300
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7939": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21321,
        21349
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "7942": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21321,
        21349
      ],
      "op": "DUP9",
      "path": "12"
    },
    "7943": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21321,
        21349
      ],
      "op": "AND",
      "path": "12"
    },
    "7944": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21321,
        21349
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7946": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21321,
        21349
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7947": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21321,
        21349
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7948": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21321,
        21349
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7949": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21321,
        21338
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7951": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21321,
        21338
      ],
      "op": "DUP4",
      "path": "12"
    },
    "7952": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21321,
        21338
      ],
      "op": "ADD",
      "path": "12"
    },
    "7953": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21321,
        21349
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7955": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21321,
        21349
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7956": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21321,
        21349
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7958": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21321,
        21349
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7959": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21321,
        21349
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "7960": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21321,
        21349
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7965": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7967": {
      "op": "SHL"
    },
    "7968": {
      "op": "SUB"
    },
    "7969": {
      "branch": 254,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21321,
        21370
      ],
      "op": "EQ",
      "path": "12"
    },
    "7970": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21317,
        21585
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7971": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21317,
        21585
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F52"
    },
    "7974": {
      "branch": 254,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21317,
        21585
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7975": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21440,
        21454
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 94,
      "value": "0x2"
    },
    "7977": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21440,
        21454
      ],
      "op": "DUP10",
      "path": "12"
    },
    "7978": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21440,
        21454
      ],
      "op": "ADD",
      "path": "12"
    },
    "7979": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21440,
        21454
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7980": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21394,
        21422
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "7983": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21394,
        21422
      ],
      "op": "DUP10",
      "path": "12"
    },
    "7984": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21394,
        21422
      ],
      "op": "AND",
      "path": "12"
    },
    "7985": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21440,
        21454
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7987": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21394,
        21422
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7988": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21394,
        21422
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7989": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21394,
        21422
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7990": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21394,
        21411
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7992": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21394,
        21411
      ],
      "op": "DUP5",
      "path": "12"
    },
    "7993": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21394,
        21411
      ],
      "op": "ADD",
      "path": "12"
    },
    "7994": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21394,
        21422
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "7996": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21394,
        21422
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7997": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21394,
        21422
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7999": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21394,
        21422
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8000": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21394,
        21422
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8005": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8007": {
      "op": "SHL"
    },
    "8008": {
      "op": "SUB"
    },
    "8009": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21440,
        21454
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8010": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21440,
        21454
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8011": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21440,
        21454
      ],
      "op": "AND",
      "path": "12"
    },
    "8012": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21394,
        21456
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8013": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21394,
        21456
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8014": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21317,
        21585
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F8E"
    },
    "8017": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21317,
        21585
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8018": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21317,
        21585
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8019": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21550,
        21564
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 95,
      "value": "0x2"
    },
    "8021": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21550,
        21564
      ],
      "op": "DUP10",
      "path": "12"
    },
    "8022": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21550,
        21564
      ],
      "op": "ADD",
      "path": "12"
    },
    "8023": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21550,
        21564
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8024": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21531
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "8027": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21531
      ],
      "op": "DUP10",
      "path": "12"
    },
    "8028": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21531
      ],
      "op": "AND",
      "path": "12"
    },
    "8029": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21550,
        21564
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8031": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21531
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8032": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21531
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8033": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21531
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8034": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21520
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8036": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21520
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8037": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21520
      ],
      "op": "ADD",
      "path": "12"
    },
    "8038": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21531
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8040": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21531
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8041": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21531
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8043": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21531
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8044": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21531
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8045": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21566
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8046": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21566
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8051": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8053": {
      "op": "SHL"
    },
    "8054": {
      "op": "SUB"
    },
    "8055": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21550,
        21564
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8056": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21550,
        21564
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "8057": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21550,
        21564
      ],
      "op": "AND",
      "path": "12"
    },
    "8058": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21550,
        21564
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "8059": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21531
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8060": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21531
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8061": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21550,
        21564
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8062": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21566
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F88"
    },
    "8065": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21566
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8066": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21550,
        21564
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8067": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21550,
        21564
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8068": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21566
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3AC6"
    },
    "8071": {
      "fn": "PolicyManager.refundInternal",
      "jump": "i",
      "offset": [
        21503,
        21566
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8072": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21566
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8073": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21566
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8074": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21566
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8075": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21503,
        21566
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8076": {
      "op": "POP"
    },
    "8077": {
      "op": "POP"
    },
    "8078": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21317,
        21585
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8079": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21659,
        21696
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "8082": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21659,
        21696
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8083": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21659,
        21696
      ],
      "op": "AND",
      "path": "12"
    },
    "8084": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21659,
        21696
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8086": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21659,
        21696
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8087": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21659,
        21696
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8088": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21659,
        21696
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8089": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21659,
        21676
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8091": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21659,
        21676
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8092": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21659,
        21676
      ],
      "op": "ADD",
      "path": "12"
    },
    "8093": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21659,
        21696
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8095": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21659,
        21696
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8096": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21659,
        21696
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8098": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21659,
        21696
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8099": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21659,
        21696
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8100": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21659,
        21696
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8101": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21655,
        21801
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1FC8"
    },
    "8104": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21655,
        21801
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8105": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21725,
        21762
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 96,
      "value": "0xFFFF"
    },
    "8108": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21725,
        21762
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8109": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21725,
        21762
      ],
      "op": "AND",
      "path": "12"
    },
    "8110": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21725,
        21762
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8112": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21725,
        21762
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8113": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21725,
        21762
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8114": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21725,
        21762
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8115": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21725,
        21742
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8117": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21725,
        21742
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8118": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21725,
        21742
      ],
      "op": "ADD",
      "path": "12"
    },
    "8119": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21725,
        21762
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8121": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21725,
        21762
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8122": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21725,
        21762
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8124": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21725,
        21762
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8125": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21725,
        21762
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8130": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8132": {
      "op": "SHL"
    },
    "8133": {
      "op": "SUB"
    },
    "8134": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21725,
        21782
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8135": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21725,
        21782
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8136": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21655,
        21801
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8137": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21822,
        21850
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "8140": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21822,
        21850
      ],
      "op": "DUP9",
      "path": "12"
    },
    "8141": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21822,
        21850
      ],
      "op": "AND",
      "path": "12"
    },
    "8142": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21822,
        21850
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8144": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21822,
        21850
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8145": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21822,
        21850
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8146": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21822,
        21850
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8147": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21822,
        21839
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8149": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21822,
        21839
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8150": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21822,
        21839
      ],
      "op": "ADD",
      "path": "12"
    },
    "8151": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21822,
        21850
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8153": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21822,
        21850
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8154": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21822,
        21850
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8156": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21822,
        21850
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8157": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21822,
        21850
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8158": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21822,
        21850
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8159": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21818,
        21946
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2002"
    },
    "8162": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21818,
        21946
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8163": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21879,
        21907
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 97,
      "value": "0xFFFF"
    },
    "8166": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21879,
        21907
      ],
      "op": "DUP9",
      "path": "12"
    },
    "8167": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21879,
        21907
      ],
      "op": "AND",
      "path": "12"
    },
    "8168": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21879,
        21907
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8170": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21879,
        21907
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8171": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21879,
        21907
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8172": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21879,
        21907
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8173": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21879,
        21896
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8175": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21879,
        21896
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8176": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21879,
        21896
      ],
      "op": "ADD",
      "path": "12"
    },
    "8177": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21879,
        21907
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8179": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21879,
        21907
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8180": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21879,
        21907
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8182": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21879,
        21907
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8183": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21879,
        21907
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8188": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8190": {
      "op": "SHL"
    },
    "8191": {
      "op": "SUB"
    },
    "8192": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21879,
        21927
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8193": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21879,
        21927
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8194": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21818,
        21946
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8195": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22024,
        22038
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 98,
      "value": "0x2"
    },
    "8197": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22024,
        22038
      ],
      "op": "DUP10",
      "path": "12"
    },
    "8198": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22024,
        22038
      ],
      "op": "ADD",
      "path": "12"
    },
    "8199": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22024,
        22038
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8204": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8206": {
      "op": "SHL"
    },
    "8207": {
      "op": "SUB"
    },
    "8208": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22024,
        22038
      ],
      "op": "AND",
      "path": "12"
    },
    "8209": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21990,
        22020
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x201A"
    },
    "8212": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22002,
        22020
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8213": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21990,
        21999
      ],
      "op": "DUP11",
      "path": "12"
    },
    "8214": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21990,
        22020
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39E0"
    },
    "8217": {
      "fn": "PolicyManager.refundInternal",
      "jump": "i",
      "offset": [
        21990,
        22020
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8218": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21990,
        22020
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8219": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21982,
        22021
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "8222": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21982,
        22021
      ],
      "op": "AND",
      "path": "12"
    },
    "8223": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21982,
        22038
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2028"
    },
    "8226": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21982,
        22038
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8227": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21982,
        22038
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8228": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21982,
        22038
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A03"
    },
    "8231": {
      "fn": "PolicyManager.refundInternal",
      "jump": "i",
      "offset": [
        21982,
        22038
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8232": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21982,
        22038
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8233": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21963,
        22038
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2032"
    },
    "8236": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21963,
        22038
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8237": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21963,
        22038
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8238": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21963,
        22038
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3B07"
    },
    "8241": {
      "fn": "PolicyManager.refundInternal",
      "jump": "i",
      "offset": [
        21963,
        22038
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8242": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21963,
        22038
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8243": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21963,
        22038
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "8244": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        21963,
        22038
      ],
      "op": "POP",
      "path": "12"
    },
    "8245": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20800,
        22053
      ],
      "op": "POP",
      "path": "12"
    },
    "8246": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20800,
        22053
      ],
      "op": "POP",
      "path": "12"
    },
    "8247": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20782,
        22053
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8248": {
      "branch": 255,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22070,
        22082
      ],
      "op": "DUP9",
      "path": "12"
    },
    "8249": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22070,
        22129
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8250": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22070,
        22129
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x204E"
    },
    "8253": {
      "branch": 255,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22070,
        22129
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8254": {
      "op": "POP"
    },
    "8255": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22086,
        22116
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "8257": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22086,
        22116
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8258": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22086,
        22116
      ],
      "op": "ADD",
      "path": "12"
    },
    "8259": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22086,
        22116
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8260": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22086,
        22129
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "8263": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22086,
        22129
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8264": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22086,
        22129
      ],
      "op": "DUP9",
      "path": "12"
    },
    "8265": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22086,
        22129
      ],
      "op": "AND",
      "path": "12"
    },
    "8266": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22086,
        22116
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8267": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22086,
        22116
      ],
      "op": "AND",
      "path": "12"
    },
    "8268": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22086,
        22129
      ],
      "op": "LT",
      "path": "12"
    },
    "8269": {
      "branch": 256,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22086,
        22129
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8270": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22070,
        22129
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8271": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22066,
        22535
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8272": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22066,
        22535
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x20DF"
    },
    "8275": {
      "branch": 256,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22066,
        22535
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8276": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22149,
        22181
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 99
    },
    "8277": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22149,
        22181
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8284": {
      "op": "SHL"
    },
    "8285": {
      "op": "SUB"
    },
    "8286": {
      "op": "NOT"
    },
    "8287": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22149,
        22181
      ],
      "op": "AND",
      "path": "12"
    },
    "8288": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22149,
        22181
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8289": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22149,
        22181
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8290": {
      "offset": [
        3023,
        3024
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8292": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22149,
        22181
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8294": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22199,
        22233
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 100
    },
    "8295": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22199,
        22233
      ],
      "op": "ADD",
      "path": "12"
    },
    "8296": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22199,
        22237
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8297": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22255,
        22285
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 101,
      "value": "0x2"
    },
    "8299": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22255,
        22285
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8300": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22255,
        22285
      ],
      "op": "ADD",
      "path": "12"
    },
    "8301": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22255,
        22289
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8302": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22255,
        22289
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8303": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "8306": {
      "op": "NOT"
    },
    "8307": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22255,
        22289
      ],
      "op": "AND",
      "path": "12"
    },
    "8308": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22255,
        22289
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8309": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22255,
        22289
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8310": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22307,
        22323
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 102
    },
    "8311": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22307,
        22323
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x207F"
    },
    "8314": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22307,
        22323
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8315": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22307,
        22323
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A53"
    },
    "8318": {
      "fn": "PolicyManager.refundInternal",
      "jump": "i",
      "offset": [
        22307,
        22323
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8319": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22307,
        22323
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8320": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22307,
        22323
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "8321": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22307,
        22323
      ],
      "op": "POP",
      "path": "12"
    },
    "8322": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22307,
        22323
      ],
      "op": "POP",
      "path": "12"
    },
    "8323": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22388,
        22392
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 103
    },
    "8324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8330": {
      "op": "SHL"
    },
    "8331": {
      "op": "SUB"
    },
    "8332": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22346,
        22410
      ],
      "op": "AND",
      "path": "12"
    },
    "8333": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22376,
        22386
      ],
      "op": "CALLER",
      "path": "12"
    },
    "8334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8340": {
      "op": "SHL"
    },
    "8341": {
      "op": "SUB"
    },
    "8342": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22346,
        22410
      ],
      "op": "AND",
      "path": "12"
    },
    "8343": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22365,
        22374
      ],
      "op": "DUP13",
      "path": "12"
    },
    "8344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8348": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8350": {
      "op": "SHL"
    },
    "8351": {
      "op": "SUB"
    },
    "8352": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22346,
        22410
      ],
      "op": "NOT",
      "path": "12"
    },
    "8353": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22346,
        22410
      ],
      "op": "AND",
      "path": "12"
    },
    "8354": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22346,
        22410
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xF3B13DF5BDD5EFCB090F73617909A6295EE75815920224C512D784B2726812F1"
    },
    "8387": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22394,
        22409
      ],
      "op": "DUP5",
      "path": "12"
    },
    "8388": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22346,
        22410
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8390": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22346,
        22410
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8391": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22346,
        22410
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x20D2"
    },
    "8394": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22346,
        22410
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8395": {
      "op": "DUP2"
    },
    "8396": {
      "op": "MSTORE"
    },
    "8397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8399": {
      "op": "ADD"
    },
    "8400": {
      "op": "SWAP1"
    },
    "8401": {
      "op": "JUMP"
    },
    "8402": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22346,
        22410
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8403": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22346,
        22410
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8405": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22346,
        22410
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8406": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22346,
        22410
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8407": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22346,
        22410
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8408": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22346,
        22410
      ],
      "op": "SUB",
      "path": "12"
    },
    "8409": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22346,
        22410
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8410": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22346,
        22410
      ],
      "op": "LOG4",
      "path": "12"
    },
    "8411": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22066,
        22535
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x212C"
    },
    "8414": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22066,
        22535
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8415": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22066,
        22535
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8416": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22454,
        22520
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 104,
      "value": "0x40"
    },
    "8418": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22454,
        22520
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8419": {
      "op": "DUP2"
    },
    "8420": {
      "op": "DUP2"
    },
    "8421": {
      "op": "MSTORE"
    },
    "8422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8428": {
      "op": "SHL"
    },
    "8429": {
      "op": "SUB"
    },
    "8430": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22454,
        22520
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8431": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22454,
        22520
      ],
      "op": "AND",
      "path": "12"
    },
    "8432": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22454,
        22520
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8433": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22486,
        22496
      ],
      "op": "CALLER",
      "path": "12"
    },
    "8434": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22486,
        22496
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8439": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8441": {
      "op": "SHL"
    },
    "8442": {
      "op": "SUB"
    },
    "8443": {
      "op": "NOT"
    },
    "8444": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22454,
        22520
      ],
      "op": "DUP15",
      "path": "12"
    },
    "8445": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22454,
        22520
      ],
      "op": "AND",
      "path": "12"
    },
    "8446": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22454,
        22520
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8447": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22454,
        22520
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xAB654B569128C88FFCD210806A5E48EE14C541E2C76923F143281F20807090C1"
    },
    "8480": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22454,
        22520
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8483": {
      "op": "ADD"
    },
    "8484": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22454,
        22520
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8486": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22454,
        22520
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8487": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22454,
        22520
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8488": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22454,
        22520
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8489": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22454,
        22520
      ],
      "op": "SUB",
      "path": "12"
    },
    "8490": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22454,
        22520
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8491": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22454,
        22520
      ],
      "op": "LOG4",
      "path": "12"
    },
    "8492": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22066,
        22535
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8493": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22549,
        22579
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 105,
      "value": "0x2136"
    },
    "8496": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22564,
        22579
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8497": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22549,
        22579
      ],
      "op": "DUP10",
      "path": "12"
    },
    "8498": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22549,
        22579
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3B07"
    },
    "8501": {
      "fn": "PolicyManager.refundInternal",
      "jump": "i",
      "offset": [
        22549,
        22579
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8502": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22549,
        22579
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8503": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22549,
        22579
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "8504": {
      "op": "POP"
    },
    "8505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8511": {
      "op": "SHL"
    },
    "8512": {
      "op": "SUB"
    },
    "8513": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22597,
        22619
      ],
      "op": "DUP11",
      "path": "12"
    },
    "8514": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22597,
        22619
      ],
      "op": "AND",
      "path": "12"
    },
    "8515": {
      "branch": 257,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22597,
        22619
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8516": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22593,
        22658
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x214F"
    },
    "8519": {
      "branch": 257,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22593,
        22658
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8520": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22638,
        22643
      ],
      "op": "POP",
      "path": "12",
      "statement": 106
    },
    "8521": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22638,
        22643
      ],
      "op": "POP",
      "path": "12"
    },
    "8522": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22638,
        22643
      ],
      "op": "POP",
      "path": "12"
    },
    "8523": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22638,
        22643
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2165"
    },
    "8526": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22638,
        22643
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8527": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22593,
        22658
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8528": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20295,
        22668
      ],
      "op": "POP",
      "path": "12"
    },
    "8529": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20295,
        22668
      ],
      "op": "POP",
      "path": "12"
    },
    "8530": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20295,
        22668
      ],
      "op": "POP",
      "path": "12"
    },
    "8531": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20251,
        22668
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8532": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20290,
        20293
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 107
    },
    "8533": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20290,
        20293
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x215D"
    },
    "8536": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20290,
        20293
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8537": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20290,
        20293
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A38"
    },
    "8540": {
      "fn": "PolicyManager.refundInternal",
      "jump": "i",
      "offset": [
        20290,
        20293
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8541": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20290,
        20293
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8542": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20290,
        20293
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8543": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20290,
        20293
      ],
      "op": "POP",
      "path": "12"
    },
    "8544": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20290,
        20293
      ],
      "op": "POP",
      "path": "12"
    },
    "8545": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20251,
        22668
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D98"
    },
    "8548": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20251,
        22668
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8549": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        20251,
        22668
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8550": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22709,
        22723
      ],
      "op": "DUP4",
      "path": "12"
    },
    "8551": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22709,
        22723
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8558": {
      "op": "SHL"
    },
    "8559": {
      "op": "SUB"
    },
    "8560": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22709,
        22723
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8563": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22709,
        22723
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8564": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22709,
        22723
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8565": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22709,
        22723
      ],
      "op": "DIV",
      "path": "12"
    },
    "8566": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22709,
        22723
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8567": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22709,
        22723
      ],
      "op": "AND",
      "path": "12"
    },
    "8568": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22709,
        22723
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8569": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22737,
        22759
      ],
      "op": "DUP9",
      "path": "12"
    },
    "8570": {
      "branch": 258,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22737,
        22759
      ],
      "op": "AND",
      "path": "12"
    },
    "8571": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22733,
        23386
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2232"
    },
    "8574": {
      "branch": 258,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22733,
        23386
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8575": {
      "branch": 259,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22779,
        22798
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8576": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22775,
        23269
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x21F4"
    },
    "8579": {
      "branch": 259,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22775,
        23269
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8580": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22818,
        22840
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 108
    },
    "8581": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22818,
        22840
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8586": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8588": {
      "op": "SHL"
    },
    "8589": {
      "op": "SUB"
    },
    "8590": {
      "op": "NOT"
    },
    "8591": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22888,
        22924
      ],
      "op": "AND",
      "path": "12",
      "statement": 109
    },
    "8592": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22836,
        22840
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8594": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22888,
        22924
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8595": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22888,
        22924
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8596": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22888,
        22924
      ],
      "op": "OR",
      "path": "12"
    },
    "8597": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22888,
        22924
      ],
      "op": "DUP7",
      "path": "12"
    },
    "8598": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22888,
        22924
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8599": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22942,
        22954
      ],
      "op": "DUP6",
      "path": "12",
      "statement": 110
    },
    "8600": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22942,
        22954
      ],
      "op": "ADD",
      "path": "12"
    },
    "8601": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22942,
        22967
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8602": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22942,
        22967
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8609": {
      "op": "SHL"
    },
    "8610": {
      "op": "SUB"
    },
    "8611": {
      "op": "NOT"
    },
    "8612": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22942,
        22967
      ],
      "op": "AND",
      "path": "12"
    },
    "8613": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22942,
        22967
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8614": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22942,
        22967
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8617": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22985,
        22999
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 111,
      "value": "0x2"
    },
    "8619": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22985,
        22999
      ],
      "op": "DUP7",
      "path": "12"
    },
    "8620": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22985,
        22999
      ],
      "op": "ADD",
      "path": "12"
    },
    "8621": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23064,
        23087
      ],
      "op": "SSTORE",
      "path": "12",
      "statement": 112
    },
    "8622": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23110,
        23159
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 113,
      "value": "0x40"
    },
    "8624": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23110,
        23159
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8625": {
      "op": "DUP7"
    },
    "8626": {
      "op": "DUP2"
    },
    "8627": {
      "op": "MSTORE"
    },
    "8628": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23135,
        23145
      ],
      "op": "CALLER",
      "path": "12"
    },
    "8629": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23135,
        23145
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8634": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8636": {
      "op": "SHL"
    },
    "8637": {
      "op": "SUB"
    },
    "8638": {
      "op": "NOT"
    },
    "8639": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23110,
        23159
      ],
      "op": "DUP12",
      "path": "12"
    },
    "8640": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23110,
        23159
      ],
      "op": "AND",
      "path": "12"
    },
    "8641": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23110,
        23159
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8642": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23110,
        23159
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xD5EA25BA3600C386669C484639012A0AE266ED537F0C4AB71B651024736EFFF4"
    },
    "8675": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23110,
        23159
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8678": {
      "op": "ADD"
    },
    "8679": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23110,
        23159
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8680": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23110,
        23159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8682": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23110,
        23159
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8683": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23110,
        23159
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8684": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23110,
        23159
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8685": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23110,
        23159
      ],
      "op": "SUB",
      "path": "12"
    },
    "8686": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23110,
        23159
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8687": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23110,
        23159
      ],
      "op": "LOG3",
      "path": "12"
    },
    "8688": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22733,
        23386
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2242"
    },
    "8691": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22733,
        23386
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8692": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22775,
        23269
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8693": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23203,
        23254
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 114,
      "value": "0x40"
    },
    "8695": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23203,
        23254
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8696": {
      "op": "DUP7"
    },
    "8697": {
      "op": "DUP2"
    },
    "8698": {
      "op": "MSTORE"
    },
    "8699": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23230,
        23240
      ],
      "op": "CALLER",
      "path": "12"
    },
    "8700": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23230,
        23240
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8705": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8707": {
      "op": "SHL"
    },
    "8708": {
      "op": "SUB"
    },
    "8709": {
      "op": "NOT"
    },
    "8710": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23203,
        23254
      ],
      "op": "DUP12",
      "path": "12"
    },
    "8711": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23203,
        23254
      ],
      "op": "AND",
      "path": "12"
    },
    "8712": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23203,
        23254
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8713": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23203,
        23254
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x51377F313F8C3404E86D38AE907B443ADA38578FD6B9589D03F79D03FF9303C7"
    },
    "8746": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23203,
        23254
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8749": {
      "op": "ADD"
    },
    "8750": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23203,
        23254
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x21E7"
    },
    "8753": {
      "op": "JUMP"
    },
    "8754": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        22733,
        23386
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8755": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23348,
        23367
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 115,
      "value": "0x8"
    },
    "8757": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23348,
        23367
      ],
      "op": "DUP6",
      "path": "12"
    },
    "8758": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23348,
        23367
      ],
      "op": "ADD",
      "path": "12"
    },
    "8759": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23348,
        23374
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8760": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23344,
        23374
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8761": {
      "branch": 260,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23344,
        23374
      ],
      "op": "LT",
      "path": "12"
    },
    "8762": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23336,
        23375
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2242"
    },
    "8765": {
      "branch": 260,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23336,
        23375
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8766": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23336,
        23375
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8768": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23336,
        23375
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8769": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23336,
        23375
      ],
      "op": "REVERT",
      "path": "12"
    },
    "8770": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23336,
        23375
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8771": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23399,
        23414
      ],
      "op": "DUP6",
      "path": "12"
    },
    "8772": {
      "branch": 261,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23399,
        23414
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8773": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23395,
        23477
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x225B"
    },
    "8776": {
      "branch": 261,
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23395,
        23477
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8777": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23430,
        23466
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 116,
      "value": "0x225B"
    },
    "8780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8786": {
      "op": "SHL"
    },
    "8787": {
      "op": "SUB"
    },
    "8788": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23430,
        23453
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8789": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23430,
        23453
      ],
      "op": "AND",
      "path": "12"
    },
    "8790": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23454,
        23465
      ],
      "op": "DUP8",
      "path": "12"
    },
    "8791": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23430,
        23453
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25E6"
    },
    "8794": {
      "fn": "PolicyManager.refundInternal",
      "jump": "i",
      "offset": [
        23430,
        23466
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8795": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        23430,
        23466
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8796": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19922,
        23483
      ],
      "op": "POP",
      "path": "12"
    },
    "8797": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19922,
        23483
      ],
      "op": "POP",
      "path": "12"
    },
    "8798": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19922,
        23483
      ],
      "op": "POP",
      "path": "12"
    },
    "8799": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19922,
        23483
      ],
      "op": "POP",
      "path": "12"
    },
    "8800": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19922,
        23483
      ],
      "op": "POP",
      "path": "12"
    },
    "8801": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19794,
        23483
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "8802": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19794,
        23483
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "8803": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19794,
        23483
      ],
      "op": "POP",
      "path": "12"
    },
    "8804": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19794,
        23483
      ],
      "op": "POP",
      "path": "12"
    },
    "8805": {
      "fn": "PolicyManager.refundInternal",
      "offset": [
        19794,
        23483
      ],
      "op": "POP",
      "path": "12"
    },
    "8806": {
      "fn": "PolicyManager.refundInternal",
      "jump": "o",
      "offset": [
        19794,
        23483
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8807": {
      "fn": "SafeMath.div",
      "offset": [
        3836,
        3932
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "8808": {
      "fn": "SafeMath.div",
      "offset": [
        3894,
        3901
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "8810": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "33",
      "statement": 117,
      "value": "0xDA5"
    },
    "8813": {
      "fn": "SafeMath.div",
      "offset": [
        3924,
        3925
      ],
      "op": "DUP3",
      "path": "33"
    },
    "8814": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3921
      ],
      "op": "DUP5",
      "path": "33"
    },
    "8815": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x3980"
    },
    "8818": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3920,
        3925
      ],
      "op": "JUMP",
      "path": "33"
    },
    "8819": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        11817,
        12803
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8824": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8826": {
      "op": "SHL"
    },
    "8827": {
      "op": "SUB"
    },
    "8828": {
      "op": "NOT"
    },
    "8829": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12060,
        12079
      ],
      "op": "DUP6",
      "path": "12",
      "statement": 118
    },
    "8830": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12060,
        12079
      ],
      "op": "AND",
      "path": "12"
    },
    "8831": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12014,
        12035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8833": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12060,
        12079
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8834": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12060,
        12079
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8835": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12060,
        12079
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8836": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12060,
        12068
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8838": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12060,
        12079
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "8840": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12060,
        12079
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8841": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12060,
        12079
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8843": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12060,
        12079
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8844": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12060,
        12079
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "8845": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12060,
        12079
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8846": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12110,
        12141
      ],
      "op": "ISZERO",
      "path": "12",
      "statement": 119
    },
    "8847": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12110,
        12141
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8848": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12110,
        12141
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8849": {
      "branch": 262,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12110,
        12141
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8850": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12110,
        12176
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x22A6"
    },
    "8853": {
      "branch": 262,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12110,
        12176
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8854": {
      "op": "POP"
    },
    "8855": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12157,
        12171
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "8857": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12157,
        12171
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8858": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12157,
        12171
      ],
      "op": "ADD",
      "path": "12"
    },
    "8859": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12157,
        12171
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8864": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8866": {
      "op": "SHL"
    },
    "8867": {
      "op": "SUB"
    },
    "8868": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12157,
        12171
      ],
      "op": "AND",
      "path": "12"
    },
    "8869": {
      "branch": 263,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12157,
        12176
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8870": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12110,
        12176
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8871": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12110,
        12208
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8872": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12110,
        12208
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8873": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12110,
        12208
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x22B4"
    },
    "8876": {
      "branch": 263,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12110,
        12208
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8877": {
      "op": "POP"
    },
    "8878": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12193,
        12208
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8879": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12193,
        12208
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8880": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12193,
        12208
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "8882": {
      "branch": 264,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12193,
        12208
      ],
      "op": "AND",
      "path": "12"
    },
    "8883": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12192,
        12208
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8884": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12110,
        12208
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8885": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12089,
        12218
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x22BD"
    },
    "8888": {
      "branch": 264,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12089,
        12218
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8889": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12089,
        12218
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "8891": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12089,
        12218
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8892": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12089,
        12218
      ],
      "op": "REVERT",
      "path": "12"
    },
    "8893": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12089,
        12218
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8894": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12229,
        12265
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 120
    },
    "8895": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12229,
        12265
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8896": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "8899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8901": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8903": {
      "op": "SHL"
    },
    "8904": {
      "op": "SUB"
    },
    "8905": {
      "op": "NOT"
    },
    "8906": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12229,
        12265
      ],
      "op": "AND",
      "path": "12"
    },
    "8907": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12254,
        12264
      ],
      "op": "CALLER",
      "path": "12"
    },
    "8908": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12229,
        12265
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "8911": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12229,
        12265
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8912": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12229,
        12265
      ],
      "op": "MUL",
      "path": "12"
    },
    "8913": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12229,
        12265
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8914": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12229,
        12265
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8915": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12229,
        12265
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8916": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12229,
        12265
      ],
      "op": "OR",
      "path": "12"
    },
    "8917": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12229,
        12265
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8918": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12229,
        12265
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8919": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12275,
        12296
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 121,
      "value": "0x2"
    },
    "8921": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12275,
        12296
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8922": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12275,
        12296
      ],
      "op": "ADD",
      "path": "12"
    },
    "8923": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12275,
        12322
      ],
      "op": "DUP1",
      "path": "12"
    },
    "8924": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12275,
        12322
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8929": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8931": {
      "op": "SHL"
    },
    "8932": {
      "op": "SUB"
    },
    "8933": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12332,
        12367
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 122
    },
    "8934": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12332,
        12367
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8935": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12332,
        12367
      ],
      "op": "AND",
      "path": "12"
    },
    "8936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8938": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8940": {
      "op": "SHL"
    },
    "8941": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12306,
        12321
      ],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "8942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8946": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8948": {
      "op": "SHL"
    },
    "8949": {
      "op": "SUB"
    },
    "8950": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12275,
        12322
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8951": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12275,
        12322
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8952": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12275,
        12322
      ],
      "op": "AND",
      "path": "12"
    },
    "8953": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12275,
        12322
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8954": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12275,
        12322
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8955": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12275,
        12322
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8956": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12275,
        12322
      ],
      "op": "MUL",
      "path": "12"
    },
    "8957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8961": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8963": {
      "op": "SHL"
    },
    "8964": {
      "op": "SUB"
    },
    "8965": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12332,
        12367
      ],
      "op": "AND",
      "path": "12"
    },
    "8966": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12332,
        12367
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8967": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12332,
        12367
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8968": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12332,
        12367
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8969": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12332,
        12367
      ],
      "op": "OR",
      "path": "12"
    },
    "8970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8972": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8974": {
      "op": "SHL"
    },
    "8975": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12332,
        12367
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8976": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12332,
        12367
      ],
      "op": "DUP10",
      "path": "12"
    },
    "8977": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12332,
        12367
      ],
      "op": "AND",
      "path": "12"
    },
    "8978": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12332,
        12367
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8979": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12332,
        12367
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8980": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12332,
        12367
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "8981": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12332,
        12367
      ],
      "op": "MUL",
      "path": "12"
    },
    "8982": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12332,
        12367
      ],
      "op": "OR",
      "path": "12"
    },
    "8983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8987": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8989": {
      "op": "SHL"
    },
    "8990": {
      "op": "SUB"
    },
    "8991": {
      "op": "NOT"
    },
    "8992": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12377,
        12402
      ],
      "op": "AND",
      "path": "12",
      "statement": 123
    },
    "8993": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12377,
        12402
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8994": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12377,
        12402
      ],
      "op": "DUP7",
      "path": "12"
    },
    "8995": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12377,
        12402
      ],
      "op": "AND",
      "path": "12"
    },
    "8996": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12377,
        12402
      ],
      "op": "OR",
      "path": "12"
    },
    "8997": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12377,
        12402
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8998": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12377,
        12402
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "8999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9005": {
      "op": "SHL"
    },
    "9006": {
      "op": "SUB"
    },
    "9007": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12417,
        12443
      ],
      "op": "DUP7",
      "path": "12"
    },
    "9008": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12417,
        12443
      ],
      "op": "AND",
      "path": "12"
    },
    "9009": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12417,
        12443
      ],
      "op": "EQ",
      "path": "12"
    },
    "9010": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12417,
        12443
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9011": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12417,
        12443
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "9012": {
      "branch": 265,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12417,
        12443
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9013": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12417,
        12473
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2346"
    },
    "9016": {
      "branch": 265,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12417,
        12473
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9017": {
      "op": "POP"
    },
    "9018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9024": {
      "op": "SHL"
    },
    "9025": {
      "op": "SUB"
    },
    "9026": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12447,
        12473
      ],
      "op": "DUP6",
      "path": "12"
    },
    "9027": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12447,
        12473
      ],
      "op": "AND",
      "path": "12"
    },
    "9028": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12447,
        12473
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "9029": {
      "branch": 266,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12447,
        12473
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "9030": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12417,
        12473
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9031": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12413,
        12527
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "9032": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12413,
        12527
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2369"
    },
    "9035": {
      "branch": 266,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12413,
        12527
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9036": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12489,
        12501
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 124,
      "value": "0x1"
    },
    "9038": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12489,
        12501
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9039": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12489,
        12501
      ],
      "op": "ADD",
      "path": "12"
    },
    "9040": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12489,
        12516
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9041": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12489,
        12516
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9048": {
      "op": "SHL"
    },
    "9049": {
      "op": "SUB"
    },
    "9050": {
      "op": "NOT"
    },
    "9051": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12489,
        12516
      ],
      "op": "AND",
      "path": "12"
    },
    "9052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9058": {
      "op": "SHL"
    },
    "9059": {
      "op": "SUB"
    },
    "9060": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12489,
        12516
      ],
      "op": "DUP8",
      "path": "12"
    },
    "9061": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12489,
        12516
      ],
      "op": "AND",
      "path": "12"
    },
    "9062": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12489,
        12516
      ],
      "op": "OR",
      "path": "12"
    },
    "9063": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12489,
        12516
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9064": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12489,
        12516
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9065": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12413,
        12527
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9072": {
      "op": "SHL"
    },
    "9073": {
      "op": "SUB"
    },
    "9074": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12616,
        12642
      ],
      "op": "DUP6",
      "path": "12",
      "statement": 125
    },
    "9075": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12616,
        12642
      ],
      "op": "AND",
      "path": "12"
    },
    "9076": {
      "branch": 267,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12616,
        12642
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "9077": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12616,
        12670
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x237E"
    },
    "9080": {
      "branch": 267,
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12616,
        12670
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9081": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12658,
        12670
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9082": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12616,
        12670
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2380"
    },
    "9085": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12616,
        12670
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9086": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12616,
        12670
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9087": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12645,
        12655
      ],
      "op": "CALLER",
      "path": "12"
    },
    "9088": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12616,
        12670
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9089": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12706,
        12727
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "9091": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12706,
        12727
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9092": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12706,
        12727
      ],
      "op": "ADD",
      "path": "12"
    },
    "9093": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12706,
        12727
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9094": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9096": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9097": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9102": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9104": {
      "op": "SHL"
    },
    "9105": {
      "op": "SUB"
    },
    "9106": {
      "op": "DUP8"
    },
    "9107": {
      "op": "AND"
    },
    "9108": {
      "op": "DUP2"
    },
    "9109": {
      "op": "MSTORE"
    },
    "9110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9114": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9116": {
      "op": "SHL"
    },
    "9117": {
      "op": "SUB"
    },
    "9118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9120": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9122": {
      "op": "SHL"
    },
    "9123": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12706,
        12727
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9124": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12706,
        12727
      ],
      "op": "DIV",
      "path": "12"
    },
    "9125": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12706,
        12727
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9126": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12706,
        12727
      ],
      "op": "AND",
      "path": "12"
    },
    "9127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9129": {
      "op": "DUP4"
    },
    "9130": {
      "op": "ADD"
    },
    "9131": {
      "op": "MSTORE"
    },
    "9132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9134": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9136": {
      "op": "SHL"
    },
    "9137": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12741,
        12760
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9138": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12741,
        12760
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "9139": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12741,
        12760
      ],
      "op": "DIV",
      "path": "12"
    },
    "9140": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12741,
        12760
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9141": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12741,
        12760
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "9142": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12741,
        12760
      ],
      "op": "AND",
      "path": "12"
    },
    "9143": {
      "op": "SWAP1"
    },
    "9144": {
      "op": "DUP3"
    },
    "9145": {
      "op": "ADD"
    },
    "9146": {
      "op": "MSTORE"
    },
    "9147": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9149": {
      "op": "DUP2"
    },
    "9150": {
      "op": "ADD"
    },
    "9151": {
      "op": "DUP5"
    },
    "9152": {
      "op": "SWAP1"
    },
    "9153": {
      "op": "MSTORE"
    },
    "9154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9160": {
      "op": "SHL"
    },
    "9161": {
      "op": "SUB"
    },
    "9162": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9163": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9164": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9165": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "AND",
      "path": "12"
    },
    "9166": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9167": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12592,
        12602
      ],
      "op": "CALLER",
      "path": "12"
    },
    "9168": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12592,
        12602
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9173": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9175": {
      "op": "SHL"
    },
    "9176": {
      "op": "SUB"
    },
    "9177": {
      "op": "NOT"
    },
    "9178": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "DUP10",
      "path": "12"
    },
    "9179": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "AND",
      "path": "12"
    },
    "9180": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9181": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x8E609DAC02BD39FF24C8AD6BB9A735E739B56708B22159948EC9828AD765B4D1"
    },
    "9214": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9215": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9217": {
      "op": "ADD"
    },
    "9218": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9220": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9221": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9222": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9223": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "SUB",
      "path": "12"
    },
    "9224": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9225": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        12542,
        12796
      ],
      "op": "LOG4",
      "path": "12"
    },
    "9226": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        11817,
        12803
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "9227": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        11817,
        12803
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "9228": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        11817,
        12803
      ],
      "op": "POP",
      "path": "12"
    },
    "9229": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        11817,
        12803
      ],
      "op": "POP",
      "path": "12"
    },
    "9230": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        11817,
        12803
      ],
      "op": "POP",
      "path": "12"
    },
    "9231": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        11817,
        12803
      ],
      "op": "POP",
      "path": "12"
    },
    "9232": {
      "fn": "PolicyManager.createPolicy",
      "offset": [
        11817,
        12803
      ],
      "op": "POP",
      "path": "12"
    },
    "9233": {
      "fn": "PolicyManager.createPolicy",
      "jump": "o",
      "offset": [
        11817,
        12803
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9234": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13112,
        14439
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9241": {
      "op": "SHL"
    },
    "9242": {
      "op": "SUB"
    },
    "9243": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13318,
        13340
      ],
      "op": "DUP4",
      "path": "12",
      "statement": 126
    },
    "9244": {
      "branch": 268,
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13318,
        13340
      ],
      "op": "AND",
      "path": "12"
    },
    "9245": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13310,
        13341
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2425"
    },
    "9248": {
      "branch": 268,
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13310,
        13341
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9249": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13310,
        13341
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9251": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13310,
        13341
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9252": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13310,
        13341
      ],
      "op": "REVERT",
      "path": "12"
    },
    "9253": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13310,
        13341
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9260": {
      "op": "SHL"
    },
    "9261": {
      "op": "SUB"
    },
    "9262": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13379,
        13391
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9263": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13379,
        13391
      ],
      "op": "AND",
      "path": "12"
    },
    "9264": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13351,
        13376
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9266": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13379,
        13391
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9267": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13379,
        13391
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9268": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13379,
        13391
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9269": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13379,
        13384
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "9271": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13379,
        13391
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9273": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13379,
        13391
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9274": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13379,
        13391
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9276": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13379,
        13391
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9277": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13379,
        13391
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9278": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13409,
        13435
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 127
    },
    "9279": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13409,
        13435
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9284": {
      "op": "SHL"
    },
    "9285": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13409,
        13435
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9286": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13409,
        13435
      ],
      "op": "DIV",
      "path": "12"
    },
    "9287": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13409,
        13435
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "9290": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13409,
        13435
      ],
      "op": "AND",
      "path": "12"
    },
    "9291": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13409,
        13440
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "9292": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13409,
        13440
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9293": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13409,
        13440
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "9294": {
      "branch": 269,
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13409,
        13440
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9295": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13409,
        13499
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2466"
    },
    "9298": {
      "branch": 269,
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13409,
        13499
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9299": {
      "op": "POP"
    },
    "9300": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13456,
        13482
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9301": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13456,
        13482
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9302": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13456,
        13499
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "9305": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13456,
        13499
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9306": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13456,
        13499
      ],
      "op": "DUP9",
      "path": "12"
    },
    "9307": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13456,
        13499
      ],
      "op": "AND",
      "path": "12"
    },
    "9308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9310": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9312": {
      "op": "SHL"
    },
    "9313": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13456,
        13482
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9314": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13456,
        13482
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "9315": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13456,
        13482
      ],
      "op": "DIV",
      "path": "12"
    },
    "9316": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13456,
        13482
      ],
      "op": "AND",
      "path": "12"
    },
    "9317": {
      "branch": 270,
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13456,
        13499
      ],
      "op": "LT",
      "path": "12"
    },
    "9318": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13409,
        13499
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9319": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13409,
        13550
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9320": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13409,
        13550
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "9321": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13409,
        13550
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2483"
    },
    "9324": {
      "branch": 270,
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13409,
        13550
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9325": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13409,
        13550
      ],
      "op": "POP",
      "path": "12"
    },
    "9326": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13527,
        13550
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2476"
    },
    "9329": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13541,
        13549
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9330": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13527,
        13540
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26FF"
    },
    "9333": {
      "fn": "PolicyManager.addFeeToNode",
      "jump": "i",
      "offset": [
        13527,
        13550
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9334": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13527,
        13550
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9335": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13515,
        13523
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9340": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9342": {
      "op": "SHL"
    },
    "9343": {
      "op": "SUB"
    },
    "9344": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13515,
        13550
      ],
      "op": "AND",
      "path": "12"
    },
    "9345": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13515,
        13550
      ],
      "op": "LT",
      "path": "12"
    },
    "9346": {
      "branch": 271,
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13515,
        13550
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "9347": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13409,
        13550
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9348": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13401,
        13551
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x248C"
    },
    "9351": {
      "branch": 271,
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13401,
        13551
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9352": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13401,
        13551
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9354": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13401,
        13551
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9355": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13401,
        13551
      ],
      "op": "REVERT",
      "path": "12"
    },
    "9356": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13401,
        13551
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9357": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13609,
        13642
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "9360": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13609,
        13642
      ],
      "op": "DUP7",
      "path": "12"
    },
    "9361": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13609,
        13642
      ],
      "op": "AND",
      "path": "12"
    },
    "9362": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13609,
        13642
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9364": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13609,
        13642
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9365": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13609,
        13642
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9366": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13609,
        13642
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9367": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13609,
        13626
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "9369": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13609,
        13626
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9370": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13609,
        13626
      ],
      "op": "ADD",
      "path": "12"
    },
    "9371": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13609,
        13642
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9373": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13609,
        13642
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9374": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13609,
        13642
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9376": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13609,
        13642
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9377": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13609,
        13642
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9378": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13609,
        13642
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9383": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9385": {
      "op": "SHL"
    },
    "9386": {
      "op": "SUB"
    },
    "9387": {
      "branch": 272,
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13609,
        13663
      ],
      "op": "EQ",
      "path": "12"
    },
    "9388": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13605,
        13918
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "9389": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13605,
        13918
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24CD"
    },
    "9392": {
      "branch": 272,
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13605,
        13918
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9393": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13679,
        13712
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 128,
      "value": "0xFFFF"
    },
    "9396": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13679,
        13712
      ],
      "op": "DUP7",
      "path": "12"
    },
    "9397": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13679,
        13712
      ],
      "op": "AND",
      "path": "12"
    },
    "9398": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13679,
        13712
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9400": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13679,
        13712
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9401": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13679,
        13712
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9402": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13679,
        13712
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9403": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13679,
        13696
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "9405": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13679,
        13696
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9406": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13679,
        13696
      ],
      "op": "ADD",
      "path": "12"
    },
    "9407": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13679,
        13712
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9409": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13679,
        13712
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9410": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13679,
        13712
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9412": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13679,
        13712
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9413": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13679,
        13712
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9414": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13679,
        13730
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9415": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13679,
        13730
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9416": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13679,
        13730
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9417": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13605,
        13918
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F8"
    },
    "9420": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13605,
        13918
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9421": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13605,
        13918
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9422": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13888
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 129,
      "value": "0xFFFF"
    },
    "9425": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13888
      ],
      "op": "DUP7",
      "path": "12"
    },
    "9426": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13888
      ],
      "op": "AND",
      "path": "12"
    },
    "9427": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13888
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9429": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13888
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9430": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13888
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9431": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13888
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9432": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13872
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "9434": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13872
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9435": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13872
      ],
      "op": "ADD",
      "path": "12"
    },
    "9436": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13888
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9438": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13888
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9439": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13888
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9441": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13888
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9442": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13888
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9443": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13907
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9444": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13907
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9445": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13892,
        13907
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9446": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13892,
        13907
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "9447": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13888
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9448": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13907
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F2"
    },
    "9451": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13907
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9452": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13892,
        13907
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9453": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13892,
        13907
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9454": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13907
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3AC6"
    },
    "9457": {
      "fn": "PolicyManager.addFeeToNode",
      "jump": "i",
      "offset": [
        13855,
        13907
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9458": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13907
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9459": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13907
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9460": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13907
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9461": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13855,
        13907
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9462": {
      "op": "POP"
    },
    "9463": {
      "op": "POP"
    },
    "9464": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13605,
        13918
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9465": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13931,
        13960
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "9468": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13931,
        13960
      ],
      "op": "DUP6",
      "path": "12"
    },
    "9469": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13931,
        13960
      ],
      "op": "AND",
      "path": "12"
    },
    "9470": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13931,
        13960
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9472": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13931,
        13960
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9473": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13931,
        13960
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9474": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13931,
        13960
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9475": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13931,
        13948
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "9477": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13931,
        13948
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9478": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13931,
        13948
      ],
      "op": "ADD",
      "path": "12"
    },
    "9479": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13931,
        13960
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9481": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13931,
        13960
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9482": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13931,
        13960
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9484": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13931,
        13960
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9485": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13931,
        13960
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9486": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13931,
        13960
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9491": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9493": {
      "op": "SHL"
    },
    "9494": {
      "op": "SUB"
    },
    "9495": {
      "branch": 273,
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13931,
        13981
      ],
      "op": "EQ",
      "path": "12"
    },
    "9496": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13927,
        14135
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "9497": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13927,
        14135
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2540"
    },
    "9500": {
      "branch": 273,
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13927,
        14135
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9501": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14029,
        14045
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 130,
      "value": "0x2525"
    },
    "9504": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14030,
        14045
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9505": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14029,
        14045
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A6A"
    },
    "9508": {
      "fn": "PolicyManager.addFeeToNode",
      "jump": "i",
      "offset": [
        14029,
        14045
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9509": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14029,
        14045
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9510": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13997,
        14026
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "9513": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13997,
        14026
      ],
      "op": "DUP7",
      "path": "12"
    },
    "9514": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13997,
        14026
      ],
      "op": "AND",
      "path": "12"
    },
    "9515": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13997,
        14026
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9517": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13997,
        14026
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9518": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13997,
        14026
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9519": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13997,
        14026
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9520": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13997,
        14014
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "9522": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13997,
        14014
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9523": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13997,
        14014
      ],
      "op": "ADD",
      "path": "12"
    },
    "9524": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13997,
        14026
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9526": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13997,
        14026
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9527": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13997,
        14026
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9529": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13997,
        14026
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9530": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13997,
        14026
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9531": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13997,
        14045
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9532": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13927,
        14135
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x256B"
    },
    "9535": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13927,
        14135
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9536": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13927,
        14135
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9537": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14105
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 131,
      "value": "0xFFFF"
    },
    "9540": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14105
      ],
      "op": "DUP6",
      "path": "12"
    },
    "9541": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14105
      ],
      "op": "AND",
      "path": "12"
    },
    "9542": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14105
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9544": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14105
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9545": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14105
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9546": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14105
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9547": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "9549": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14093
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9550": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14093
      ],
      "op": "ADD",
      "path": "12"
    },
    "9551": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14105
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9553": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14105
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9554": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14105
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9556": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14105
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9557": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14105
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9558": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14124
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9559": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14124
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9560": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14109,
        14124
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9561": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14109,
        14124
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "9562": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14105
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9563": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14124
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2565"
    },
    "9566": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14124
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9567": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14109,
        14124
      ],
      "op": "DUP5",
      "path": "12"
    },
    "9568": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14109,
        14124
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9569": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14124
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A87"
    },
    "9572": {
      "fn": "PolicyManager.addFeeToNode",
      "jump": "i",
      "offset": [
        14076,
        14124
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9573": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14124
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9574": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14124
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9575": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14124
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9576": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14076,
        14124
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9577": {
      "op": "POP"
    },
    "9578": {
      "op": "POP"
    },
    "9579": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13927,
        14135
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9580": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14192,
        14225
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "9583": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14192,
        14225
      ],
      "op": "DUP7",
      "path": "12"
    },
    "9584": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14192,
        14225
      ],
      "op": "AND",
      "path": "12"
    },
    "9585": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14192,
        14225
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9587": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14192,
        14225
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9588": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14192,
        14225
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9589": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14192,
        14225
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9590": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14192,
        14209
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "9592": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14192,
        14209
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9593": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14192,
        14209
      ],
      "op": "ADD",
      "path": "12"
    },
    "9594": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14192,
        14225
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9596": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14192,
        14225
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9597": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14192,
        14225
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9599": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14192,
        14225
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9600": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14192,
        14225
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9601": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14192,
        14225
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9602": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14188,
        14310
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25A5"
    },
    "9605": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14188,
        14310
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9606": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14246,
        14279
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 132,
      "value": "0xFFFF"
    },
    "9609": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14246,
        14279
      ],
      "op": "DUP7",
      "path": "12"
    },
    "9610": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14246,
        14279
      ],
      "op": "AND",
      "path": "12"
    },
    "9611": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14246,
        14279
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9613": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14246,
        14279
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9614": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14246,
        14279
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9615": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14246,
        14279
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9616": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14246,
        14263
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "9618": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14246,
        14263
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9619": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14246,
        14263
      ],
      "op": "ADD",
      "path": "12"
    },
    "9620": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14246,
        14279
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9622": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14246,
        14279
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9623": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14246,
        14279
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9625": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14246,
        14279
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9626": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14246,
        14279
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9631": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9633": {
      "op": "SHL"
    },
    "9634": {
      "op": "SUB"
    },
    "9635": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14246,
        14299
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9636": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14246,
        14299
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9637": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14188,
        14310
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9638": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14323,
        14352
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "9641": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14323,
        14352
      ],
      "op": "DUP6",
      "path": "12"
    },
    "9642": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14323,
        14352
      ],
      "op": "AND",
      "path": "12"
    },
    "9643": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14323,
        14352
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9645": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14323,
        14352
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9646": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14323,
        14352
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9647": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14323,
        14352
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9648": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14323,
        14340
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "9650": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14323,
        14340
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9651": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14323,
        14340
      ],
      "op": "ADD",
      "path": "12"
    },
    "9652": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14323,
        14352
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9654": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14323,
        14352
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9655": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14323,
        14352
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9657": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14323,
        14352
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9658": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14323,
        14352
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9659": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14323,
        14352
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9660": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14319,
        14433
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17ED"
    },
    "9663": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14319,
        14433
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9664": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14373,
        14402
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 133,
      "value": "0xFFFF"
    },
    "9667": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14373,
        14402
      ],
      "op": "DUP6",
      "path": "12"
    },
    "9668": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14373,
        14402
      ],
      "op": "AND",
      "path": "12"
    },
    "9669": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14373,
        14402
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9671": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14373,
        14402
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9672": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14373,
        14402
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9673": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14373,
        14402
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9674": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14373,
        14390
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "9676": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14373,
        14390
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9677": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14373,
        14390
      ],
      "op": "ADD",
      "path": "12"
    },
    "9678": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14373,
        14402
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "9680": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14373,
        14402
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "9681": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14373,
        14402
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "9683": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14373,
        14402
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9684": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14373,
        14402
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "9685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9689": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9691": {
      "op": "SHL"
    },
    "9692": {
      "op": "SUB"
    },
    "9693": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14373,
        14422
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9694": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        14373,
        14422
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9695": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13300,
        14439
      ],
      "op": "POP",
      "path": "12"
    },
    "9696": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13112,
        14439
      ],
      "op": "POP",
      "path": "12"
    },
    "9697": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13112,
        14439
      ],
      "op": "POP",
      "path": "12"
    },
    "9698": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13112,
        14439
      ],
      "op": "POP",
      "path": "12"
    },
    "9699": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13112,
        14439
      ],
      "op": "POP",
      "path": "12"
    },
    "9700": {
      "fn": "PolicyManager.addFeeToNode",
      "offset": [
        13112,
        14439
      ],
      "op": "POP",
      "path": "12"
    },
    "9701": {
      "fn": "PolicyManager.addFeeToNode",
      "jump": "o",
      "offset": [
        13112,
        14439
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9702": {
      "fn": "Address.sendValue",
      "offset": [
        2065,
        2377
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "9703": {
      "fn": "Address.sendValue",
      "offset": [
        2179,
        2185
      ],
      "op": "DUP1",
      "path": "40",
      "statement": 134
    },
    "9704": {
      "fn": "Address.sendValue",
      "offset": [
        2154,
        2175
      ],
      "op": "SELFBALANCE",
      "path": "40"
    },
    "9705": {
      "fn": "Address.sendValue",
      "offset": [
        2154,
        2185
      ],
      "op": "LT",
      "path": "40"
    },
    "9706": {
      "branch": 295,
      "fn": "Address.sendValue",
      "offset": [
        2154,
        2185
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "9707": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2636"
    },
    "9710": {
      "branch": 295,
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "9711": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "9713": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "9714": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9718": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9720": {
      "op": "SHL"
    },
    "9721": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "DUP2",
      "path": "40"
    },
    "9722": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "9723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9725": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "9727": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "DUP3",
      "path": "40"
    },
    "9728": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "ADD",
      "path": "40"
    },
    "9729": {
      "op": "MSTORE"
    },
    "9730": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "9732": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9734": {
      "op": "DUP3"
    },
    "9735": {
      "op": "ADD"
    },
    "9736": {
      "op": "MSTORE"
    },
    "9737": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E6365000000"
    },
    "9770": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9772": {
      "op": "DUP3"
    },
    "9773": {
      "op": "ADD"
    },
    "9774": {
      "op": "MSTORE"
    },
    "9775": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9777": {
      "op": "ADD"
    },
    "9778": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x129A"
    },
    "9781": {
      "op": "JUMP"
    },
    "9782": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "9783": {
      "fn": "Address.sendValue",
      "offset": [
        2231,
        2243
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "9785": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2258
      ],
      "op": "DUP3",
      "path": "40"
    },
    "9786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9792": {
      "op": "SHL"
    },
    "9793": {
      "op": "SUB"
    },
    "9794": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2263
      ],
      "op": "AND",
      "path": "40"
    },
    "9795": {
      "fn": "Address.sendValue",
      "offset": [
        2271,
        2277
      ],
      "op": "DUP3",
      "path": "40"
    },
    "9796": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "9798": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "9799": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "9801": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "9803": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "9804": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP1",
      "path": "40"
    },
    "9805": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP4",
      "path": "40"
    },
    "9806": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "SUB",
      "path": "40"
    },
    "9807": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP2",
      "path": "40"
    },
    "9808": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP6",
      "path": "40"
    },
    "9809": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP8",
      "path": "40"
    },
    "9810": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "GAS",
      "path": "40"
    },
    "9811": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "CALL",
      "path": "40"
    },
    "9812": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "9813": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "9814": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "9815": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "9816": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "9817": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP1",
      "path": "40"
    },
    "9818": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "9820": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP2",
      "path": "40"
    },
    "9821": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "EQ",
      "path": "40"
    },
    "9822": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2683"
    },
    "9825": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "9826": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "9828": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "9829": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "9830": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "9831": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1F"
    },
    "9833": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "NOT",
      "path": "40"
    },
    "9834": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x3F"
    },
    "9836": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "9837": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "ADD",
      "path": "40"
    },
    "9838": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "AND",
      "path": "40"
    },
    "9839": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP3",
      "path": "40"
    },
    "9840": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "ADD",
      "path": "40"
    },
    "9841": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "9843": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "9844": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "9845": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP3",
      "path": "40"
    },
    "9846": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "9847": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "9848": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "9850": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "9852": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP5",
      "path": "40"
    },
    "9853": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "ADD",
      "path": "40"
    },
    "9854": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "RETURNDATACOPY",
      "path": "40"
    },
    "9855": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2688"
    },
    "9858": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "JUMP",
      "path": "40"
    },
    "9859": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "9860": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "9862": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "9863": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "9864": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "9865": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "9866": {
      "fn": "Address.sendValue",
      "offset": [
        2230,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "9867": {
      "fn": "Address.sendValue",
      "offset": [
        2230,
        2282
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "9868": {
      "fn": "Address.sendValue",
      "offset": [
        2230,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "9869": {
      "branch": 296,
      "fn": "Address.sendValue",
      "offset": [
        2300,
        2307
      ],
      "op": "DUP1",
      "path": "40",
      "statement": 135
    },
    "9870": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x19BA"
    },
    "9873": {
      "branch": 296,
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "9874": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "9876": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "9877": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9881": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9883": {
      "op": "SHL"
    },
    "9884": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "DUP2",
      "path": "40"
    },
    "9885": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "9886": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9888": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "9890": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "DUP3",
      "path": "40"
    },
    "9891": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "ADD",
      "path": "40"
    },
    "9892": {
      "op": "MSTORE"
    },
    "9893": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "9895": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9897": {
      "op": "DUP3"
    },
    "9898": {
      "op": "ADD"
    },
    "9899": {
      "op": "MSTORE"
    },
    "9900": {
      "op": "PUSH32",
      "value": "0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072"
    },
    "9933": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9935": {
      "op": "DUP3"
    },
    "9936": {
      "op": "ADD"
    },
    "9937": {
      "op": "MSTORE"
    },
    "9938": {
      "op": "PUSH32",
      "value": "0x6563697069656E74206D61792068617665207265766572746564000000000000"
    },
    "9971": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9973": {
      "op": "DUP3"
    },
    "9974": {
      "op": "ADD"
    },
    "9975": {
      "op": "MSTORE"
    },
    "9976": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9978": {
      "op": "ADD"
    },
    "9979": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x129A"
    },
    "9982": {
      "op": "JUMP"
    },
    "9983": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7577,
        8072
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9984": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7651,
        7658
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9986": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7814,
        7823
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9987": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7814,
        7834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "9989": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7814,
        7834
      ],
      "op": "ADD",
      "path": "12"
    },
    "9990": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7814,
        7834
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9991": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7838,
        7839
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9993": {
      "branch": 274,
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7814,
        7839
      ],
      "op": "EQ",
      "path": "12"
    },
    "9994": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7814,
        7894
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9995": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7814,
        7894
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2724"
    },
    "9998": {
      "branch": 274,
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7814,
        7894
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "9999": {
      "op": "POP"
    },
    "10000": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7878,
        7890
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "10002": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7878,
        7894
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10003": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7855,
        7875
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "10005": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7855,
        7875
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10006": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7855,
        7875
      ],
      "op": "ADD",
      "path": "12"
    },
    "10007": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7855,
        7875
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10012": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10014": {
      "op": "SHL"
    },
    "10015": {
      "op": "SUB"
    },
    "10016": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7878,
        7894
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10017": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7878,
        7894
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10018": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7878,
        7894
      ],
      "op": "AND",
      "path": "12"
    },
    "10019": {
      "op": "GT"
    },
    "10020": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7814,
        7894
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10021": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7814,
        7949
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10022": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7814,
        7949
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x273F"
    },
    "10025": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7814,
        7949
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10026": {
      "op": "POP"
    },
    "10027": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7933,
        7949
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "10029": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7933,
        7949
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10030": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7910,
        7930
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "10032": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7910,
        7930
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10033": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7910,
        7930
      ],
      "op": "ADD",
      "path": "12"
    },
    "10034": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7910,
        7930
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10039": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10041": {
      "op": "SHL"
    },
    "10042": {
      "op": "SUB"
    },
    "10043": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7933,
        7949
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10044": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7933,
        7949
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10045": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7933,
        7949
      ],
      "op": "AND",
      "path": "12"
    },
    "10046": {
      "op": "LT"
    },
    "10047": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7814,
        7949
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10048": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7810,
        8066
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10049": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7810,
        8066
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x275C"
    },
    "10052": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7810,
        8066
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10053": {
      "op": "POP"
    },
    "10054": {
      "op": "POP"
    },
    "10055": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7972,
        7984
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 136,
      "value": "0x6"
    },
    "10057": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7972,
        7997
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10060": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10062": {
      "op": "SHL"
    },
    "10063": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7972,
        7997
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10064": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7972,
        7997
      ],
      "op": "DIV",
      "path": "12"
    },
    "10065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10069": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10071": {
      "op": "SHL"
    },
    "10072": {
      "op": "SUB"
    },
    "10073": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7972,
        7997
      ],
      "op": "AND",
      "path": "12"
    },
    "10074": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7972,
        7997
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10075": {
      "fn": "PolicyManager.getMinFeeRate",
      "jump": "o",
      "offset": [
        7577,
        8072
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10076": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7810,
        8066
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10077": {
      "op": "POP"
    },
    "10078": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8035,
        8055
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 137,
      "value": "0x2"
    },
    "10080": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8035,
        8055
      ],
      "op": "ADD",
      "path": "12"
    },
    "10081": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8035,
        8055
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10082": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        8035,
        8055
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10083": {
      "fn": "PolicyManager.getMinFeeRate",
      "jump": "o",
      "offset": [
        7577,
        8072
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10084": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7810,
        8066
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10085": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7577,
        8072
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10086": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7577,
        8072
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10087": {
      "fn": "PolicyManager.getMinFeeRate",
      "offset": [
        7577,
        8072
      ],
      "op": "POP",
      "path": "12"
    },
    "10088": {
      "fn": "PolicyManager.getMinFeeRate",
      "jump": "o",
      "offset": [
        7577,
        8072
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10089": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23647,
        24613
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10094": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10096": {
      "op": "SHL"
    },
    "10097": {
      "op": "SUB"
    },
    "10098": {
      "op": "NOT"
    },
    "10099": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23834,
        23853
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10100": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23834,
        23853
      ],
      "op": "AND",
      "path": "12"
    },
    "10101": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23750,
        23769
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10103": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23834,
        23853
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10104": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23834,
        23853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10105": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23834,
        23853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10106": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23834,
        23842
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "10108": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23834,
        23853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10110": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23834,
        23853
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10111": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23834,
        23853
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10113": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23834,
        23853
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10114": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23834,
        23853
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10115": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23872,
        23884
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 138,
      "value": "0x1"
    },
    "10117": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23872,
        23884
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10118": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23872,
        23884
      ],
      "op": "ADD",
      "path": "12"
    },
    "10119": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23872,
        23884
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10126": {
      "op": "SHL"
    },
    "10127": {
      "op": "SUB"
    },
    "10128": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23872,
        23884
      ],
      "op": "AND",
      "path": "12"
    },
    "10129": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23888,
        23898
      ],
      "op": "CALLER",
      "path": "12"
    },
    "10130": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23872,
        23898
      ],
      "op": "EQ",
      "path": "12"
    },
    "10131": {
      "branch": 275,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23872,
        23898
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10132": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23872,
        23930
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27AB"
    },
    "10135": {
      "branch": 275,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23872,
        23930
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10136": {
      "op": "POP"
    },
    "10137": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23902,
        23916
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10138": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23902,
        23916
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10139": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23902,
        23916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "10142": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23902,
        23916
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10143": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23902,
        23916
      ],
      "op": "DIV",
      "path": "12"
    },
    "10144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10150": {
      "op": "SHL"
    },
    "10151": {
      "op": "SUB"
    },
    "10152": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23902,
        23916
      ],
      "op": "AND",
      "path": "12"
    },
    "10153": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23920,
        23930
      ],
      "op": "CALLER",
      "path": "12"
    },
    "10154": {
      "branch": 276,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23902,
        23930
      ],
      "op": "EQ",
      "path": "12"
    },
    "10155": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23872,
        23930
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10156": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23871,
        23951
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10157": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23871,
        23951
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10158": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23871,
        23951
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27B9"
    },
    "10161": {
      "branch": 276,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23871,
        23951
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10162": {
      "op": "POP"
    },
    "10163": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23936,
        23951
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10164": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23936,
        23951
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10165": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23936,
        23951
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "10167": {
      "branch": 277,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23936,
        23951
      ],
      "op": "AND",
      "path": "12"
    },
    "10168": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23935,
        23951
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10169": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23871,
        23951
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10170": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23863,
        23952
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27C2"
    },
    "10173": {
      "branch": 277,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23863,
        23952
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10174": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23863,
        23952
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10176": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23863,
        23952
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10177": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23863,
        23952
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10178": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23863,
        23952
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10179": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23962,
        23971
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10181": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23985,
        24469
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10182": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23996,
        24015
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "10184": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23996,
        24015
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10185": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23996,
        24015
      ],
      "op": "ADD",
      "path": "12"
    },
    "10186": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23996,
        24022
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10187": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23992,
        24022
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10188": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23992,
        24022
      ],
      "op": "LT",
      "path": "12"
    },
    "10189": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23985,
        24469
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10190": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23985,
        24469
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2886"
    },
    "10193": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23985,
        24469
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10194": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24043,
        24078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10196": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24087
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10197": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24100
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "10199": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24100
      ],
      "op": "ADD",
      "path": "12"
    },
    "10200": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24101,
        24102
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10201": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10202": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10203": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10204": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "LT",
      "path": "12"
    },
    "10205": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27E8"
    },
    "10208": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10209": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27E8"
    },
    "10212": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A22"
    },
    "10215": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "jump": "i",
      "offset": [
        24081,
        24103
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10216": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10217": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10219": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10220": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10221": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10222": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10224": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10225": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10226": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10227": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "10229": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10230": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10231": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "MUL",
      "path": "12"
    },
    "10232": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "ADD",
      "path": "12"
    },
    "10233": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24121,
        24137
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10234": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24121,
        24137
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10235": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10236": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24081,
        24103
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10237": {
      "op": "POP"
    },
    "10238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10244": {
      "op": "SHL"
    },
    "10245": {
      "op": "SUB"
    },
    "10246": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24121,
        24137
      ],
      "op": "AND",
      "path": "12"
    },
    "10247": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24121,
        24154
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10248": {
      "branch": 278,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24121,
        24154
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10249": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24121,
        24209
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2832"
    },
    "10252": {
      "branch": 278,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24121,
        24209
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10253": {
      "op": "POP"
    },
    "10254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10260": {
      "op": "SHL"
    },
    "10261": {
      "op": "SUB"
    },
    "10262": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24158,
        24180
      ],
      "op": "DUP6",
      "path": "12"
    },
    "10263": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24158,
        24180
      ],
      "op": "AND",
      "path": "12"
    },
    "10264": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24158,
        24180
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10265": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24158,
        24180
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10266": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24158,
        24180
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10267": {
      "branch": 279,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24158,
        24180
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10268": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24158,
        24209
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2832"
    },
    "10271": {
      "branch": 279,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24158,
        24209
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10272": {
      "op": "POP"
    },
    "10273": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24193,
        24209
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10274": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24193,
        24209
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10281": {
      "op": "SHL"
    },
    "10282": {
      "op": "SUB"
    },
    "10283": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24184,
        24209
      ],
      "op": "DUP7",
      "path": "12"
    },
    "10284": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24184,
        24209
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10285": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24184,
        24209
      ],
      "op": "AND",
      "path": "12"
    },
    "10286": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24193,
        24209
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10287": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24193,
        24209
      ],
      "op": "AND",
      "path": "12"
    },
    "10288": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24184,
        24209
      ],
      "op": "EQ",
      "path": "12"
    },
    "10289": {
      "branch": 280,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24184,
        24209
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10290": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24158,
        24209
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10291": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24117,
        24252
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10292": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24117,
        24252
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x283D"
    },
    "10295": {
      "branch": 280,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24117,
        24252
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10296": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24229,
        24237
      ],
      "op": "POP",
      "path": "12",
      "statement": 139
    },
    "10297": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24229,
        24237
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2874"
    },
    "10300": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24229,
        24237
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10301": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24117,
        24252
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10302": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24266,
        24289
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10304": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24295,
        24336
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2849"
    },
    "10307": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24316,
        24322
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10308": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24324,
        24335
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10309": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24295,
        24315
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3031"
    },
    "10312": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "jump": "i",
      "offset": [
        24295,
        24336
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10313": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24295,
        24336
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10314": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24265,
        24336
      ],
      "op": "POP",
      "path": "12"
    },
    "10315": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24265,
        24336
      ],
      "op": "POP",
      "path": "12"
    },
    "10316": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24265,
        24336
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10317": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24265,
        24336
      ],
      "op": "POP",
      "path": "12"
    },
    "10318": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24365,
        24380
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 140
    },
    "10319": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24350,
        24380
      ],
      "op": "DUP6",
      "path": "12"
    },
    "10320": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24350,
        24380
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2859"
    },
    "10323": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24350,
        24380
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10324": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24350,
        24380
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10325": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24350,
        24380
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3B07"
    },
    "10328": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "jump": "i",
      "offset": [
        24350,
        24380
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10329": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24350,
        24380
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10330": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24350,
        24380
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10331": {
      "op": "POP"
    },
    "10332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10338": {
      "op": "SHL"
    },
    "10339": {
      "op": "SUB"
    },
    "10340": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24398,
        24420
      ],
      "op": "DUP7",
      "path": "12"
    },
    "10341": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24398,
        24420
      ],
      "op": "AND",
      "path": "12"
    },
    "10342": {
      "branch": 281,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24398,
        24420
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10343": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24394,
        24459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2871"
    },
    "10346": {
      "branch": 281,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24394,
        24459
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10347": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24439,
        24444
      ],
      "op": "POP",
      "path": "12",
      "statement": 141
    },
    "10348": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24439,
        24444
      ],
      "op": "POP",
      "path": "12"
    },
    "10349": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24439,
        24444
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2886"
    },
    "10352": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24439,
        24444
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10353": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24394,
        24459
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10354": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24029,
        24469
      ],
      "op": "POP",
      "path": "12"
    },
    "10355": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24029,
        24469
      ],
      "op": "POP",
      "path": "12"
    },
    "10356": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23985,
        24469
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10357": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24024,
        24027
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 142
    },
    "10358": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24024,
        24027
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x287E"
    },
    "10361": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24024,
        24027
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10362": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24024,
        24027
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A38"
    },
    "10365": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "jump": "i",
      "offset": [
        24024,
        24027
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10366": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24024,
        24027
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10367": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24024,
        24027
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10368": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24024,
        24027
      ],
      "op": "POP",
      "path": "12"
    },
    "10369": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24024,
        24027
      ],
      "op": "POP",
      "path": "12"
    },
    "10370": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23985,
        24469
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27C5"
    },
    "10373": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23985,
        24469
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10374": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23985,
        24469
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10381": {
      "op": "SHL"
    },
    "10382": {
      "op": "SUB"
    },
    "10383": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24482,
        24504
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10384": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24482,
        24504
      ],
      "op": "AND",
      "path": "12"
    },
    "10385": {
      "branch": 282,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24482,
        24504
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10386": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24478,
        24607
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28A5"
    },
    "10389": {
      "branch": 282,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24478,
        24607
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10390": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24569,
        24588
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 143,
      "value": "0x8"
    },
    "10392": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24569,
        24588
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10393": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24569,
        24588
      ],
      "op": "ADD",
      "path": "12"
    },
    "10394": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24569,
        24595
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10395": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24565,
        24595
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10396": {
      "branch": 283,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24565,
        24595
      ],
      "op": "LT",
      "path": "12"
    },
    "10397": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24557,
        24596
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28A5"
    },
    "10400": {
      "branch": 283,
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24557,
        24596
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10401": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24557,
        24596
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10403": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24557,
        24596
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10404": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24557,
        24596
      ],
      "op": "REVERT",
      "path": "12"
    },
    "10405": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        24557,
        24596
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10406": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23775,
        24613
      ],
      "op": "POP",
      "path": "12"
    },
    "10407": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23775,
        24613
      ],
      "op": "POP",
      "path": "12"
    },
    "10408": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23647,
        24613
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10409": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23647,
        24613
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10410": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23647,
        24613
      ],
      "op": "POP",
      "path": "12"
    },
    "10411": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "offset": [
        23647,
        24613
      ],
      "op": "POP",
      "path": "12"
    },
    "10412": {
      "fn": "PolicyManager.calculateRefundValueInternal",
      "jump": "o",
      "offset": [
        23647,
        24613
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10413": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        15994,
        16676
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10414": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16076,
        16099
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10415": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16076,
        16099
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10418": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10420": {
      "op": "SHL"
    },
    "10421": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16076,
        16099
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10422": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16076,
        16099
      ],
      "op": "DIV",
      "path": "12"
    },
    "10423": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16076,
        16099
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "10426": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16076,
        16099
      ],
      "op": "AND",
      "path": "12"
    },
    "10427": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16076,
        16104
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10428": {
      "branch": 284,
      "fn": "PolicyManager.updateFee",
      "offset": [
        16076,
        16104
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10429": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16076,
        16142
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28D6"
    },
    "10432": {
      "branch": 284,
      "fn": "PolicyManager.updateFee",
      "offset": [
        16076,
        16142
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10433": {
      "op": "POP"
    },
    "10434": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16119,
        16142
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10435": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16119,
        16142
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10436": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16119,
        16142
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "10439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10441": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10443": {
      "op": "SHL"
    },
    "10444": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16119,
        16142
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10445": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16119,
        16142
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10446": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16119,
        16142
      ],
      "op": "DIV",
      "path": "12"
    },
    "10447": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16119,
        16142
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10448": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16119,
        16142
      ],
      "op": "AND",
      "path": "12"
    },
    "10449": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16108,
        16142
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10450": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16108,
        16142
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10451": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16108,
        16142
      ],
      "op": "AND",
      "path": "12"
    },
    "10452": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16108,
        16142
      ],
      "op": "GT",
      "path": "12"
    },
    "10453": {
      "branch": 285,
      "fn": "PolicyManager.updateFee",
      "offset": [
        16108,
        16142
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10454": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16076,
        16142
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10455": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16072,
        16175
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10456": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16072,
        16175
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28DF"
    },
    "10459": {
      "branch": 285,
      "fn": "PolicyManager.updateFee",
      "offset": [
        16072,
        16175
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10460": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        15994,
        16676
      ],
      "op": "POP",
      "path": "12"
    },
    "10461": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        15994,
        16676
      ],
      "op": "POP",
      "path": "12"
    },
    "10462": {
      "fn": "PolicyManager.updateFee",
      "jump": "o",
      "offset": [
        15994,
        16676
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10463": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16072,
        16175
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10464": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16200,
        16223
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10465": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16200,
        16223
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10466": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16189,
        16197
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10468": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16189,
        16197
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10469": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16200,
        16227
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28FA"
    },
    "10472": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16200,
        16227
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10475": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10477": {
      "op": "SHL"
    },
    "10478": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16200,
        16223
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10479": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16200,
        16223
      ],
      "op": "DIV",
      "path": "12"
    },
    "10480": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16200,
        16223
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "10483": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16200,
        16223
      ],
      "op": "AND",
      "path": "12"
    },
    "10484": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16226,
        16227
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10486": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16200,
        16227
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39BA"
    },
    "10489": {
      "fn": "PolicyManager.updateFee",
      "jump": "i",
      "offset": [
        16200,
        16227
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10490": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16200,
        16227
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10491": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16189,
        16227
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10492": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16189,
        16227
      ],
      "op": "POP",
      "path": "12"
    },
    "10493": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16184,
        16582
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10494": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16234,
        16241
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10495": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16229,
        16241
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "10498": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16229,
        16241
      ],
      "op": "AND",
      "path": "12"
    },
    "10499": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16229,
        16230
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10500": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16229,
        16241
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "10503": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16229,
        16241
      ],
      "op": "AND",
      "path": "12"
    },
    "10504": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16229,
        16241
      ],
      "op": "GT",
      "path": "12"
    },
    "10505": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16184,
        16582
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x298B"
    },
    "10508": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16184,
        16582
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10509": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16277,
        16294
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "10512": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16277,
        16294
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10513": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16277,
        16294
      ],
      "op": "AND",
      "path": "12"
    },
    "10514": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16262,
        16274
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10516": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16277,
        16294
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10517": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16277,
        16294
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10518": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16277,
        16294
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10519": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16277,
        16291
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "10521": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16277,
        16291
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10522": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16277,
        16291
      ],
      "op": "ADD",
      "path": "12"
    },
    "10523": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16277,
        16294
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10525": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16277,
        16294
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10526": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16277,
        16294
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10528": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16277,
        16294
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10529": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16277,
        16294
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10530": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16277,
        16294
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10535": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10537": {
      "op": "SHL"
    },
    "10538": {
      "op": "SUB"
    },
    "10539": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16312,
        16338
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10540": {
      "branch": 286,
      "fn": "PolicyManager.updateFee",
      "offset": [
        16312,
        16338
      ],
      "op": "EQ",
      "path": "12"
    },
    "10541": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16308,
        16450
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10542": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16308,
        16450
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x294D"
    },
    "10545": {
      "branch": 286,
      "fn": "PolicyManager.updateFee",
      "offset": [
        16308,
        16450
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10546": {
      "op": "POP"
    },
    "10547": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16388,
        16405
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 144,
      "value": "0xFFFF"
    },
    "10550": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16388,
        16405
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10551": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16388,
        16405
      ],
      "op": "AND",
      "path": "12"
    },
    "10552": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16408,
        16409
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10554": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16388,
        16405
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10555": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16388,
        16405
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10556": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16388,
        16405
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10557": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16388,
        16402
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "10559": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16388,
        16402
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10560": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16388,
        16402
      ],
      "op": "ADD",
      "path": "12"
    },
    "10561": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16388,
        16405
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10563": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16388,
        16405
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10564": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16388,
        16405
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10566": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16388,
        16405
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10567": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16388,
        16405
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10568": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16388,
        16409
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10569": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16427,
        16435
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 145,
      "value": "0x2979"
    },
    "10572": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16427,
        16435
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10573": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16308,
        16450
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10574": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16480,
        16493
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 146,
      "value": "0x1"
    },
    "10576": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16480,
        16493
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10577": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16480,
        16493
      ],
      "op": "ADD",
      "path": "12"
    },
    "10578": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16480,
        16493
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10579": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16480,
        16510
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x295C"
    },
    "10582": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16480,
        16510
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10583": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16504,
        16509
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10584": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16480,
        16503
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3495"
    },
    "10587": {
      "fn": "PolicyManager.updateFee",
      "jump": "i",
      "offset": [
        16480,
        16510
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10588": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16480,
        16510
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10589": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16464,
        16477
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10591": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16464,
        16477
      ],
      "op": "DUP6",
      "path": "12"
    },
    "10592": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16464,
        16477
      ],
      "op": "ADD",
      "path": "12"
    },
    "10593": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16464,
        16510
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10594": {
      "op": "POP"
    },
    "10595": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16550,
        16567
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 147,
      "value": "0xFFFF"
    },
    "10598": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16550,
        16567
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10599": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16550,
        16567
      ],
      "op": "AND",
      "path": "12"
    },
    "10600": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16570,
        16571
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10602": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16550,
        16567
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10603": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16550,
        16567
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10604": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16550,
        16567
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10605": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16550,
        16564
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "10607": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16550,
        16564
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10608": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16550,
        16564
      ],
      "op": "ADD",
      "path": "12"
    },
    "10609": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16550,
        16567
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10611": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16550,
        16567
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10612": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16550,
        16567
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10614": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16550,
        16567
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10615": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16550,
        16567
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10616": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16550,
        16571
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10617": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16184,
        16582
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10618": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16243,
        16246
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 148
    },
    "10619": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16243,
        16246
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2983"
    },
    "10622": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16243,
        16246
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10623": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16243,
        16246
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3B1F"
    },
    "10626": {
      "fn": "PolicyManager.updateFee",
      "jump": "i",
      "offset": [
        16243,
        16246
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10627": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16243,
        16246
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10628": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16243,
        16246
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10629": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16243,
        16246
      ],
      "op": "POP",
      "path": "12"
    },
    "10630": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16243,
        16246
      ],
      "op": "POP",
      "path": "12"
    },
    "10631": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16184,
        16582
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28FD"
    },
    "10634": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16184,
        16582
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10635": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16184,
        16582
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10636": {
      "op": "POP"
    },
    "10637": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16591,
        16624
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 149
    },
    "10638": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16591,
        16624
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10639": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16591,
        16624
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "10642": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16591,
        16624
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10643": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16591,
        16624
      ],
      "op": "AND",
      "path": "12"
    },
    "10644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10646": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10648": {
      "op": "SHL"
    },
    "10649": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16591,
        16624
      ],
      "op": "MUL",
      "path": "12"
    },
    "10650": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "10653": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10655": {
      "op": "SHL"
    },
    "10656": {
      "op": "NOT"
    },
    "10657": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16591,
        16624
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10658": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16591,
        16624
      ],
      "op": "AND",
      "path": "12"
    },
    "10659": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16591,
        16624
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10660": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16591,
        16624
      ],
      "op": "OR",
      "path": "12"
    },
    "10661": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16591,
        16624
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10662": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16591,
        16624
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10665": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16655,
        16668
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 150
    },
    "10666": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16655,
        16668
      ],
      "op": "ADD",
      "path": "12"
    },
    "10667": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16655,
        16668
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10668": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16655,
        16668
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10669": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16591,
        16596
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10670": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16591,
        16596
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10671": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16591,
        16614
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10673": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16591,
        16614
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10674": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29CA"
    },
    "10677": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10678": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16655,
        16668
      ],
      "op": "DUP6",
      "path": "12"
    },
    "10679": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16655,
        16668
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10684": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10686": {
      "op": "SHL"
    },
    "10687": {
      "op": "SUB"
    },
    "10688": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10689": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10690": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "AND",
      "path": "12"
    },
    "10691": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10692": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "AND",
      "path": "12"
    },
    "10693": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "OR",
      "path": "12"
    },
    "10694": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3B41"
    },
    "10697": {
      "fn": "PolicyManager.updateFee",
      "jump": "i",
      "offset": [
        16634,
        16669
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10698": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10699": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10700": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "POP",
      "path": "12"
    },
    "10701": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "10704": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "EXP",
      "path": "12"
    },
    "10705": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10706": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10707": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10712": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10714": {
      "op": "SHL"
    },
    "10715": {
      "op": "SUB"
    },
    "10716": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "MUL",
      "path": "12"
    },
    "10717": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "NOT",
      "path": "12"
    },
    "10718": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "AND",
      "path": "12"
    },
    "10719": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10720": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10725": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10727": {
      "op": "SHL"
    },
    "10728": {
      "op": "SUB"
    },
    "10729": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "AND",
      "path": "12"
    },
    "10730": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "MUL",
      "path": "12"
    },
    "10731": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "OR",
      "path": "12"
    },
    "10732": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10733": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10734": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        16634,
        16669
      ],
      "op": "POP",
      "path": "12"
    },
    "10735": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        15994,
        16676
      ],
      "op": "POP",
      "path": "12"
    },
    "10736": {
      "fn": "PolicyManager.updateFee",
      "offset": [
        15994,
        16676
      ],
      "op": "POP",
      "path": "12"
    },
    "10737": {
      "fn": "PolicyManager.updateFee",
      "jump": "o",
      "offset": [
        15994,
        16676
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10738": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1837,
        1973
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "10739": {
      "offset": [
        1451,
        1452
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "10741": {
      "offset": [
        1653,
        1662
      ],
      "op": "DUP1",
      "path": "26"
    },
    "10742": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1653,
        1662
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "10743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10747": {
      "op": "SHL"
    },
    "10748": {
      "offset": [
        1653,
        1662
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "10749": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1653,
        1662
      ],
      "op": "DIV",
      "path": "26"
    },
    "10750": {
      "offset": [
        1653,
        1678
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xFF"
    },
    "10752": {
      "offset": [
        1653,
        1662
      ],
      "op": "AND",
      "path": "26"
    },
    "10753": {
      "offset": [
        1653,
        1678
      ],
      "op": "EQ",
      "path": "26"
    },
    "10754": {
      "offset": [
        1645,
        1679
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2A0A"
    },
    "10757": {
      "offset": [
        1645,
        1679
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "10758": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1645,
        1679
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "10760": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1645,
        1679
      ],
      "op": "DUP1",
      "path": "26"
    },
    "10761": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1645,
        1679
      ],
      "op": "REVERT",
      "path": "26"
    },
    "10762": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1645,
        1679
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "10763": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1928,
        1966
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 151,
      "value": "0x40"
    },
    "10765": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1928,
        1966
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "10766": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1955,
        1965
      ],
      "op": "CALLER",
      "path": "26"
    },
    "10767": {
      "op": "DUP2"
    },
    "10768": {
      "op": "MSTORE"
    },
    "10769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10775": {
      "op": "SHL"
    },
    "10776": {
      "op": "SUB"
    },
    "10777": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1928,
        1966
      ],
      "op": "DUP3",
      "path": "26"
    },
    "10778": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1928,
        1966
      ],
      "op": "AND",
      "path": "26"
    },
    "10779": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1928,
        1966
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "10780": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1928,
        1966
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x1E8D98C1B4A0D9BD2E2371026B632EB2773FCCE41742E41F02F574AB69868D4C"
    },
    "10813": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1928,
        1966
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "10814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10816": {
      "op": "ADD"
    },
    "10817": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1928,
        1966
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "10818": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1928,
        1966
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "10820": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1928,
        1966
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "10821": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1928,
        1966
      ],
      "op": "DUP1",
      "path": "26"
    },
    "10822": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1928,
        1966
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "10823": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1928,
        1966
      ],
      "op": "SUB",
      "path": "26"
    },
    "10824": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1928,
        1966
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "10825": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1928,
        1966
      ],
      "op": "LOG2",
      "path": "26"
    },
    "10826": {
      "fn": "Upgradeable.verifyState",
      "offset": [
        1837,
        1973
      ],
      "op": "POP",
      "path": "26"
    },
    "10827": {
      "fn": "Upgradeable.verifyState",
      "jump": "o",
      "offset": [
        1837,
        1973
      ],
      "op": "JUMP",
      "path": "26"
    },
    "10828": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3599,
        3858
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "10829": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3681,
        3695
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "10831": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3681,
        3695
      ],
      "op": "DUP1",
      "path": "26"
    },
    "10832": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3735,
        3779
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2A5C"
    },
    "10835": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3751,
        3758
      ],
      "op": "DUP5",
      "path": "26"
    },
    "10836": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3760,
        3769
      ],
      "op": "DUP5",
      "path": "26"
    },
    "10837": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3681,
        3695
      ],
      "op": "DUP4",
      "path": "26"
    },
    "10838": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3681,
        3695
      ],
      "op": "DUP1",
      "path": "26"
    },
    "10839": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3681,
        3695
      ],
      "op": "DUP1",
      "path": "26"
    },
    "10840": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3735,
        3750
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x34C2"
    },
    "10843": {
      "fn": "Upgradeable.delegateGet",
      "jump": "i",
      "offset": [
        3735,
        3779
      ],
      "op": "JUMP",
      "path": "26"
    },
    "10844": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3735,
        3779
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "10845": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3822,
        3842
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "10846": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3822,
        3842
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "10847": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3599,
        3858
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "10848": {
      "op": "POP"
    },
    "10849": {
      "op": "POP"
    },
    "10850": {
      "op": "POP"
    },
    "10851": {
      "op": "POP"
    },
    "10852": {
      "fn": "Upgradeable.delegateGet",
      "jump": "o",
      "offset": [
        3599,
        3858
      ],
      "op": "JUMP",
      "path": "26"
    },
    "10853": {
      "fn": "PolicyManager.delegateGetFeeRateRange",
      "offset": [
        30891,
        31147
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10854": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10856": {
      "op": "DUP1"
    },
    "10857": {
      "op": "MLOAD"
    },
    "10858": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10860": {
      "op": "DUP2"
    },
    "10861": {
      "op": "ADD"
    },
    "10862": {
      "op": "DUP3"
    },
    "10863": {
      "op": "MSTORE"
    },
    "10864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10866": {
      "op": "DUP1"
    },
    "10867": {
      "op": "DUP3"
    },
    "10868": {
      "op": "MSTORE"
    },
    "10869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10871": {
      "op": "DUP3"
    },
    "10872": {
      "op": "ADD"
    },
    "10873": {
      "op": "DUP2"
    },
    "10874": {
      "op": "SWAP1"
    },
    "10875": {
      "op": "MSTORE"
    },
    "10876": {
      "op": "SWAP2"
    },
    "10877": {
      "op": "DUP2"
    },
    "10878": {
      "op": "ADD"
    },
    "10879": {
      "op": "DUP3"
    },
    "10880": {
      "op": "SWAP1"
    },
    "10881": {
      "op": "MSTORE"
    },
    "10882": {
      "op": "SWAP1"
    },
    "10883": {
      "fn": "PolicyManager.delegateGetFeeRateRange",
      "offset": [
        31014,
        31075
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDA5"
    },
    "10886": {
      "fn": "PolicyManager.delegateGetFeeRateRange",
      "offset": [
        31030,
        31037
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10887": {
      "op": "PUSH4",
      "value": "0x65AF62C3"
    },
    "10892": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10894": {
      "op": "SHL"
    },
    "10895": {
      "op": "DUP4"
    },
    "10896": {
      "op": "DUP1"
    },
    "10897": {
      "op": "DUP1"
    },
    "10898": {
      "fn": "PolicyManager.delegateGetFeeRateRange",
      "offset": [
        31014,
        31029
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34C2"
    },
    "10901": {
      "fn": "PolicyManager.delegateGetFeeRateRange",
      "jump": "i",
      "offset": [
        31014,
        31075
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10902": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        29694,
        29989
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10903": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        29783,
        29803
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B29"
    },
    "10906": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10908": {
      "op": "MLOAD"
    },
    "10909": {
      "op": "DUP1"
    },
    "10910": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "10913": {
      "op": "ADD"
    },
    "10914": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10916": {
      "op": "MSTORE"
    },
    "10917": {
      "op": "DUP1"
    },
    "10918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10920": {
      "op": "ISZERO"
    },
    "10921": {
      "op": "ISZERO"
    },
    "10922": {
      "op": "DUP2"
    },
    "10923": {
      "op": "MSTORE"
    },
    "10924": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10926": {
      "op": "ADD"
    },
    "10927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10935": {
      "op": "SHL"
    },
    "10936": {
      "op": "SUB"
    },
    "10937": {
      "op": "AND"
    },
    "10938": {
      "op": "DUP2"
    },
    "10939": {
      "op": "MSTORE"
    },
    "10940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10942": {
      "op": "ADD"
    },
    "10943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10951": {
      "op": "SHL"
    },
    "10952": {
      "op": "SUB"
    },
    "10953": {
      "op": "AND"
    },
    "10954": {
      "op": "DUP2"
    },
    "10955": {
      "op": "MSTORE"
    },
    "10956": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10958": {
      "op": "ADD"
    },
    "10959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10965": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10967": {
      "op": "SHL"
    },
    "10968": {
      "op": "SUB"
    },
    "10969": {
      "op": "AND"
    },
    "10970": {
      "op": "DUP2"
    },
    "10971": {
      "op": "MSTORE"
    },
    "10972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10974": {
      "op": "ADD"
    },
    "10975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10981": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10983": {
      "op": "SHL"
    },
    "10984": {
      "op": "SUB"
    },
    "10985": {
      "op": "AND"
    },
    "10986": {
      "op": "DUP2"
    },
    "10987": {
      "op": "MSTORE"
    },
    "10988": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10990": {
      "op": "ADD"
    },
    "10991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10997": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10999": {
      "op": "SHL"
    },
    "11000": {
      "op": "SUB"
    },
    "11001": {
      "op": "AND"
    },
    "11002": {
      "op": "DUP2"
    },
    "11003": {
      "op": "MSTORE"
    },
    "11004": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11006": {
      "op": "ADD"
    },
    "11007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11009": {
      "op": "DUP2"
    },
    "11010": {
      "op": "MSTORE"
    },
    "11011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11013": {
      "op": "ADD"
    },
    "11014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11016": {
      "op": "DUP2"
    },
    "11017": {
      "op": "MSTORE"
    },
    "11018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11020": {
      "op": "ADD"
    },
    "11021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11023": {
      "op": "DUP2"
    },
    "11024": {
      "op": "MSTORE"
    },
    "11025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11027": {
      "op": "ADD"
    },
    "11028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11030": {
      "op": "DUP2"
    },
    "11031": {
      "op": "MSTORE"
    },
    "11032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11034": {
      "op": "ADD"
    },
    "11035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11037": {
      "op": "DUP2"
    },
    "11038": {
      "op": "MSTORE"
    },
    "11039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11041": {
      "op": "ADD"
    },
    "11042": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11044": {
      "op": "DUP2"
    },
    "11045": {
      "op": "MSTORE"
    },
    "11046": {
      "op": "POP"
    },
    "11047": {
      "op": "SWAP1"
    },
    "11048": {
      "op": "JUMP"
    },
    "11049": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        29783,
        29803
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11050": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        29819,
        29840
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11052": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        29843,
        29917
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B4A"
    },
    "11055": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        29859,
        29866
      ],
      "op": "DUP5",
      "path": "12"
    },
    "11056": {
      "op": "PUSH4",
      "value": "0x713C0E57"
    },
    "11061": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11063": {
      "op": "SHL"
    },
    "11064": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        29892,
        29893
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "11066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11070": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11072": {
      "op": "SHL"
    },
    "11073": {
      "op": "SUB"
    },
    "11074": {
      "op": "NOT"
    },
    "11075": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        29895,
        29913
      ],
      "op": "DUP8",
      "path": "12"
    },
    "11076": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        29895,
        29913
      ],
      "op": "AND",
      "path": "12"
    },
    "11077": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        29819,
        29840
      ],
      "op": "DUP6",
      "path": "12"
    },
    "11078": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        29843,
        29858
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34C2"
    },
    "11081": {
      "fn": "PolicyManager.delegateGetPolicy",
      "jump": "i",
      "offset": [
        29843,
        29917
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11082": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        29843,
        29917
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11083": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        29819,
        29917
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "11084": {
      "fn": "PolicyManager.delegateGetPolicy",
      "offset": [
        29694,
        29989
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "11085": {
      "op": "POP"
    },
    "11086": {
      "op": "POP"
    },
    "11087": {
      "op": "POP"
    },
    "11088": {
      "op": "POP"
    },
    "11089": {
      "fn": "PolicyManager.delegateGetPolicy",
      "jump": "o",
      "offset": [
        29694,
        29989
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11090": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3964,
        4250
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "11091": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4065,
        4079
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "11093": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4065,
        4079
      ],
      "op": "DUP1",
      "path": "26"
    },
    "11094": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4119,
        4171
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2B63"
    },
    "11097": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4135,
        4142
      ],
      "op": "DUP6",
      "path": "26"
    },
    "11098": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4144,
        4153
      ],
      "op": "DUP6",
      "path": "26"
    },
    "11099": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4155,
        4156
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "11101": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4158,
        4167
      ],
      "op": "DUP7",
      "path": "26"
    },
    "11102": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4065,
        4079
      ],
      "op": "DUP6",
      "path": "26"
    },
    "11103": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4119,
        4134
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x34C2"
    },
    "11106": {
      "fn": "Upgradeable.delegateGet",
      "jump": "i",
      "offset": [
        4119,
        4171
      ],
      "op": "JUMP",
      "path": "26"
    },
    "11107": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4119,
        4171
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "11108": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4214,
        4234
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "11109": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4214,
        4234
      ],
      "op": "SWAP6",
      "path": "26"
    },
    "11110": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3964,
        4250
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "11111": {
      "op": "POP"
    },
    "11112": {
      "op": "POP"
    },
    "11113": {
      "op": "POP"
    },
    "11114": {
      "op": "POP"
    },
    "11115": {
      "op": "POP"
    },
    "11116": {
      "fn": "Upgradeable.delegateGet",
      "jump": "o",
      "offset": [
        3964,
        4250
      ],
      "op": "JUMP",
      "path": "26"
    },
    "11117": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        30067,
        30433
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11118": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11120": {
      "op": "DUP1"
    },
    "11121": {
      "op": "MLOAD"
    },
    "11122": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11124": {
      "op": "DUP2"
    },
    "11125": {
      "op": "ADD"
    },
    "11126": {
      "op": "DUP3"
    },
    "11127": {
      "op": "MSTORE"
    },
    "11128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11130": {
      "op": "DUP1"
    },
    "11131": {
      "op": "DUP3"
    },
    "11132": {
      "op": "MSTORE"
    },
    "11133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11135": {
      "op": "DUP3"
    },
    "11136": {
      "op": "ADD"
    },
    "11137": {
      "op": "DUP2"
    },
    "11138": {
      "op": "SWAP1"
    },
    "11139": {
      "op": "MSTORE"
    },
    "11140": {
      "op": "SWAP2"
    },
    "11141": {
      "op": "DUP2"
    },
    "11142": {
      "op": "ADD"
    },
    "11143": {
      "op": "DUP3"
    },
    "11144": {
      "op": "SWAP1"
    },
    "11145": {
      "op": "MSTORE"
    },
    "11146": {
      "op": "SWAP1"
    },
    "11147": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        30250,
        30361
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9E0"
    },
    "11150": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        30279,
        30286
      ],
      "op": "DUP6",
      "path": "12"
    },
    "11151": {
      "op": "PUSH4",
      "value": "0xD845F4FB"
    },
    "11156": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11158": {
      "op": "SHL"
    },
    "11159": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        30322,
        30323
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "11161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11165": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11167": {
      "op": "SHL"
    },
    "11168": {
      "op": "SUB"
    },
    "11169": {
      "op": "NOT"
    },
    "11170": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        30325,
        30343
      ],
      "op": "DUP9",
      "path": "12"
    },
    "11171": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        30325,
        30343
      ],
      "op": "AND",
      "path": "12"
    },
    "11172": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        30353,
        30359
      ],
      "op": "DUP8",
      "path": "12"
    },
    "11173": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "offset": [
        30250,
        30265
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34C2"
    },
    "11176": {
      "fn": "PolicyManager.delegateGetArrangementInfo",
      "jump": "i",
      "offset": [
        30250,
        30361
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11177": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "offset": [
        30504,
        30816
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11178": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11180": {
      "op": "DUP1"
    },
    "11181": {
      "op": "MLOAD"
    },
    "11182": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11184": {
      "op": "DUP2"
    },
    "11185": {
      "op": "ADD"
    },
    "11186": {
      "op": "DUP3"
    },
    "11187": {
      "op": "MSTORE"
    },
    "11188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11190": {
      "op": "DUP1"
    },
    "11191": {
      "op": "DUP3"
    },
    "11192": {
      "op": "MSTORE"
    },
    "11193": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11195": {
      "op": "DUP3"
    },
    "11196": {
      "op": "ADD"
    },
    "11197": {
      "op": "DUP2"
    },
    "11198": {
      "op": "SWAP1"
    },
    "11199": {
      "op": "MSTORE"
    },
    "11200": {
      "op": "SWAP2"
    },
    "11201": {
      "op": "DUP2"
    },
    "11202": {
      "op": "ADD"
    },
    "11203": {
      "op": "DUP3"
    },
    "11204": {
      "op": "SWAP1"
    },
    "11205": {
      "op": "MSTORE"
    },
    "11206": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11208": {
      "op": "DUP2"
    },
    "11209": {
      "op": "ADD"
    },
    "11210": {
      "op": "DUP3"
    },
    "11211": {
      "op": "SWAP1"
    },
    "11212": {
      "op": "MSTORE"
    },
    "11213": {
      "op": "SWAP1"
    },
    "11214": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "offset": [
        30659,
        30744
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B4A"
    },
    "11217": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "offset": [
        30675,
        30682
      ],
      "op": "DUP5",
      "path": "12"
    },
    "11218": {
      "op": "PUSH4",
      "value": "0x189A5A17"
    },
    "11223": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11225": {
      "op": "SHL"
    },
    "11226": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "offset": [
        30705,
        30706
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "11228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11234": {
      "op": "SHL"
    },
    "11235": {
      "op": "SUB"
    },
    "11236": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "offset": [
        30716,
        30739
      ],
      "op": "DUP8",
      "path": "12"
    },
    "11237": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "offset": [
        30716,
        30739
      ],
      "op": "AND",
      "path": "12"
    },
    "11238": {
      "op": "DUP6"
    },
    "11239": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "offset": [
        30659,
        30674
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34C2"
    },
    "11242": {
      "fn": "PolicyManager.delegateGetNodeInfo",
      "jump": "i",
      "offset": [
        30659,
        30744
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11243": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4357,
        4712
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "11244": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4517,
        4531
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "11246": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4547,
        4568
      ],
      "op": "DUP1",
      "path": "26"
    },
    "11247": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4571,
        4633
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2BFC"
    },
    "11250": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4587,
        4594
      ],
      "op": "DUP7",
      "path": "26"
    },
    "11251": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4596,
        4605
      ],
      "op": "DUP7",
      "path": "26"
    },
    "11252": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4607,
        4608
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "11254": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4610,
        4620
      ],
      "op": "DUP8",
      "path": "26"
    },
    "11255": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4622,
        4632
      ],
      "op": "DUP8",
      "path": "26"
    },
    "11256": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4571,
        4586
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x34C2"
    },
    "11259": {
      "fn": "Upgradeable.delegateGet",
      "jump": "i",
      "offset": [
        4571,
        4633
      ],
      "op": "JUMP",
      "path": "26"
    },
    "11260": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4571,
        4633
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "11261": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4676,
        4696
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "11262": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4676,
        4696
      ],
      "op": "SWAP7",
      "path": "26"
    },
    "11263": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        4357,
        4712
      ],
      "op": "SWAP6",
      "path": "26"
    },
    "11264": {
      "op": "POP"
    },
    "11265": {
      "op": "POP"
    },
    "11266": {
      "op": "POP"
    },
    "11267": {
      "op": "POP"
    },
    "11268": {
      "op": "POP"
    },
    "11269": {
      "op": "POP"
    },
    "11270": {
      "fn": "Upgradeable.delegateGet",
      "jump": "o",
      "offset": [
        4357,
        4712
      ],
      "op": "JUMP",
      "path": "26"
    },
    "11271": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3066,
        4318
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "11272": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3195,
        3209
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "11274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11278": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11280": {
      "op": "SHL"
    },
    "11281": {
      "op": "SUB"
    },
    "11282": {
      "op": "NOT"
    },
    "11283": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3228,
        3252
      ],
      "op": "DUP3",
      "path": "22"
    },
    "11284": {
      "branch": 298,
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3228,
        3252
      ],
      "op": "AND",
      "path": "22"
    },
    "11285": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3225,
        4312
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C54"
    },
    "11288": {
      "branch": 298,
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3225,
        4312
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "11289": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 152,
      "value": "0x40"
    },
    "11291": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "11292": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3339,
        3343
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "11293": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3339,
        3343
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11294": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C36"
    },
    "11297": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11298": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "11300": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11302": {
      "op": "SHL"
    },
    "11303": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3392,
        3404
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11304": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3311,
        3328
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "11306": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3311,
        3328
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11307": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3339,
        3343
      ],
      "op": "DUP5",
      "path": "22"
    },
    "11308": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3339,
        3343
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11309": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3431,
        3439
      ],
      "op": "DUP9",
      "path": "22"
    },
    "11310": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3431,
        3439
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11311": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "11313": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "ADD",
      "path": "22"
    },
    "11314": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3B9E"
    },
    "11317": {
      "fn": "SignatureVerifier.hashEIP191",
      "jump": "i",
      "offset": [
        3375,
        3440
      ],
      "op": "JUMP",
      "path": "22"
    },
    "11318": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "11319": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "11321": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "11322": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "11324": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "DUP2",
      "path": "22"
    },
    "11325": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "DUP4",
      "path": "22"
    },
    "11326": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "SUB",
      "path": "22"
    },
    "11327": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "SUB",
      "path": "22"
    },
    "11328": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "DUP2",
      "path": "22"
    },
    "11329": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "11330": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11331": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "11333": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3375,
        3440
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "11334": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3365,
        3441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "11335": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3365,
        3441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "11336": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3365,
        3441
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11337": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3365,
        3441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "11339": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3365,
        3441
      ],
      "op": "ADD",
      "path": "22"
    },
    "11340": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3365,
        3441
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "11341": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3358,
        3441
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "11342": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3358,
        3441
      ],
      "op": "POP",
      "path": "22"
    },
    "11343": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3358,
        3441
      ],
      "op": "POP",
      "path": "22"
    },
    "11344": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3358,
        3441
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF00"
    },
    "11347": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3358,
        3441
      ],
      "op": "JUMP",
      "path": "22"
    },
    "11348": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3225,
        4312
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "11349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11353": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11355": {
      "op": "SHL"
    },
    "11356": {
      "op": "SUB"
    },
    "11357": {
      "op": "NOT"
    },
    "11358": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3462,
        3486
      ],
      "op": "DUP3",
      "path": "22"
    },
    "11359": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3462,
        3486
      ],
      "op": "AND",
      "path": "22"
    },
    "11360": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "11362": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11364": {
      "op": "SHL"
    },
    "11365": {
      "branch": 299,
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3462,
        3486
      ],
      "op": "EQ",
      "path": "22"
    },
    "11366": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3458,
        4312
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "11367": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3458,
        4312
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2E00"
    },
    "11370": {
      "branch": 299,
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3458,
        4312
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "11371": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3556,
        3571
      ],
      "op": "DUP3",
      "path": "22"
    },
    "11372": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3556,
        3571
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "11373": {
      "branch": 300,
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3593,
        3603
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 153
    },
    "11374": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3585,
        3647
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2CC9"
    },
    "11377": {
      "branch": 300,
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3585,
        3647
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "11378": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3585,
        3647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "11380": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3585,
        3647
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "11381": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11385": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11387": {
      "op": "SHL"
    },
    "11388": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3585,
        3647
      ],
      "op": "DUP2",
      "path": "22"
    },
    "11389": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3585,
        3647
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "11390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11392": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3585,
        3647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "11394": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3585,
        3647
      ],
      "op": "DUP3",
      "path": "22"
    },
    "11395": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3585,
        3647
      ],
      "op": "ADD",
      "path": "22"
    },
    "11396": {
      "op": "MSTORE"
    },
    "11397": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "11399": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11401": {
      "op": "DUP3"
    },
    "11402": {
      "op": "ADD"
    },
    "11403": {
      "op": "MSTORE"
    },
    "11404": {
      "op": "PUSH32",
      "value": "0x456D707479206D657373616765206E6F7420616C6C6F77656420666F72207665"
    },
    "11437": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11439": {
      "op": "DUP3"
    },
    "11440": {
      "op": "ADD"
    },
    "11441": {
      "op": "MSTORE"
    },
    "11442": {
      "op": "PUSH7",
      "value": "0x7273696F6E2045"
    },
    "11450": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "11452": {
      "op": "SHL"
    },
    "11453": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11455": {
      "op": "DUP3"
    },
    "11456": {
      "op": "ADD"
    },
    "11457": {
      "op": "MSTORE"
    },
    "11458": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11460": {
      "op": "ADD"
    },
    "11461": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3585,
        3647
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x129A"
    },
    "11464": {
      "op": "JUMP"
    },
    "11465": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3585,
        3647
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "11466": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3716,
        3730
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "11468": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3748,
        3839
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "11469": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3755,
        3766
      ],
      "op": "DUP2",
      "path": "22"
    },
    "11470": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3755,
        3766
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "11471": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3748,
        3839
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2CF2"
    },
    "11474": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3748,
        3839
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "11475": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3786,
        3794
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 154
    },
    "11476": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3786,
        3794
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2CDC"
    },
    "11479": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3786,
        3794
      ],
      "op": "DUP2",
      "path": "22"
    },
    "11480": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3786,
        3794
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3A38"
    },
    "11483": {
      "fn": "SignatureVerifier.hashEIP191",
      "jump": "i",
      "offset": [
        3786,
        3794
      ],
      "op": "JUMP",
      "path": "22"
    },
    "11484": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3786,
        3794
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "11485": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3786,
        3794
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "11486": {
      "op": "POP"
    },
    "11487": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3812,
        3824
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 155,
      "value": "0x2CEB"
    },
    "11490": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3812,
        3824
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11491": {
      "op": "POP"
    },
    "11492": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3822,
        3824
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "11494": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3812,
        3824
      ],
      "op": "DUP4",
      "path": "22"
    },
    "11495": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3812,
        3824
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3980"
    },
    "11498": {
      "fn": "SignatureVerifier.hashEIP191",
      "jump": "i",
      "offset": [
        3812,
        3824
      ],
      "op": "JUMP",
      "path": "22"
    },
    "11499": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3812,
        3824
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "11500": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3812,
        3824
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "11501": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3812,
        3824
      ],
      "op": "POP",
      "path": "22"
    },
    "11502": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3748,
        3839
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2CCC"
    },
    "11505": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3748,
        3839
      ],
      "op": "JUMP",
      "path": "22"
    },
    "11506": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3748,
        3839
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "11507": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3852,
        3877
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "11509": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3890,
        3896
      ],
      "op": "DUP2",
      "path": "22"
    },
    "11510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11514": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11516": {
      "op": "SHL"
    },
    "11517": {
      "op": "SUB"
    },
    "11518": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "DUP2",
      "path": "22"
    },
    "11519": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "GT",
      "path": "22"
    },
    "11520": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "11521": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D0C"
    },
    "11524": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "11525": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D0C"
    },
    "11528": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3BE5"
    },
    "11531": {
      "fn": "SignatureVerifier.hashEIP191",
      "jump": "i",
      "offset": [
        3880,
        3897
      ],
      "op": "JUMP",
      "path": "22"
    },
    "11532": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "11533": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "11535": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "11536": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11537": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "DUP1",
      "path": "22"
    },
    "11538": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "DUP3",
      "path": "22"
    },
    "11539": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "11540": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "DUP1",
      "path": "22"
    },
    "11541": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "11543": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "ADD",
      "path": "22"
    },
    "11544": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "11546": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "NOT",
      "path": "22"
    },
    "11547": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "AND",
      "path": "22"
    },
    "11548": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "11550": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "ADD",
      "path": "22"
    },
    "11551": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "DUP3",
      "path": "22"
    },
    "11552": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "ADD",
      "path": "22"
    },
    "11553": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "11555": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "11556": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "DUP1",
      "path": "22"
    },
    "11557": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "11558": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D36"
    },
    "11561": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "11562": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "11564": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "DUP3",
      "path": "22"
    },
    "11565": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "ADD",
      "path": "22"
    },
    "11566": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "DUP2",
      "path": "22"
    },
    "11567": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "DUP1",
      "path": "22"
    },
    "11568": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "11569": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "DUP4",
      "path": "22"
    },
    "11570": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "CALLDATACOPY",
      "path": "22"
    },
    "11571": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "ADD",
      "path": "22"
    },
    "11572": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11573": {
      "op": "POP"
    },
    "11574": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3880,
        3897
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "11575": {
      "op": "POP"
    },
    "11576": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3920,
        3935
      ],
      "op": "DUP7",
      "path": "22",
      "statement": 156
    },
    "11577": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3920,
        3935
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "11578": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3920,
        3935
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "11579": {
      "op": "POP"
    },
    "11580": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3852,
        3897
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11581": {
      "op": "POP"
    },
    "11582": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3965,
        3971
      ],
      "op": "DUP2",
      "path": "22"
    },
    "11583": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3985,
        4123
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "11584": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3992,
        4003
      ],
      "op": "DUP4",
      "path": "22"
    },
    "11585": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3992,
        4003
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "11586": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3985,
        4123
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2DA4"
    },
    "11589": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3985,
        4123
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "11590": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4065,
        4076
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 157,
      "value": "0x2D50"
    },
    "11593": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4074,
        4076
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "11595": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4065,
        4071
      ],
      "op": "DUP6",
      "path": "22"
    },
    "11596": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4065,
        4076
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3BFB"
    },
    "11599": {
      "fn": "SignatureVerifier.hashEIP191",
      "jump": "i",
      "offset": [
        4065,
        4076
      ],
      "op": "JUMP",
      "path": "22"
    },
    "11600": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4065,
        4076
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "11601": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4060,
        4076
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D5B"
    },
    "11604": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4060,
        4076
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11605": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4060,
        4062
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x30"
    },
    "11607": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4060,
        4076
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3B07"
    },
    "11610": {
      "fn": "SignatureVerifier.hashEIP191",
      "jump": "i",
      "offset": [
        4060,
        4076
      ],
      "op": "JUMP",
      "path": "22"
    },
    "11611": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4060,
        4076
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "11612": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4047,
        4078
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xF8"
    },
    "11614": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4047,
        4078
      ],
      "op": "SHL",
      "path": "22"
    },
    "11615": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4035
      ],
      "op": "DUP3",
      "path": "22"
    },
    "11616": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4036,
        4043
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D68"
    },
    "11619": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4036,
        4043
      ],
      "op": "DUP4",
      "path": "22"
    },
    "11620": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4036,
        4043
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3A53"
    },
    "11623": {
      "fn": "SignatureVerifier.hashEIP191",
      "jump": "i",
      "offset": [
        4036,
        4043
      ],
      "op": "JUMP",
      "path": "22"
    },
    "11624": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4036,
        4043
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "11625": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4036,
        4043
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "11626": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4036,
        4043
      ],
      "op": "POP",
      "path": "22"
    },
    "11627": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4036,
        4043
      ],
      "op": "DUP3",
      "path": "22"
    },
    "11628": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4044
      ],
      "op": "DUP2",
      "path": "22"
    },
    "11629": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4044
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "11630": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4044
      ],
      "op": "DUP2",
      "path": "22"
    },
    "11631": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4044
      ],
      "op": "LT",
      "path": "22"
    },
    "11632": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4044
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D7B"
    },
    "11635": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4044
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "11636": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4044
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D7B"
    },
    "11639": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4044
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3A22"
    },
    "11642": {
      "fn": "SignatureVerifier.hashEIP191",
      "jump": "i",
      "offset": [
        4023,
        4044
      ],
      "op": "JUMP",
      "path": "22"
    },
    "11643": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4044
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "11644": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4044
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "11646": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4044
      ],
      "op": "ADD",
      "path": "22"
    },
    "11647": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4044
      ],
      "op": "ADD",
      "path": "22"
    },
    "11648": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4078
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11653": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11655": {
      "op": "SHL"
    },
    "11656": {
      "op": "SUB"
    },
    "11657": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4078
      ],
      "op": "NOT",
      "path": "22"
    },
    "11658": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4078
      ],
      "op": "AND",
      "path": "22"
    },
    "11659": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4078
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11660": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4078
      ],
      "op": "DUP2",
      "path": "22"
    },
    "11661": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4078
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "11663": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4078
      ],
      "op": "BYTE",
      "path": "22"
    },
    "11664": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4078
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11665": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4023,
        4078
      ],
      "op": "MSTORE8",
      "path": "22"
    },
    "11666": {
      "op": "POP"
    },
    "11667": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4096,
        4108
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 158,
      "value": "0x2D9D"
    },
    "11670": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4106,
        4108
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "11672": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4096,
        4108
      ],
      "op": "DUP6",
      "path": "22"
    },
    "11673": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4096,
        4108
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3980"
    },
    "11676": {
      "fn": "SignatureVerifier.hashEIP191",
      "jump": "i",
      "offset": [
        4096,
        4108
      ],
      "op": "JUMP",
      "path": "22"
    },
    "11677": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4096,
        4108
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "11678": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4096,
        4108
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "11679": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4096,
        4108
      ],
      "op": "POP",
      "path": "22"
    },
    "11680": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3985,
        4123
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D3F"
    },
    "11683": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3985,
        4123
      ],
      "op": "JUMP",
      "path": "22"
    },
    "11684": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3985,
        4123
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "11685": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 159,
      "value": "0x40"
    },
    "11687": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "11688": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2DDF"
    },
    "11691": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11692": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "11694": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11696": {
      "op": "SHL"
    },
    "11697": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4171,
        4183
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11698": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4185,
        4208
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x457468657265756D205369676E6564204D6573736167653A0A00000000000000"
    },
    "11731": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4185,
        4208
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11732": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4210,
        4222
      ],
      "op": "DUP6",
      "path": "22"
    },
    "11733": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4210,
        4222
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11734": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4224,
        4232
      ],
      "op": "DUP12",
      "path": "22"
    },
    "11735": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4224,
        4232
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11736": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "11738": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "ADD",
      "path": "22"
    },
    "11739": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3C0F"
    },
    "11742": {
      "fn": "SignatureVerifier.hashEIP191",
      "jump": "i",
      "offset": [
        4154,
        4233
      ],
      "op": "JUMP",
      "path": "22"
    },
    "11743": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "11744": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "11746": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "11747": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "11749": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "DUP2",
      "path": "22"
    },
    "11750": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "DUP4",
      "path": "22"
    },
    "11751": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "SUB",
      "path": "22"
    },
    "11752": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "SUB",
      "path": "22"
    },
    "11753": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "DUP2",
      "path": "22"
    },
    "11754": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "11755": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11756": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "11758": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4154,
        4233
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "11759": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4144,
        4234
      ],
      "op": "DUP1",
      "path": "22"
    },
    "11760": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4144,
        4234
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "11761": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4144,
        4234
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "11762": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4144,
        4234
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "11764": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4144,
        4234
      ],
      "op": "ADD",
      "path": "22"
    },
    "11765": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4144,
        4234
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "11766": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4137,
        4234
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "11767": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4137,
        4234
      ],
      "op": "POP",
      "path": "22"
    },
    "11768": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4137,
        4234
      ],
      "op": "POP",
      "path": "22"
    },
    "11769": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4137,
        4234
      ],
      "op": "POP",
      "path": "22"
    },
    "11770": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4137,
        4234
      ],
      "op": "POP",
      "path": "22"
    },
    "11771": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4137,
        4234
      ],
      "op": "POP",
      "path": "22"
    },
    "11772": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4137,
        4234
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF00"
    },
    "11775": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4137,
        4234
      ],
      "op": "JUMP",
      "path": "22"
    },
    "11776": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        3458,
        4312
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "11777": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4265,
        4301
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 160,
      "value": "0x40"
    },
    "11779": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4265,
        4301
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "11780": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11784": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11786": {
      "op": "SHL"
    },
    "11787": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4265,
        4301
      ],
      "op": "DUP2",
      "path": "22"
    },
    "11788": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4265,
        4301
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "11789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11791": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4265,
        4301
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "11793": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4265,
        4301
      ],
      "op": "DUP3",
      "path": "22"
    },
    "11794": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4265,
        4301
      ],
      "op": "ADD",
      "path": "22"
    },
    "11795": {
      "op": "MSTORE"
    },
    "11796": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "11798": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11800": {
      "op": "DUP3"
    },
    "11801": {
      "op": "ADD"
    },
    "11802": {
      "op": "MSTORE"
    },
    "11803": {
      "op": "PUSH32",
      "value": "0x556E737570706F72746564204549503139312076657273696F6E000000000000"
    },
    "11836": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11838": {
      "op": "DUP3"
    },
    "11839": {
      "op": "ADD"
    },
    "11840": {
      "op": "MSTORE"
    },
    "11841": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11843": {
      "op": "ADD"
    },
    "11844": {
      "fn": "SignatureVerifier.hashEIP191",
      "offset": [
        4265,
        4301
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x129A"
    },
    "11847": {
      "op": "JUMP"
    },
    "11848": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5207,
        5374
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11849": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5273,
        5279
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "11851": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5350,
        5366
      ],
      "op": "PUSH32",
      "path": "12",
      "statement": 161,
      "value": "0x0"
    },
    "11884": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5305,
        5366
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "11889": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5305,
        5366
      ],
      "op": "AND",
      "path": "12"
    },
    "11890": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5324,
        5347
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "11923": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5305,
        5347
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "11928": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5305,
        5347
      ],
      "op": "AND",
      "path": "12"
    },
    "11929": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5313,
        5320
      ],
      "op": "DUP4",
      "path": "12"
    },
    "11930": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5305,
        5321
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "11933": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5305,
        5321
      ],
      "op": "AND",
      "path": "12"
    },
    "11934": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5305,
        5347
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EA7"
    },
    "11937": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5305,
        5347
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11938": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5305,
        5347
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11939": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5305,
        5347
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A03"
    },
    "11942": {
      "fn": "PolicyManager.recalculatePeriod",
      "jump": "i",
      "offset": [
        5305,
        5347
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11943": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5305,
        5347
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11944": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5305,
        5366
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF00"
    },
    "11947": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5305,
        5366
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11948": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5305,
        5366
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11949": {
      "fn": "PolicyManager.recalculatePeriod",
      "offset": [
        5305,
        5366
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3980"
    },
    "11952": {
      "fn": "PolicyManager.recalculatePeriod",
      "jump": "i",
      "offset": [
        5305,
        5366
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11953": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2109,
        2241
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "11954": {
      "offset": [
        1451,
        1452
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "11956": {
      "offset": [
        1653,
        1662
      ],
      "op": "DUP1",
      "path": "26"
    },
    "11957": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        1653,
        1662
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "11958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11962": {
      "op": "SHL"
    },
    "11963": {
      "offset": [
        1653,
        1662
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "11964": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        1653,
        1662
      ],
      "op": "DIV",
      "path": "26"
    },
    "11965": {
      "offset": [
        1653,
        1678
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xFF"
    },
    "11967": {
      "offset": [
        1653,
        1662
      ],
      "op": "AND",
      "path": "26"
    },
    "11968": {
      "offset": [
        1653,
        1678
      ],
      "op": "EQ",
      "path": "26"
    },
    "11969": {
      "offset": [
        1645,
        1679
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2EC9"
    },
    "11972": {
      "offset": [
        1645,
        1679
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "11973": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        1645,
        1679
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "11975": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        1645,
        1679
      ],
      "op": "DUP1",
      "path": "26"
    },
    "11976": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        1645,
        1679
      ],
      "op": "REVERT",
      "path": "26"
    },
    "11977": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        1645,
        1679
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "11978": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2198,
        2234
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 162,
      "value": "0x40"
    },
    "11980": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2198,
        2234
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "11981": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2223,
        2233
      ],
      "op": "CALLER",
      "path": "26"
    },
    "11982": {
      "op": "DUP2"
    },
    "11983": {
      "op": "MSTORE"
    },
    "11984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11990": {
      "op": "SHL"
    },
    "11991": {
      "op": "SUB"
    },
    "11992": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2198,
        2234
      ],
      "op": "DUP3",
      "path": "26"
    },
    "11993": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2198,
        2234
      ],
      "op": "AND",
      "path": "26"
    },
    "11994": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2198,
        2234
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "11995": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2198,
        2234
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0xD55EC27C5C6316913ED8803C18CFD1BFEFEA953DB909DCBA6140744A9D8B0D1F"
    },
    "12028": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2198,
        2234
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "12029": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12031": {
      "op": "ADD"
    },
    "12032": {
      "fn": "Upgradeable.finishUpgrade",
      "offset": [
        2198,
        2234
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2A41"
    },
    "12035": {
      "op": "JUMP"
    },
    "12036": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1948,
        2131
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "12037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12043": {
      "op": "SHL"
    },
    "12044": {
      "op": "SUB"
    },
    "12045": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2021,
        2043
      ],
      "op": "DUP2",
      "path": "34",
      "statement": 163
    },
    "12046": {
      "branch": 297,
      "fn": "Ownable._transferOwnership",
      "offset": [
        2021,
        2043
      ],
      "op": "AND",
      "path": "34"
    },
    "12047": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x2F17"
    },
    "12050": {
      "branch": 297,
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "12051": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "12053": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "DUP1",
      "path": "34"
    },
    "12054": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "REVERT",
      "path": "34"
    },
    "12055": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "12056": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 164,
      "value": "0x0"
    },
    "12058": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "DUP1",
      "path": "34"
    },
    "12059": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "12060": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "12062": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "12063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12069": {
      "op": "SHL"
    },
    "12070": {
      "op": "SUB"
    },
    "12071": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "DUP1",
      "path": "34"
    },
    "12072": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "DUP6",
      "path": "34"
    },
    "12073": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "AND",
      "path": "34"
    },
    "12074": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "SWAP4",
      "path": "34"
    },
    "12075": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "12076": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "AND",
      "path": "34"
    },
    "12077": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "12078": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "PUSH32",
      "path": "34",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "12111": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "12112": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "LOG3",
      "path": "34"
    },
    "12113": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2113
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 165,
      "value": "0x0"
    },
    "12115": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "DUP1",
      "path": "34"
    },
    "12116": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "12117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12123": {
      "op": "SHL"
    },
    "12124": {
      "op": "SUB"
    },
    "12125": {
      "op": "NOT"
    },
    "12126": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "AND",
      "path": "34"
    },
    "12127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12133": {
      "op": "SHL"
    },
    "12134": {
      "op": "SUB"
    },
    "12135": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "12136": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "12137": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "12138": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "AND",
      "path": "34"
    },
    "12139": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "12140": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "12141": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "12142": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "OR",
      "path": "34"
    },
    "12143": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "12144": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SSTORE",
      "path": "34"
    },
    "12145": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        1948,
        2131
      ],
      "op": "JUMP",
      "path": "34"
    },
    "12146": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        650,
        1266
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "12147": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        754,
        761
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "12149": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        785,
        795
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 166
    },
    "12150": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        785,
        802
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "12151": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        806,
        808
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x41"
    },
    "12153": {
      "branch": 301,
      "fn": "SignatureVerifier.recover",
      "offset": [
        785,
        808
      ],
      "op": "EQ",
      "path": "22"
    },
    "12154": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        777,
        809
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2F82"
    },
    "12157": {
      "branch": 301,
      "fn": "SignatureVerifier.recover",
      "offset": [
        777,
        809
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "12158": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        777,
        809
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "12160": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        777,
        809
      ],
      "op": "DUP1",
      "path": "22"
    },
    "12161": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        777,
        809
      ],
      "op": "REVERT",
      "path": "22"
    },
    "12162": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        777,
        809
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "12163": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        925,
        927
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "12165": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        909,
        928
      ],
      "op": "DUP3",
      "path": "22"
    },
    "12166": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        909,
        928
      ],
      "op": "ADD",
      "path": "22"
    },
    "12167": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        903,
        929
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "12168": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        969,
        971
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "12170": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        953,
        972
      ],
      "op": "DUP4",
      "path": "22"
    },
    "12171": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        953,
        972
      ],
      "op": "ADD",
      "path": "22"
    },
    "12172": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        947,
        973
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "12173": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1021,
        1023
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "12175": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1005,
        1024
      ],
      "op": "DUP5",
      "path": "22"
    },
    "12176": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1005,
        1024
      ],
      "op": "ADD",
      "path": "22"
    },
    "12177": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        999,
        1025
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "12178": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        820,
        829
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "12180": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        991,
        1026
      ],
      "op": "BYTE",
      "path": "22"
    },
    "12181": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1145,
        1147
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1B"
    },
    "12183": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1141,
        1147
      ],
      "op": "DUP2",
      "path": "22"
    },
    "12184": {
      "branch": 302,
      "fn": "SignatureVerifier.recover",
      "offset": [
        1141,
        1147
      ],
      "op": "LT",
      "path": "22"
    },
    "12185": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1137,
        1181
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "12186": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1137,
        1181
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2FAB"
    },
    "12189": {
      "branch": 302,
      "fn": "SignatureVerifier.recover",
      "offset": [
        1137,
        1181
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "12190": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1163,
        1170
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 167,
      "value": "0x2FA8"
    },
    "12193": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1168,
        1170
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1B"
    },
    "12195": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1163,
        1170
      ],
      "op": "DUP3",
      "path": "22"
    },
    "12196": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1163,
        1170
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3C44"
    },
    "12199": {
      "fn": "SignatureVerifier.recover",
      "jump": "i",
      "offset": [
        1163,
        1170
      ],
      "op": "JUMP",
      "path": "22"
    },
    "12200": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1163,
        1170
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "12201": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1163,
        1170
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "12202": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1163,
        1170
      ],
      "op": "POP",
      "path": "22"
    },
    "12203": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1137,
        1181
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "12204": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1198,
        1199
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 168
    },
    "12205": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1198,
        1205
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "12207": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1198,
        1205
      ],
      "op": "AND",
      "path": "22"
    },
    "12208": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1203,
        1205
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1B"
    },
    "12210": {
      "branch": 303,
      "fn": "SignatureVerifier.recover",
      "offset": [
        1198,
        1205
      ],
      "op": "EQ",
      "path": "22"
    },
    "12211": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1198,
        1216
      ],
      "op": "DUP1",
      "path": "22"
    },
    "12212": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1198,
        1216
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2FC0"
    },
    "12215": {
      "branch": 303,
      "fn": "SignatureVerifier.recover",
      "offset": [
        1198,
        1216
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "12216": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1198,
        1216
      ],
      "op": "POP",
      "path": "22"
    },
    "12217": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1209,
        1210
      ],
      "op": "DUP1",
      "path": "22"
    },
    "12218": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1209,
        1216
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "12220": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1209,
        1216
      ],
      "op": "AND",
      "path": "22"
    },
    "12221": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1214,
        1216
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1C"
    },
    "12223": {
      "branch": 304,
      "fn": "SignatureVerifier.recover",
      "offset": [
        1209,
        1216
      ],
      "op": "EQ",
      "path": "22"
    },
    "12224": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1198,
        1216
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "12225": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1190,
        1217
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2FC9"
    },
    "12228": {
      "branch": 304,
      "fn": "SignatureVerifier.recover",
      "offset": [
        1190,
        1217
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "12229": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1190,
        1217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "12231": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1190,
        1217
      ],
      "op": "DUP1",
      "path": "22"
    },
    "12232": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1190,
        1217
      ],
      "op": "REVERT",
      "path": "22"
    },
    "12233": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1190,
        1217
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "12234": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 169,
      "value": "0x40"
    },
    "12236": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "DUP1",
      "path": "22"
    },
    "12237": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "12238": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "12240": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "DUP2",
      "path": "22"
    },
    "12241": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "12242": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "12244": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "DUP2",
      "path": "22"
    },
    "12245": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "ADD",
      "path": "22"
    },
    "12246": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "DUP1",
      "path": "22"
    },
    "12247": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "DUP4",
      "path": "22"
    },
    "12248": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "12249": {
      "op": "DUP9"
    },
    "12250": {
      "op": "SWAP1"
    },
    "12251": {
      "op": "MSTORE"
    },
    "12252": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12254": {
      "op": "DUP4"
    },
    "12255": {
      "op": "AND"
    },
    "12256": {
      "op": "SWAP2"
    },
    "12257": {
      "op": "DUP2"
    },
    "12258": {
      "op": "ADD"
    },
    "12259": {
      "op": "SWAP2"
    },
    "12260": {
      "op": "SWAP1"
    },
    "12261": {
      "op": "SWAP2"
    },
    "12262": {
      "op": "MSTORE"
    },
    "12263": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12265": {
      "op": "DUP2"
    },
    "12266": {
      "op": "ADD"
    },
    "12267": {
      "op": "DUP5"
    },
    "12268": {
      "op": "SWAP1"
    },
    "12269": {
      "op": "MSTORE"
    },
    "12270": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12272": {
      "op": "DUP2"
    },
    "12273": {
      "op": "ADD"
    },
    "12274": {
      "op": "DUP4"
    },
    "12275": {
      "op": "SWAP1"
    },
    "12276": {
      "op": "MSTORE"
    },
    "12277": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "12279": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "12280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12282": {
      "op": "ADD"
    },
    "12283": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "12285": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "12287": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "12288": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "12290": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "DUP2",
      "path": "22"
    },
    "12291": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "SUB",
      "path": "22"
    },
    "12292": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "12293": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "DUP1",
      "path": "22"
    },
    "12294": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "DUP5",
      "path": "22"
    },
    "12295": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "SUB",
      "path": "22"
    },
    "12296": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "12297": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "DUP6",
      "path": "22"
    },
    "12298": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "GAS",
      "path": "22"
    },
    "12299": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "12300": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "12301": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "DUP1",
      "path": "22"
    },
    "12302": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "12303": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x301C"
    },
    "12306": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "12307": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "12308": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "12310": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "DUP1",
      "path": "22"
    },
    "12311": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "12312": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "12313": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "12315": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "REVERT",
      "path": "22"
    },
    "12316": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "12317": {
      "op": "POP"
    },
    "12318": {
      "op": "POP"
    },
    "12319": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "12321": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "12322": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12324": {
      "op": "NOT"
    },
    "12325": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "ADD",
      "path": "22"
    },
    "12326": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "12327": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        1234,
        1259
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "12328": {
      "fn": "SignatureVerifier.recover",
      "offset": [
        650,
        1266
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "12329": {
      "op": "POP"
    },
    "12330": {
      "op": "POP"
    },
    "12331": {
      "op": "POP"
    },
    "12332": {
      "op": "POP"
    },
    "12333": {
      "op": "POP"
    },
    "12334": {
      "op": "POP"
    },
    "12335": {
      "op": "POP"
    },
    "12336": {
      "fn": "SignatureVerifier.recover",
      "jump": "o",
      "offset": [
        650,
        1266
      ],
      "op": "JUMP",
      "path": "22"
    },
    "12337": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17379,
        19527
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12338": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17502,
        17521
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12340": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17523,
        17553
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12341": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17555,
        17580
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12343": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17596,
        17620
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12344": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17655,
        17671
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "12377": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17630,
        17671
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "12382": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17630,
        17671
      ],
      "op": "AND",
      "path": "12"
    },
    "12383": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17630,
        17637
      ],
      "op": "DUP7",
      "path": "12"
    },
    "12384": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17630,
        17652
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "12386": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17630,
        17652
      ],
      "op": "ADD",
      "path": "12"
    },
    "12387": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17630,
        17652
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "12389": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17630,
        17652
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12390": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17630,
        17652
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12391": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17630,
        17652
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12392": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17630,
        17652
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "12395": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17630,
        17652
      ],
      "op": "EXP",
      "path": "12"
    },
    "12396": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17630,
        17652
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12397": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17630,
        17652
      ],
      "op": "DIV",
      "path": "12"
    },
    "12398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12402": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12404": {
      "op": "SHL"
    },
    "12405": {
      "op": "SUB"
    },
    "12406": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17630,
        17652
      ],
      "op": "AND",
      "path": "12"
    },
    "12407": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17630,
        17671
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3080"
    },
    "12410": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17630,
        17671
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12411": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17630,
        17671
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12412": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17630,
        17671
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3994"
    },
    "12415": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        17630,
        17671
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12416": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17630,
        17671
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12417": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17596,
        17672
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12418": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17596,
        17672
      ],
      "op": "POP",
      "path": "12"
    },
    "12419": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17682,
        17698
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12421": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17701,
        17790
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30DA"
    },
    "12424": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17722,
        17740
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x308F"
    },
    "12427": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17722,
        17738
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9E9"
    },
    "12430": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        17722,
        17740
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12431": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17722,
        17740
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12432": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17749,
        17769
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "12434": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17749,
        17769
      ],
      "op": "DUP10",
      "path": "12"
    },
    "12435": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17749,
        17769
      ],
      "op": "ADD",
      "path": "12"
    },
    "12436": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17749,
        17769
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12437": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17749,
        17788
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30D5"
    },
    "12440": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17749,
        17788
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12441": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17772,
        17788
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "12474": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17749,
        17788
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "12479": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17749,
        17788
      ],
      "op": "AND",
      "path": "12"
    },
    "12480": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17749,
        17788
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12483": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12485": {
      "op": "SHL"
    },
    "12486": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17749,
        17769
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12487": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17749,
        17769
      ],
      "op": "DIV",
      "path": "12"
    },
    "12488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12492": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12494": {
      "op": "SHL"
    },
    "12495": {
      "op": "SUB"
    },
    "12496": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17749,
        17769
      ],
      "op": "AND",
      "path": "12"
    },
    "12497": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17749,
        17788
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3994"
    },
    "12500": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        17749,
        17788
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12501": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17749,
        17788
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12502": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17701,
        17721
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3512"
    },
    "12505": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        17701,
        17790
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12506": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17701,
        17790
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12507": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17859,
        17890
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "12509": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17859,
        17890
      ],
      "op": "DUP8",
      "path": "12"
    },
    "12510": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17859,
        17890
      ],
      "op": "ADD",
      "path": "12"
    },
    "12511": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17859,
        17890
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12512": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17682,
        17790
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12513": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17682,
        17790
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12514": {
      "op": "POP"
    },
    "12515": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17800,
        17816
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12517": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17800,
        17816
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12518": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17819,
        17891
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30F4"
    },
    "12521": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17819,
        17891
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12522": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17840,
        17857
      ],
      "op": "DUP5",
      "path": "12"
    },
    "12523": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17840,
        17857
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12524": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17859,
        17890
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "12527": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17859,
        17890
      ],
      "op": "AND",
      "path": "12"
    },
    "12528": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17819,
        17839
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3530"
    },
    "12531": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        17819,
        17891
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12532": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17819,
        17891
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12533": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17983,
        18000
      ],
      "op": "DUP8",
      "path": "12"
    },
    "12534": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17983,
        18000
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12535": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12537": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12538": {
      "op": "PUSH4",
      "value": "0x90DCB51F"
    },
    "12543": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12545": {
      "op": "SHL"
    },
    "12546": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12547": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12554": {
      "op": "SHL"
    },
    "12555": {
      "op": "SUB"
    },
    "12556": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17983,
        18000
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12557": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17983,
        18000
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12558": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17983,
        18000
      ],
      "op": "AND",
      "path": "12"
    },
    "12559": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "12561": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12562": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "ADD",
      "path": "12"
    },
    "12563": {
      "op": "MSTORE"
    },
    "12564": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17800,
        17891
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12565": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17800,
        17891
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "12566": {
      "op": "POP"
    },
    "12567": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17901,
        17923
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12569": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17901,
        17923
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12570": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17901,
        17923
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12571": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17901,
        17923
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12572": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        17960
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "12605": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        17982
      ],
      "op": "AND",
      "path": "12"
    },
    "12606": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        17982
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12607": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        17982
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x90DCB51F"
    },
    "12612": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        17982
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12613": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12615": {
      "op": "ADD"
    },
    "12616": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12618": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12620": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12621": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12622": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12623": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "SUB",
      "path": "12"
    },
    "12624": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12625": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "DUP7",
      "path": "12"
    },
    "12626": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "GAS",
      "path": "12"
    },
    "12627": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "12628": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "12629": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12630": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "12631": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3164"
    },
    "12634": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12635": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12636": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12638": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12639": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "12640": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12641": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12643": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "REVERT",
      "path": "12"
    },
    "12644": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12645": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "POP",
      "path": "12"
    },
    "12646": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "POP",
      "path": "12"
    },
    "12647": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "POP",
      "path": "12"
    },
    "12648": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "POP",
      "path": "12"
    },
    "12649": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12651": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12652": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12653": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "12655": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "NOT",
      "path": "12"
    },
    "12656": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "12658": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12659": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "ADD",
      "path": "12"
    },
    "12660": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "AND",
      "path": "12"
    },
    "12661": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12662": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "ADD",
      "path": "12"
    },
    "12663": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12664": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12666": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12667": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "POP",
      "path": "12"
    },
    "12668": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12669": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "ADD",
      "path": "12"
    },
    "12670": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12671": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3188"
    },
    "12674": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12675": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12676": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3C69"
    },
    "12679": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        17954,
        18001
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12680": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17954,
        18001
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12681": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18062,
        18093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "12683": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18062,
        18093
      ],
      "op": "DUP11",
      "path": "12"
    },
    "12684": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18062,
        18093
      ],
      "op": "ADD",
      "path": "12"
    },
    "12685": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18062,
        18093
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12686": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17937,
        18001
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12687": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17937,
        18001
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12688": {
      "op": "POP"
    },
    "12689": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18011,
        18048
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12691": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18011,
        18048
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12692": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18062,
        18093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "12695": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18062,
        18093
      ],
      "op": "AND",
      "path": "12"
    },
    "12696": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18058,
        18323
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x323A"
    },
    "12699": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18058,
        18323
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12700": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18177,
        18194
      ],
      "op": "DUP10",
      "path": "12",
      "statement": 170
    },
    "12701": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18177,
        18194
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12702": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12704": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12705": {
      "op": "PUSH4",
      "value": "0x4789D02D"
    },
    "12710": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12712": {
      "op": "SHL"
    },
    "12713": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12714": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12721": {
      "op": "SHL"
    },
    "12722": {
      "op": "SUB"
    },
    "12723": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18177,
        18194
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12724": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18177,
        18194
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12725": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18177,
        18194
      ],
      "op": "AND",
      "path": "12"
    },
    "12726": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "12728": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12729": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "ADD",
      "path": "12"
    },
    "12730": {
      "op": "MSTORE"
    },
    "12731": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12734": {
      "op": "DUP9"
    },
    "12735": {
      "op": "AND"
    },
    "12736": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12738": {
      "op": "DUP3"
    },
    "12739": {
      "op": "ADD"
    },
    "12740": {
      "op": "MSTORE"
    },
    "12741": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18152
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "12774": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18176
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12775": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18176
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12776": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18176
      ],
      "op": "AND",
      "path": "12"
    },
    "12777": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18176
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12778": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18176
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x4789D02D"
    },
    "12783": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18176
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12784": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12786": {
      "op": "ADD"
    },
    "12787": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12789": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12791": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12792": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12793": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12794": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "SUB",
      "path": "12"
    },
    "12795": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12796": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "DUP7",
      "path": "12"
    },
    "12797": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "GAS",
      "path": "12"
    },
    "12798": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "12799": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "12800": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12801": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "12802": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x320F"
    },
    "12805": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12806": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12807": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12809": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12810": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "12811": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12812": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12814": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "REVERT",
      "path": "12"
    },
    "12815": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12816": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "POP",
      "path": "12"
    },
    "12817": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "POP",
      "path": "12"
    },
    "12818": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "POP",
      "path": "12"
    },
    "12819": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "POP",
      "path": "12"
    },
    "12820": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12822": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12823": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12824": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "12826": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "NOT",
      "path": "12"
    },
    "12827": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "12829": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12830": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "ADD",
      "path": "12"
    },
    "12831": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "AND",
      "path": "12"
    },
    "12832": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12833": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "ADD",
      "path": "12"
    },
    "12834": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12835": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12837": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12838": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "POP",
      "path": "12"
    },
    "12839": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12840": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "ADD",
      "path": "12"
    },
    "12841": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12842": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3233"
    },
    "12845": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12846": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12847": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3C69"
    },
    "12850": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        18146,
        18214
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12851": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18146,
        18214
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12852": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18114,
        18214
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12853": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18114,
        18214
      ],
      "op": "POP",
      "path": "12"
    },
    "12854": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18058,
        18323
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3241"
    },
    "12857": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18058,
        18323
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12858": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18058,
        18323
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12859": {
      "op": "POP"
    },
    "12860": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18277,
        18312
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 171,
      "value": "0x1"
    },
    "12862": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18277,
        18312
      ],
      "op": "DUP10",
      "path": "12"
    },
    "12863": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18277,
        18312
      ],
      "op": "ADD",
      "path": "12"
    },
    "12864": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18277,
        18312
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12865": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18058,
        18323
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12866": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18363,
        18392
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 172
    },
    "12867": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18338,
        18392
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "12868": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18338,
        18392
      ],
      "op": "POP",
      "path": "12"
    },
    "12869": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18333,
        19015
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12870": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18432,
        18438
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12871": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18407,
        18429
      ],
      "op": "DUP9",
      "path": "12"
    },
    "12872": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18407,
        18438
      ],
      "op": "LT",
      "path": "12"
    },
    "12873": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18333,
        19015
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "12874": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18333,
        19015
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x337B"
    },
    "12877": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18333,
        19015
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12878": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18581,
        18598
      ],
      "op": "DUP10",
      "path": "12"
    },
    "12879": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18581,
        18598
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12880": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12882": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12883": {
      "op": "PUSH4",
      "value": "0x8FA95A15"
    },
    "12888": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12890": {
      "op": "SHL"
    },
    "12891": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12892": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12899": {
      "op": "SHL"
    },
    "12900": {
      "op": "SUB"
    },
    "12901": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18581,
        18598
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12902": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18581,
        18598
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12903": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18581,
        18598
      ],
      "op": "AND",
      "path": "12"
    },
    "12904": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "12906": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12907": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "ADD",
      "path": "12"
    },
    "12908": {
      "op": "MSTORE"
    },
    "12909": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12911": {
      "op": "DUP2"
    },
    "12912": {
      "op": "ADD"
    },
    "12913": {
      "op": "DUP11"
    },
    "12914": {
      "op": "SWAP1"
    },
    "12915": {
      "op": "MSTORE"
    },
    "12916": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18502,
        18520
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12918": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18502,
        18520
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12919": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18502,
        18520
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12920": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18502,
        18520
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12921": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18564
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "12954": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18580
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12955": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18580
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12956": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18580
      ],
      "op": "AND",
      "path": "12"
    },
    "12957": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18580
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12958": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18580
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8FA95A15"
    },
    "12963": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18580
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12964": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12966": {
      "op": "ADD"
    },
    "12967": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12969": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12970": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12971": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12972": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12973": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "SUB",
      "path": "12"
    },
    "12974": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12975": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "DUP7",
      "path": "12"
    },
    "12976": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "GAS",
      "path": "12"
    },
    "12977": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "12978": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "12979": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12980": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "12981": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x32C2"
    },
    "12984": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12985": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12986": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12988": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12989": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "12990": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "12991": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12993": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "REVERT",
      "path": "12"
    },
    "12994": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12995": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "POP",
      "path": "12"
    },
    "12996": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "POP",
      "path": "12"
    },
    "12997": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "POP",
      "path": "12"
    },
    "12998": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "POP",
      "path": "12"
    },
    "12999": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "13001": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13002": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "13003": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "13005": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "NOT",
      "path": "12"
    },
    "13006": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "13008": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13009": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "ADD",
      "path": "12"
    },
    "13010": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "AND",
      "path": "12"
    },
    "13011": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13012": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "ADD",
      "path": "12"
    },
    "13013": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13014": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "13016": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13017": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "POP",
      "path": "12"
    },
    "13018": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13019": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "ADD",
      "path": "12"
    },
    "13020": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13021": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x32E6"
    },
    "13024": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13025": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13026": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3C82"
    },
    "13029": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        18558,
        18623
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13030": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18558,
        18623
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13031": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18501,
        18623
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13032": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18501,
        18623
      ],
      "op": "POP",
      "path": "12"
    },
    "13033": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18501,
        18623
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13034": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18501,
        18623
      ],
      "op": "POP",
      "path": "12"
    },
    "13035": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18655,
        18664
      ],
      "op": "DUP7",
      "path": "12"
    },
    "13036": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18641,
        18664
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "13039": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18641,
        18664
      ],
      "op": "AND",
      "path": "12"
    },
    "13040": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18641,
        18652
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13041": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18641,
        18664
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "13044": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18641,
        18664
      ],
      "op": "AND",
      "path": "12"
    },
    "13045": {
      "branch": 287,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18641,
        18664
      ],
      "op": "GT",
      "path": "12"
    },
    "13046": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18637,
        18778
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13047": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18637,
        18778
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3301"
    },
    "13050": {
      "branch": 287,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18637,
        18778
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13051": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18684,
        18689
      ],
      "op": "POP",
      "path": "12",
      "statement": 173
    },
    "13052": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18684,
        18689
      ],
      "op": "POP",
      "path": "12"
    },
    "13053": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18684,
        18689
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x337B"
    },
    "13056": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18684,
        18689
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13057": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18637,
        18778
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13058": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18726,
        18735
      ],
      "op": "DUP6",
      "path": "12"
    },
    "13059": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18714,
        18735
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "13062": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18714,
        18735
      ],
      "op": "AND",
      "path": "12"
    },
    "13063": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18714,
        18723
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13064": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18714,
        18735
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "13067": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18714,
        18735
      ],
      "op": "AND",
      "path": "12"
    },
    "13068": {
      "branch": 288,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18714,
        18735
      ],
      "op": "LT",
      "path": "12"
    },
    "13069": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18710,
        18778
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13070": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18710,
        18778
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3318"
    },
    "13073": {
      "branch": 288,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18710,
        18778
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13074": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18755,
        18763
      ],
      "op": "POP",
      "path": "12",
      "statement": 174
    },
    "13075": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18755,
        18763
      ],
      "op": "POP",
      "path": "12"
    },
    "13076": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18755,
        18763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3369"
    },
    "13079": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18755,
        18763
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13080": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18710,
        18778
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13081": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18810,
        18921
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 175,
      "value": "0x3339"
    },
    "13084": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18876,
        18920
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3325"
    },
    "13087": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18897,
        18906
      ],
      "op": "DUP8",
      "path": "12"
    },
    "13088": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18908,
        18919
      ],
      "op": "DUP5",
      "path": "12"
    },
    "13089": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18876,
        18896
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3530"
    },
    "13092": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        18876,
        18920
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13093": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18876,
        18920
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13094": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18810,
        18852
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x332F"
    },
    "13097": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18831,
        18840
      ],
      "op": "DUP10",
      "path": "12"
    },
    "13098": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18842,
        18851
      ],
      "op": "DUP5",
      "path": "12"
    },
    "13099": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18810,
        18830
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3512"
    },
    "13102": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        18810,
        18852
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13103": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18810,
        18852
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13104": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18810,
        18875
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "13107": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18810,
        18875
      ],
      "op": "AND",
      "path": "12"
    },
    "13108": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18810,
        18875
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13109": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18810,
        18875
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3548"
    },
    "13112": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        18810,
        18921
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13113": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18810,
        18921
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13114": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18810,
        18925
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3344"
    },
    "13117": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18810,
        18925
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13118": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18924,
        18925
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "13120": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18810,
        18925
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39BA"
    },
    "13123": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        18810,
        18925
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13124": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18810,
        18925
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13125": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18791,
        18925
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x334E"
    },
    "13128": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18791,
        18925
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13129": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18791,
        18925
      ],
      "op": "DUP7",
      "path": "12"
    },
    "13130": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18791,
        18925
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39BA"
    },
    "13133": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        18791,
        18925
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13134": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18791,
        18925
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13135": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18791,
        18925
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "13136": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18791,
        18925
      ],
      "op": "POP",
      "path": "12"
    },
    "13137": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18956,
        18965
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13138": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18943,
        18965
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "13141": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18943,
        18965
      ],
      "op": "AND",
      "path": "12"
    },
    "13142": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18943,
        18952
      ],
      "op": "DUP8",
      "path": "12"
    },
    "13143": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18943,
        18965
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "13146": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18943,
        18965
      ],
      "op": "AND",
      "path": "12"
    },
    "13147": {
      "branch": 289,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18943,
        18965
      ],
      "op": "GT",
      "path": "12"
    },
    "13148": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18939,
        19005
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3366"
    },
    "13151": {
      "branch": 289,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18939,
        19005
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13152": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18985,
        18990
      ],
      "op": "POP",
      "path": "12",
      "statement": 176
    },
    "13153": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18985,
        18990
      ],
      "op": "POP",
      "path": "12"
    },
    "13154": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18985,
        18990
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x337B"
    },
    "13157": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18985,
        18990
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13158": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18939,
        19005
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13159": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18487,
        19015
      ],
      "op": "POP",
      "path": "12"
    },
    "13160": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18487,
        19015
      ],
      "op": "POP",
      "path": "12"
    },
    "13161": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18333,
        19015
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13162": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18453,
        18477
      ],
      "op": "DUP8",
      "path": "12",
      "statement": 177
    },
    "13163": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18453,
        18477
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3373"
    },
    "13166": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18453,
        18477
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13167": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18453,
        18477
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3A38"
    },
    "13170": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        18453,
        18477
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13171": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18453,
        18477
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13172": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18453,
        18477
      ],
      "op": "SWAP9",
      "path": "12"
    },
    "13173": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18453,
        18477
      ],
      "op": "POP",
      "path": "12"
    },
    "13174": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18453,
        18477
      ],
      "op": "POP",
      "path": "12"
    },
    "13175": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18333,
        19015
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3245"
    },
    "13178": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18333,
        19015
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13179": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        18333,
        19015
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13180": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19084,
        19101
      ],
      "op": "DUP10",
      "path": "12"
    },
    "13181": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19084,
        19101
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "13182": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "13184": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13185": {
      "op": "PUSH4",
      "value": "0x51F5E0C1"
    },
    "13190": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "13192": {
      "op": "SHL"
    },
    "13193": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13194": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13201": {
      "op": "SHL"
    },
    "13202": {
      "op": "SUB"
    },
    "13203": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19084,
        19101
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13204": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19084,
        19101
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13205": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19084,
        19101
      ],
      "op": "AND",
      "path": "12"
    },
    "13206": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "13208": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13209": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "ADD",
      "path": "12"
    },
    "13210": {
      "op": "MSTORE"
    },
    "13211": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19025,
        19051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13213": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19025,
        19051
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13214": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19060
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "13247": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19083
      ],
      "op": "AND",
      "path": "12"
    },
    "13248": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19083
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13249": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19083
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA3EBC182"
    },
    "13254": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19083
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13255": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13257": {
      "op": "ADD"
    },
    "13258": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "13260": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "13262": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13263": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13264": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "DUP4",
      "path": "12"
    },
    "13265": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "SUB",
      "path": "12"
    },
    "13266": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13267": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "DUP7",
      "path": "12"
    },
    "13268": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "GAS",
      "path": "12"
    },
    "13269": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "13270": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13271": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13272": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13273": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x33E6"
    },
    "13276": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13277": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "13278": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13280": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13281": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "13282": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "13283": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "13285": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "REVERT",
      "path": "12"
    },
    "13286": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13287": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "POP",
      "path": "12"
    },
    "13288": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "POP",
      "path": "12"
    },
    "13289": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "POP",
      "path": "12"
    },
    "13290": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "POP",
      "path": "12"
    },
    "13291": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "13293": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "13294": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "13295": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "13297": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "NOT",
      "path": "12"
    },
    "13298": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "13300": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13301": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "ADD",
      "path": "12"
    },
    "13302": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "AND",
      "path": "12"
    },
    "13303": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13304": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "ADD",
      "path": "12"
    },
    "13305": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13306": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "13308": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "13309": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "POP",
      "path": "12"
    },
    "13310": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13311": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "ADD",
      "path": "12"
    },
    "13312": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13313": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x340A"
    },
    "13316": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "13317": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13318": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3CB1"
    },
    "13321": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        19054,
        19102
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13322": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19054,
        19102
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13323": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19025,
        19102
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13324": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19025,
        19102
      ],
      "op": "POP",
      "path": "12"
    },
    "13325": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19142,
        19148
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13326": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19116,
        19138
      ],
      "op": "DUP10",
      "path": "12"
    },
    "13327": {
      "branch": 290,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19116,
        19148
      ],
      "op": "EQ",
      "path": "12"
    },
    "13328": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19116,
        19183
      ],
      "op": "DUP1",
      "path": "12"
    },
    "13329": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19116,
        19183
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13330": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19116,
        19183
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3422"
    },
    "13333": {
      "branch": 290,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19116,
        19183
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13334": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19116,
        19183
      ],
      "op": "POP",
      "path": "12"
    },
    "13335": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19174,
        19183
      ],
      "op": "DUP6",
      "path": "12"
    },
    "13336": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19152,
        19183
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "13339": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19152,
        19183
      ],
      "op": "AND",
      "path": "12"
    },
    "13340": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19152,
        19171
      ],
      "op": "DUP2",
      "path": "12"
    },
    "13341": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19152,
        19183
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "13344": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19152,
        19183
      ],
      "op": "AND",
      "path": "12"
    },
    "13345": {
      "branch": 291,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19152,
        19183
      ],
      "op": "LT",
      "path": "12"
    },
    "13346": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19116,
        19183
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13347": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19112,
        19419
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "13348": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19112,
        19419
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3452"
    },
    "13351": {
      "branch": 291,
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19112,
        19419
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13352": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19352,
        19408
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 178,
      "value": "0x343B"
    },
    "13355": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19373,
        19386
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3435"
    },
    "13358": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19385,
        19386
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "13360": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19373,
        19382
      ],
      "op": "DUP8",
      "path": "12"
    },
    "13361": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19373,
        19386
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39E0"
    },
    "13364": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        19373,
        19386
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13365": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19373,
        19386
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13366": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19388,
        19407
      ],
      "op": "DUP3",
      "path": "12"
    },
    "13367": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19352,
        19372
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3530"
    },
    "13370": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        19352,
        19408
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13371": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19352,
        19408
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13372": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19340,
        19408
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3445"
    },
    "13375": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19340,
        19408
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13376": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19340,
        19349
      ],
      "op": "DUP8",
      "path": "12"
    },
    "13377": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19340,
        19408
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39E0"
    },
    "13380": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        19340,
        19408
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13381": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19340,
        19408
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13382": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19321,
        19408
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x344F"
    },
    "13385": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19321,
        19408
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13386": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19321,
        19408
      ],
      "op": "DUP6",
      "path": "12"
    },
    "13387": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19321,
        19408
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39BA"
    },
    "13390": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        19321,
        19408
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13391": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19321,
        19408
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13392": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19321,
        19408
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "13393": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19321,
        19408
      ],
      "op": "POP",
      "path": "12"
    },
    "13394": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19112,
        19419
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13395": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19443,
        19458
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 179,
      "value": "0x2"
    },
    "13397": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19443,
        19458
      ],
      "op": "DUP13",
      "path": "12"
    },
    "13398": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19443,
        19458
      ],
      "op": "ADD",
      "path": "12"
    },
    "13399": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19443,
        19458
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "13400": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19443,
        19476
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x346F"
    },
    "13403": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19443,
        19476
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13404": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19443,
        19476
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFFF"
    },
    "13407": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19443,
        19476
      ],
      "op": "DUP7",
      "path": "12"
    },
    "13408": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19443,
        19476
      ],
      "op": "AND",
      "path": "12"
    },
    "13409": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19443,
        19476
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "13410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13414": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13416": {
      "op": "SHL"
    },
    "13417": {
      "op": "SUB"
    },
    "13418": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19443,
        19458
      ],
      "op": "AND",
      "path": "12"
    },
    "13419": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19443,
        19476
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3CCE"
    },
    "13422": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        19443,
        19476
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13423": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19443,
        19476
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13428": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13430": {
      "op": "SHL"
    },
    "13431": {
      "op": "SUB"
    },
    "13432": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19429,
        19476
      ],
      "op": "AND",
      "path": "12"
    },
    "13433": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19429,
        19476
      ],
      "op": "SWAP10",
      "path": "12"
    },
    "13434": {
      "op": "POP"
    },
    "13435": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19507,
        19520
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 180,
      "value": "0x3485"
    },
    "13438": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19507,
        19516
      ],
      "op": "DUP7",
      "path": "12"
    },
    "13439": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19519,
        19520
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "13441": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19507,
        19520
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39BA"
    },
    "13444": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "i",
      "offset": [
        19507,
        19520
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13445": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19507,
        19520
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "13446": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19486,
        19520
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "13447": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        19486,
        19520
      ],
      "op": "POP",
      "path": "12"
    },
    "13448": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17586,
        19527
      ],
      "op": "POP",
      "path": "12"
    },
    "13449": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17586,
        19527
      ],
      "op": "POP",
      "path": "12"
    },
    "13450": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17586,
        19527
      ],
      "op": "POP",
      "path": "12"
    },
    "13451": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17586,
        19527
      ],
      "op": "POP",
      "path": "12"
    },
    "13452": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17586,
        19527
      ],
      "op": "POP",
      "path": "12"
    },
    "13453": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17586,
        19527
      ],
      "op": "POP",
      "path": "12"
    },
    "13454": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17586,
        19527
      ],
      "op": "POP",
      "path": "12"
    },
    "13455": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17379,
        19527
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "13456": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17379,
        19527
      ],
      "op": "POP",
      "path": "12"
    },
    "13457": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17379,
        19527
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "13458": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17379,
        19527
      ],
      "op": "POP",
      "path": "12"
    },
    "13459": {
      "fn": "PolicyManager.calculateRefundValue",
      "offset": [
        17379,
        19527
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "13460": {
      "fn": "PolicyManager.calculateRefundValue",
      "jump": "o",
      "offset": [
        17379,
        19527
      ],
      "op": "JUMP",
      "path": "12"
    },
    "13461": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        692,
        897
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13462": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        755,
        762
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "13464": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        783,
        784
      ],
      "op": "DUP1",
      "path": "19"
    },
    "13465": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        778,
        779
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13466": {
      "branch": 292,
      "fn": "AdditionalMath.addSigned",
      "offset": [
        778,
        784
      ],
      "op": "SLT",
      "path": "19"
    },
    "13467": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        774,
        891
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34AF"
    },
    "13470": {
      "branch": 292,
      "fn": "AdditionalMath.addSigned",
      "offset": [
        774,
        891
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13471": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        807,
        824
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 181,
      "value": "0x34A8"
    },
    "13474": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        807,
        808
      ],
      "op": "DUP4",
      "path": "19"
    },
    "13475": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        821,
        822
      ],
      "op": "DUP4",
      "path": "19"
    },
    "13476": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        807,
        812
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x356C"
    },
    "13479": {
      "fn": "AdditionalMath.addSigned",
      "jump": "i",
      "offset": [
        807,
        824
      ],
      "op": "JUMP",
      "path": "19"
    },
    "13480": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        807,
        824
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13481": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        800,
        824
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13482": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        800,
        824
      ],
      "op": "POP",
      "path": "19"
    },
    "13483": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        800,
        824
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF00"
    },
    "13486": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        800,
        824
      ],
      "op": "JUMP",
      "path": "19"
    },
    "13487": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        774,
        891
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13488": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        862,
        880
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 182,
      "value": "0x34A8"
    },
    "13491": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        876,
        878
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34BB"
    },
    "13494": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        877,
        878
      ],
      "op": "DUP4",
      "path": "19"
    },
    "13495": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        876,
        878
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3A6A"
    },
    "13498": {
      "fn": "AdditionalMath.addSigned",
      "jump": "i",
      "offset": [
        876,
        878
      ],
      "op": "JUMP",
      "path": "19"
    },
    "13499": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        876,
        878
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13500": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        862,
        863
      ],
      "op": "DUP5",
      "path": "19"
    },
    "13501": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        862,
        863
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13502": {
      "fn": "AdditionalMath.addSigned",
      "offset": [
        862,
        867
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3578"
    },
    "13505": {
      "fn": "AdditionalMath.addSigned",
      "jump": "i",
      "offset": [
        862,
        880
      ],
      "op": "JUMP",
      "path": "19"
    },
    "13506": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2594,
        3493
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "13507": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2875,
        2879
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "13509": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2869,
        2880
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "13510": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2893,
        2925
      ],
      "op": "DUP5",
      "path": "26"
    },
    "13511": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2893,
        2925
      ],
      "op": "DUP2",
      "path": "26"
    },
    "13512": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2893,
        2925
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "13513": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2941,
        2966
      ],
      "op": "DUP4",
      "path": "26"
    },
    "13514": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2941,
        2966
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "13515": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2938,
        3043
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x34D5"
    },
    "13518": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2938,
        3043
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "13519": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3018,
        3028
      ],
      "op": "DUP3",
      "path": "26"
    },
    "13520": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3011,
        3015
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "13522": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2996,
        3009
      ],
      "op": "DUP3",
      "path": "26"
    },
    "13523": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2992,
        3016
      ],
      "op": "ADD",
      "path": "26"
    },
    "13524": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2985,
        3029
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "13525": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2938,
        3043
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "13526": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3082,
        3083
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "13528": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3062,
        3080
      ],
      "op": "DUP5",
      "path": "26"
    },
    "13529": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3059,
        3084
      ],
      "op": "GT",
      "path": "26"
    },
    "13530": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3056,
        3161
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "13531": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3056,
        3161
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x34E5"
    },
    "13534": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3056,
        3161
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "13535": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3136,
        3146
      ],
      "op": "DUP2",
      "path": "26"
    },
    "13536": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3129,
        3133
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x24"
    },
    "13538": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3114,
        3127
      ],
      "op": "DUP3",
      "path": "26"
    },
    "13539": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3110,
        3134
      ],
      "op": "ADD",
      "path": "26"
    },
    "13540": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3103,
        3147
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "13541": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3056,
        3161
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "13542": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3270,
        3271
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "13544": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3267,
        3268
      ],
      "op": "DUP1",
      "path": "26"
    },
    "13545": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3245,
        3263
      ],
      "op": "DUP6",
      "path": "26"
    },
    "13546": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3239,
        3243
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "13548": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3235,
        3264
      ],
      "op": "MUL",
      "path": "26"
    },
    "13549": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3229,
        3233
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "13551": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3225,
        3265
      ],
      "op": "ADD",
      "path": "26"
    },
    "13552": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3210,
        3223
      ],
      "op": "DUP4",
      "path": "26"
    },
    "13553": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3201,
        3208
      ],
      "op": "DUP10",
      "path": "26"
    },
    "13554": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3194,
        3199
      ],
      "op": "GAS",
      "path": "26"
    },
    "13555": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3181,
        3272
      ],
      "op": "DELEGATECALL",
      "path": "26"
    },
    "13556": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3289,
        3360
      ],
      "op": "DUP1",
      "path": "26"
    },
    "13557": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3289,
        3360
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "13558": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3289,
        3360
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3503"
    },
    "13561": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3289,
        3360
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "13562": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3442,
        3458
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "13563": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3437,
        3440
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "13565": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3422,
        3435
      ],
      "op": "DUP4",
      "path": "26"
    },
    "13566": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3407,
        3459
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "13567": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3174,
        3477
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3508"
    },
    "13570": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3174,
        3477
      ],
      "op": "JUMP",
      "path": "26"
    },
    "13571": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3289,
        3360
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "13572": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3340,
        3341
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "13574": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3325,
        3338
      ],
      "op": "DUP3",
      "path": "26"
    },
    "13575": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3318,
        3342
      ],
      "op": "REVERT",
      "path": "26"
    },
    "13576": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3174,
        3477
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "13577": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3174,
        3477
      ],
      "op": "POP",
      "path": "26"
    },
    "13578": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2594,
        3493
      ],
      "op": "SWAP6",
      "path": "26"
    },
    "13579": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2594,
        3493
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "13580": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2594,
        3493
      ],
      "op": "POP",
      "path": "26"
    },
    "13581": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2594,
        3493
      ],
      "op": "POP",
      "path": "26"
    },
    "13582": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2594,
        3493
      ],
      "op": "POP",
      "path": "26"
    },
    "13583": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2594,
        3493
      ],
      "op": "POP",
      "path": "26"
    },
    "13584": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2594,
        3493
      ],
      "op": "POP",
      "path": "26"
    },
    "13585": {
      "fn": "Upgradeable.delegateGetData",
      "jump": "o",
      "offset": [
        2594,
        3493
      ],
      "op": "JUMP",
      "path": "26"
    },
    "13586": {
      "fn": "AdditionalMath.min16",
      "offset": [
        334,
        437
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13587": {
      "fn": "AdditionalMath.min16",
      "offset": [
        392,
        398
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "13589": {
      "fn": "AdditionalMath.min16",
      "offset": [
        421,
        422
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 183
    },
    "13590": {
      "fn": "AdditionalMath.min16",
      "offset": [
        417,
        422
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFFFF"
    },
    "13593": {
      "fn": "AdditionalMath.min16",
      "offset": [
        417,
        422
      ],
      "op": "AND",
      "path": "19"
    },
    "13594": {
      "fn": "AdditionalMath.min16",
      "offset": [
        417,
        418
      ],
      "op": "DUP4",
      "path": "19"
    },
    "13595": {
      "fn": "AdditionalMath.min16",
      "offset": [
        417,
        422
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFFFF"
    },
    "13598": {
      "fn": "AdditionalMath.min16",
      "offset": [
        417,
        422
      ],
      "op": "AND",
      "path": "19"
    },
    "13599": {
      "branch": 293,
      "fn": "AdditionalMath.min16",
      "offset": [
        417,
        422
      ],
      "op": "LT",
      "path": "19"
    },
    "13600": {
      "fn": "AdditionalMath.min16",
      "offset": [
        417,
        430
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3529"
    },
    "13603": {
      "branch": 293,
      "fn": "AdditionalMath.min16",
      "offset": [
        417,
        430
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13604": {
      "fn": "AdditionalMath.min16",
      "offset": [
        429,
        430
      ],
      "op": "DUP2",
      "path": "19"
    },
    "13605": {
      "fn": "AdditionalMath.min16",
      "offset": [
        417,
        430
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDA5"
    },
    "13608": {
      "fn": "AdditionalMath.min16",
      "offset": [
        417,
        430
      ],
      "op": "JUMP",
      "path": "19"
    },
    "13609": {
      "fn": "AdditionalMath.min16",
      "offset": [
        417,
        430
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13610": {
      "op": "POP"
    },
    "13611": {
      "fn": "AdditionalMath.min16",
      "offset": [
        425,
        426
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13612": {
      "fn": "AdditionalMath.min16",
      "offset": [
        425,
        426
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "13613": {
      "fn": "AdditionalMath.min16",
      "offset": [
        334,
        437
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13614": {
      "op": "POP"
    },
    "13615": {
      "fn": "AdditionalMath.min16",
      "jump": "o",
      "offset": [
        334,
        437
      ],
      "op": "JUMP",
      "path": "19"
    },
    "13616": {
      "fn": "AdditionalMath.max16",
      "offset": [
        224,
        328
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13617": {
      "fn": "AdditionalMath.max16",
      "offset": [
        282,
        288
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "13619": {
      "fn": "AdditionalMath.max16",
      "offset": [
        312,
        313
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 184
    },
    "13620": {
      "fn": "AdditionalMath.max16",
      "offset": [
        307,
        313
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFFFF"
    },
    "13623": {
      "fn": "AdditionalMath.max16",
      "offset": [
        307,
        313
      ],
      "op": "AND",
      "path": "19"
    },
    "13624": {
      "fn": "AdditionalMath.max16",
      "offset": [
        307,
        308
      ],
      "op": "DUP4",
      "path": "19"
    },
    "13625": {
      "fn": "AdditionalMath.max16",
      "offset": [
        307,
        313
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFFFF"
    },
    "13628": {
      "fn": "AdditionalMath.max16",
      "offset": [
        307,
        313
      ],
      "op": "AND",
      "path": "19"
    },
    "13629": {
      "fn": "AdditionalMath.max16",
      "offset": [
        307,
        313
      ],
      "op": "LT",
      "path": "19"
    },
    "13630": {
      "branch": 294,
      "fn": "AdditionalMath.max16",
      "offset": [
        307,
        313
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13631": {
      "fn": "AdditionalMath.max16",
      "offset": [
        307,
        321
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3529"
    },
    "13634": {
      "branch": 294,
      "fn": "AdditionalMath.max16",
      "offset": [
        307,
        321
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13635": {
      "fn": "AdditionalMath.max16",
      "offset": [
        320,
        321
      ],
      "op": "DUP2",
      "path": "19"
    },
    "13636": {
      "fn": "AdditionalMath.max16",
      "offset": [
        307,
        321
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDA5"
    },
    "13639": {
      "fn": "AdditionalMath.max16",
      "offset": [
        307,
        321
      ],
      "op": "JUMP",
      "path": "19"
    },
    "13640": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1804,
        1923
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13641": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1862,
        1868
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "13643": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1892,
        1893
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 185
    },
    "13644": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1887,
        1893
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFFFF"
    },
    "13647": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1887,
        1893
      ],
      "op": "AND",
      "path": "19"
    },
    "13648": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1887,
        1888
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13649": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1887,
        1893
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFFFF"
    },
    "13652": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1887,
        1893
      ],
      "op": "AND",
      "path": "19"
    },
    "13653": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1887,
        1893
      ],
      "op": "GT",
      "path": "19"
    },
    "13654": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1887,
        1893
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13655": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1880,
        1894
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3562"
    },
    "13658": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1880,
        1894
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13659": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1880,
        1894
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3562"
    },
    "13662": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1880,
        1894
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3CFD"
    },
    "13665": {
      "fn": "AdditionalMath.sub16",
      "jump": "i",
      "offset": [
        1880,
        1894
      ],
      "op": "JUMP",
      "path": "19"
    },
    "13666": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1880,
        1894
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13667": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1911,
        1916
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 186,
      "value": "0xDA5"
    },
    "13670": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1915,
        1916
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13671": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1911,
        1912
      ],
      "op": "DUP5",
      "path": "19"
    },
    "13672": {
      "fn": "AdditionalMath.sub16",
      "offset": [
        1911,
        1916
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x39E0"
    },
    "13675": {
      "fn": "AdditionalMath.sub16",
      "jump": "i",
      "offset": [
        1911,
        1916
      ],
      "op": "JUMP",
      "path": "19"
    },
    "13676": {
      "fn": "SafeMath.add",
      "offset": [
        2741,
        2837
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "13677": {
      "fn": "SafeMath.add",
      "offset": [
        2799,
        2806
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "13679": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "33",
      "statement": 187,
      "value": "0xDA5"
    },
    "13682": {
      "fn": "SafeMath.add",
      "offset": [
        2829,
        2830
      ],
      "op": "DUP3",
      "path": "33"
    },
    "13683": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2826
      ],
      "op": "DUP5",
      "path": "33"
    },
    "13684": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x3B07"
    },
    "13687": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2825,
        2830
      ],
      "op": "JUMP",
      "path": "33"
    },
    "13688": {
      "fn": "SafeMath.sub",
      "offset": [
        3108,
        3204
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "13689": {
      "fn": "SafeMath.sub",
      "offset": [
        3166,
        3173
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "13691": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "33",
      "statement": 188,
      "value": "0xDA5"
    },
    "13694": {
      "fn": "SafeMath.sub",
      "offset": [
        3196,
        3197
      ],
      "op": "DUP3",
      "path": "33"
    },
    "13695": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3193
      ],
      "op": "DUP5",
      "path": "33"
    },
    "13696": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x3D13"
    },
    "13699": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3192,
        3197
      ],
      "op": "JUMP",
      "path": "33"
    },
    "13700": {
      "op": "JUMPDEST"
    },
    "13701": {
      "op": "DUP1"
    },
    "13702": {
      "op": "CALLDATALOAD"
    },
    "13703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13707": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13709": {
      "op": "SHL"
    },
    "13710": {
      "op": "SUB"
    },
    "13711": {
      "op": "NOT"
    },
    "13712": {
      "op": "DUP2"
    },
    "13713": {
      "op": "AND"
    },
    "13714": {
      "op": "DUP2"
    },
    "13715": {
      "op": "EQ"
    },
    "13716": {
      "op": "PUSH2",
      "value": "0x2764"
    },
    "13719": {
      "op": "JUMPI"
    },
    "13720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13722": {
      "op": "DUP1"
    },
    "13723": {
      "op": "REVERT"
    },
    "13724": {
      "op": "JUMPDEST"
    },
    "13725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13731": {
      "op": "SHL"
    },
    "13732": {
      "op": "SUB"
    },
    "13733": {
      "op": "DUP2"
    },
    "13734": {
      "op": "AND"
    },
    "13735": {
      "op": "DUP2"
    },
    "13736": {
      "op": "EQ"
    },
    "13737": {
      "op": "PUSH2",
      "value": "0x1CA4"
    },
    "13740": {
      "op": "JUMPI"
    },
    "13741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13743": {
      "op": "DUP1"
    },
    "13744": {
      "op": "REVERT"
    },
    "13745": {
      "op": "JUMPDEST"
    },
    "13746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13748": {
      "op": "DUP1"
    },
    "13749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13751": {
      "op": "DUP1"
    },
    "13752": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13754": {
      "op": "DUP6"
    },
    "13755": {
      "op": "DUP8"
    },
    "13756": {
      "op": "SUB"
    },
    "13757": {
      "op": "SLT"
    },
    "13758": {
      "op": "ISZERO"
    },
    "13759": {
      "op": "PUSH2",
      "value": "0x35C7"
    },
    "13762": {
      "op": "JUMPI"
    },
    "13763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13765": {
      "op": "DUP1"
    },
    "13766": {
      "op": "REVERT"
    },
    "13767": {
      "op": "JUMPDEST"
    },
    "13768": {
      "op": "PUSH2",
      "value": "0x35D0"
    },
    "13771": {
      "op": "DUP6"
    },
    "13772": {
      "op": "PUSH2",
      "value": "0x3584"
    },
    "13775": {
      "jump": "i",
      "op": "JUMP"
    },
    "13776": {
      "op": "JUMPDEST"
    },
    "13777": {
      "op": "SWAP4"
    },
    "13778": {
      "op": "POP"
    },
    "13779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13781": {
      "op": "DUP6"
    },
    "13782": {
      "op": "ADD"
    },
    "13783": {
      "op": "CALLDATALOAD"
    },
    "13784": {
      "op": "PUSH2",
      "value": "0x35E0"
    },
    "13787": {
      "op": "DUP2"
    },
    "13788": {
      "op": "PUSH2",
      "value": "0x359C"
    },
    "13791": {
      "jump": "i",
      "op": "JUMP"
    },
    "13792": {
      "op": "JUMPDEST"
    },
    "13793": {
      "op": "SWAP3"
    },
    "13794": {
      "op": "POP"
    },
    "13795": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13797": {
      "op": "DUP6"
    },
    "13798": {
      "op": "ADD"
    },
    "13799": {
      "op": "CALLDATALOAD"
    },
    "13800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13804": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13806": {
      "op": "SHL"
    },
    "13807": {
      "op": "SUB"
    },
    "13808": {
      "op": "DUP1"
    },
    "13809": {
      "op": "DUP3"
    },
    "13810": {
      "op": "GT"
    },
    "13811": {
      "op": "ISZERO"
    },
    "13812": {
      "op": "PUSH2",
      "value": "0x35FC"
    },
    "13815": {
      "op": "JUMPI"
    },
    "13816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13818": {
      "op": "DUP1"
    },
    "13819": {
      "op": "REVERT"
    },
    "13820": {
      "op": "JUMPDEST"
    },
    "13821": {
      "op": "DUP2"
    },
    "13822": {
      "op": "DUP8"
    },
    "13823": {
      "op": "ADD"
    },
    "13824": {
      "op": "SWAP2"
    },
    "13825": {
      "op": "POP"
    },
    "13826": {
      "op": "DUP8"
    },
    "13827": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13829": {
      "op": "DUP4"
    },
    "13830": {
      "op": "ADD"
    },
    "13831": {
      "op": "SLT"
    },
    "13832": {
      "op": "PUSH2",
      "value": "0x3610"
    },
    "13835": {
      "op": "JUMPI"
    },
    "13836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13838": {
      "op": "DUP1"
    },
    "13839": {
      "op": "REVERT"
    },
    "13840": {
      "op": "JUMPDEST"
    },
    "13841": {
      "op": "DUP2"
    },
    "13842": {
      "op": "CALLDATALOAD"
    },
    "13843": {
      "op": "DUP2"
    },
    "13844": {
      "op": "DUP2"
    },
    "13845": {
      "op": "GT"
    },
    "13846": {
      "op": "ISZERO"
    },
    "13847": {
      "op": "PUSH2",
      "value": "0x361F"
    },
    "13850": {
      "op": "JUMPI"
    },
    "13851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13853": {
      "op": "DUP1"
    },
    "13854": {
      "op": "REVERT"
    },
    "13855": {
      "op": "JUMPDEST"
    },
    "13856": {
      "op": "DUP9"
    },
    "13857": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13859": {
      "op": "DUP3"
    },
    "13860": {
      "op": "DUP6"
    },
    "13861": {
      "op": "ADD"
    },
    "13862": {
      "op": "ADD"
    },
    "13863": {
      "op": "GT"
    },
    "13864": {
      "op": "ISZERO"
    },
    "13865": {
      "op": "PUSH2",
      "value": "0x3631"
    },
    "13868": {
      "op": "JUMPI"
    },
    "13869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13871": {
      "op": "DUP1"
    },
    "13872": {
      "op": "REVERT"
    },
    "13873": {
      "op": "JUMPDEST"
    },
    "13874": {
      "op": "SWAP6"
    },
    "13875": {
      "op": "SWAP9"
    },
    "13876": {
      "op": "SWAP5"
    },
    "13877": {
      "op": "SWAP8"
    },
    "13878": {
      "op": "POP"
    },
    "13879": {
      "op": "POP"
    },
    "13880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13882": {
      "op": "ADD"
    },
    "13883": {
      "op": "SWAP5"
    },
    "13884": {
      "op": "POP"
    },
    "13885": {
      "op": "POP"
    },
    "13886": {
      "op": "POP"
    },
    "13887": {
      "jump": "o",
      "op": "JUMP"
    },
    "13888": {
      "op": "JUMPDEST"
    },
    "13889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13891": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13893": {
      "op": "DUP3"
    },
    "13894": {
      "op": "DUP5"
    },
    "13895": {
      "op": "SUB"
    },
    "13896": {
      "op": "SLT"
    },
    "13897": {
      "op": "ISZERO"
    },
    "13898": {
      "op": "PUSH2",
      "value": "0x3652"
    },
    "13901": {
      "op": "JUMPI"
    },
    "13902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13904": {
      "op": "DUP1"
    },
    "13905": {
      "op": "REVERT"
    },
    "13906": {
      "op": "JUMPDEST"
    },
    "13907": {
      "op": "DUP2"
    },
    "13908": {
      "op": "CALLDATALOAD"
    },
    "13909": {
      "op": "PUSH2",
      "value": "0xDA5"
    },
    "13912": {
      "op": "DUP2"
    },
    "13913": {
      "op": "PUSH2",
      "value": "0x359C"
    },
    "13916": {
      "jump": "i",
      "op": "JUMP"
    },
    "13917": {
      "op": "JUMPDEST"
    },
    "13918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13920": {
      "op": "DUP1"
    },
    "13921": {
      "op": "DUP4"
    },
    "13922": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13924": {
      "op": "DUP5"
    },
    "13925": {
      "op": "ADD"
    },
    "13926": {
      "op": "SLT"
    },
    "13927": {
      "op": "PUSH2",
      "value": "0x366F"
    },
    "13930": {
      "op": "JUMPI"
    },
    "13931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13933": {
      "op": "DUP1"
    },
    "13934": {
      "op": "REVERT"
    },
    "13935": {
      "op": "JUMPDEST"
    },
    "13936": {
      "op": "POP"
    },
    "13937": {
      "op": "DUP2"
    },
    "13938": {
      "op": "CALLDATALOAD"
    },
    "13939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13943": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13945": {
      "op": "SHL"
    },
    "13946": {
      "op": "SUB"
    },
    "13947": {
      "op": "DUP2"
    },
    "13948": {
      "op": "GT"
    },
    "13949": {
      "op": "ISZERO"
    },
    "13950": {
      "op": "PUSH2",
      "value": "0x3686"
    },
    "13953": {
      "op": "JUMPI"
    },
    "13954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13956": {
      "op": "DUP1"
    },
    "13957": {
      "op": "REVERT"
    },
    "13958": {
      "op": "JUMPDEST"
    },
    "13959": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13961": {
      "op": "DUP4"
    },
    "13962": {
      "op": "ADD"
    },
    "13963": {
      "op": "SWAP2"
    },
    "13964": {
      "op": "POP"
    },
    "13965": {
      "op": "DUP4"
    },
    "13966": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13968": {
      "op": "DUP3"
    },
    "13969": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13971": {
      "op": "SHL"
    },
    "13972": {
      "op": "DUP6"
    },
    "13973": {
      "op": "ADD"
    },
    "13974": {
      "op": "ADD"
    },
    "13975": {
      "op": "GT"
    },
    "13976": {
      "op": "ISZERO"
    },
    "13977": {
      "op": "PUSH2",
      "value": "0x36A1"
    },
    "13980": {
      "op": "JUMPI"
    },
    "13981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13983": {
      "op": "DUP1"
    },
    "13984": {
      "op": "REVERT"
    },
    "13985": {
      "op": "JUMPDEST"
    },
    "13986": {
      "op": "SWAP3"
    },
    "13987": {
      "op": "POP"
    },
    "13988": {
      "op": "SWAP3"
    },
    "13989": {
      "op": "SWAP1"
    },
    "13990": {
      "op": "POP"
    },
    "13991": {
      "jump": "o",
      "op": "JUMP"
    },
    "13992": {
      "op": "JUMPDEST"
    },
    "13993": {
      "op": "DUP1"
    },
    "13994": {
      "op": "CALLDATALOAD"
    },
    "13995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13999": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14001": {
      "op": "SHL"
    },
    "14002": {
      "op": "SUB"
    },
    "14003": {
      "op": "DUP2"
    },
    "14004": {
      "op": "AND"
    },
    "14005": {
      "op": "DUP2"
    },
    "14006": {
      "op": "EQ"
    },
    "14007": {
      "op": "PUSH2",
      "value": "0x2764"
    },
    "14010": {
      "op": "JUMPI"
    },
    "14011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14013": {
      "op": "DUP1"
    },
    "14014": {
      "op": "REVERT"
    },
    "14015": {
      "op": "JUMPDEST"
    },
    "14016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14018": {
      "op": "DUP1"
    },
    "14019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14021": {
      "op": "DUP1"
    },
    "14022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14024": {
      "op": "DUP1"
    },
    "14025": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14027": {
      "op": "DUP8"
    },
    "14028": {
      "op": "DUP10"
    },
    "14029": {
      "op": "SUB"
    },
    "14030": {
      "op": "SLT"
    },
    "14031": {
      "op": "ISZERO"
    },
    "14032": {
      "op": "PUSH2",
      "value": "0x36D8"
    },
    "14035": {
      "op": "JUMPI"
    },
    "14036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14038": {
      "op": "DUP1"
    },
    "14039": {
      "op": "REVERT"
    },
    "14040": {
      "op": "JUMPDEST"
    },
    "14041": {
      "op": "DUP7"
    },
    "14042": {
      "op": "CALLDATALOAD"
    },
    "14043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14047": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14049": {
      "op": "SHL"
    },
    "14050": {
      "op": "SUB"
    },
    "14051": {
      "op": "DUP1"
    },
    "14052": {
      "op": "DUP3"
    },
    "14053": {
      "op": "GT"
    },
    "14054": {
      "op": "ISZERO"
    },
    "14055": {
      "op": "PUSH2",
      "value": "0x36EF"
    },
    "14058": {
      "op": "JUMPI"
    },
    "14059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14061": {
      "op": "DUP1"
    },
    "14062": {
      "op": "REVERT"
    },
    "14063": {
      "op": "JUMPDEST"
    },
    "14064": {
      "op": "PUSH2",
      "value": "0x36FB"
    },
    "14067": {
      "op": "DUP11"
    },
    "14068": {
      "op": "DUP4"
    },
    "14069": {
      "op": "DUP12"
    },
    "14070": {
      "op": "ADD"
    },
    "14071": {
      "op": "PUSH2",
      "value": "0x365D"
    },
    "14074": {
      "jump": "i",
      "op": "JUMP"
    },
    "14075": {
      "op": "JUMPDEST"
    },
    "14076": {
      "op": "SWAP1"
    },
    "14077": {
      "op": "SWAP9"
    },
    "14078": {
      "op": "POP"
    },
    "14079": {
      "op": "SWAP7"
    },
    "14080": {
      "op": "POP"
    },
    "14081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14083": {
      "op": "DUP10"
    },
    "14084": {
      "op": "ADD"
    },
    "14085": {
      "op": "CALLDATALOAD"
    },
    "14086": {
      "op": "SWAP2"
    },
    "14087": {
      "op": "POP"
    },
    "14088": {
      "op": "PUSH2",
      "value": "0x3710"
    },
    "14091": {
      "op": "DUP3"
    },
    "14092": {
      "op": "PUSH2",
      "value": "0x359C"
    },
    "14095": {
      "jump": "i",
      "op": "JUMP"
    },
    "14096": {
      "op": "JUMPDEST"
    },
    "14097": {
      "op": "DUP2"
    },
    "14098": {
      "op": "SWAP6"
    },
    "14099": {
      "op": "POP"
    },
    "14100": {
      "op": "PUSH2",
      "value": "0x371F"
    },
    "14103": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14105": {
      "op": "DUP11"
    },
    "14106": {
      "op": "ADD"
    },
    "14107": {
      "op": "PUSH2",
      "value": "0x36A8"
    },
    "14110": {
      "jump": "i",
      "op": "JUMP"
    },
    "14111": {
      "op": "JUMPDEST"
    },
    "14112": {
      "op": "SWAP5"
    },
    "14113": {
      "op": "POP"
    },
    "14114": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14116": {
      "op": "DUP10"
    },
    "14117": {
      "op": "ADD"
    },
    "14118": {
      "op": "CALLDATALOAD"
    },
    "14119": {
      "op": "SWAP2"
    },
    "14120": {
      "op": "POP"
    },
    "14121": {
      "op": "DUP1"
    },
    "14122": {
      "op": "DUP3"
    },
    "14123": {
      "op": "GT"
    },
    "14124": {
      "op": "ISZERO"
    },
    "14125": {
      "op": "PUSH2",
      "value": "0x3735"
    },
    "14128": {
      "op": "JUMPI"
    },
    "14129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14131": {
      "op": "DUP1"
    },
    "14132": {
      "op": "REVERT"
    },
    "14133": {
      "op": "JUMPDEST"
    },
    "14134": {
      "op": "POP"
    },
    "14135": {
      "op": "PUSH2",
      "value": "0x3742"
    },
    "14138": {
      "op": "DUP10"
    },
    "14139": {
      "op": "DUP3"
    },
    "14140": {
      "op": "DUP11"
    },
    "14141": {
      "op": "ADD"
    },
    "14142": {
      "op": "PUSH2",
      "value": "0x365D"
    },
    "14145": {
      "jump": "i",
      "op": "JUMP"
    },
    "14146": {
      "op": "JUMPDEST"
    },
    "14147": {
      "op": "SWAP8"
    },
    "14148": {
      "op": "SWAP11"
    },
    "14149": {
      "op": "SWAP7"
    },
    "14150": {
      "op": "SWAP10"
    },
    "14151": {
      "op": "POP"
    },
    "14152": {
      "op": "SWAP5"
    },
    "14153": {
      "op": "SWAP8"
    },
    "14154": {
      "op": "POP"
    },
    "14155": {
      "op": "SWAP3"
    },
    "14156": {
      "op": "SWAP6"
    },
    "14157": {
      "op": "SWAP4"
    },
    "14158": {
      "op": "SWAP5"
    },
    "14159": {
      "op": "SWAP3"
    },
    "14160": {
      "op": "POP"
    },
    "14161": {
      "op": "POP"
    },
    "14162": {
      "op": "POP"
    },
    "14163": {
      "jump": "o",
      "op": "JUMP"
    },
    "14164": {
      "op": "JUMPDEST"
    },
    "14165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14169": {
      "op": "DUP3"
    },
    "14170": {
      "op": "DUP5"
    },
    "14171": {
      "op": "SUB"
    },
    "14172": {
      "op": "SLT"
    },
    "14173": {
      "op": "ISZERO"
    },
    "14174": {
      "op": "PUSH2",
      "value": "0x3766"
    },
    "14177": {
      "op": "JUMPI"
    },
    "14178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14180": {
      "op": "DUP1"
    },
    "14181": {
      "op": "REVERT"
    },
    "14182": {
      "op": "JUMPDEST"
    },
    "14183": {
      "op": "PUSH2",
      "value": "0xDA5"
    },
    "14186": {
      "op": "DUP3"
    },
    "14187": {
      "op": "PUSH2",
      "value": "0x3584"
    },
    "14190": {
      "jump": "i",
      "op": "JUMP"
    },
    "14191": {
      "op": "JUMPDEST"
    },
    "14192": {
      "op": "DUP1"
    },
    "14193": {
      "op": "CALLDATALOAD"
    },
    "14194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14198": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14200": {
      "op": "SHL"
    },
    "14201": {
      "op": "SUB"
    },
    "14202": {
      "op": "DUP2"
    },
    "14203": {
      "op": "AND"
    },
    "14204": {
      "op": "DUP2"
    },
    "14205": {
      "op": "EQ"
    },
    "14206": {
      "op": "PUSH2",
      "value": "0x2764"
    },
    "14209": {
      "op": "JUMPI"
    },
    "14210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14212": {
      "op": "DUP1"
    },
    "14213": {
      "op": "REVERT"
    },
    "14214": {
      "op": "JUMPDEST"
    },
    "14215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14217": {
      "op": "DUP1"
    },
    "14218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14220": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14222": {
      "op": "DUP5"
    },
    "14223": {
      "op": "DUP7"
    },
    "14224": {
      "op": "SUB"
    },
    "14225": {
      "op": "SLT"
    },
    "14226": {
      "op": "ISZERO"
    },
    "14227": {
      "op": "PUSH2",
      "value": "0x379B"
    },
    "14230": {
      "op": "JUMPI"
    },
    "14231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14233": {
      "op": "DUP1"
    },
    "14234": {
      "op": "REVERT"
    },
    "14235": {
      "op": "JUMPDEST"
    },
    "14236": {
      "op": "PUSH2",
      "value": "0x37A4"
    },
    "14239": {
      "op": "DUP5"
    },
    "14240": {
      "op": "PUSH2",
      "value": "0x376F"
    },
    "14243": {
      "jump": "i",
      "op": "JUMP"
    },
    "14244": {
      "op": "JUMPDEST"
    },
    "14245": {
      "op": "SWAP3"
    },
    "14246": {
      "op": "POP"
    },
    "14247": {
      "op": "PUSH2",
      "value": "0x37B2"
    },
    "14250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14252": {
      "op": "DUP6"
    },
    "14253": {
      "op": "ADD"
    },
    "14254": {
      "op": "PUSH2",
      "value": "0x376F"
    },
    "14257": {
      "jump": "i",
      "op": "JUMP"
    },
    "14258": {
      "op": "JUMPDEST"
    },
    "14259": {
      "op": "SWAP2"
    },
    "14260": {
      "op": "POP"
    },
    "14261": {
      "op": "PUSH2",
      "value": "0x37C0"
    },
    "14264": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14266": {
      "op": "DUP6"
    },
    "14267": {
      "op": "ADD"
    },
    "14268": {
      "op": "PUSH2",
      "value": "0x376F"
    },
    "14271": {
      "jump": "i",
      "op": "JUMP"
    },
    "14272": {
      "op": "JUMPDEST"
    },
    "14273": {
      "op": "SWAP1"
    },
    "14274": {
      "op": "POP"
    },
    "14275": {
      "op": "SWAP3"
    },
    "14276": {
      "op": "POP"
    },
    "14277": {
      "op": "SWAP3"
    },
    "14278": {
      "op": "POP"
    },
    "14279": {
      "op": "SWAP3"
    },
    "14280": {
      "jump": "o",
      "op": "JUMP"
    },
    "14281": {
      "op": "JUMPDEST"
    },
    "14282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14284": {
      "op": "DUP1"
    },
    "14285": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14287": {
      "op": "DUP4"
    },
    "14288": {
      "op": "DUP6"
    },
    "14289": {
      "op": "SUB"
    },
    "14290": {
      "op": "SLT"
    },
    "14291": {
      "op": "ISZERO"
    },
    "14292": {
      "op": "PUSH2",
      "value": "0x37DC"
    },
    "14295": {
      "op": "JUMPI"
    },
    "14296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14298": {
      "op": "DUP1"
    },
    "14299": {
      "op": "REVERT"
    },
    "14300": {
      "op": "JUMPDEST"
    },
    "14301": {
      "op": "PUSH2",
      "value": "0x37E5"
    },
    "14304": {
      "op": "DUP4"
    },
    "14305": {
      "op": "PUSH2",
      "value": "0x3584"
    },
    "14308": {
      "jump": "i",
      "op": "JUMP"
    },
    "14309": {
      "op": "JUMPDEST"
    },
    "14310": {
      "op": "SWAP2"
    },
    "14311": {
      "op": "POP"
    },
    "14312": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14314": {
      "op": "DUP4"
    },
    "14315": {
      "op": "ADD"
    },
    "14316": {
      "op": "CALLDATALOAD"
    },
    "14317": {
      "op": "PUSH2",
      "value": "0x37F5"
    },
    "14320": {
      "op": "DUP2"
    },
    "14321": {
      "op": "PUSH2",
      "value": "0x359C"
    },
    "14324": {
      "jump": "i",
      "op": "JUMP"
    },
    "14325": {
      "op": "JUMPDEST"
    },
    "14326": {
      "op": "DUP1"
    },
    "14327": {
      "op": "SWAP2"
    },
    "14328": {
      "op": "POP"
    },
    "14329": {
      "op": "POP"
    },
    "14330": {
      "op": "SWAP3"
    },
    "14331": {
      "op": "POP"
    },
    "14332": {
      "op": "SWAP3"
    },
    "14333": {
      "op": "SWAP1"
    },
    "14334": {
      "op": "POP"
    },
    "14335": {
      "jump": "o",
      "op": "JUMP"
    },
    "14336": {
      "op": "JUMPDEST"
    },
    "14337": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14340": {
      "op": "DUP2"
    },
    "14341": {
      "op": "AND"
    },
    "14342": {
      "op": "DUP2"
    },
    "14343": {
      "op": "EQ"
    },
    "14344": {
      "op": "PUSH2",
      "value": "0x1CA4"
    },
    "14347": {
      "op": "JUMPI"
    },
    "14348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14350": {
      "op": "DUP1"
    },
    "14351": {
      "op": "REVERT"
    },
    "14352": {
      "op": "JUMPDEST"
    },
    "14353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14355": {
      "op": "DUP1"
    },
    "14356": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14358": {
      "op": "DUP4"
    },
    "14359": {
      "op": "DUP6"
    },
    "14360": {
      "op": "SUB"
    },
    "14361": {
      "op": "SLT"
    },
    "14362": {
      "op": "ISZERO"
    },
    "14363": {
      "op": "PUSH2",
      "value": "0x3823"
    },
    "14366": {
      "op": "JUMPI"
    },
    "14367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14369": {
      "op": "DUP1"
    },
    "14370": {
      "op": "REVERT"
    },
    "14371": {
      "op": "JUMPDEST"
    },
    "14372": {
      "op": "DUP3"
    },
    "14373": {
      "op": "CALLDATALOAD"
    },
    "14374": {
      "op": "PUSH2",
      "value": "0x382E"
    },
    "14377": {
      "op": "DUP2"
    },
    "14378": {
      "op": "PUSH2",
      "value": "0x359C"
    },
    "14381": {
      "jump": "i",
      "op": "JUMP"
    },
    "14382": {
      "op": "JUMPDEST"
    },
    "14383": {
      "op": "SWAP2"
    },
    "14384": {
      "op": "POP"
    },
    "14385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14387": {
      "op": "DUP4"
    },
    "14388": {
      "op": "ADD"
    },
    "14389": {
      "op": "CALLDATALOAD"
    },
    "14390": {
      "op": "PUSH2",
      "value": "0x37F5"
    },
    "14393": {
      "op": "DUP2"
    },
    "14394": {
      "op": "PUSH2",
      "value": "0x3800"
    },
    "14397": {
      "jump": "i",
      "op": "JUMP"
    },
    "14398": {
      "op": "JUMPDEST"
    },
    "14399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14401": {
      "op": "DUP1"
    },
    "14402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14404": {
      "op": "DUP1"
    },
    "14405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14407": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14409": {
      "op": "DUP7"
    },
    "14410": {
      "op": "DUP9"
    },
    "14411": {
      "op": "SUB"
    },
    "14412": {
      "op": "SLT"
    },
    "14413": {
      "op": "ISZERO"
    },
    "14414": {
      "op": "PUSH2",
      "value": "0x3856"
    },
    "14417": {
      "op": "JUMPI"
    },
    "14418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14420": {
      "op": "DUP1"
    },
    "14421": {
      "op": "REVERT"
    },
    "14422": {
      "op": "JUMPDEST"
    },
    "14423": {
      "op": "PUSH2",
      "value": "0x385F"
    },
    "14426": {
      "op": "DUP7"
    },
    "14427": {
      "op": "PUSH2",
      "value": "0x3584"
    },
    "14430": {
      "jump": "i",
      "op": "JUMP"
    },
    "14431": {
      "op": "JUMPDEST"
    },
    "14432": {
      "op": "SWAP5"
    },
    "14433": {
      "op": "POP"
    },
    "14434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14436": {
      "op": "DUP7"
    },
    "14437": {
      "op": "ADD"
    },
    "14438": {
      "op": "CALLDATALOAD"
    },
    "14439": {
      "op": "PUSH2",
      "value": "0x386F"
    },
    "14442": {
      "op": "DUP2"
    },
    "14443": {
      "op": "PUSH2",
      "value": "0x359C"
    },
    "14446": {
      "jump": "i",
      "op": "JUMP"
    },
    "14447": {
      "op": "JUMPDEST"
    },
    "14448": {
      "op": "SWAP4"
    },
    "14449": {
      "op": "POP"
    },
    "14450": {
      "op": "PUSH2",
      "value": "0x387D"
    },
    "14453": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14455": {
      "op": "DUP8"
    },
    "14456": {
      "op": "ADD"
    },
    "14457": {
      "op": "PUSH2",
      "value": "0x36A8"
    },
    "14460": {
      "jump": "i",
      "op": "JUMP"
    },
    "14461": {
      "op": "JUMPDEST"
    },
    "14462": {
      "op": "SWAP3"
    },
    "14463": {
      "op": "POP"
    },
    "14464": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14466": {
      "op": "DUP7"
    },
    "14467": {
      "op": "ADD"
    },
    "14468": {
      "op": "CALLDATALOAD"
    },
    "14469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14473": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14475": {
      "op": "SHL"
    },
    "14476": {
      "op": "SUB"
    },
    "14477": {
      "op": "DUP2"
    },
    "14478": {
      "op": "GT"
    },
    "14479": {
      "op": "ISZERO"
    },
    "14480": {
      "op": "PUSH2",
      "value": "0x3898"
    },
    "14483": {
      "op": "JUMPI"
    },
    "14484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14486": {
      "op": "DUP1"
    },
    "14487": {
      "op": "REVERT"
    },
    "14488": {
      "op": "JUMPDEST"
    },
    "14489": {
      "op": "PUSH2",
      "value": "0x38A4"
    },
    "14492": {
      "op": "DUP9"
    },
    "14493": {
      "op": "DUP3"
    },
    "14494": {
      "op": "DUP10"
    },
    "14495": {
      "op": "ADD"
    },
    "14496": {
      "op": "PUSH2",
      "value": "0x365D"
    },
    "14499": {
      "jump": "i",
      "op": "JUMP"
    },
    "14500": {
      "op": "JUMPDEST"
    },
    "14501": {
      "op": "SWAP7"
    },
    "14502": {
      "op": "SWAP10"
    },
    "14503": {
      "op": "SWAP6"
    },
    "14504": {
      "op": "SWAP9"
    },
    "14505": {
      "op": "POP"
    },
    "14506": {
      "op": "SWAP4"
    },
    "14507": {
      "op": "SWAP7"
    },
    "14508": {
      "op": "POP"
    },
    "14509": {
      "op": "SWAP3"
    },
    "14510": {
      "op": "SWAP5"
    },
    "14511": {
      "op": "SWAP4"
    },
    "14512": {
      "op": "SWAP3"
    },
    "14513": {
      "op": "POP"
    },
    "14514": {
      "op": "POP"
    },
    "14515": {
      "op": "POP"
    },
    "14516": {
      "jump": "o",
      "op": "JUMP"
    },
    "14517": {
      "op": "JUMPDEST"
    },
    "14518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14522": {
      "op": "DUP3"
    },
    "14523": {
      "op": "DUP5"
    },
    "14524": {
      "op": "SUB"
    },
    "14525": {
      "op": "SLT"
    },
    "14526": {
      "op": "ISZERO"
    },
    "14527": {
      "op": "PUSH2",
      "value": "0x38C7"
    },
    "14530": {
      "op": "JUMPI"
    },
    "14531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14533": {
      "op": "DUP1"
    },
    "14534": {
      "op": "REVERT"
    },
    "14535": {
      "op": "JUMPDEST"
    },
    "14536": {
      "op": "POP"
    },
    "14537": {
      "op": "CALLDATALOAD"
    },
    "14538": {
      "op": "SWAP2"
    },
    "14539": {
      "op": "SWAP1"
    },
    "14540": {
      "op": "POP"
    },
    "14541": {
      "jump": "o",
      "op": "JUMP"
    },
    "14542": {
      "op": "JUMPDEST"
    },
    "14543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14545": {
      "op": "DUP1"
    },
    "14546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14548": {
      "op": "DUP1"
    },
    "14549": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14551": {
      "op": "DUP6"
    },
    "14552": {
      "op": "DUP8"
    },
    "14553": {
      "op": "SUB"
    },
    "14554": {
      "op": "SLT"
    },
    "14555": {
      "op": "ISZERO"
    },
    "14556": {
      "op": "PUSH2",
      "value": "0x38E4"
    },
    "14559": {
      "op": "JUMPI"
    },
    "14560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14562": {
      "op": "DUP1"
    },
    "14563": {
      "op": "REVERT"
    },
    "14564": {
      "op": "JUMPDEST"
    },
    "14565": {
      "op": "DUP5"
    },
    "14566": {
      "op": "CALLDATALOAD"
    },
    "14567": {
      "op": "PUSH2",
      "value": "0x38EF"
    },
    "14570": {
      "op": "DUP2"
    },
    "14571": {
      "op": "PUSH2",
      "value": "0x359C"
    },
    "14574": {
      "jump": "i",
      "op": "JUMP"
    },
    "14575": {
      "op": "JUMPDEST"
    },
    "14576": {
      "op": "SWAP4"
    },
    "14577": {
      "op": "POP"
    },
    "14578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14580": {
      "op": "DUP6"
    },
    "14581": {
      "op": "ADD"
    },
    "14582": {
      "op": "CALLDATALOAD"
    },
    "14583": {
      "op": "PUSH2",
      "value": "0x38FF"
    },
    "14586": {
      "op": "DUP2"
    },
    "14587": {
      "op": "PUSH2",
      "value": "0x3800"
    },
    "14590": {
      "jump": "i",
      "op": "JUMP"
    },
    "14591": {
      "op": "JUMPDEST"
    },
    "14592": {
      "op": "SWAP3"
    },
    "14593": {
      "op": "POP"
    },
    "14594": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14596": {
      "op": "DUP6"
    },
    "14597": {
      "op": "ADD"
    },
    "14598": {
      "op": "CALLDATALOAD"
    },
    "14599": {
      "op": "PUSH2",
      "value": "0x390F"
    },
    "14602": {
      "op": "DUP2"
    },
    "14603": {
      "op": "PUSH2",
      "value": "0x3800"
    },
    "14606": {
      "jump": "i",
      "op": "JUMP"
    },
    "14607": {
      "op": "JUMPDEST"
    },
    "14608": {
      "op": "SWAP2"
    },
    "14609": {
      "op": "POP"
    },
    "14610": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14612": {
      "op": "DUP6"
    },
    "14613": {
      "op": "ADD"
    },
    "14614": {
      "op": "CALLDATALOAD"
    },
    "14615": {
      "op": "PUSH2",
      "value": "0x391F"
    },
    "14618": {
      "op": "DUP2"
    },
    "14619": {
      "op": "PUSH2",
      "value": "0x3800"
    },
    "14622": {
      "jump": "i",
      "op": "JUMP"
    },
    "14623": {
      "op": "JUMPDEST"
    },
    "14624": {
      "op": "SWAP4"
    },
    "14625": {
      "op": "SWAP7"
    },
    "14626": {
      "op": "SWAP3"
    },
    "14627": {
      "op": "SWAP6"
    },
    "14628": {
      "op": "POP"
    },
    "14629": {
      "op": "SWAP1"
    },
    "14630": {
      "op": "SWAP4"
    },
    "14631": {
      "op": "POP"
    },
    "14632": {
      "op": "POP"
    },
    "14633": {
      "jump": "o",
      "op": "JUMP"
    },
    "14634": {
      "op": "JUMPDEST"
    },
    "14635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14637": {
      "op": "DUP1"
    },
    "14638": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14640": {
      "op": "DUP4"
    },
    "14641": {
      "op": "DUP6"
    },
    "14642": {
      "op": "SUB"
    },
    "14643": {
      "op": "SLT"
    },
    "14644": {
      "op": "ISZERO"
    },
    "14645": {
      "op": "PUSH2",
      "value": "0x393D"
    },
    "14648": {
      "op": "JUMPI"
    },
    "14649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14651": {
      "op": "DUP1"
    },
    "14652": {
      "op": "REVERT"
    },
    "14653": {
      "op": "JUMPDEST"
    },
    "14654": {
      "op": "PUSH2",
      "value": "0x3946"
    },
    "14657": {
      "op": "DUP4"
    },
    "14658": {
      "op": "PUSH2",
      "value": "0x3584"
    },
    "14661": {
      "jump": "i",
      "op": "JUMP"
    },
    "14662": {
      "op": "JUMPDEST"
    },
    "14663": {
      "op": "SWAP5"
    },
    "14664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14666": {
      "op": "SWAP4"
    },
    "14667": {
      "op": "SWAP1"
    },
    "14668": {
      "op": "SWAP4"
    },
    "14669": {
      "op": "ADD"
    },
    "14670": {
      "op": "CALLDATALOAD"
    },
    "14671": {
      "op": "SWAP4"
    },
    "14672": {
      "op": "POP"
    },
    "14673": {
      "op": "POP"
    },
    "14674": {
      "op": "POP"
    },
    "14675": {
      "jump": "o",
      "op": "JUMP"
    },
    "14676": {
      "op": "JUMPDEST"
    },
    "14677": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14682": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14684": {
      "op": "SHL"
    },
    "14685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14687": {
      "op": "MSTORE"
    },
    "14688": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "14690": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14692": {
      "op": "MSTORE"
    },
    "14693": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14697": {
      "op": "REVERT"
    },
    "14698": {
      "op": "JUMPDEST"
    },
    "14699": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14704": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14706": {
      "op": "SHL"
    },
    "14707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14709": {
      "op": "MSTORE"
    },
    "14710": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "14712": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14714": {
      "op": "MSTORE"
    },
    "14715": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14719": {
      "op": "REVERT"
    },
    "14720": {
      "op": "JUMPDEST"
    },
    "14721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14723": {
      "op": "DUP3"
    },
    "14724": {
      "op": "PUSH2",
      "value": "0x398F"
    },
    "14727": {
      "op": "JUMPI"
    },
    "14728": {
      "op": "PUSH2",
      "value": "0x398F"
    },
    "14731": {
      "op": "PUSH2",
      "value": "0x3954"
    },
    "14734": {
      "jump": "i",
      "op": "JUMP"
    },
    "14735": {
      "op": "JUMPDEST"
    },
    "14736": {
      "op": "POP"
    },
    "14737": {
      "op": "DIV"
    },
    "14738": {
      "op": "SWAP1"
    },
    "14739": {
      "jump": "o",
      "op": "JUMP"
    },
    "14740": {
      "op": "JUMPDEST"
    },
    "14741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14747": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14749": {
      "op": "SHL"
    },
    "14750": {
      "op": "SUB"
    },
    "14751": {
      "op": "DUP1"
    },
    "14752": {
      "op": "DUP5"
    },
    "14753": {
      "op": "AND"
    },
    "14754": {
      "op": "DUP1"
    },
    "14755": {
      "op": "PUSH2",
      "value": "0x39AE"
    },
    "14758": {
      "op": "JUMPI"
    },
    "14759": {
      "op": "PUSH2",
      "value": "0x39AE"
    },
    "14762": {
      "op": "PUSH2",
      "value": "0x3954"
    },
    "14765": {
      "jump": "i",
      "op": "JUMP"
    },
    "14766": {
      "op": "JUMPDEST"
    },
    "14767": {
      "op": "SWAP3"
    },
    "14768": {
      "op": "AND"
    },
    "14769": {
      "op": "SWAP2"
    },
    "14770": {
      "op": "SWAP1"
    },
    "14771": {
      "op": "SWAP2"
    },
    "14772": {
      "op": "DIV"
    },
    "14773": {
      "op": "SWAP3"
    },
    "14774": {
      "op": "SWAP2"
    },
    "14775": {
      "op": "POP"
    },
    "14776": {
      "op": "POP"
    },
    "14777": {
      "jump": "o",
      "op": "JUMP"
    },
    "14778": {
      "op": "JUMPDEST"
    },
    "14779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14781": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14784": {
      "op": "DUP1"
    },
    "14785": {
      "op": "DUP4"
    },
    "14786": {
      "op": "AND"
    },
    "14787": {
      "op": "DUP2"
    },
    "14788": {
      "op": "DUP6"
    },
    "14789": {
      "op": "AND"
    },
    "14790": {
      "op": "DUP1"
    },
    "14791": {
      "op": "DUP4"
    },
    "14792": {
      "op": "SUB"
    },
    "14793": {
      "op": "DUP3"
    },
    "14794": {
      "op": "GT"
    },
    "14795": {
      "op": "ISZERO"
    },
    "14796": {
      "op": "PUSH2",
      "value": "0x39D7"
    },
    "14799": {
      "op": "JUMPI"
    },
    "14800": {
      "op": "PUSH2",
      "value": "0x39D7"
    },
    "14803": {
      "op": "PUSH2",
      "value": "0x396A"
    },
    "14806": {
      "jump": "i",
      "op": "JUMP"
    },
    "14807": {
      "op": "JUMPDEST"
    },
    "14808": {
      "op": "ADD"
    },
    "14809": {
      "op": "SWAP5"
    },
    "14810": {
      "op": "SWAP4"
    },
    "14811": {
      "op": "POP"
    },
    "14812": {
      "op": "POP"
    },
    "14813": {
      "op": "POP"
    },
    "14814": {
      "op": "POP"
    },
    "14815": {
      "jump": "o",
      "op": "JUMP"
    },
    "14816": {
      "op": "JUMPDEST"
    },
    "14817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14819": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14822": {
      "op": "DUP4"
    },
    "14823": {
      "op": "DUP2"
    },
    "14824": {
      "op": "AND"
    },
    "14825": {
      "op": "SWAP1"
    },
    "14826": {
      "op": "DUP4"
    },
    "14827": {
      "op": "AND"
    },
    "14828": {
      "op": "DUP2"
    },
    "14829": {
      "op": "DUP2"
    },
    "14830": {
      "op": "LT"
    },
    "14831": {
      "op": "ISZERO"
    },
    "14832": {
      "op": "PUSH2",
      "value": "0x39FB"
    },
    "14835": {
      "op": "JUMPI"
    },
    "14836": {
      "op": "PUSH2",
      "value": "0x39FB"
    },
    "14839": {
      "op": "PUSH2",
      "value": "0x396A"
    },
    "14842": {
      "jump": "i",
      "op": "JUMP"
    },
    "14843": {
      "op": "JUMPDEST"
    },
    "14844": {
      "op": "SUB"
    },
    "14845": {
      "op": "SWAP4"
    },
    "14846": {
      "op": "SWAP3"
    },
    "14847": {
      "op": "POP"
    },
    "14848": {
      "op": "POP"
    },
    "14849": {
      "op": "POP"
    },
    "14850": {
      "jump": "o",
      "op": "JUMP"
    },
    "14851": {
      "op": "JUMPDEST"
    },
    "14852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14854": {
      "op": "DUP2"
    },
    "14855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14857": {
      "op": "NOT"
    },
    "14858": {
      "op": "DIV"
    },
    "14859": {
      "op": "DUP4"
    },
    "14860": {
      "op": "GT"
    },
    "14861": {
      "op": "DUP3"
    },
    "14862": {
      "op": "ISZERO"
    },
    "14863": {
      "op": "ISZERO"
    },
    "14864": {
      "op": "AND"
    },
    "14865": {
      "op": "ISZERO"
    },
    "14866": {
      "op": "PUSH2",
      "value": "0x3A1D"
    },
    "14869": {
      "op": "JUMPI"
    },
    "14870": {
      "op": "PUSH2",
      "value": "0x3A1D"
    },
    "14873": {
      "op": "PUSH2",
      "value": "0x396A"
    },
    "14876": {
      "jump": "i",
      "op": "JUMP"
    },
    "14877": {
      "op": "JUMPDEST"
    },
    "14878": {
      "op": "POP"
    },
    "14879": {
      "op": "MUL"
    },
    "14880": {
      "op": "SWAP1"
    },
    "14881": {
      "jump": "o",
      "op": "JUMP"
    },
    "14882": {
      "op": "JUMPDEST"
    },
    "14883": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14888": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14890": {
      "op": "SHL"
    },
    "14891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14893": {
      "op": "MSTORE"
    },
    "14894": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14896": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14898": {
      "op": "MSTORE"
    },
    "14899": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14903": {
      "op": "REVERT"
    },
    "14904": {
      "op": "JUMPDEST"
    },
    "14905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14909": {
      "op": "NOT"
    },
    "14910": {
      "op": "DUP3"
    },
    "14911": {
      "op": "EQ"
    },
    "14912": {
      "op": "ISZERO"
    },
    "14913": {
      "op": "PUSH2",
      "value": "0x3A4C"
    },
    "14916": {
      "op": "JUMPI"
    },
    "14917": {
      "op": "PUSH2",
      "value": "0x3A4C"
    },
    "14920": {
      "op": "PUSH2",
      "value": "0x396A"
    },
    "14923": {
      "jump": "i",
      "op": "JUMP"
    },
    "14924": {
      "op": "JUMPDEST"
    },
    "14925": {
      "op": "POP"
    },
    "14926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14928": {
      "op": "ADD"
    },
    "14929": {
      "op": "SWAP1"
    },
    "14930": {
      "jump": "o",
      "op": "JUMP"
    },
    "14931": {
      "op": "JUMPDEST"
    },
    "14932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14934": {
      "op": "DUP2"
    },
    "14935": {
      "op": "PUSH2",
      "value": "0x3A62"
    },
    "14938": {
      "op": "JUMPI"
    },
    "14939": {
      "op": "PUSH2",
      "value": "0x3A62"
    },
    "14942": {
      "op": "PUSH2",
      "value": "0x396A"
    },
    "14945": {
      "jump": "i",
      "op": "JUMP"
    },
    "14946": {
      "op": "JUMPDEST"
    },
    "14947": {
      "op": "POP"
    },
    "14948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14950": {
      "op": "NOT"
    },
    "14951": {
      "op": "ADD"
    },
    "14952": {
      "op": "SWAP1"
    },
    "14953": {
      "jump": "o",
      "op": "JUMP"
    },
    "14954": {
      "op": "JUMPDEST"
    },
    "14955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14959": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14961": {
      "op": "SHL"
    },
    "14962": {
      "op": "DUP3"
    },
    "14963": {
      "op": "EQ"
    },
    "14964": {
      "op": "ISZERO"
    },
    "14965": {
      "op": "PUSH2",
      "value": "0x3A80"
    },
    "14968": {
      "op": "JUMPI"
    },
    "14969": {
      "op": "PUSH2",
      "value": "0x3A80"
    },
    "14972": {
      "op": "PUSH2",
      "value": "0x396A"
    },
    "14975": {
      "jump": "i",
      "op": "JUMP"
    },
    "14976": {
      "op": "JUMPDEST"
    },
    "14977": {
      "op": "POP"
    },
    "14978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14980": {
      "op": "SUB"
    },
    "14981": {
      "op": "SWAP1"
    },
    "14982": {
      "jump": "o",
      "op": "JUMP"
    },
    "14983": {
      "op": "JUMPDEST"
    },
    "14984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14986": {
      "op": "DUP1"
    },
    "14987": {
      "op": "DUP4"
    },
    "14988": {
      "op": "SLT"
    },
    "14989": {
      "op": "DUP1"
    },
    "14990": {
      "op": "ISZERO"
    },
    "14991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14993": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14995": {
      "op": "SHL"
    },
    "14996": {
      "op": "DUP6"
    },
    "14997": {
      "op": "ADD"
    },
    "14998": {
      "op": "DUP5"
    },
    "14999": {
      "op": "SLT"
    },
    "15000": {
      "op": "AND"
    },
    "15001": {
      "op": "ISZERO"
    },
    "15002": {
      "op": "PUSH2",
      "value": "0x3AA5"
    },
    "15005": {
      "op": "JUMPI"
    },
    "15006": {
      "op": "PUSH2",
      "value": "0x3AA5"
    },
    "15009": {
      "op": "PUSH2",
      "value": "0x396A"
    },
    "15012": {
      "jump": "i",
      "op": "JUMP"
    },
    "15013": {
      "op": "JUMPDEST"
    },
    "15014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15018": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15020": {
      "op": "SHL"
    },
    "15021": {
      "op": "SUB"
    },
    "15022": {
      "op": "DUP5"
    },
    "15023": {
      "op": "ADD"
    },
    "15024": {
      "op": "DUP4"
    },
    "15025": {
      "op": "SGT"
    },
    "15026": {
      "op": "DUP2"
    },
    "15027": {
      "op": "AND"
    },
    "15028": {
      "op": "ISZERO"
    },
    "15029": {
      "op": "PUSH2",
      "value": "0x3AC0"
    },
    "15032": {
      "op": "JUMPI"
    },
    "15033": {
      "op": "PUSH2",
      "value": "0x3AC0"
    },
    "15036": {
      "op": "PUSH2",
      "value": "0x396A"
    },
    "15039": {
      "jump": "i",
      "op": "JUMP"
    },
    "15040": {
      "op": "JUMPDEST"
    },
    "15041": {
      "op": "POP"
    },
    "15042": {
      "op": "POP"
    },
    "15043": {
      "op": "SUB"
    },
    "15044": {
      "op": "SWAP1"
    },
    "15045": {
      "jump": "o",
      "op": "JUMP"
    },
    "15046": {
      "op": "JUMPDEST"
    },
    "15047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15049": {
      "op": "DUP1"
    },
    "15050": {
      "op": "DUP3"
    },
    "15051": {
      "op": "SLT"
    },
    "15052": {
      "op": "DUP1"
    },
    "15053": {
      "op": "ISZERO"
    },
    "15054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15058": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15060": {
      "op": "SHL"
    },
    "15061": {
      "op": "SUB"
    },
    "15062": {
      "op": "DUP5"
    },
    "15063": {
      "op": "SWAP1"
    },
    "15064": {
      "op": "SUB"
    },
    "15065": {
      "op": "DUP6"
    },
    "15066": {
      "op": "SGT"
    },
    "15067": {
      "op": "AND"
    },
    "15068": {
      "op": "ISZERO"
    },
    "15069": {
      "op": "PUSH2",
      "value": "0x3AE8"
    },
    "15072": {
      "op": "JUMPI"
    },
    "15073": {
      "op": "PUSH2",
      "value": "0x3AE8"
    },
    "15076": {
      "op": "PUSH2",
      "value": "0x396A"
    },
    "15079": {
      "jump": "i",
      "op": "JUMP"
    },
    "15080": {
      "op": "JUMPDEST"
    },
    "15081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15083": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15085": {
      "op": "SHL"
    },
    "15086": {
      "op": "DUP4"
    },
    "15087": {
      "op": "SWAP1"
    },
    "15088": {
      "op": "SUB"
    },
    "15089": {
      "op": "DUP5"
    },
    "15090": {
      "op": "SLT"
    },
    "15091": {
      "op": "DUP2"
    },
    "15092": {
      "op": "AND"
    },
    "15093": {
      "op": "ISZERO"
    },
    "15094": {
      "op": "PUSH2",
      "value": "0x3B01"
    },
    "15097": {
      "op": "JUMPI"
    },
    "15098": {
      "op": "PUSH2",
      "value": "0x3B01"
    },
    "15101": {
      "op": "PUSH2",
      "value": "0x396A"
    },
    "15104": {
      "jump": "i",
      "op": "JUMP"
    },
    "15105": {
      "op": "JUMPDEST"
    },
    "15106": {
      "op": "POP"
    },
    "15107": {
      "op": "POP"
    },
    "15108": {
      "op": "ADD"
    },
    "15109": {
      "op": "SWAP1"
    },
    "15110": {
      "jump": "o",
      "op": "JUMP"
    },
    "15111": {
      "op": "JUMPDEST"
    },
    "15112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15114": {
      "op": "DUP3"
    },
    "15115": {
      "op": "NOT"
    },
    "15116": {
      "op": "DUP3"
    },
    "15117": {
      "op": "GT"
    },
    "15118": {
      "op": "ISZERO"
    },
    "15119": {
      "op": "PUSH2",
      "value": "0x3B1A"
    },
    "15122": {
      "op": "JUMPI"
    },
    "15123": {
      "op": "PUSH2",
      "value": "0x3B1A"
    },
    "15126": {
      "op": "PUSH2",
      "value": "0x396A"
    },
    "15129": {
      "jump": "i",
      "op": "JUMP"
    },
    "15130": {
      "op": "JUMPDEST"
    },
    "15131": {
      "op": "POP"
    },
    "15132": {
      "op": "ADD"
    },
    "15133": {
      "op": "SWAP1"
    },
    "15134": {
      "jump": "o",
      "op": "JUMP"
    },
    "15135": {
      "op": "JUMPDEST"
    },
    "15136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15138": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15141": {
      "op": "DUP1"
    },
    "15142": {
      "op": "DUP4"
    },
    "15143": {
      "op": "AND"
    },
    "15144": {
      "op": "DUP2"
    },
    "15145": {
      "op": "DUP2"
    },
    "15146": {
      "op": "EQ"
    },
    "15147": {
      "op": "ISZERO"
    },
    "15148": {
      "op": "PUSH2",
      "value": "0x3B37"
    },
    "15151": {
      "op": "JUMPI"
    },
    "15152": {
      "op": "PUSH2",
      "value": "0x3B37"
    },
    "15155": {
      "op": "PUSH2",
      "value": "0x396A"
    },
    "15158": {
      "jump": "i",
      "op": "JUMP"
    },
    "15159": {
      "op": "JUMPDEST"
    },
    "15160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15162": {
      "op": "ADD"
    },
    "15163": {
      "op": "SWAP4"
    },
    "15164": {
      "op": "SWAP3"
    },
    "15165": {
      "op": "POP"
    },
    "15166": {
      "op": "POP"
    },
    "15167": {
      "op": "POP"
    },
    "15168": {
      "jump": "o",
      "op": "JUMP"
    },
    "15169": {
      "op": "JUMPDEST"
    },
    "15170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15176": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15178": {
      "op": "SHL"
    },
    "15179": {
      "op": "SUB"
    },
    "15180": {
      "op": "DUP1"
    },
    "15181": {
      "op": "DUP4"
    },
    "15182": {
      "op": "AND"
    },
    "15183": {
      "op": "DUP2"
    },
    "15184": {
      "op": "DUP6"
    },
    "15185": {
      "op": "AND"
    },
    "15186": {
      "op": "DUP1"
    },
    "15187": {
      "op": "DUP4"
    },
    "15188": {
      "op": "SUB"
    },
    "15189": {
      "op": "DUP3"
    },
    "15190": {
      "op": "GT"
    },
    "15191": {
      "op": "ISZERO"
    },
    "15192": {
      "op": "PUSH2",
      "value": "0x39D7"
    },
    "15195": {
      "op": "JUMPI"
    },
    "15196": {
      "op": "PUSH2",
      "value": "0x39D7"
    },
    "15199": {
      "op": "PUSH2",
      "value": "0x396A"
    },
    "15202": {
      "jump": "i",
      "op": "JUMP"
    },
    "15203": {
      "op": "JUMPDEST"
    },
    "15204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15206": {
      "op": "DUP2"
    },
    "15207": {
      "op": "MLOAD"
    },
    "15208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15210": {
      "op": "JUMPDEST"
    },
    "15211": {
      "op": "DUP2"
    },
    "15212": {
      "op": "DUP2"
    },
    "15213": {
      "op": "LT"
    },
    "15214": {
      "op": "ISZERO"
    },
    "15215": {
      "op": "PUSH2",
      "value": "0x3B84"
    },
    "15218": {
      "op": "JUMPI"
    },
    "15219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15221": {
      "op": "DUP2"
    },
    "15222": {
      "op": "DUP6"
    },
    "15223": {
      "op": "ADD"
    },
    "15224": {
      "op": "DUP2"
    },
    "15225": {
      "op": "ADD"
    },
    "15226": {
      "op": "MLOAD"
    },
    "15227": {
      "op": "DUP7"
    },
    "15228": {
      "op": "DUP4"
    },
    "15229": {
      "op": "ADD"
    },
    "15230": {
      "op": "MSTORE"
    },
    "15231": {
      "op": "ADD"
    },
    "15232": {
      "op": "PUSH2",
      "value": "0x3B6A"
    },
    "15235": {
      "op": "JUMP"
    },
    "15236": {
      "op": "JUMPDEST"
    },
    "15237": {
      "op": "DUP2"
    },
    "15238": {
      "op": "DUP2"
    },
    "15239": {
      "op": "GT"
    },
    "15240": {
      "op": "ISZERO"
    },
    "15241": {
      "op": "PUSH2",
      "value": "0x3B93"
    },
    "15244": {
      "op": "JUMPI"
    },
    "15245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15247": {
      "op": "DUP3"
    },
    "15248": {
      "op": "DUP7"
    },
    "15249": {
      "op": "ADD"
    },
    "15250": {
      "op": "MSTORE"
    },
    "15251": {
      "op": "JUMPDEST"
    },
    "15252": {
      "op": "POP"
    },
    "15253": {
      "op": "SWAP3"
    },
    "15254": {
      "op": "SWAP1"
    },
    "15255": {
      "op": "SWAP3"
    },
    "15256": {
      "op": "ADD"
    },
    "15257": {
      "op": "SWAP3"
    },
    "15258": {
      "op": "SWAP2"
    },
    "15259": {
      "op": "POP"
    },
    "15260": {
      "op": "POP"
    },
    "15261": {
      "jump": "o",
      "op": "JUMP"
    },
    "15262": {
      "op": "JUMPDEST"
    },
    "15263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15267": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "15269": {
      "op": "SHL"
    },
    "15270": {
      "op": "SUB"
    },
    "15271": {
      "op": "NOT"
    },
    "15272": {
      "op": "DUP6"
    },
    "15273": {
      "op": "DUP2"
    },
    "15274": {
      "op": "AND"
    },
    "15275": {
      "op": "DUP3"
    },
    "15276": {
      "op": "MSTORE"
    },
    "15277": {
      "op": "DUP5"
    },
    "15278": {
      "op": "AND"
    },
    "15279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15281": {
      "op": "DUP3"
    },
    "15282": {
      "op": "ADD"
    },
    "15283": {
      "op": "MSTORE"
    },
    "15284": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15286": {
      "op": "DUP4"
    },
    "15287": {
      "op": "SWAP1"
    },
    "15288": {
      "op": "SHL"
    },
    "15289": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "15302": {
      "op": "NOT"
    },
    "15303": {
      "op": "AND"
    },
    "15304": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "15306": {
      "op": "DUP3"
    },
    "15307": {
      "op": "ADD"
    },
    "15308": {
      "op": "MSTORE"
    },
    "15309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15311": {
      "op": "PUSH2",
      "value": "0x3BDB"
    },
    "15314": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "15316": {
      "op": "DUP4"
    },
    "15317": {
      "op": "ADD"
    },
    "15318": {
      "op": "DUP5"
    },
    "15319": {
      "op": "PUSH2",
      "value": "0x3B63"
    },
    "15322": {
      "jump": "i",
      "op": "JUMP"
    },
    "15323": {
      "op": "JUMPDEST"
    },
    "15324": {
      "op": "SWAP7"
    },
    "15325": {
      "op": "SWAP6"
    },
    "15326": {
      "op": "POP"
    },
    "15327": {
      "op": "POP"
    },
    "15328": {
      "op": "POP"
    },
    "15329": {
      "op": "POP"
    },
    "15330": {
      "op": "POP"
    },
    "15331": {
      "op": "POP"
    },
    "15332": {
      "jump": "o",
      "op": "JUMP"
    },
    "15333": {
      "op": "JUMPDEST"
    },
    "15334": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15339": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15341": {
      "op": "SHL"
    },
    "15342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15344": {
      "op": "MSTORE"
    },
    "15345": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "15347": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15349": {
      "op": "MSTORE"
    },
    "15350": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15354": {
      "op": "REVERT"
    },
    "15355": {
      "op": "JUMPDEST"
    },
    "15356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15358": {
      "op": "DUP3"
    },
    "15359": {
      "op": "PUSH2",
      "value": "0x3C0A"
    },
    "15362": {
      "op": "JUMPI"
    },
    "15363": {
      "op": "PUSH2",
      "value": "0x3C0A"
    },
    "15366": {
      "op": "PUSH2",
      "value": "0x3954"
    },
    "15369": {
      "jump": "i",
      "op": "JUMP"
    },
    "15370": {
      "op": "JUMPDEST"
    },
    "15371": {
      "op": "POP"
    },
    "15372": {
      "op": "MOD"
    },
    "15373": {
      "op": "SWAP1"
    },
    "15374": {
      "jump": "o",
      "op": "JUMP"
    },
    "15375": {
      "op": "JUMPDEST"
    },
    "15376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15380": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "15382": {
      "op": "SHL"
    },
    "15383": {
      "op": "SUB"
    },
    "15384": {
      "op": "NOT"
    },
    "15385": {
      "op": "DUP6"
    },
    "15386": {
      "op": "AND"
    },
    "15387": {
      "op": "DUP2"
    },
    "15388": {
      "op": "MSTORE"
    },
    "15389": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "15397": {
      "op": "NOT"
    },
    "15398": {
      "op": "DUP5"
    },
    "15399": {
      "op": "AND"
    },
    "15400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15402": {
      "op": "DUP3"
    },
    "15403": {
      "op": "ADD"
    },
    "15404": {
      "op": "MSTORE"
    },
    "15405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15407": {
      "op": "PUSH2",
      "value": "0x3BDB"
    },
    "15410": {
      "op": "PUSH2",
      "value": "0x3C3E"
    },
    "15413": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "15415": {
      "op": "DUP5"
    },
    "15416": {
      "op": "ADD"
    },
    "15417": {
      "op": "DUP7"
    },
    "15418": {
      "op": "PUSH2",
      "value": "0x3B63"
    },
    "15421": {
      "jump": "i",
      "op": "JUMP"
    },
    "15422": {
      "op": "JUMPDEST"
    },
    "15423": {
      "op": "DUP5"
    },
    "15424": {
      "op": "PUSH2",
      "value": "0x3B63"
    },
    "15427": {
      "jump": "i",
      "op": "JUMP"
    },
    "15428": {
      "op": "JUMPDEST"
    },
    "15429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15431": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15433": {
      "op": "DUP3"
    },
    "15434": {
      "op": "AND"
    },
    "15435": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15437": {
      "op": "DUP5"
    },
    "15438": {
      "op": "AND"
    },
    "15439": {
      "op": "DUP1"
    },
    "15440": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15442": {
      "op": "SUB"
    },
    "15443": {
      "op": "DUP3"
    },
    "15444": {
      "op": "GT"
    },
    "15445": {
      "op": "ISZERO"
    },
    "15446": {
      "op": "PUSH2",
      "value": "0x3C61"
    },
    "15449": {
      "op": "JUMPI"
    },
    "15450": {
      "op": "PUSH2",
      "value": "0x3C61"
    },
    "15453": {
      "op": "PUSH2",
      "value": "0x396A"
    },
    "15456": {
      "jump": "i",
      "op": "JUMP"
    },
    "15457": {
      "op": "JUMPDEST"
    },
    "15458": {
      "op": "ADD"
    },
    "15459": {
      "op": "SWAP4"
    },
    "15460": {
      "op": "SWAP3"
    },
    "15461": {
      "op": "POP"
    },
    "15462": {
      "op": "POP"
    },
    "15463": {
      "op": "POP"
    },
    "15464": {
      "jump": "o",
      "op": "JUMP"
    },
    "15465": {
      "op": "JUMPDEST"
    },
    "15466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15470": {
      "op": "DUP3"
    },
    "15471": {
      "op": "DUP5"
    },
    "15472": {
      "op": "SUB"
    },
    "15473": {
      "op": "SLT"
    },
    "15474": {
      "op": "ISZERO"
    },
    "15475": {
      "op": "PUSH2",
      "value": "0x3C7B"
    },
    "15478": {
      "op": "JUMPI"
    },
    "15479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15481": {
      "op": "DUP1"
    },
    "15482": {
      "op": "REVERT"
    },
    "15483": {
      "op": "JUMPDEST"
    },
    "15484": {
      "op": "POP"
    },
    "15485": {
      "op": "MLOAD"
    },
    "15486": {
      "op": "SWAP2"
    },
    "15487": {
      "op": "SWAP1"
    },
    "15488": {
      "op": "POP"
    },
    "15489": {
      "jump": "o",
      "op": "JUMP"
    },
    "15490": {
      "op": "JUMPDEST"
    },
    "15491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15493": {
      "op": "DUP1"
    },
    "15494": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15496": {
      "op": "DUP4"
    },
    "15497": {
      "op": "DUP6"
    },
    "15498": {
      "op": "SUB"
    },
    "15499": {
      "op": "SLT"
    },
    "15500": {
      "op": "ISZERO"
    },
    "15501": {
      "op": "PUSH2",
      "value": "0x3C95"
    },
    "15504": {
      "op": "JUMPI"
    },
    "15505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15507": {
      "op": "DUP1"
    },
    "15508": {
      "op": "REVERT"
    },
    "15509": {
      "op": "JUMPDEST"
    },
    "15510": {
      "op": "DUP3"
    },
    "15511": {
      "op": "MLOAD"
    },
    "15512": {
      "op": "PUSH2",
      "value": "0x3CA0"
    },
    "15515": {
      "op": "DUP2"
    },
    "15516": {
      "op": "PUSH2",
      "value": "0x3800"
    },
    "15519": {
      "jump": "i",
      "op": "JUMP"
    },
    "15520": {
      "op": "JUMPDEST"
    },
    "15521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15523": {
      "op": "DUP5"
    },
    "15524": {
      "op": "ADD"
    },
    "15525": {
      "op": "MLOAD"
    },
    "15526": {
      "op": "SWAP1"
    },
    "15527": {
      "op": "SWAP3"
    },
    "15528": {
      "op": "POP"
    },
    "15529": {
      "op": "PUSH2",
      "value": "0x37F5"
    },
    "15532": {
      "op": "DUP2"
    },
    "15533": {
      "op": "PUSH2",
      "value": "0x3800"
    },
    "15536": {
      "jump": "i",
      "op": "JUMP"
    },
    "15537": {
      "op": "JUMPDEST"
    },
    "15538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15542": {
      "op": "DUP3"
    },
    "15543": {
      "op": "DUP5"
    },
    "15544": {
      "op": "SUB"
    },
    "15545": {
      "op": "SLT"
    },
    "15546": {
      "op": "ISZERO"
    },
    "15547": {
      "op": "PUSH2",
      "value": "0x3CC3"
    },
    "15550": {
      "op": "JUMPI"
    },
    "15551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15553": {
      "op": "DUP1"
    },
    "15554": {
      "op": "REVERT"
    },
    "15555": {
      "op": "JUMPDEST"
    },
    "15556": {
      "op": "DUP2"
    },
    "15557": {
      "op": "MLOAD"
    },
    "15558": {
      "op": "PUSH2",
      "value": "0xDA5"
    },
    "15561": {
      "op": "DUP2"
    },
    "15562": {
      "op": "PUSH2",
      "value": "0x3800"
    },
    "15565": {
      "jump": "i",
      "op": "JUMP"
    },
    "15566": {
      "op": "JUMPDEST"
    },
    "15567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15573": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15575": {
      "op": "SHL"
    },
    "15576": {
      "op": "SUB"
    },
    "15577": {
      "op": "DUP1"
    },
    "15578": {
      "op": "DUP4"
    },
    "15579": {
      "op": "AND"
    },
    "15580": {
      "op": "DUP2"
    },
    "15581": {
      "op": "DUP6"
    },
    "15582": {
      "op": "AND"
    },
    "15583": {
      "op": "DUP2"
    },
    "15584": {
      "op": "DUP4"
    },
    "15585": {
      "op": "DIV"
    },
    "15586": {
      "op": "DUP2"
    },
    "15587": {
      "op": "GT"
    },
    "15588": {
      "op": "DUP3"
    },
    "15589": {
      "op": "ISZERO"
    },
    "15590": {
      "op": "ISZERO"
    },
    "15591": {
      "op": "AND"
    },
    "15592": {
      "op": "ISZERO"
    },
    "15593": {
      "op": "PUSH2",
      "value": "0x3CF4"
    },
    "15596": {
      "op": "JUMPI"
    },
    "15597": {
      "op": "PUSH2",
      "value": "0x3CF4"
    },
    "15600": {
      "op": "PUSH2",
      "value": "0x396A"
    },
    "15603": {
      "jump": "i",
      "op": "JUMP"
    },
    "15604": {
      "op": "JUMPDEST"
    },
    "15605": {
      "op": "MUL"
    },
    "15606": {
      "op": "SWAP5"
    },
    "15607": {
      "op": "SWAP4"
    },
    "15608": {
      "op": "POP"
    },
    "15609": {
      "op": "POP"
    },
    "15610": {
      "op": "POP"
    },
    "15611": {
      "op": "POP"
    },
    "15612": {
      "jump": "o",
      "op": "JUMP"
    },
    "15613": {
      "op": "JUMPDEST"
    },
    "15614": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15619": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15621": {
      "op": "SHL"
    },
    "15622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15624": {
      "op": "MSTORE"
    },
    "15625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15627": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15629": {
      "op": "MSTORE"
    },
    "15630": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15634": {
      "op": "REVERT"
    },
    "15635": {
      "op": "JUMPDEST"
    },
    "15636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15638": {
      "op": "DUP3"
    },
    "15639": {
      "op": "DUP3"
    },
    "15640": {
      "op": "LT"
    },
    "15641": {
      "op": "ISZERO"
    },
    "15642": {
      "op": "PUSH2",
      "value": "0x3D25"
    },
    "15645": {
      "op": "JUMPI"
    },
    "15646": {
      "op": "PUSH2",
      "value": "0x3D25"
    },
    "15649": {
      "op": "PUSH2",
      "value": "0x396A"
    },
    "15652": {
      "jump": "i",
      "op": "JUMP"
    },
    "15653": {
      "op": "JUMPDEST"
    },
    "15654": {
      "op": "POP"
    },
    "15655": {
      "op": "SUB"
    },
    "15656": {
      "op": "SWAP1"
    },
    "15657": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "8cef1d8845ab534b85496bd02769b76d585db150",
  "source": "// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.8.0;\n\n\nimport \"../zeppelin/token/ERC20/SafeERC20.sol\";\nimport \"../zeppelin/math/SafeMath.sol\";\nimport \"../zeppelin/math/Math.sol\";\nimport \"../zeppelin/utils/Address.sol\";\nimport \"./lib/AdditionalMath.sol\";\nimport \"./lib/SignatureVerifier.sol\";\nimport \"./NuCypherToken.sol\";\nimport \"./proxy/Upgradeable.sol\";\nimport \"./IStakingEscrow.sol\";\n\n\n/**\n* @title PolicyManager\n* @notice Contract holds policy data and locks accrued policy fees\n* @dev |v6.3.1|\n*/\ncontract PolicyManager is Upgradeable {\n    using SafeERC20 for NuCypherToken;\n    using SafeMath for uint256;\n    using AdditionalMath for uint256;\n    using AdditionalMath for int256;\n    using AdditionalMath for uint16;\n    using Address for address payable;\n\n    event PolicyCreated(\n        bytes16 indexed policyId,\n        address indexed sponsor,\n        address indexed owner,\n        uint256 feeRate,\n        uint64 startTimestamp,\n        uint64 endTimestamp,\n        uint256 numberOfNodes\n    );\n    event ArrangementRevoked(\n        bytes16 indexed policyId,\n        address indexed sender,\n        address indexed node,\n        uint256 value\n    );\n    event RefundForArrangement(\n        bytes16 indexed policyId,\n        address indexed sender,\n        address indexed node,\n        uint256 value\n    );\n    event PolicyRevoked(bytes16 indexed policyId, address indexed sender, uint256 value);\n    event RefundForPolicy(bytes16 indexed policyId, address indexed sender, uint256 value);\n    event MinFeeRateSet(address indexed node, uint256 value);\n    // TODO #1501\n    // Range range\n    event FeeRateRangeSet(address indexed sender, uint256 min, uint256 defaultValue, uint256 max);\n    event Withdrawn(address indexed node, address indexed recipient, uint256 value);\n\n    struct ArrangementInfo {\n        address node;\n        uint256 indexOfDowntimePeriods;\n        uint16 lastRefundedPeriod;\n    }\n\n    struct Policy {\n        bool disabled;\n        address payable sponsor;\n        address owner;\n\n        uint128 feeRate;\n        uint64 startTimestamp;\n        uint64 endTimestamp;\n\n        uint256 reservedSlot1;\n        uint256 reservedSlot2;\n        uint256 reservedSlot3;\n        uint256 reservedSlot4;\n        uint256 reservedSlot5;\n\n        ArrangementInfo[] arrangements;\n    }\n\n    struct NodeInfo {\n        uint128 fee;\n        uint16 previousFeePeriod;\n        uint256 feeRate;\n        uint256 minFeeRate;\n        mapping (uint16 => int256) stub; // former slot for feeDelta\n        mapping (uint16 => int256) feeDelta;\n    }\n\n    // TODO used only for `delegateGetNodeInfo`, probably will be removed after #1512\n    struct MemoryNodeInfo {\n        uint128 fee;\n        uint16 previousFeePeriod;\n        uint256 feeRate;\n        uint256 minFeeRate;\n    }\n\n    struct Range {\n        uint128 min;\n        uint128 defaultValue;\n        uint128 max;\n    }\n\n    bytes16 internal constant RESERVED_POLICY_ID = bytes16(0);\n    address internal constant RESERVED_NODE = address(0);\n    uint256 internal constant MAX_BALANCE = uint256(type(uint128).max);\n    // controlled overflow to get max int256\n    int256 public constant DEFAULT_FEE_DELTA = int256((type(uint256).max) >> 1);\n\n    IStakingEscrow public immutable escrow;\n    uint32 public immutable genesisSecondsPerPeriod;\n    uint32 public immutable secondsPerPeriod;\n\n    mapping (bytes16 => Policy) public policies;\n    mapping (address => NodeInfo) public nodes;\n    Range public feeRateRange;\n    uint64 public resetTimestamp;\n\n    /**\n    * @notice Constructor sets address of the escrow contract\n    * @dev Put same address in both inputs variables except when migration is happening\n    * @param _escrowDispatcher Address of escrow dispatcher\n    * @param _escrowImplementation Address of escrow implementation\n    */\n    constructor(IStakingEscrow _escrowDispatcher, IStakingEscrow _escrowImplementation) {\n        escrow = _escrowDispatcher;\n        // if the input address is not the StakingEscrow then calling `secondsPerPeriod` will throw error\n        uint32 localSecondsPerPeriod = _escrowImplementation.secondsPerPeriod();\n        require(localSecondsPerPeriod > 0);\n        secondsPerPeriod = localSecondsPerPeriod;\n        uint32 localgenesisSecondsPerPeriod = _escrowImplementation.genesisSecondsPerPeriod();\n        require(localgenesisSecondsPerPeriod > 0);\n        genesisSecondsPerPeriod = localgenesisSecondsPerPeriod;\n        // handle case when we deployed new StakingEscrow but not yet upgraded\n        if (_escrowDispatcher != _escrowImplementation) {\n            require(_escrowDispatcher.secondsPerPeriod() == localSecondsPerPeriod ||\n                _escrowDispatcher.secondsPerPeriod() == localgenesisSecondsPerPeriod);\n        }\n    }\n\n    /**\n    * @dev Checks that sender is the StakingEscrow contract\n    */\n    modifier onlyEscrowContract()\n    {\n        require(msg.sender == address(escrow));\n        _;\n    }\n\n    /**\n    * @return Number of current period\n    */\n    function getCurrentPeriod() public view returns (uint16) {\n        return uint16(block.timestamp / secondsPerPeriod);\n    }\n\n    /**\n    * @return Recalculate period value using new basis\n    */\n    function recalculatePeriod(uint16 _period) internal view returns (uint16) {\n        return uint16(uint256(_period) * genesisSecondsPerPeriod / secondsPerPeriod);\n    }\n\n    /**\n    * @notice Register a node\n    * @param _node Node address\n    * @param _period Initial period\n    */\n    function register(address _node, uint16 _period) external onlyEscrowContract {\n        NodeInfo storage nodeInfo = nodes[_node];\n        require(nodeInfo.previousFeePeriod == 0 && _period < getCurrentPeriod());\n        nodeInfo.previousFeePeriod = _period;\n    }\n\n    /**\n    * @notice Migrate from the old period length to the new one\n    * @param _node Node address\n    */\n    function migrate(address _node) external onlyEscrowContract {\n        NodeInfo storage nodeInfo = nodes[_node];\n        // with previous period length any previousFeePeriod will be greater than current period\n        // this is a sign of not migrated node\n        require(nodeInfo.previousFeePeriod >= getCurrentPeriod());\n        nodeInfo.previousFeePeriod = recalculatePeriod(nodeInfo.previousFeePeriod);\n        nodeInfo.feeRate = 0;\n    }\n\n    /**\n    * @notice Set minimum, default & maximum fee rate for all stakers and all policies ('global fee range')\n    */\n    // TODO # 1501\n    // function setFeeRateRange(Range calldata _range) external onlyOwner {\n    function setFeeRateRange(uint128 _min, uint128 _default, uint128 _max) external onlyOwner {\n        require(_min <= _default && _default <= _max);\n        feeRateRange = Range(_min, _default, _max);\n        emit FeeRateRangeSet(msg.sender, _min, _default, _max);\n    }\n\n    /**\n    * @notice Set the minimum acceptable fee rate (set by staker for their associated worker)\n    * @dev Input value must fall within `feeRateRange` (global fee range)\n    */\n    function setMinFeeRate(uint256 _minFeeRate) external {\n        require(_minFeeRate >= feeRateRange.min &&\n            _minFeeRate <= feeRateRange.max,\n            \"The staker's min fee rate must fall within the global fee range\");\n        NodeInfo storage nodeInfo = nodes[msg.sender];\n        if (nodeInfo.minFeeRate == _minFeeRate) {\n            return;\n        }\n        nodeInfo.minFeeRate = _minFeeRate;\n        emit MinFeeRateSet(msg.sender, _minFeeRate);\n    }\n\n    /**\n    * @notice Get the minimum acceptable fee rate (set by staker for their associated worker)\n    */\n    function getMinFeeRate(NodeInfo storage _nodeInfo) internal view returns (uint256) {\n        // if minFeeRate has not been set or chosen value falls outside the global fee range\n        // a default value is returned instead\n        if (_nodeInfo.minFeeRate == 0 ||\n            _nodeInfo.minFeeRate < feeRateRange.min ||\n            _nodeInfo.minFeeRate > feeRateRange.max) {\n            return feeRateRange.defaultValue;\n        } else {\n            return _nodeInfo.minFeeRate;\n        }\n    }\n\n    /**\n    * @notice Get the minimum acceptable fee rate (set by staker for their associated worker)\n    */\n    function getMinFeeRate(address _node) public view returns (uint256) {\n        NodeInfo storage nodeInfo = nodes[_node];\n        return getMinFeeRate(nodeInfo);\n    }\n\n    /**\n    * @notice Create policy\n    * @dev Generate policy id before creation\n    * @param _policyId Policy id\n    * @param _policyOwner Policy owner. Zero address means sender is owner\n    * @param _endTimestamp End timestamp of the policy in seconds\n    * @param _nodes Nodes that will handle policy\n    */\n    function createPolicy(\n        bytes16 _policyId,\n        address _policyOwner,\n        uint64 _endTimestamp,\n        address[] calldata _nodes\n    )\n        external payable\n    {\n        require(\n            _endTimestamp > block.timestamp &&\n            msg.value > 0\n        );\n\n        require(address(this).balance <= MAX_BALANCE);\n        uint16 currentPeriod = getCurrentPeriod();\n        uint16 endPeriod = uint16(_endTimestamp / secondsPerPeriod) + 1;\n        uint256 numberOfPeriods = endPeriod - currentPeriod;\n\n        uint128 feeRate = uint128(msg.value.div(_nodes.length) / numberOfPeriods);\n        require(feeRate > 0 && feeRate * numberOfPeriods * _nodes.length  == msg.value);\n\n        Policy storage policy = createPolicy(_policyId, _policyOwner, _endTimestamp, feeRate, _nodes.length);\n\n        for (uint256 i = 0; i < _nodes.length; i++) {\n            address node = _nodes[i];\n            addFeeToNode(currentPeriod, endPeriod, node, feeRate, int256(uint256(feeRate)));\n            policy.arrangements.push(ArrangementInfo(node, 0, 0));\n        }\n    }\n\n    /**\n    * @notice Create multiple policies with the same owner, nodes and length\n    * @dev Generate policy ids before creation\n    * @param _policyIds Policy ids\n    * @param _policyOwner Policy owner. Zero address means sender is owner\n    * @param _endTimestamp End timestamp of all policies in seconds\n    * @param _nodes Nodes that will handle all policies\n    */\n    function createPolicies(\n        bytes16[] calldata _policyIds,\n        address _policyOwner,\n        uint64 _endTimestamp,\n        address[] calldata _nodes\n    )\n        external payable\n    {\n        require(\n            _endTimestamp > block.timestamp &&\n            msg.value > 0 &&\n            _policyIds.length > 1\n        );\n\n        require(address(this).balance <= MAX_BALANCE);\n        uint16 currentPeriod = getCurrentPeriod();\n        uint16 endPeriod = uint16(_endTimestamp / secondsPerPeriod) + 1;\n        uint256 numberOfPeriods = endPeriod - currentPeriod;\n\n        uint128 feeRate = uint128(msg.value.div(_nodes.length) / numberOfPeriods / _policyIds.length);\n        require(feeRate > 0 && feeRate * numberOfPeriods * _nodes.length * _policyIds.length == msg.value);\n\n        for (uint256 i = 0; i < _policyIds.length; i++) {\n            Policy storage policy = createPolicy(_policyIds[i], _policyOwner, _endTimestamp, feeRate, _nodes.length);\n\n            for (uint256 j = 0; j < _nodes.length; j++) {\n                policy.arrangements.push(ArrangementInfo(_nodes[j], 0, 0));\n            }\n        }\n\n        int256 fee = int256(_policyIds.length * feeRate);\n\n        for (uint256 i = 0; i < _nodes.length; i++) {\n            address node = _nodes[i];\n            addFeeToNode(currentPeriod, endPeriod, node, feeRate, fee);\n        }\n    }\n\n    /**\n    * @notice Create policy\n    * @param _policyId Policy id\n    * @param _policyOwner Policy owner. Zero address means sender is owner\n    * @param _endTimestamp End timestamp of the policy in seconds\n    * @param _feeRate Fee rate for policy\n    * @param _nodesLength Number of nodes that will handle policy\n    */\n    function createPolicy(\n        bytes16 _policyId,\n        address _policyOwner,\n        uint64 _endTimestamp,\n        uint128 _feeRate,\n        uint256 _nodesLength\n    )\n        internal returns (Policy storage policy)\n    {\n        policy = policies[_policyId];\n        require(\n            _policyId != RESERVED_POLICY_ID &&\n            policy.feeRate == 0 &&\n            !policy.disabled\n        );\n\n        policy.sponsor = payable(msg.sender);\n        policy.startTimestamp = uint64(block.timestamp);\n        policy.endTimestamp = _endTimestamp;\n        policy.feeRate = _feeRate;\n\n        if (_policyOwner != msg.sender && _policyOwner != address(0)) {\n            policy.owner = _policyOwner;\n        }\n\n        emit PolicyCreated(\n            _policyId,\n            msg.sender,\n            _policyOwner == address(0) ? msg.sender : _policyOwner,\n            _feeRate,\n            policy.startTimestamp,\n            policy.endTimestamp,\n            _nodesLength\n        );\n    }\n\n    /**\n    * @notice Increase fee rate for specified node\n    * @param _currentPeriod Current period\n    * @param _endPeriod End period of policy\n    * @param _node Node that will handle policy\n    * @param _feeRate Fee rate for one policy\n    * @param _overallFeeRate Fee rate for all policies\n    */\n    function addFeeToNode(\n        uint16 _currentPeriod,\n        uint16 _endPeriod,\n        address _node,\n        uint128 _feeRate,\n        int256 _overallFeeRate\n    )\n        internal\n    {\n        require(_node != RESERVED_NODE);\n        NodeInfo storage nodeInfo = nodes[_node];\n        require(nodeInfo.previousFeePeriod != 0 &&\n            nodeInfo.previousFeePeriod < _currentPeriod &&\n            _feeRate >= getMinFeeRate(nodeInfo));\n        // Check default value for feeDelta\n        if (nodeInfo.feeDelta[_currentPeriod] == DEFAULT_FEE_DELTA) {\n            nodeInfo.feeDelta[_currentPeriod] = _overallFeeRate;\n        } else {\n            // Overflow protection removed, because ETH total supply less than uint255/int256\n            nodeInfo.feeDelta[_currentPeriod] += _overallFeeRate;\n        }\n        if (nodeInfo.feeDelta[_endPeriod] == DEFAULT_FEE_DELTA) {\n            nodeInfo.feeDelta[_endPeriod] = -_overallFeeRate;\n        } else {\n            nodeInfo.feeDelta[_endPeriod] -= _overallFeeRate;\n        }\n        // Reset to default value if needed\n        if (nodeInfo.feeDelta[_currentPeriod] == 0) {\n            nodeInfo.feeDelta[_currentPeriod] = DEFAULT_FEE_DELTA;\n        }\n        if (nodeInfo.feeDelta[_endPeriod] == 0) {\n            nodeInfo.feeDelta[_endPeriod] = DEFAULT_FEE_DELTA;\n        }\n    }\n\n    /**\n    * @notice Get policy owner\n    */\n    function getPolicyOwner(bytes16 _policyId) public view returns (address) {\n        Policy storage policy = policies[_policyId];\n        return policy.owner == address(0) ? policy.sponsor : policy.owner;\n    }\n\n    /**\n    * @notice Call from StakingEscrow to update node info once per period.\n    * Set default `feeDelta` value for specified period and update node fee\n    * @param _node Node address\n    * @param _processedPeriod1 Processed period\n    * @param _processedPeriod2 Processed period\n    * @param _periodToSetDefault Period to set\n    */\n    function ping(\n        address _node,\n        uint16 _processedPeriod1,\n        uint16 _processedPeriod2,\n        uint16 _periodToSetDefault\n    )\n        external onlyEscrowContract\n    {\n        NodeInfo storage node = nodes[_node];\n        // protection from calling not migrated node, see migrate()\n        require(node.previousFeePeriod <= getCurrentPeriod());\n        if (_processedPeriod1 != 0) {\n            updateFee(node, _processedPeriod1);\n        }\n        if (_processedPeriod2 != 0) {\n            updateFee(node, _processedPeriod2);\n        }\n        // This code increases gas cost for node in trade of decreasing cost for policy sponsor\n        if (_periodToSetDefault != 0 && node.feeDelta[_periodToSetDefault] == 0) {\n            node.feeDelta[_periodToSetDefault] = DEFAULT_FEE_DELTA;\n        }\n    }\n\n    /**\n    * @notice Update node fee\n    * @param _info Node info structure\n    * @param _period Processed period\n    */\n    function updateFee(NodeInfo storage _info, uint16 _period) internal {\n        if (_info.previousFeePeriod == 0 || _period <= _info.previousFeePeriod) {\n            return;\n        }\n        for (uint16 i = _info.previousFeePeriod + 1; i <= _period; i++) {\n            int256 delta = _info.feeDelta[i];\n            if (delta == DEFAULT_FEE_DELTA) {\n                // gas refund\n                _info.feeDelta[i] = 0;\n                continue;\n            }\n\n            _info.feeRate = _info.feeRate.addSigned(delta);\n            // gas refund\n            _info.feeDelta[i] = 0;\n        }\n        _info.previousFeePeriod = _period;\n        _info.fee += uint128(_info.feeRate);\n    }\n\n    /**\n    * @notice Withdraw fee by node\n    */\n    function withdraw() external returns (uint256) {\n        return withdraw(payable(msg.sender));\n    }\n\n    /**\n    * @notice Withdraw fee by node\n    * @param _recipient Recipient of the fee\n    */\n    function withdraw(address payable _recipient) public returns (uint256) {\n        NodeInfo storage node = nodes[msg.sender];\n        uint256 fee = node.fee;\n        require(fee != 0);\n        node.fee = 0;\n        _recipient.sendValue(fee);\n        emit Withdrawn(msg.sender, _recipient, fee);\n        return fee;\n    }\n\n    /**\n    * @notice Calculate amount of refund\n    * @param _policy Policy\n    * @param _arrangement Arrangement\n    */\n    function calculateRefundValue(Policy storage _policy, ArrangementInfo storage _arrangement)\n        internal view returns (uint256 refundValue, uint256 indexOfDowntimePeriods, uint16 lastRefundedPeriod)\n    {\n        uint16 policyStartPeriod = uint16(_policy.startTimestamp / secondsPerPeriod);\n        uint16 maxPeriod = AdditionalMath.min16(getCurrentPeriod(), uint16(_policy.endTimestamp / secondsPerPeriod));\n        uint16 minPeriod = AdditionalMath.max16(policyStartPeriod, _arrangement.lastRefundedPeriod);\n        uint16 downtimePeriods = 0;\n        uint256 length = escrow.getPastDowntimeLength(_arrangement.node);\n        uint256 initialIndexOfDowntimePeriods;\n        if (_arrangement.lastRefundedPeriod == 0) {\n            initialIndexOfDowntimePeriods = escrow.findIndexOfPastDowntime(_arrangement.node, policyStartPeriod);\n        } else {\n            initialIndexOfDowntimePeriods = _arrangement.indexOfDowntimePeriods;\n        }\n\n        for (indexOfDowntimePeriods = initialIndexOfDowntimePeriods;\n             indexOfDowntimePeriods < length;\n             indexOfDowntimePeriods++)\n        {\n            (uint16 startPeriod, uint16 endPeriod) =\n                escrow.getPastDowntime(_arrangement.node, indexOfDowntimePeriods);\n            if (startPeriod > maxPeriod) {\n                break;\n            } else if (endPeriod < minPeriod) {\n                continue;\n            }\n            downtimePeriods += AdditionalMath.min16(maxPeriod, endPeriod)\n                .sub16(AdditionalMath.max16(minPeriod, startPeriod)) + 1;\n            if (maxPeriod <= endPeriod) {\n                break;\n            }\n        }\n\n        uint16 lastCommittedPeriod = escrow.getLastCommittedPeriod(_arrangement.node);\n        if (indexOfDowntimePeriods == length && lastCommittedPeriod < maxPeriod) {\n            // Overflow protection removed:\n            // lastCommittedPeriod < maxPeriod and minPeriod <= maxPeriod + 1\n            downtimePeriods += maxPeriod - AdditionalMath.max16(minPeriod - 1, lastCommittedPeriod);\n        }\n\n        refundValue = _policy.feeRate * downtimePeriods;\n        lastRefundedPeriod = maxPeriod + 1;\n    }\n\n    /**\n    * @notice Revoke/refund arrangement/policy by the sponsor\n    * @param _policyId Policy id\n    * @param _node Node that will be excluded or RESERVED_NODE if full policy should be used\n    ( @param _forceRevoke Force revoke arrangement/policy\n    */\n    function refundInternal(bytes16 _policyId, address _node, bool _forceRevoke)\n        internal returns (uint256 refundValue)\n    {\n        refundValue = 0;\n        Policy storage policy = policies[_policyId];\n        require(!policy.disabled && policy.startTimestamp >= resetTimestamp);\n        uint16 endPeriod = uint16(policy.endTimestamp / secondsPerPeriod) + 1;\n        uint256 numberOfActive = policy.arrangements.length;\n        uint256 i = 0;\n        for (; i < policy.arrangements.length; i++) {\n            ArrangementInfo storage arrangement = policy.arrangements[i];\n            address node = arrangement.node;\n            if (node == RESERVED_NODE || _node != RESERVED_NODE && _node != node) {\n                numberOfActive--;\n                continue;\n            }\n            uint256 nodeRefundValue;\n            (nodeRefundValue, arrangement.indexOfDowntimePeriods, arrangement.lastRefundedPeriod) =\n                calculateRefundValue(policy, arrangement);\n            if (_forceRevoke) {\n                NodeInfo storage nodeInfo = nodes[node];\n\n                // Check default value for feeDelta\n                uint16 lastRefundedPeriod = arrangement.lastRefundedPeriod;\n                if (nodeInfo.feeDelta[lastRefundedPeriod] == DEFAULT_FEE_DELTA) {\n                    nodeInfo.feeDelta[lastRefundedPeriod] = -int256(uint256(policy.feeRate));\n                } else {\n                    nodeInfo.feeDelta[lastRefundedPeriod] -= int256(uint256(policy.feeRate));\n                }\n                if (nodeInfo.feeDelta[endPeriod] == DEFAULT_FEE_DELTA) {\n                    nodeInfo.feeDelta[endPeriod] = int256(uint256(policy.feeRate));\n                } else {\n                    nodeInfo.feeDelta[endPeriod] += int256(uint256(policy.feeRate));\n                }\n\n                // Reset to default value if needed\n                if (nodeInfo.feeDelta[lastRefundedPeriod] == 0) {\n                    nodeInfo.feeDelta[lastRefundedPeriod] = DEFAULT_FEE_DELTA;\n                }\n                if (nodeInfo.feeDelta[endPeriod] == 0) {\n                    nodeInfo.feeDelta[endPeriod] = DEFAULT_FEE_DELTA;\n                }\n                nodeRefundValue += uint256(endPeriod - lastRefundedPeriod) * policy.feeRate;\n            }\n            if (_forceRevoke || arrangement.lastRefundedPeriod >= endPeriod) {\n                arrangement.node = RESERVED_NODE;\n                arrangement.indexOfDowntimePeriods = 0;\n                arrangement.lastRefundedPeriod = 0;\n                numberOfActive--;\n                emit ArrangementRevoked(_policyId, msg.sender, node, nodeRefundValue);\n            } else {\n                emit RefundForArrangement(_policyId, msg.sender, node, nodeRefundValue);\n            }\n\n            refundValue += nodeRefundValue;\n            if (_node != RESERVED_NODE) {\n               break;\n            }\n        }\n        address payable policySponsor = policy.sponsor;\n        if (_node == RESERVED_NODE) {\n            if (numberOfActive == 0) {\n                policy.disabled = true;\n                // gas refund\n                policy.sponsor = payable(address(0));\n                policy.owner = address(0);\n                policy.feeRate = 0;\n                policy.startTimestamp = 0;\n                policy.endTimestamp = 0;\n                emit PolicyRevoked(_policyId, msg.sender, refundValue);\n            } else {\n                emit RefundForPolicy(_policyId, msg.sender, refundValue);\n            }\n        } else {\n            // arrangement not found\n            require(i < policy.arrangements.length);\n        }\n        if (refundValue > 0) {\n            policySponsor.sendValue(refundValue);\n        }\n    }\n\n    /**\n    * @notice Calculate amount of refund\n    * @param _policyId Policy id\n    * @param _node Node or RESERVED_NODE if all nodes should be used\n    */\n    function calculateRefundValueInternal(bytes16 _policyId, address _node)\n        internal view returns (uint256 refundValue)\n    {\n        refundValue = 0;\n        Policy storage policy = policies[_policyId];\n        require((policy.owner == msg.sender || policy.sponsor == msg.sender) && !policy.disabled);\n        uint256 i = 0;\n        for (; i < policy.arrangements.length; i++) {\n            ArrangementInfo storage arrangement = policy.arrangements[i];\n            if (arrangement.node == RESERVED_NODE || _node != RESERVED_NODE && _node != arrangement.node) {\n                continue;\n            }\n            (uint256 nodeRefundValue,,) = calculateRefundValue(policy, arrangement);\n            refundValue += nodeRefundValue;\n            if (_node != RESERVED_NODE) {\n               break;\n            }\n        }\n        if (_node != RESERVED_NODE) {\n            // arrangement not found\n            require(i < policy.arrangements.length);\n        }\n    }\n\n    /**\n    * @notice Revoke policy by the sponsor\n    * @param _policyId Policy id\n    */\n    function revokePolicy(bytes16 _policyId) external returns (uint256 refundValue) {\n        require(getPolicyOwner(_policyId) == msg.sender);\n        return refundInternal(_policyId, RESERVED_NODE, true);\n    }\n\n    /**\n    * @notice Revoke arrangement by the sponsor\n    * @param _policyId Policy id\n    * @param _node Node that will be excluded\n    */\n    function revokeArrangement(bytes16 _policyId, address _node)\n        external returns (uint256 refundValue)\n    {\n        require(_node != RESERVED_NODE);\n        require(getPolicyOwner(_policyId) == msg.sender);\n        return refundInternal(_policyId, _node, true);\n    }\n\n    /**\n    * @notice Get unsigned hash for revocation\n    * @param _policyId Policy id\n    * @param _node Node that will be excluded\n    * @return Revocation hash, EIP191 version 0x45 ('E')\n    */\n    function getRevocationHash(bytes16 _policyId, address _node) public view returns (bytes32) {\n        return SignatureVerifier.hashEIP191(abi.encodePacked(_policyId, _node), bytes1(0x45));\n    }\n\n    /**\n    * @notice Check correctness of signature\n    * @param _policyId Policy id\n    * @param _node Node that will be excluded, zero address if whole policy will be revoked\n    * @param _signature Signature of owner\n    */\n    function checkOwnerSignature(bytes16 _policyId, address _node, bytes memory _signature) internal view {\n        bytes32 hash = getRevocationHash(_policyId, _node);\n        address recovered = SignatureVerifier.recover(hash, _signature);\n        require(getPolicyOwner(_policyId) == recovered);\n    }\n\n    /**\n    * @notice Revoke policy or arrangement using owner's signature\n    * @param _policyId Policy id\n    * @param _node Node that will be excluded, zero address if whole policy will be revoked\n    * @param _signature Signature of owner, EIP191 version 0x45 ('E')\n    */\n    function revoke(bytes16 _policyId, address _node, bytes calldata _signature)\n        external returns (uint256 refundValue)\n    {\n        checkOwnerSignature(_policyId, _node, _signature);\n        return refundInternal(_policyId, _node, true);\n    }\n\n    /**\n    * @notice Refund part of fee by the sponsor\n    * @param _policyId Policy id\n    */\n    function refund(bytes16 _policyId) external {\n        Policy storage policy = policies[_policyId];\n        require(policy.owner == msg.sender || policy.sponsor == msg.sender);\n        refundInternal(_policyId, RESERVED_NODE, false);\n    }\n\n    /**\n    * @notice Refund part of one node's fee by the sponsor\n    * @param _policyId Policy id\n    * @param _node Node address\n    */\n    function refund(bytes16 _policyId, address _node)\n        external returns (uint256 refundValue)\n    {\n        require(_node != RESERVED_NODE);\n        Policy storage policy = policies[_policyId];\n        require(policy.owner == msg.sender || policy.sponsor == msg.sender);\n        return refundInternal(_policyId, _node, false);\n    }\n\n    /**\n    * @notice Calculate amount of refund\n    * @param _policyId Policy id\n    */\n    function calculateRefundValue(bytes16 _policyId)\n        external view returns (uint256 refundValue)\n    {\n        return calculateRefundValueInternal(_policyId, RESERVED_NODE);\n    }\n\n    /**\n    * @notice Calculate amount of refund\n    * @param _policyId Policy id\n    * @param _node Node\n    */\n    function calculateRefundValue(bytes16 _policyId, address _node)\n        external view returns (uint256 refundValue)\n    {\n        require(_node != RESERVED_NODE);\n        return calculateRefundValueInternal(_policyId, _node);\n    }\n\n    /**\n    * @notice Get number of arrangements in the policy\n    * @param _policyId Policy id\n    */\n    function getArrangementsLength(bytes16 _policyId) external view returns (uint256) {\n        return policies[_policyId].arrangements.length;\n    }\n\n    /**\n    * @notice Get information about staker's fee rate\n    * @param _node Address of staker\n    * @param _period Period to get fee delta\n    */\n    function getNodeFeeDelta(address _node, uint16 _period)\n        // TODO \"virtual\" only for tests, probably will be removed after #1512\n        public view virtual returns (int256)\n    {\n        // TODO remove after upgrade #2579\n        if (_node == RESERVED_NODE && _period == 11) {\n            return 55;\n        }\n        return nodes[_node].feeDelta[_period];\n    }\n\n    /**\n    * @notice Return the information about arrangement\n    */\n    function getArrangementInfo(bytes16 _policyId, uint256 _index)\n    // TODO change to structure when ABIEncoderV2 is released (#1501)\n//        public view returns (ArrangementInfo)\n        external view returns (address node, uint256 indexOfDowntimePeriods, uint16 lastRefundedPeriod)\n    {\n        ArrangementInfo storage info = policies[_policyId].arrangements[_index];\n        node = info.node;\n        indexOfDowntimePeriods = info.indexOfDowntimePeriods;\n        lastRefundedPeriod = info.lastRefundedPeriod;\n    }\n\n\n    /**\n    * @dev Get Policy structure by delegatecall\n    */\n    function delegateGetPolicy(address _target, bytes16 _policyId)\n        internal returns (Policy memory result)\n    {\n        bytes32 memoryAddress = delegateGetData(_target, this.policies.selector, 1, bytes32(_policyId), 0);\n        assembly {\n            result := memoryAddress\n        }\n    }\n\n    /**\n    * @dev Get ArrangementInfo structure by delegatecall\n    */\n    function delegateGetArrangementInfo(address _target, bytes16 _policyId, uint256 _index)\n        internal returns (ArrangementInfo memory result)\n    {\n        bytes32 memoryAddress = delegateGetData(\n            _target, this.getArrangementInfo.selector, 2, bytes32(_policyId), bytes32(_index));\n        assembly {\n            result := memoryAddress\n        }\n    }\n\n    /**\n    * @dev Get NodeInfo structure by delegatecall\n    */\n    function delegateGetNodeInfo(address _target, address _node)\n        internal returns (MemoryNodeInfo memory result)\n    {\n        bytes32 memoryAddress = delegateGetData(_target, this.nodes.selector, 1, bytes32(uint256(uint160(_node))), 0);\n        assembly {\n            result := memoryAddress\n        }\n    }\n\n    /**\n    * @dev Get feeRateRange structure by delegatecall\n    */\n    function delegateGetFeeRateRange(address _target) internal returns (Range memory result) {\n        bytes32 memoryAddress = delegateGetData(_target, this.feeRateRange.selector, 0, 0, 0);\n        assembly {\n            result := memoryAddress\n        }\n    }\n\n    /// @dev the `onlyWhileUpgrading` modifier works through a call to the parent `verifyState`\n    function verifyState(address _testTarget) public override virtual {\n        super.verifyState(_testTarget);\n        require(uint64(delegateGet(_testTarget, this.resetTimestamp.selector)) == resetTimestamp);\n\n        Range memory rangeToCheck = delegateGetFeeRateRange(_testTarget);\n        require(feeRateRange.min == rangeToCheck.min &&\n            feeRateRange.defaultValue == rangeToCheck.defaultValue &&\n            feeRateRange.max == rangeToCheck.max);\n\n        Policy storage policy = policies[RESERVED_POLICY_ID];\n        Policy memory policyToCheck = delegateGetPolicy(_testTarget, RESERVED_POLICY_ID);\n        require(policyToCheck.sponsor == policy.sponsor &&\n            policyToCheck.owner == policy.owner &&\n            policyToCheck.feeRate == policy.feeRate &&\n            policyToCheck.startTimestamp == policy.startTimestamp &&\n            policyToCheck.endTimestamp == policy.endTimestamp &&\n            policyToCheck.disabled == policy.disabled);\n\n        require(delegateGet(_testTarget, this.getArrangementsLength.selector, RESERVED_POLICY_ID) ==\n            policy.arrangements.length);\n        if (policy.arrangements.length > 0) {\n            ArrangementInfo storage arrangement = policy.arrangements[0];\n            ArrangementInfo memory arrangementToCheck = delegateGetArrangementInfo(\n                _testTarget, RESERVED_POLICY_ID, 0);\n            require(arrangementToCheck.node == arrangement.node &&\n                arrangementToCheck.indexOfDowntimePeriods == arrangement.indexOfDowntimePeriods &&\n                arrangementToCheck.lastRefundedPeriod == arrangement.lastRefundedPeriod);\n        }\n\n        NodeInfo storage nodeInfo = nodes[RESERVED_NODE];\n        MemoryNodeInfo memory nodeInfoToCheck = delegateGetNodeInfo(_testTarget, RESERVED_NODE);\n        require(nodeInfoToCheck.fee == nodeInfo.fee &&\n            nodeInfoToCheck.feeRate == nodeInfo.feeRate &&\n            nodeInfoToCheck.previousFeePeriod == nodeInfo.previousFeePeriod &&\n            nodeInfoToCheck.minFeeRate == nodeInfo.minFeeRate);\n\n        require(int256(delegateGet(_testTarget, this.getNodeFeeDelta.selector,\n            bytes32(bytes20(RESERVED_NODE)), bytes32(uint256(11)))) == getNodeFeeDelta(RESERVED_NODE, 11));\n    }\n\n    /// @dev the `onlyWhileUpgrading` modifier works through a call to the parent `finishUpgrade`\n    function finishUpgrade(address _target) public override virtual {\n        super.finishUpgrade(_target);\n\n        if (resetTimestamp == 0) {\n            resetTimestamp = uint64(block.timestamp);\n        }\n\n        // Create fake Policy and NodeInfo to use them in verifyState(address)\n        Policy storage policy = policies[RESERVED_POLICY_ID];\n        policy.sponsor = payable(msg.sender);\n        policy.owner = address(this);\n        policy.startTimestamp = 1;\n        policy.endTimestamp = 2;\n        policy.feeRate = 3;\n        policy.disabled = true;\n        policy.arrangements.push(ArrangementInfo(RESERVED_NODE, 11, 22));\n        NodeInfo storage nodeInfo = nodes[RESERVED_NODE];\n        nodeInfo.fee = 100;\n        nodeInfo.feeRate = 33;\n        nodeInfo.previousFeePeriod = 44;\n        nodeInfo.feeDelta[11] = 55;\n        nodeInfo.minFeeRate = 777;\n    }\n}\n",
  "sourceMap": "520:33940:12:-:0;;;3830:937;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;549:6:34;:19;;-1:-1:-1;;;;;;549:19:34;558:10;549:19;;;;;583:40;;558:10;;549:6;583:40;;549:6;;583:40;3933:17:12;-1:-1:-1;;;;;3924:26:12;;;-1:-1:-1;;;;;3924:26:12;;;;;4066:28;4097:21;-1:-1:-1;;;;;4097:38:12;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4066:71;;4179:1;4155:21;:25;;;4147:34;;;;;;4210:21;4191:40;;;;;;;;;;4241:35;4279:21;-1:-1:-1;;;;;4279:45:12;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4241:85;;4375:1;4344:28;:32;;;4336:41;;;;;;4387:54;;;;;-1:-1:-1;;;;;4534:42:12;;;;;;;4530:231;;4640:21;4600:61;;:17;-1:-1:-1;;;;;4600:34:12;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;;:149;;;;4721:28;4681:68;;:17;-1:-1:-1;;;;;4681:34:12;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;;4600:149;4592:158;;;;;;3914:853;;3830:937;;520:33940;;14:193:41;109:13;;-1:-1:-1;;;;;151:31:41;;141:42;;131:70;;197:1;194;187:12;131:70;14:193;;;:::o;212:369::-;335:6;343;396:2;384:9;375:7;371:23;367:32;364:52;;;412:1;409;402:12;364:52;435:56;481:9;435:56;:::i;:::-;425:66;;510:65;571:2;560:9;556:18;510:65;:::i;:::-;500:75;;212:369;;;;;:::o;586:280::-;655:6;708:2;696:9;687:7;683:23;679:32;676:52;;;724:1;721;714:12;676:52;756:9;750:16;806:10;799:5;795:22;788:5;785:33;775:61;;832:1;829;822:12;775:61;855:5;586:280;-1:-1:-1;;;586:280:41:o;:::-;520:33940:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/contracts/PolicyManager.sol",
  "type": "contract"
}