{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "RolledBack",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "testTarget",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "StateVerified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "UpgradeFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "finishUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isUpgrade",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "previousTarget",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxyType",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rollback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_testTarget",
          "type": "address"
        }
      ],
      "name": "verifyState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "25": "contracts/contracts/proxy/Dispatcher.sol",
    "26": "contracts/contracts/proxy/Upgradeable.sol",
    "34": "contracts/zeppelin/ownership/Ownable.sol",
    "40": "contracts/zeppelin/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/proxy/Dispatcher.sol",
    "exportedSymbols": {
      "Address": [
        14756
      ],
      "Dispatcher": [
        10716
      ],
      "ERCProxy": [
        10330
      ],
      "Ownable": [
        13666
      ],
      "Upgradeable": [
        10885
      ]
    },
    "id": 10717,
    "license": "AGPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10316,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "47:23:25"
      },
      {
        "absolutePath": "contracts/contracts/proxy/Upgradeable.sol",
        "file": "./Upgradeable.sol",
        "id": 10317,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10717,
        "sourceUnit": 10886,
        "src": "73:27:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/zeppelin/utils/Address.sol",
        "file": "../../zeppelin/utils/Address.sol",
        "id": 10318,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10717,
        "sourceUnit": 14757,
        "src": "101:42:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ERCProxy",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 10319,
          "nodeType": "StructuredDocumentation",
          "src": "146:43:25",
          "text": " @notice ERC897 - ERC DelegateProxy"
        },
        "fullyImplemented": false,
        "id": 10330,
        "linearizedBaseContracts": [
          10330
        ],
        "name": "ERCProxy",
        "nameLocation": "200:8:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "4555d5c9",
            "id": 10324,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "proxyType",
            "nameLocation": "224:9:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "233:2:25"
            },
            "returnParameters": {
              "id": 10323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10322,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10324,
                  "src": "259:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "258:9:25"
            },
            "scope": 10330,
            "src": "215:53:25",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "5c60da1b",
            "id": 10329,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "282:14:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "296:2:25"
            },
            "returnParameters": {
              "id": 10328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10327,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10329,
                  "src": "322:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "321:9:25"
            },
            "scope": 10330,
            "src": "273:58:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10717,
        "src": "190:143:25",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10332,
              "name": "Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10885,
              "src": "484:11:25"
            },
            "id": 10333,
            "nodeType": "InheritanceSpecifier",
            "src": "484:11:25"
          },
          {
            "baseName": {
              "id": 10334,
              "name": "ERCProxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10330,
              "src": "497:8:25"
            },
            "id": 10335,
            "nodeType": "InheritanceSpecifier",
            "src": "497:8:25"
          }
        ],
        "canonicalName": "Dispatcher",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10331,
          "nodeType": "StructuredDocumentation",
          "src": "336:124:25",
          "text": " @notice Proxying requests to other contracts.\n Client should use ABI of real contract and address of this contract"
        },
        "fullyImplemented": true,
        "id": 10716,
        "linearizedBaseContracts": [
          10716,
          10330,
          10885,
          13666
        ],
        "name": "Dispatcher",
        "nameLocation": "470:10:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10338,
            "libraryName": {
              "id": 10336,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14756,
              "src": "518:7:25"
            },
            "nodeType": "UsingForDirective",
            "src": "512:26:25",
            "typeName": {
              "id": 10337,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "530:7:25",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "anonymous": false,
            "id": 10346,
            "name": "Upgraded",
            "nameLocation": "550:8:25",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10340,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "575:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 10346,
                  "src": "559:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10342,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "597:2:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 10346,
                  "src": "581:18:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "581:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10344,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "609:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 10346,
                  "src": "601:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "558:57:25"
            },
            "src": "544:72:25"
          },
          {
            "anonymous": false,
            "id": 10354,
            "name": "RolledBack",
            "nameLocation": "627:10:25",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10348,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "654:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 10354,
                  "src": "638:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10347,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10350,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "676:2:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 10354,
                  "src": "660:18:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10352,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "688:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 10354,
                  "src": "680:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "680:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "637:57:25"
            },
            "src": "621:74:25"
          },
          {
            "body": {
              "id": 10366,
              "nodeType": "Block",
              "src": "801:87:25",
              "statements": [
                {
                  "expression": {
                    "id": 10359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10357,
                      "name": "isUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10743,
                      "src": "811:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10358,
                      "name": "UPGRADE_TRUE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10753,
                      "src": "823:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "811:24:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 10360,
                  "nodeType": "ExpressionStatement",
                  "src": "811:24:25"
                },
                {
                  "id": 10361,
                  "nodeType": "PlaceholderStatement",
                  "src": "845:1:25"
                },
                {
                  "expression": {
                    "id": 10364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10362,
                      "name": "isUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10743,
                      "src": "856:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10363,
                      "name": "UPGRADE_FALSE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10750,
                      "src": "868:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "856:25:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 10365,
                  "nodeType": "ExpressionStatement",
                  "src": "856:25:25"
                }
              ]
            },
            "documentation": {
              "id": 10355,
              "nodeType": "StructuredDocumentation",
              "src": "701:70:25",
              "text": " @dev Set upgrading status before and after operations"
            },
            "id": 10367,
            "name": "upgrading",
            "nameLocation": "785:9:25",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "794:2:25"
            },
            "src": "776:112:25",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10407,
              "nodeType": "Block",
              "src": "993:351:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10376,
                            "name": "_target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10370,
                            "src": "1011:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 10377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14479,
                          "src": "1011:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 10378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1011:20:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1003:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1003:29:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10380,
                  "nodeType": "ExpressionStatement",
                  "src": "1003:29:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10382,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10370,
                        "src": "1119:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10381,
                      "name": "verifyState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10655
                      ],
                      "referencedDeclaration": 10655,
                      "src": "1107:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1107:20:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10384,
                  "nodeType": "ExpressionStatement",
                  "src": "1107:20:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10386,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10370,
                        "src": "1213:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10387,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10370,
                        "src": "1222:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10385,
                      "name": "verifyUpgradeableState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10558,
                      "src": "1190:22:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 10388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1190:40:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10389,
                  "nodeType": "ExpressionStatement",
                  "src": "1190:40:25"
                },
                {
                  "expression": {
                    "id": 10392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10390,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10737,
                      "src": "1240:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10391,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10370,
                      "src": "1249:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1240:16:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10393,
                  "nodeType": "ExpressionStatement",
                  "src": "1240:16:25"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10394,
                      "name": "finishUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10580,
                        10663
                      ],
                      "referencedDeclaration": 10580,
                      "src": "1266:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 10395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1266:15:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10396,
                  "nodeType": "ExpressionStatement",
                  "src": "1266:15:25"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1313:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1305:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10398,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1305:7:25",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1305:10:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10402,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10370,
                        "src": "1317:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10403,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1326:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1326:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10397,
                      "name": "Upgraded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10346,
                      "src": "1296:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 10405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1296:41:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10406,
                  "nodeType": "EmitStatement",
                  "src": "1291:46:25"
                }
              ]
            },
            "documentation": {
              "id": 10368,
              "nodeType": "StructuredDocumentation",
              "src": "894:55:25",
              "text": " @param _target Target contract address"
            },
            "id": 10408,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 10373,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10372,
                  "name": "upgrading",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10367,
                  "src": "983:9:25"
                },
                "nodeType": "ModifierInvocation",
                "src": "983:9:25"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10370,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "974:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 10408,
                  "src": "966:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "965:17:25"
            },
            "returnParameters": {
              "id": 10374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "993:0:25"
            },
            "scope": 10716,
            "src": "954:390:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10324
            ],
            "body": {
              "id": 10417,
              "nodeType": "Block",
              "src": "1571:25:25",
              "statements": [
                {
                  "expression": {
                    "hexValue": "32",
                    "id": 10415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1588:1:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "functionReturnParameters": 10414,
                  "id": 10416,
                  "nodeType": "Return",
                  "src": "1581:8:25"
                }
              ]
            },
            "documentation": {
              "id": 10409,
              "nodeType": "StructuredDocumentation",
              "src": "1411:93:25",
              "text": " @notice ERC897, whether it is a forwarding (1) or an upgradeable (2) proxy"
            },
            "functionSelector": "4555d5c9",
            "id": 10418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proxyType",
            "nameLocation": "1518:9:25",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10411,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1544:8:25"
            },
            "parameters": {
              "id": 10410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1527:2:25"
            },
            "returnParameters": {
              "id": 10414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10413,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10418,
                  "src": "1562:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1562:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1561:9:25"
            },
            "scope": 10716,
            "src": "1509:87:25",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10329
            ],
            "body": {
              "id": 10427,
              "nodeType": "Block",
              "src": "1782:30:25",
              "statements": [
                {
                  "expression": {
                    "id": 10425,
                    "name": "target",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10737,
                    "src": "1799:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 10424,
                  "id": 10426,
                  "nodeType": "Return",
                  "src": "1792:13:25"
                }
              ]
            },
            "documentation": {
              "id": 10419,
              "nodeType": "StructuredDocumentation",
              "src": "1602:108:25",
              "text": " @notice ERC897, gets the address of the implementation where every call will be delegated"
            },
            "functionSelector": "5c60da1b",
            "id": 10428,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "1724:14:25",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10421,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1755:8:25"
            },
            "parameters": {
              "id": 10420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1738:2:25"
            },
            "returnParameters": {
              "id": 10424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10423,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10428,
                  "src": "1773:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1773:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1772:9:25"
            },
            "scope": 10716,
            "src": "1715:97:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10481,
              "nodeType": "Block",
              "src": "2071:508:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10439,
                            "name": "_target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10431,
                            "src": "2089:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 10440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14479,
                          "src": "2089:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 10441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2089:20:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2081:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2081:29:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10443,
                  "nodeType": "ExpressionStatement",
                  "src": "2081:29:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10445,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10431,
                        "src": "2220:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10444,
                      "name": "verifyState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10655
                      ],
                      "referencedDeclaration": 10655,
                      "src": "2208:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2208:20:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10447,
                  "nodeType": "ExpressionStatement",
                  "src": "2208:20:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10449,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10431,
                        "src": "2313:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10450,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10431,
                        "src": "2322:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10448,
                      "name": "verifyUpgradeableState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10558,
                      "src": "2290:22:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 10451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2290:40:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10452,
                  "nodeType": "ExpressionStatement",
                  "src": "2290:40:25"
                },
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 10453,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10737,
                        "src": "2344:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 10454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14479,
                      "src": "2344:17:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 10455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2344:19:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10462,
                  "nodeType": "IfStatement",
                  "src": "2340:89:25",
                  "trueBody": {
                    "id": 10461,
                    "nodeType": "Block",
                    "src": "2365:64:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10457,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10737,
                              "src": "2402:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10458,
                              "name": "_target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10431,
                              "src": "2410:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10456,
                            "name": "verifyUpgradeableState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10558,
                            "src": "2379:22:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 10459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2379:39:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10460,
                        "nodeType": "ExpressionStatement",
                        "src": "2379:39:25"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 10465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10463,
                      "name": "previousTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10740,
                      "src": "2438:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10464,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10737,
                      "src": "2455:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2438:23:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10466,
                  "nodeType": "ExpressionStatement",
                  "src": "2438:23:25"
                },
                {
                  "expression": {
                    "id": 10469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10467,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10737,
                      "src": "2471:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10468,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10431,
                      "src": "2480:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2471:16:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10470,
                  "nodeType": "ExpressionStatement",
                  "src": "2471:16:25"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10471,
                      "name": "finishUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10580,
                        10663
                      ],
                      "referencedDeclaration": 10580,
                      "src": "2497:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 10472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2497:15:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10473,
                  "nodeType": "ExpressionStatement",
                  "src": "2497:15:25"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10475,
                        "name": "previousTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10740,
                        "src": "2536:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10476,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10431,
                        "src": "2552:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10477,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2561:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2561:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10474,
                      "name": "Upgraded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10346,
                      "src": "2527:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 10479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2527:45:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10480,
                  "nodeType": "EmitStatement",
                  "src": "2522:50:25"
                }
              ]
            },
            "documentation": {
              "id": 10429,
              "nodeType": "StructuredDocumentation",
              "src": "1885:120:25",
              "text": " @notice Verify new contract storage and upgrade target\n @param _target New target contract address"
            },
            "functionSelector": "0900f010",
            "id": 10482,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10434,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10433,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13593,
                  "src": "2051:9:25"
                },
                "nodeType": "ModifierInvocation",
                "src": "2051:9:25"
              },
              {
                "id": 10436,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10435,
                  "name": "upgrading",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10367,
                  "src": "2061:9:25"
                },
                "nodeType": "ModifierInvocation",
                "src": "2061:9:25"
              }
            ],
            "name": "upgrade",
            "nameLocation": "2019:7:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10431,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "2035:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 10482,
                  "src": "2027:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2027:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2026:17:25"
            },
            "returnParameters": {
              "id": 10437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2071:0:25"
            },
            "scope": 10716,
            "src": "2010:569:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10531,
              "nodeType": "Block",
              "src": "2759:509:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10491,
                            "name": "previousTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10740,
                            "src": "2777:14:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 10492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14479,
                          "src": "2777:25:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 10493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2777:27:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2769:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2769:36:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10495,
                  "nodeType": "ExpressionStatement",
                  "src": "2769:36:25"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10497,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10737,
                        "src": "2831:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10498,
                        "name": "previousTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10740,
                        "src": "2839:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10499,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2855:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2855:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10496,
                      "name": "RolledBack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10354,
                      "src": "2820:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 10501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2820:46:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10502,
                  "nodeType": "EmitStatement",
                  "src": "2815:51:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10504,
                        "name": "previousTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10740,
                        "src": "3046:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10503,
                      "name": "verifyState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10655
                      ],
                      "referencedDeclaration": 10655,
                      "src": "3034:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3034:27:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10506,
                  "nodeType": "ExpressionStatement",
                  "src": "3034:27:25"
                },
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 10507,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10737,
                        "src": "3075:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 10508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14479,
                      "src": "3075:17:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 10509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3075:19:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10516,
                  "nodeType": "IfStatement",
                  "src": "3071:96:25",
                  "trueBody": {
                    "id": 10515,
                    "nodeType": "Block",
                    "src": "3096:71:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10511,
                              "name": "previousTarget",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10740,
                              "src": "3133:14:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10512,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10737,
                              "src": "3149:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10510,
                            "name": "verifyUpgradeableState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10558,
                            "src": "3110:22:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 10513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3110:46:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10514,
                        "nodeType": "ExpressionStatement",
                        "src": "3110:46:25"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 10519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10517,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10737,
                      "src": "3176:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10518,
                      "name": "previousTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10740,
                      "src": "3185:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3176:23:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10520,
                  "nodeType": "ExpressionStatement",
                  "src": "3176:23:25"
                },
                {
                  "expression": {
                    "id": 10526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10521,
                      "name": "previousTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10740,
                      "src": "3209:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 10524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3234:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 10523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3226:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10522,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3226:7:25",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3226:10:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3209:27:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10527,
                  "nodeType": "ExpressionStatement",
                  "src": "3209:27:25"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10528,
                      "name": "finishUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10580,
                        10663
                      ],
                      "referencedDeclaration": 10580,
                      "src": "3246:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 10529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3246:15:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10530,
                  "nodeType": "ExpressionStatement",
                  "src": "3246:15:25"
                }
              ]
            },
            "documentation": {
              "id": 10483,
              "nodeType": "StructuredDocumentation",
              "src": "2585:122:25",
              "text": " @notice Rollback to previous target\n @dev Test storage carefully before upgrade again after rollback"
            },
            "functionSelector": "9afd9d78",
            "id": 10532,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10486,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10485,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13593,
                  "src": "2739:9:25"
                },
                "nodeType": "ModifierInvocation",
                "src": "2739:9:25"
              },
              {
                "id": 10488,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10487,
                  "name": "upgrading",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10367,
                  "src": "2749:9:25"
                },
                "nodeType": "ModifierInvocation",
                "src": "2749:9:25"
              }
            ],
            "name": "rollback",
            "nameLocation": "2721:8:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2729:2:25"
            },
            "returnParameters": {
              "id": 10489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2759:0:25"
            },
            "scope": 10716,
            "src": "2712:556:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10557,
              "nodeType": "Block",
              "src": "3417:143:25",
              "statements": [
                {
                  "assignments": [
                    10541,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10541,
                      "mutability": "mutable",
                      "name": "callSuccess",
                      "nameLocation": "3433:11:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 10557,
                      "src": "3428:16:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 10540,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3428:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 10552,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 10546,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3491:4:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Dispatcher_$10716",
                                  "typeString": "contract Dispatcher"
                                }
                              },
                              "id": 10547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifyState",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10655,
                              "src": "3491:16:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address) external"
                              }
                            },
                            "id": 10548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3491:25:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 10549,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10537,
                            "src": "3518:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 10544,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3468:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 10545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "3468:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 10550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3468:54:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 10542,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10535,
                        "src": "3449:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 10543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "3449:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 10551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3449:74:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3427:96:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10554,
                        "name": "callSuccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10541,
                        "src": "3541:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3533:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3533:20:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10556,
                  "nodeType": "ExpressionStatement",
                  "src": "3533:20:25"
                }
              ]
            },
            "documentation": {
              "id": 10533,
              "nodeType": "StructuredDocumentation",
              "src": "3274:70:25",
              "text": " @dev Call verifyState method for Upgradeable contract"
            },
            "id": 10558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyUpgradeableState",
            "nameLocation": "3358:22:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10535,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3389:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 10558,
                  "src": "3381:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3381:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10537,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3404:3:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 10558,
                  "src": "3396:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3396:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3380:28:25"
            },
            "returnParameters": {
              "id": 10539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3417:0:25"
            },
            "scope": 10716,
            "src": "3349:211:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10579,
              "nodeType": "Block",
              "src": "3681:149:25",
              "statements": [
                {
                  "assignments": [
                    10563,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10563,
                      "mutability": "mutable",
                      "name": "callSuccess",
                      "nameLocation": "3697:11:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 10579,
                      "src": "3692:16:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 10562,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3692:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 10574,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 10568,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3756:4:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Dispatcher_$10716",
                                  "typeString": "contract Dispatcher"
                                }
                              },
                              "id": 10569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "finishUpgrade",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10663,
                              "src": "3756:18:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address) external"
                              }
                            },
                            "id": 10570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3756:27:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 10571,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10737,
                            "src": "3785:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 10566,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3733:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 10567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "3733:22:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 10572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3733:59:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 10564,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10737,
                        "src": "3713:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 10565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "3713:19:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 10573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3713:80:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3691:102:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10576,
                        "name": "callSuccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10563,
                        "src": "3811:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10575,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3803:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3803:20:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10578,
                  "nodeType": "ExpressionStatement",
                  "src": "3803:20:25"
                }
              ]
            },
            "documentation": {
              "id": 10559,
              "nodeType": "StructuredDocumentation",
              "src": "3566:77:25",
              "text": " @dev Call finishUpgrade method from the Upgradeable contract"
            },
            "id": 10580,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "finishUpgrade",
            "nameLocation": "3657:13:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3670:2:25"
            },
            "returnParameters": {
              "id": 10561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3681:0:25"
            },
            "scope": 10716,
            "src": "3648:182:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              10779
            ],
            "body": {
              "id": 10654,
              "nodeType": "Block",
              "src": "3913:476:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 10594,
                                      "name": "_testTarget",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10582,
                                      "src": "4045:11:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 10595,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "4058:4:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Dispatcher_$10716",
                                            "typeString": "contract Dispatcher"
                                          }
                                        },
                                        "id": 10596,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "owner",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 13583,
                                        "src": "4058:10:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                          "typeString": "function () view external returns (address)"
                                        }
                                      },
                                      "id": 10597,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "4058:19:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    ],
                                    "id": 10593,
                                    "name": "delegateGet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      10834,
                                      10858,
                                      10884
                                    ],
                                    "referencedDeclaration": 10834,
                                    "src": "4033:11:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$_t_uint256_$",
                                      "typeString": "function (address,bytes4) returns (uint256)"
                                    }
                                  },
                                  "id": 10598,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4033:45:25",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 10592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4025:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint160_$",
                                  "typeString": "type(uint160)"
                                },
                                "typeName": {
                                  "id": 10591,
                                  "name": "uint160",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4025:7:25",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 10599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4025:54:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            ],
                            "id": 10590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4017:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10589,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4017:7:25",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4017:63:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10601,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13583,
                            "src": "4084:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 10602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4084:7:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4017:74:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10588,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4009:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4009:83:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10605,
                  "nodeType": "ExpressionStatement",
                  "src": "4009:83:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 10612,
                                      "name": "_testTarget",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10582,
                                      "src": "4138:11:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 10613,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "4151:4:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Dispatcher_$10716",
                                            "typeString": "contract Dispatcher"
                                          }
                                        },
                                        "id": 10614,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 10737,
                                        "src": "4151:11:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                          "typeString": "function () view external returns (address)"
                                        }
                                      },
                                      "id": 10615,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "4151:20:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    ],
                                    "id": 10611,
                                    "name": "delegateGet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      10834,
                                      10858,
                                      10884
                                    ],
                                    "referencedDeclaration": 10834,
                                    "src": "4126:11:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$_t_uint256_$",
                                      "typeString": "function (address,bytes4) returns (uint256)"
                                    }
                                  },
                                  "id": 10616,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4126:46:25",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 10610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4118:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint160_$",
                                  "typeString": "type(uint160)"
                                },
                                "typeName": {
                                  "id": 10609,
                                  "name": "uint160",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4118:7:25",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 10617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4118:55:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            ],
                            "id": 10608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4110:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10607,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4110:7:25",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4110:64:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10619,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10737,
                          "src": "4178:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4110:74:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10606,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4102:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4102:83:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10622,
                  "nodeType": "ExpressionStatement",
                  "src": "4102:83:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 10629,
                                      "name": "_testTarget",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10582,
                                      "src": "4231:11:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 10630,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "4244:4:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Dispatcher_$10716",
                                            "typeString": "contract Dispatcher"
                                          }
                                        },
                                        "id": 10631,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "previousTarget",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 10740,
                                        "src": "4244:19:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                          "typeString": "function () view external returns (address)"
                                        }
                                      },
                                      "id": 10632,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "4244:28:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    ],
                                    "id": 10628,
                                    "name": "delegateGet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      10834,
                                      10858,
                                      10884
                                    ],
                                    "referencedDeclaration": 10834,
                                    "src": "4219:11:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$_t_uint256_$",
                                      "typeString": "function (address,bytes4) returns (uint256)"
                                    }
                                  },
                                  "id": 10633,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4219:54:25",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 10627,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4211:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint160_$",
                                  "typeString": "type(uint160)"
                                },
                                "typeName": {
                                  "id": 10626,
                                  "name": "uint160",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4211:7:25",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 10634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4211:63:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            ],
                            "id": 10625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4203:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10624,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4203:7:25",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4203:72:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10636,
                          "name": "previousTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10740,
                          "src": "4279:14:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4203:90:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10623,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4195:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4195:99:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10639,
                  "nodeType": "ExpressionStatement",
                  "src": "4195:99:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 10651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 10644,
                                  "name": "_testTarget",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10582,
                                  "src": "4330:11:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 10645,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "4343:4:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Dispatcher_$10716",
                                        "typeString": "contract Dispatcher"
                                      }
                                    },
                                    "id": 10646,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "isUpgrade",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10743,
                                    "src": "4343:14:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 10647,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "4343:23:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "id": 10643,
                                "name": "delegateGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  10834,
                                  10858,
                                  10884
                                ],
                                "referencedDeclaration": 10834,
                                "src": "4318:11:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$_t_uint256_$",
                                  "typeString": "function (address,bytes4) returns (uint256)"
                                }
                              },
                              "id": 10648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4318:49:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4312:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 10641,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "4312:5:25",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4312:56:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10650,
                          "name": "isUpgrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10743,
                          "src": "4372:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "4312:69:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10640,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4304:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4304:78:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10653,
                  "nodeType": "ExpressionStatement",
                  "src": "4304:78:25"
                }
              ]
            },
            "functionSelector": "b9626d21",
            "id": 10655,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10586,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10585,
                  "name": "onlyWhileUpgrading",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10764,
                  "src": "3894:18:25"
                },
                "nodeType": "ModifierInvocation",
                "src": "3894:18:25"
              }
            ],
            "name": "verifyState",
            "nameLocation": "3845:11:25",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10584,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3885:8:25"
            },
            "parameters": {
              "id": 10583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10582,
                  "mutability": "mutable",
                  "name": "_testTarget",
                  "nameLocation": "3865:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 10655,
                  "src": "3857:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3857:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3856:21:25"
            },
            "returnParameters": {
              "id": 10587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3913:0:25"
            },
            "scope": 10716,
            "src": "3836:553:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10794
            ],
            "body": {
              "id": 10662,
              "nodeType": "Block",
              "src": "4558:2:25",
              "statements": []
            },
            "documentation": {
              "id": 10656,
              "nodeType": "StructuredDocumentation",
              "src": "4395:110:25",
              "text": " @dev Override function using empty code because no reason to call this function in Dispatcher"
            },
            "functionSelector": "e8dccd06",
            "id": 10663,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "finishUpgrade",
            "nameLocation": "4519:13:25",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10660,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4549:8:25"
            },
            "parameters": {
              "id": 10659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10658,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10663,
                  "src": "4533:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4533:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4532:9:25"
            },
            "returnParameters": {
              "id": 10661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4558:0:25"
            },
            "scope": 10716,
            "src": "4510:50:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10687,
              "nodeType": "Block",
              "src": "4679:248:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10668,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10737,
                            "src": "4696:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 10669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14479,
                          "src": "4696:17:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 10670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4696:19:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10667,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "4689:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4689:27:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10672,
                  "nodeType": "ExpressionStatement",
                  "src": "4689:27:25"
                },
                {
                  "assignments": [
                    10674,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10674,
                      "mutability": "mutable",
                      "name": "callSuccess",
                      "nameLocation": "4821:11:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 10687,
                      "src": "4816:16:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 10673,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4816:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 10679,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 10677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4857:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 10675,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10737,
                        "src": "4837:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 10676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "4837:19:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 10678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4837:23:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4815:45:25"
                },
                {
                  "condition": {
                    "id": 10681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4874:12:25",
                    "subExpression": {
                      "id": 10680,
                      "name": "callSuccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10674,
                      "src": "4875:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10686,
                  "nodeType": "IfStatement",
                  "src": "4870:51:25",
                  "trueBody": {
                    "id": 10685,
                    "nodeType": "Block",
                    "src": "4888:33:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10682,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "4902:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 10683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4902:8:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10684,
                        "nodeType": "ExpressionStatement",
                        "src": "4902:8:25"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 10664,
              "nodeType": "StructuredDocumentation",
              "src": "4566:81:25",
              "text": " @dev Receive function sends empty request to the target contract"
            },
            "id": 10688,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4659:2:25"
            },
            "returnParameters": {
              "id": 10666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4679:0:25"
            },
            "scope": 10716,
            "src": "4652:275:25",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10714,
              "nodeType": "Block",
              "src": "5047:613:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10693,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10737,
                            "src": "5064:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 10694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14479,
                          "src": "5064:17:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 10695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5064:19:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10692,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "5057:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5057:27:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10697,
                  "nodeType": "ExpressionStatement",
                  "src": "5057:27:25"
                },
                {
                  "assignments": [
                    10699,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10699,
                      "mutability": "mutable",
                      "name": "callSuccess",
                      "nameLocation": "5191:11:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 10714,
                      "src": "5186:16:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 10698,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5186:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 10705,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10702,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5227:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "src": "5227:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 10700,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10737,
                        "src": "5207:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 10701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "5207:19:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 10704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5207:29:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5185:51:25"
                },
                {
                  "condition": {
                    "id": 10706,
                    "name": "callSuccess",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10699,
                    "src": "5250:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 10712,
                    "nodeType": "Block",
                    "src": "5621:33:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10709,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "5635:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 10710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5635:8:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10711,
                        "nodeType": "ExpressionStatement",
                        "src": "5635:8:25"
                      }
                    ]
                  },
                  "id": 10713,
                  "nodeType": "IfStatement",
                  "src": "5246:408:25",
                  "trueBody": {
                    "id": 10708,
                    "nodeType": "Block",
                    "src": "5263:352:25",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "5485:120:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5518:3:25",
                                    "type": "",
                                    "value": "0x0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5523:3:25",
                                    "type": "",
                                    "value": "0x0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "5528:14:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5528:16:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "5503:14:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5503:42:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5503:42:25"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5569:3:25",
                                    "type": "",
                                    "value": "0x0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "5574:14:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5574:16:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "return",
                                  "nodeType": "YulIdentifier",
                                  "src": "5562:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5562:29:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5562:29:25"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 10707,
                        "nodeType": "InlineAssembly",
                        "src": "5476:129:25"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 10689,
              "nodeType": "StructuredDocumentation",
              "src": "4933:81:25",
              "text": " @dev Fallback function sends all requests to the target contract"
            },
            "id": 10715,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5027:2:25"
            },
            "returnParameters": {
              "id": 10691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5047:0:25"
            },
            "scope": 10716,
            "src": "5019:641:25",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10717,
        "src": "461:5202:25",
        "usedErrors": []
      }
    ],
    "src": "47:5617:25"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000e5738038062000e578339810160408190526200003491620003f1565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36002805460ff60a01b1916600160a11b179055620000a66001600160a01b03821662000147602090811b6200039217901c565b620000b057600080fd5b620000bb816200014d565b620000c7818062000230565b600180546001600160a01b0319166001600160a01b038316179055620000ec620002dc565b6040513381526001600160a01b038216906000907f354bd4b6eb65d64e6c79c53fa4f983a5e6bec4824ce4627c71be0b2722f4917e9060200160405180910390a3506002805460ff60a01b1916600160a01b17905562000461565b3b151590565b60028054600160a01b900460ff16146200016657600080fd5b6000546001600160a01b03166200018582638da5cb5b60e01b62000382565b6001600160a01b0316146200019957600080fd5b6001546001600160a01b0316620001b882636a5c1cc960e11b62000382565b6001600160a01b031614620001cc57600080fd5b6002546001600160a01b0316620001eb826309659a2360e31b62000382565b6001600160a01b031614620001ff57600080fd5b600254600160a01b900460ff166200021f8263e38a303b60e01b62000382565b60ff16146200022d57600080fd5b50565b604080516001600160a01b0383811660248084019190915283518084039091018152604490920183526020820180516001600160e01b031663b9626d2160e01b1790529151600092851691620002869162000423565b600060405180830381855af49150503d8060008114620002c3576040519150601f19603f3d011682016040523d82523d6000602084013e620002c8565b606091505b5050905080620002d757600080fd5b505050565b600154604080516001600160a01b03909216602480840182905282518085039091018152604490930182526020830180516001600160e01b031663746e668360e11b1790529051600092620003319162000423565b600060405180830381855af49150503d80600081146200036e576040519150601f19603f3d011682016040523d82523d6000602084013e62000373565b606091505b50509050806200022d57600080fd5b6000806200039484848380806200039d565b51949350505050565b6040518481528315620003b1578260048201525b6001841115620003c2578160248201525b6000808560200260040183895af48015620003e2573d6000833e620003e7565b600082fd5b5095945050505050565b6000602082840312156200040457600080fd5b81516001600160a01b03811681146200041c57600080fd5b9392505050565b6000825160005b818110156200044657602081860181015185830152016200042a565b8181111562000456576000828501525b509190910192915050565b6109e680620004716000396000f3fe6080604052600436106100c65760003560e01c80638f32d59b1161007f578063d4b8399211610059578063d4b8399214610301578063e38a303b14610321578063e8dccd0614610354578063f2fde38b1461037257610143565b80638f32d59b146102a15780639afd9d78146102cc578063b9626d21146102e157610143565b80630900f010146101d55780634555d5c9146101f75780634b2cd118146102185780635c60da1b14610250578063715018a61461026e5780638da5cb5b1461028357610143565b36610143576001546001600160a01b03163b6100e4576100e461091f565b6001546040516000916001600160a01b03169082818181855af49150503d806000811461012d576040519150601f19603f3d011682016040523d82523d6000602084013e610132565b606091505b505090508061014057600080fd5b50005b6001546001600160a01b03163b61015c5761015c61091f565b6001546040516000916001600160a01b03169061017c9083903690610935565b600060405180830381855af49150503d80600081146101b7576040519150601f19603f3d011682016040523d82523d6000602084013e6101bc565b606091505b5050905080156101d0573d6000803e3d6000f35b600080fd5b3480156101e157600080fd5b506101f56101f0366004610945565b610398565b005b34801561020357600080fd5b50604051600281526020015b60405180910390f35b34801561022457600080fd5b50600254610238906001600160a01b031681565b6040516001600160a01b03909116815260200161020f565b34801561025c57600080fd5b506001546001600160a01b0316610238565b34801561027a57600080fd5b506101f561049f565b34801561028f57600080fd5b506000546001600160a01b0316610238565b3480156102ad57600080fd5b506000546001600160a01b03163314604051901515815260200161020f565b3480156102d857600080fd5b506101f5610500565b3480156102ed57600080fd5b506101f56102fc366004610945565b61060d565b34801561030d57600080fd5b50600154610238906001600160a01b031681565b34801561032d57600080fd5b5060025461034290600160a01b900460ff1681565b60405160ff909116815260200161020f565b34801561036057600080fd5b506101f561036f366004610945565b50565b34801561037e57600080fd5b506101f561038d366004610945565b6106e0565b3b151590565b6000546001600160a01b031633146103af57600080fd5b6002805460ff60a01b1916600160a11b1790556001600160a01b0381163b6103d657600080fd5b6103df8161060d565b6103e98182610700565b6001546001600160a01b03163b1561041157600154610411906001600160a01b031682610700565b60018054600280546001600160a01b038084166001600160a01b0319928316179092559091169083161790556104456107a7565b6002546040513381526001600160a01b038381169216907f354bd4b6eb65d64e6c79c53fa4f983a5e6bec4824ce4627c71be0b2722f4917e9060200160405180910390a3506002805460ff60a01b1916600160a01b179055565b6000546001600160a01b031633146104b657600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461051757600080fd5b6002805460ff60a01b198116600160a11b179091556001600160a01b03163b61053f57600080fd5b6002546001546040513381526001600160a01b0392831692909116907f86e04d1de380d22833cb4409f3ee7c6ad818a8d8387a83b6371f5ce018ddc1549060200160405180910390a360025461059d906001600160a01b031661060d565b6001546001600160a01b03163b156105cb576002546001546105cb916001600160a01b039081169116610700565b60028054600180546001600160a01b03199081166001600160a01b038416179091551690556105f86107a7565b6002805460ff60a01b1916600160a01b179055565b60028054600160a01b900460ff161461062557600080fd5b6000546001600160a01b031661064282638da5cb5b60e01b610848565b6001600160a01b03161461065557600080fd5b6001546001600160a01b031661067282636a5c1cc960e11b610848565b6001600160a01b03161461068557600080fd5b6002546001600160a01b03166106a2826309659a2360e31b610848565b6001600160a01b0316146106b557600080fd5b600254600160a01b900460ff166106d38263e38a303b60e01b610848565b60ff161461036f57600080fd5b6000546001600160a01b031633146106f757600080fd5b61036f81610861565b604080516001600160a01b0383811660248084019190915283518084039091018152604490920183526020820180516001600160e01b031663b9626d2160e01b179052915160009285169161075491610975565b600060405180830381855af49150503d806000811461078f576040519150601f19603f3d011682016040523d82523d6000602084013e610794565b606091505b50509050806107a257600080fd5b505050565b600154604080516001600160a01b03909216602480840182905282518085039091018152604490930182526020830180516001600160e01b031663746e668360e11b17905290516000926107fa91610975565b600060405180830381855af49150503d8060008114610835576040519150601f19603f3d011682016040523d82523d6000602084013e61083a565b606091505b505090508061036f57600080fd5b60008061085884848380806108cf565b51949350505050565b6001600160a01b03811661087457600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60405184815283156108e2578260048201525b60018411156108f2578160248201525b6000808560200260040183895af48015610910573d6000833e610915565b600082fd5b5095945050505050565b634e487b7160e01b600052600160045260246000fd5b8183823760009101908152919050565b60006020828403121561095757600080fd5b81356001600160a01b038116811461096e57600080fd5b9392505050565b6000825160005b81811015610996576020818601810151858301520161097c565b818111156109a5576000828501525b50919091019291505056fea2646970667358221220df3486bf54a7b4114fda7f22c565ad3f801abf7e8321113f07bb1775896ffb4064736f6c634300080a0033",
  "bytecodeSha1": "5dc25b0125345b4505409398f83eafd8bfbf837a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "Dispatcher",
  "coverageMap": {
    "branches": {
      "25": {
        "Dispatcher.<fallback>": {
          "37": [
            5250,
            5261,
            false
          ]
        },
        "Dispatcher.<receive>": {
          "36": [
            4875,
            4886,
            false
          ]
        },
        "Dispatcher.finishUpgrade": {
          "43": [
            3811,
            3822,
            true
          ]
        },
        "Dispatcher.verifyState": {
          "38": [
            4017,
            4091,
            true
          ],
          "39": [
            4110,
            4184,
            true
          ],
          "40": [
            4203,
            4293,
            true
          ],
          "41": [
            4312,
            4381,
            true
          ]
        },
        "Dispatcher.verifyUpgradeableState": {
          "42": [
            3541,
            3552,
            true
          ]
        }
      },
      "26": {},
      "34": {
        "Ownable._transferOwnership": {
          "44": [
            2021,
            2043,
            true
          ]
        }
      },
      "40": {}
    },
    "statements": {
      "25": {
        "Dispatcher.<fallback>": {
          "2": [
            5057,
            5084
          ],
          "3": [
            5635,
            5643
          ]
        },
        "Dispatcher.<receive>": {
          "0": [
            4689,
            4716
          ],
          "1": [
            4902,
            4910
          ]
        },
        "Dispatcher.finishUpgrade": {
          "32": [
            3803,
            3823
          ]
        },
        "Dispatcher.implementation": {
          "5": [
            1792,
            1805
          ]
        },
        "Dispatcher.proxyType": {
          "4": [
            1581,
            1589
          ]
        },
        "Dispatcher.rollback": {
          "19": [
            2769,
            2805
          ],
          "20": [
            2815,
            2866
          ],
          "21": [
            3034,
            3061
          ],
          "22": [
            3110,
            3156
          ],
          "23": [
            3176,
            3199
          ],
          "24": [
            3209,
            3236
          ],
          "25": [
            3246,
            3261
          ]
        },
        "Dispatcher.upgrade": {
          "9": [
            2081,
            2110
          ],
          "10": [
            2208,
            2228
          ],
          "11": [
            2290,
            2330
          ],
          "12": [
            2379,
            2418
          ],
          "13": [
            2438,
            2461
          ],
          "14": [
            2471,
            2487
          ],
          "15": [
            2497,
            2512
          ],
          "16": [
            2522,
            2572
          ]
        },
        "Dispatcher.verifyState": {
          "26": [
            4009,
            4092
          ],
          "27": [
            4102,
            4185
          ],
          "28": [
            4195,
            4294
          ],
          "29": [
            4304,
            4382
          ]
        },
        "Dispatcher.verifyUpgradeableState": {
          "31": [
            3533,
            3553
          ]
        }
      },
      "26": {},
      "34": {
        "Ownable._transferOwnership": {
          "33": [
            2013,
            2044
          ],
          "34": [
            2054,
            2097
          ],
          "35": [
            2107,
            2124
          ]
        },
        "Ownable.isOwner": {
          "7": [
            1069,
            1096
          ]
        },
        "Ownable.owner": {
          "6": [
            750,
            763
          ]
        },
        "Ownable.renounceOwnership": {
          "17": [
            1437,
            1482
          ],
          "18": [
            1492,
            1511
          ]
        },
        "Ownable.transferOwnership": {
          "30": [
            1769,
            1797
          ]
        }
      },
      "40": {
        "Address.isContract": {
          "8": [
            1126,
            1141
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "ERCProxy",
    "Ownable",
    "Upgradeable"
  ],
  "deployedBytecode": "6080604052600436106100c65760003560e01c80638f32d59b1161007f578063d4b8399211610059578063d4b8399214610301578063e38a303b14610321578063e8dccd0614610354578063f2fde38b1461037257610143565b80638f32d59b146102a15780639afd9d78146102cc578063b9626d21146102e157610143565b80630900f010146101d55780634555d5c9146101f75780634b2cd118146102185780635c60da1b14610250578063715018a61461026e5780638da5cb5b1461028357610143565b36610143576001546001600160a01b03163b6100e4576100e461091f565b6001546040516000916001600160a01b03169082818181855af49150503d806000811461012d576040519150601f19603f3d011682016040523d82523d6000602084013e610132565b606091505b505090508061014057600080fd5b50005b6001546001600160a01b03163b61015c5761015c61091f565b6001546040516000916001600160a01b03169061017c9083903690610935565b600060405180830381855af49150503d80600081146101b7576040519150601f19603f3d011682016040523d82523d6000602084013e6101bc565b606091505b5050905080156101d0573d6000803e3d6000f35b600080fd5b3480156101e157600080fd5b506101f56101f0366004610945565b610398565b005b34801561020357600080fd5b50604051600281526020015b60405180910390f35b34801561022457600080fd5b50600254610238906001600160a01b031681565b6040516001600160a01b03909116815260200161020f565b34801561025c57600080fd5b506001546001600160a01b0316610238565b34801561027a57600080fd5b506101f561049f565b34801561028f57600080fd5b506000546001600160a01b0316610238565b3480156102ad57600080fd5b506000546001600160a01b03163314604051901515815260200161020f565b3480156102d857600080fd5b506101f5610500565b3480156102ed57600080fd5b506101f56102fc366004610945565b61060d565b34801561030d57600080fd5b50600154610238906001600160a01b031681565b34801561032d57600080fd5b5060025461034290600160a01b900460ff1681565b60405160ff909116815260200161020f565b34801561036057600080fd5b506101f561036f366004610945565b50565b34801561037e57600080fd5b506101f561038d366004610945565b6106e0565b3b151590565b6000546001600160a01b031633146103af57600080fd5b6002805460ff60a01b1916600160a11b1790556001600160a01b0381163b6103d657600080fd5b6103df8161060d565b6103e98182610700565b6001546001600160a01b03163b1561041157600154610411906001600160a01b031682610700565b60018054600280546001600160a01b038084166001600160a01b0319928316179092559091169083161790556104456107a7565b6002546040513381526001600160a01b038381169216907f354bd4b6eb65d64e6c79c53fa4f983a5e6bec4824ce4627c71be0b2722f4917e9060200160405180910390a3506002805460ff60a01b1916600160a01b179055565b6000546001600160a01b031633146104b657600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461051757600080fd5b6002805460ff60a01b198116600160a11b179091556001600160a01b03163b61053f57600080fd5b6002546001546040513381526001600160a01b0392831692909116907f86e04d1de380d22833cb4409f3ee7c6ad818a8d8387a83b6371f5ce018ddc1549060200160405180910390a360025461059d906001600160a01b031661060d565b6001546001600160a01b03163b156105cb576002546001546105cb916001600160a01b039081169116610700565b60028054600180546001600160a01b03199081166001600160a01b038416179091551690556105f86107a7565b6002805460ff60a01b1916600160a01b179055565b60028054600160a01b900460ff161461062557600080fd5b6000546001600160a01b031661064282638da5cb5b60e01b610848565b6001600160a01b03161461065557600080fd5b6001546001600160a01b031661067282636a5c1cc960e11b610848565b6001600160a01b03161461068557600080fd5b6002546001600160a01b03166106a2826309659a2360e31b610848565b6001600160a01b0316146106b557600080fd5b600254600160a01b900460ff166106d38263e38a303b60e01b610848565b60ff161461036f57600080fd5b6000546001600160a01b031633146106f757600080fd5b61036f81610861565b604080516001600160a01b0383811660248084019190915283518084039091018152604490920183526020820180516001600160e01b031663b9626d2160e01b179052915160009285169161075491610975565b600060405180830381855af49150503d806000811461078f576040519150601f19603f3d011682016040523d82523d6000602084013e610794565b606091505b50509050806107a257600080fd5b505050565b600154604080516001600160a01b03909216602480840182905282518085039091018152604490930182526020830180516001600160e01b031663746e668360e11b17905290516000926107fa91610975565b600060405180830381855af49150503d8060008114610835576040519150601f19603f3d011682016040523d82523d6000602084013e61083a565b606091505b505090508061036f57600080fd5b60008061085884848380806108cf565b51949350505050565b6001600160a01b03811661087457600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60405184815283156108e2578260048201525b60018411156108f2578160248201525b6000808560200260040183895af48015610910573d6000833e610915565b600082fd5b5095945050505050565b634e487b7160e01b600052600160045260246000fd5b8183823760009101908152919050565b60006020828403121561095757600080fd5b81356001600160a01b038116811461096e57600080fd5b9392505050565b6000825160005b81811015610996576020818601810151858301520161097c565b818111156109a5576000828501525b50919091019291505056fea2646970667358221220df3486bf54a7b4114fda7f22c565ad3f801abf7e8321113f07bb1775896ffb4064736f6c634300080a0033",
  "deployedSourceMap": "461:5202:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4696:6;;-1:-1:-1;;;;;4696:6:25;1087:20:40;4689:27:25;;;;:::i;:::-;4837:6;;:23;;4816:16;;-1:-1:-1;;;;;4837:6:25;;4816:16;4837:23;4816:16;4837:23;:6;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4815:45;;;4875:11;4870:51;;4902:8;;;4870:51;4679:248;461:5202;;5064:6;;-1:-1:-1;;;;;5064:6:25;1087:20:40;5057:27:25;;;;:::i;:::-;5207:6;;:29;;5186:16;;-1:-1:-1;;;;;5207:6:25;;:29;;5186:16;;5227:8;;5207:29;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5185:51;;;5250:11;5246:408;;;5528:16;5523:3;;5503:42;5574:16;5523:3;5562:29;5246:408;5635:8;;;2010:569;;;;;;;;;;-1:-1:-1;2010:569:25;;;;;:::i;:::-;;:::i;:::-;;1509:87;;;;;;;;;;-1:-1:-1;1509:87:25;;1588:1;1069:25:41;;1057:2;1042:18;1509:87:25;;;;;;;;1026:29:26;;;;;;;;;;-1:-1:-1;1026:29:26;;;;-1:-1:-1;;;;;1026:29:26;;;;;;-1:-1:-1;;;;;1269:32:41;;;1251:51;;1239:2;1224:18;1026:29:26;1105:203:41;1715:97:25;;;;;;;;;;-1:-1:-1;1799:6:25;;-1:-1:-1;;;;;1799:6:25;1715:97;;1381:137:34;;;;;;;;;;;;;:::i;693:77::-;;;;;;;;;;-1:-1:-1;731:7:34;757:6;-1:-1:-1;;;;;757:6:34;693:77;;1013:90;;;;;;;;;;-1:-1:-1;1053:4:34;1090:6;-1:-1:-1;;;;;1090:6:34;1076:10;:20;1013:90;;1478:14:41;;1471:22;1453:41;;1441:2;1426:18;1013:90:34;1313:187:41;2712:556:25;;;;;;;;;;;;;:::i;3836:553::-;;;;;;;;;;-1:-1:-1;3836:553:25;;;;;:::i;:::-;;:::i;912:21:26:-;;;;;;;;;;-1:-1:-1;912:21:26;;;;-1:-1:-1;;;;;912:21:26;;;1185:22;;;;;;;;;;-1:-1:-1;1185:22:26;;;;-1:-1:-1;;;1185:22:26;;;;;;;;;1677:4:41;1665:17;;;1647:36;;1635:2;1620:18;1185:22:26;1505:184:41;4510:50:25;;;;;;;;;;-1:-1:-1;4510:50:25;;;;;:::i;:::-;3836:553;;1689:115:34;;;;;;;;;;-1:-1:-1;1689:115:34;;;;;:::i;:::-;;:::i;771:377:40:-;1087:20;1133:8;;;771:377::o;2010:569:25:-;1053:4:34;1090:6;-1:-1:-1;;;;;1090:6:34;1076:10;:20;889:18;;;;;;1451:1:26::1;811:24:25::0;;-1:-1:-1;;;;811:24:25::1;-1:-1:-1::0;;;811:24:25::1;::::0;;-1:-1:-1;;;;;2089:18:25;::::2;1087:20:40::0;2081:29:25::2;;;::::0;::::2;;2208:20;2220:7;2208:11;:20::i;:::-;2290:40;2313:7;2322;2290:22;:40::i;:::-;2344:6;::::0;-1:-1:-1;;;;;2344:6:25::2;1087:20:40::0;1133:8;2340:89:25::2;;2402:6;::::0;2379:39:::2;::::0;-1:-1:-1;;;;;2402:6:25::2;2410:7:::0;2379:22:::2;:39::i;:::-;2455:6;::::0;;2438:14:::2;:23:::0;;-1:-1:-1;;;;;2455:6:25;;::::2;-1:-1:-1::0;;;;;;2438:23:25;;::::2;;::::0;;;2471:16;;::::2;::::0;;::::2;;::::0;;2497:15:::2;:13;:15::i;:::-;2536:14;::::0;2527:45:::2;::::0;2561:10:::2;1251:51:41::0;;-1:-1:-1;;;;;2527:45:25;;::::2;::::0;2536:14:::2;::::0;2527:45:::2;::::0;1239:2:41;1224:18;2527:45:25::2;;;;;;;-1:-1:-1::0;856:9:25::1;:25:::0;;-1:-1:-1;;;;856:25:25::1;-1:-1:-1::0;;;856:25:25::1;::::0;;2010:569::o;1381:137:34:-;1053:4;1090:6;-1:-1:-1;;;;;1090:6:34;1076:10;:20;889:18;;;;;;1479:1:::1;1463:6:::0;;1442:40:::1;::::0;-1:-1:-1;;;;;1463:6:34;;::::1;::::0;1442:40:::1;::::0;1479:1;;1442:40:::1;1509:1;1492:19:::0;;-1:-1:-1;;;;;;1492:19:34::1;::::0;;1381:137::o;2712:556:25:-;1053:4:34;1090:6;-1:-1:-1;;;;;1090:6:34;1076:10;:20;889:18;;;;;;1451:1:26::1;811:24:25::0;;-1:-1:-1;;;;811:24:25;::::1;-1:-1:-1::0;;;811:24:25::1;::::0;;;-1:-1:-1;;;;;2777:14:25;1087:20:40;2769:36:25::2;;;::::0;::::2;;2839:14;::::0;;2831:6;2820:46:::2;::::0;2855:10:::2;1251:51:41::0;;-1:-1:-1;;;;;2839:14:25;;::::2;::::0;2831:6;;::::2;::::0;2820:46:::2;::::0;1239:2:41;1224:18;2820:46:25::2;;;;;;;3046:14;::::0;3034:27:::2;::::0;-1:-1:-1;;;;;3046:14:25::2;3034:11;:27::i;:::-;3075:6;::::0;-1:-1:-1;;;;;3075:6:25::2;1087:20:40::0;1133:8;3071:96:25::2;;3133:14;::::0;;3149:6;3110:46:::2;::::0;-1:-1:-1;;;;;3133:14:25;;::::2;::::0;3149:6:::2;3110:22;:46::i;:::-;3185:14;::::0;;;3176:23;;-1:-1:-1;;;;;;3176:23:25;;::::2;-1:-1:-1::0;;;;;3185:14:25;::::2;3176:23;::::0;;;3209:27:::2;::::0;;3246:15:::2;:13;:15::i;:::-;856:9:::1;:25:::0;;-1:-1:-1;;;;856:25:25::1;-1:-1:-1::0;;;856:25:25::1;::::0;;2712:556::o;3836:553::-;1451:1:26;1653:9;;-1:-1:-1;;;1653:9:26;;:25;:9;:25;1645:34;;;;;;731:7:34;757:6;-1:-1:-1;;;;;757:6:34;4033:45:25::1;4045:11:::0;-1:-1:-1;;;4033:11:25::1;:45::i;:::-;-1:-1:-1::0;;;;;4017:74:25::1;;4009:83;;;::::0;::::1;;4178:6;::::0;-1:-1:-1;;;;;4178:6:25::1;4126:46;4138:11:::0;-1:-1:-1;;;4126:11:25::1;:46::i;:::-;-1:-1:-1::0;;;;;4110:74:25::1;;4102:83;;;::::0;::::1;;4279:14;::::0;-1:-1:-1;;;;;4279:14:25::1;4219:54;4231:11:::0;-1:-1:-1;;;4219:11:25::1;:54::i;:::-;-1:-1:-1::0;;;;;4203:90:25::1;;4195:99;;;::::0;::::1;;4372:9;::::0;-1:-1:-1;;;4372:9:25;::::1;;;4318:49;4330:11:::0;-1:-1:-1;;;4318:11:25::1;:49::i;:::-;4312:69;;;4304:78;;;::::0;::::1;1689:115:34::0;1053:4;1090:6;-1:-1:-1;;;;;1090:6:34;1076:10;:20;889:18;;;;;;1769:28:::1;1788:8;1769:18;:28::i;3349:211:25:-:0;3468:54;;;-1:-1:-1;;;;;1269:32:41;;;3468:54:25;;;;1251:51:41;;;;3468:54:25;;;;;;;;;;1224:18:41;;;;3468:54:25;;;;;;;-1:-1:-1;;;;;3468:54:25;-1:-1:-1;;;3468:54:25;;;3449:74;;3428:16;;3449:18;;;:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3427:96;;;3541:11;3533:20;;;;;;3417:143;3349:211;;:::o;3648:182::-;3713:6;;3733:59;;;-1:-1:-1;;;;;3713:6:25;;;3733:59;;;;1251:51:41;;;3733:59:25;;;;;;;;;;1224:18:41;;;;3733:59:25;;;;;;;-1:-1:-1;;;;;3733:59:25;-1:-1:-1;;;3733:59:25;;;3713:80;;3692:16;;3713:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3691:102;;;3811:11;3803:20;;;;;3599:259:26;3681:14;;3735:44;3751:7;3760:9;3681:14;;;3735:15;:44::i;:::-;3822:20;;3599:259;-1:-1:-1;;;;3599:259:26:o;1948:183:34:-;-1:-1:-1;;;;;2021:22:34;;2013:31;;;;;;2080:6;;;2059:38;;-1:-1:-1;;;;;2059:38:34;;;;2080:6;;;2059:38;;;2107:6;:17;;-1:-1:-1;;;;;;2107:17:34;-1:-1:-1;;;;;2107:17:34;;;;;;;;;;1948:183::o;2594:899:26:-;2875:4;2869:11;2893:32;;;2941:25;;2938:105;;3018:10;3011:4;2996:13;2992:24;2985:44;2938:105;3082:1;3062:18;3059:25;3056:105;;;3136:10;3129:4;3114:13;3110:24;3103:44;3056:105;3270:1;3267;3245:18;3239:4;3235:29;3229:4;3225:40;3210:13;3201:7;3194:5;3181:91;3289:71;;;;3442:16;3437:3;3422:13;3407:52;3174:303;;3289:71;3340:1;3325:13;3318:24;3174:303;;2594:899;;;;;;;:::o;14:127:41:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;356:271;539:6;531;526:3;513:33;495:3;565:16;;590:13;;;565:16;356:271;-1:-1:-1;356:271:41:o;632:286::-;691:6;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;786:23;;-1:-1:-1;;;;;838:31:41;;828:42;;818:70;;884:1;881;874:12;818:70;907:5;632:286;-1:-1:-1;;;632:286:41:o;1694:426::-;1823:3;1861:6;1855:13;1886:1;1896:129;1910:6;1907:1;1904:13;1896:129;;;2008:4;1992:14;;;1988:25;;1982:32;1969:11;;;1962:53;1925:12;1896:129;;;2043:6;2040:1;2037:13;2034:48;;;2078:1;2069:6;2064:3;2060:16;2053:27;2034:48;-1:-1:-1;2098:16:41;;;;;1694:426;-1:-1:-1;;1694:426:41:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_target": "Target contract address"
        }
      },
      "finishUpgrade(address)": {
        "details": "Override function using empty code because no reason to call this function in Dispatcher"
      },
      "implementation()": {
        "notice": "ERC897, gets the address of the implementation where every call will be delegated"
      },
      "isOwner()": {
        "returns": {
          "_0": "true if `msg.sender` is the owner of the contract."
        }
      },
      "owner()": {
        "returns": {
          "_0": "the address of the owner."
        }
      },
      "proxyType()": {
        "notice": "ERC897, whether it is a forwarding (1) or an upgradeable (2) proxy"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.",
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "rollback()": {
        "details": "Test storage carefully before upgrade again after rollback",
        "notice": "Rollback to previous target"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "upgrade(address)": {
        "notice": "Verify new contract storage and upgrade target",
        "params": {
          "_target": "New target contract address"
        }
      },
      "verifyState(address)": {
        "details": "Method for verifying storage state. Should check that new target contract returns right storage value"
      }
    },
    "notice": "Proxying requests to other contracts. Client should use ABI of real contract and address of this contract",
    "version": 1
  },
  "offset": [
    461,
    5663
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F32D59B GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD4B83992 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD4B83992 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xE38A303B EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xE8DCCD06 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x372 JUMPI PUSH2 0x143 JUMP JUMPDEST DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x9AFD9D78 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xB9626D21 EQ PUSH2 0x2E1 JUMPI PUSH2 0x143 JUMP JUMPDEST DUP1 PUSH4 0x900F010 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x4555D5C9 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x4B2CD118 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x283 JUMPI PUSH2 0x143 JUMP JUMPDEST CALLDATASIZE PUSH2 0x143 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH2 0xE4 JUMPI PUSH2 0xE4 PUSH2 0x91F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 DUP2 DUP2 DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x132 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH2 0x15C JUMPI PUSH2 0x15C PUSH2 0x91F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x17C SWAP1 DUP4 SWAP1 CALLDATASIZE SWAP1 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 ISZERO PUSH2 0x1D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F5 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x945 JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x238 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x238 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F5 PUSH2 0x49F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x238 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F5 PUSH2 0x500 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F5 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x945 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x238 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x342 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F5 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x945 JUMP JUMPDEST POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F5 PUSH2 0x38D CALLDATASIZE PUSH1 0x4 PUSH2 0x945 JUMP JUMPDEST PUSH2 0x6E0 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA1 SHL OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3DF DUP2 PUSH2 0x60D JUMP JUMPDEST PUSH2 0x3E9 DUP2 DUP3 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO PUSH2 0x411 JUMPI PUSH1 0x1 SLOAD PUSH2 0x411 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH2 0x445 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP3 AND SWAP1 PUSH32 0x354BD4B6EB65D64E6C79C53FA4F983A5E6BEC4824CE4627C71BE0B2722F4917E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xA1 SHL OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH2 0x53F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH32 0x86E04D1DE380D22833CB4409F3EE7C6AD818A8D8387A83B6371F5CE018DDC154 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x2 SLOAD PUSH2 0x59D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x60D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO PUSH2 0x5CB JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0x5CB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND PUSH2 0x700 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE PUSH2 0x5F8 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND EQ PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x642 DUP3 PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL PUSH2 0x848 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x672 DUP3 PUSH4 0x6A5C1CC9 PUSH1 0xE1 SHL PUSH2 0x848 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A2 DUP3 PUSH4 0x9659A23 PUSH1 0xE3 SHL PUSH2 0x848 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6D3 DUP3 PUSH4 0xE38A303B PUSH1 0xE0 SHL PUSH2 0x848 JUMP JUMPDEST PUSH1 0xFF AND EQ PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36F DUP2 PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xB9626D21 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP6 AND SWAP2 PUSH2 0x754 SWAP2 PUSH2 0x975 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x794 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x7A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP4 ADD DUP3 MSTORE PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x746E6683 PUSH1 0xE1 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH2 0x7FA SWAP2 PUSH2 0x975 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x835 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x83A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x858 DUP5 DUP5 DUP4 DUP1 DUP1 PUSH2 0x8CF JUMP JUMPDEST MLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP4 ISZERO PUSH2 0x8E2 JUMPI DUP3 PUSH1 0x4 DUP3 ADD MSTORE JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x8F2 JUMPI DUP2 PUSH1 0x24 DUP3 ADD MSTORE JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x20 MUL PUSH1 0x4 ADD DUP4 DUP10 GAS DELEGATECALL DUP1 ISZERO PUSH2 0x910 JUMPI RETURNDATASIZE PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x915 JUMP JUMPDEST PUSH1 0x0 DUP3 REVERT JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x96E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x996 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x97C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF CALLVALUE DUP7 0xBF SLOAD 0xA7 0xB4 GT 0x4F 0xDA PUSH32 0x22C565AD3F801ABF7E8321113F07BB1775896FFB4064736F6C634300080A0033 ",
  "pcMap": {
    "0": {
      "offset": [
        461,
        5663
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "8": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "LT",
      "path": "25"
    },
    "9": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xC6"
    },
    "12": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "16": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "SHR",
      "path": "25"
    },
    "19": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "DUP1",
      "path": "25"
    },
    "20": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x8F32D59B"
    },
    "25": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "GT",
      "path": "25"
    },
    "26": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x7F"
    },
    "29": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "30": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "DUP1",
      "path": "25"
    },
    "31": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xD4B83992"
    },
    "36": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "GT",
      "path": "25"
    },
    "37": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "41": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "DUP1",
      "path": "25"
    },
    "42": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xD4B83992"
    },
    "47": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "EQ",
      "path": "25"
    },
    "48": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x301"
    },
    "51": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "52": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "DUP1",
      "path": "25"
    },
    "53": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xE38A303B"
    },
    "58": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "EQ",
      "path": "25"
    },
    "59": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x321"
    },
    "62": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "63": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "DUP1",
      "path": "25"
    },
    "64": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xE8DCCD06"
    },
    "69": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "EQ",
      "path": "25"
    },
    "70": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x354"
    },
    "73": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "74": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "DUP1",
      "path": "25"
    },
    "75": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "EQ",
      "path": "25"
    },
    "81": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x372"
    },
    "84": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "85": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x143"
    },
    "88": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMP",
      "path": "25"
    },
    "89": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "90": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "DUP1",
      "path": "25"
    },
    "91": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x8F32D59B"
    },
    "96": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "EQ",
      "path": "25"
    },
    "97": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A1"
    },
    "100": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "101": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "DUP1",
      "path": "25"
    },
    "102": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x9AFD9D78"
    },
    "107": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "EQ",
      "path": "25"
    },
    "108": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2CC"
    },
    "111": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "112": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "DUP1",
      "path": "25"
    },
    "113": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xB9626D21"
    },
    "118": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "EQ",
      "path": "25"
    },
    "119": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2E1"
    },
    "122": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "123": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x143"
    },
    "126": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMP",
      "path": "25"
    },
    "127": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "128": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "DUP1",
      "path": "25"
    },
    "129": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x900F010"
    },
    "134": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "EQ",
      "path": "25"
    },
    "135": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1D5"
    },
    "138": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "139": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "DUP1",
      "path": "25"
    },
    "140": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x4555D5C9"
    },
    "145": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "EQ",
      "path": "25"
    },
    "146": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1F7"
    },
    "149": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "150": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "DUP1",
      "path": "25"
    },
    "151": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x4B2CD118"
    },
    "156": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "EQ",
      "path": "25"
    },
    "157": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x218"
    },
    "160": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "161": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "DUP1",
      "path": "25"
    },
    "162": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x5C60DA1B"
    },
    "167": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "EQ",
      "path": "25"
    },
    "168": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x250"
    },
    "171": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "172": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "DUP1",
      "path": "25"
    },
    "173": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x715018A6"
    },
    "178": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "EQ",
      "path": "25"
    },
    "179": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x26E"
    },
    "182": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "183": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "DUP1",
      "path": "25"
    },
    "184": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x8DA5CB5B"
    },
    "189": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "EQ",
      "path": "25"
    },
    "190": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x283"
    },
    "193": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "194": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x143"
    },
    "197": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMP",
      "path": "25"
    },
    "198": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "199": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "200": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x143"
    },
    "203": {
      "fn": null,
      "offset": [
        461,
        5663
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "204": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4696,
        4702
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 0,
      "value": "0x1"
    },
    "206": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4696,
        4702
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "213": {
      "op": "SHL"
    },
    "214": {
      "op": "SUB"
    },
    "215": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4696,
        4702
      ],
      "op": "AND",
      "path": "25"
    },
    "216": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "40"
    },
    "217": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4689,
        4716
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE4"
    },
    "220": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4689,
        4716
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "221": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4689,
        4716
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE4"
    },
    "224": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4689,
        4716
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x91F"
    },
    "227": {
      "fn": "Dispatcher.<receive>",
      "jump": "i",
      "offset": [
        4689,
        4716
      ],
      "op": "JUMP",
      "path": "25"
    },
    "228": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4689,
        4716
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "229": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4843
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "231": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4843
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "232": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "234": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "235": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4816,
        4832
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "237": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4816,
        4832
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "244": {
      "op": "SHL"
    },
    "245": {
      "op": "SUB"
    },
    "246": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4843
      ],
      "op": "AND",
      "path": "25"
    },
    "247": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4843
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "248": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4816,
        4832
      ],
      "op": "DUP3",
      "path": "25"
    },
    "249": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "DUP2",
      "path": "25"
    },
    "250": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4816,
        4832
      ],
      "op": "DUP2",
      "path": "25"
    },
    "251": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "DUP2",
      "path": "25"
    },
    "252": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4843
      ],
      "op": "DUP6",
      "path": "25"
    },
    "253": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "GAS",
      "path": "25"
    },
    "254": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "DELEGATECALL",
      "path": "25"
    },
    "255": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "256": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "POP",
      "path": "25"
    },
    "257": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "POP",
      "path": "25"
    },
    "258": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "259": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "DUP1",
      "path": "25"
    },
    "260": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "262": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "DUP2",
      "path": "25"
    },
    "263": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "EQ",
      "path": "25"
    },
    "264": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x12D"
    },
    "267": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "268": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "270": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "271": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "272": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "POP",
      "path": "25"
    },
    "273": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "275": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "NOT",
      "path": "25"
    },
    "276": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3F"
    },
    "278": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "279": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "ADD",
      "path": "25"
    },
    "280": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "AND",
      "path": "25"
    },
    "281": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "DUP3",
      "path": "25"
    },
    "282": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "ADD",
      "path": "25"
    },
    "283": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "285": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "286": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "287": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "DUP3",
      "path": "25"
    },
    "288": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "289": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "290": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "292": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "294": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "DUP5",
      "path": "25"
    },
    "295": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "ADD",
      "path": "25"
    },
    "296": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "297": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x132"
    },
    "300": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "JUMP",
      "path": "25"
    },
    "301": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "302": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "304": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "305": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "POP",
      "path": "25"
    },
    "306": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "307": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4837,
        4860
      ],
      "op": "POP",
      "path": "25"
    },
    "308": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4815,
        4860
      ],
      "op": "POP",
      "path": "25"
    },
    "309": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4815,
        4860
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "310": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4815,
        4860
      ],
      "op": "POP",
      "path": "25"
    },
    "311": {
      "branch": 36,
      "fn": "Dispatcher.<receive>",
      "offset": [
        4875,
        4886
      ],
      "op": "DUP1",
      "path": "25"
    },
    "312": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4870,
        4921
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x140"
    },
    "315": {
      "branch": 36,
      "fn": "Dispatcher.<receive>",
      "offset": [
        4870,
        4921
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "316": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4902,
        4910
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 1,
      "value": "0x0"
    },
    "318": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4902,
        4910
      ],
      "op": "DUP1",
      "path": "25"
    },
    "319": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4902,
        4910
      ],
      "op": "REVERT",
      "path": "25"
    },
    "320": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4870,
        4921
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "321": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        4679,
        4927
      ],
      "op": "POP",
      "path": "25"
    },
    "322": {
      "offset": [
        461,
        5663
      ],
      "op": "STOP",
      "path": "25"
    },
    "323": {
      "fn": "Dispatcher.<receive>",
      "offset": [
        461,
        5663
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "324": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5064,
        5070
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 2,
      "value": "0x1"
    },
    "326": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5064,
        5070
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "333": {
      "op": "SHL"
    },
    "334": {
      "op": "SUB"
    },
    "335": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5064,
        5070
      ],
      "op": "AND",
      "path": "25"
    },
    "336": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "40"
    },
    "337": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5057,
        5084
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x15C"
    },
    "340": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5057,
        5084
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "341": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5057,
        5084
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x15C"
    },
    "344": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5057,
        5084
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x91F"
    },
    "347": {
      "fn": "Dispatcher.<fallback>",
      "jump": "i",
      "offset": [
        5057,
        5084
      ],
      "op": "JUMP",
      "path": "25"
    },
    "348": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5057,
        5084
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "349": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5213
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "351": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5213
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "352": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "354": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "355": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5186,
        5202
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "357": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5186,
        5202
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "364": {
      "op": "SHL"
    },
    "365": {
      "op": "SUB"
    },
    "366": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5213
      ],
      "op": "AND",
      "path": "25"
    },
    "367": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5213
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "368": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x17C"
    },
    "371": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "372": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5186,
        5202
      ],
      "op": "DUP4",
      "path": "25"
    },
    "373": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5186,
        5202
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "374": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5227,
        5235
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "375": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5227,
        5235
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "376": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x935"
    },
    "379": {
      "fn": "Dispatcher.<fallback>",
      "jump": "i",
      "offset": [
        5207,
        5236
      ],
      "op": "JUMP",
      "path": "25"
    },
    "380": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "381": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "383": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "385": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "386": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "DUP1",
      "path": "25"
    },
    "387": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "DUP4",
      "path": "25"
    },
    "388": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "SUB",
      "path": "25"
    },
    "389": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "DUP2",
      "path": "25"
    },
    "390": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "DUP6",
      "path": "25"
    },
    "391": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "GAS",
      "path": "25"
    },
    "392": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "DELEGATECALL",
      "path": "25"
    },
    "393": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "394": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "POP",
      "path": "25"
    },
    "395": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "POP",
      "path": "25"
    },
    "396": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "397": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "DUP1",
      "path": "25"
    },
    "398": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "400": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "DUP2",
      "path": "25"
    },
    "401": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "EQ",
      "path": "25"
    },
    "402": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1B7"
    },
    "405": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "406": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "408": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "409": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "410": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "POP",
      "path": "25"
    },
    "411": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "413": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "NOT",
      "path": "25"
    },
    "414": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3F"
    },
    "416": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "417": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "ADD",
      "path": "25"
    },
    "418": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "AND",
      "path": "25"
    },
    "419": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "DUP3",
      "path": "25"
    },
    "420": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "ADD",
      "path": "25"
    },
    "421": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "423": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "424": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "425": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "DUP3",
      "path": "25"
    },
    "426": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "427": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "428": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "430": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "432": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "DUP5",
      "path": "25"
    },
    "433": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "ADD",
      "path": "25"
    },
    "434": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "435": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1BC"
    },
    "438": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "JUMP",
      "path": "25"
    },
    "439": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "440": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "442": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "443": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "POP",
      "path": "25"
    },
    "444": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "445": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5207,
        5236
      ],
      "op": "POP",
      "path": "25"
    },
    "446": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5185,
        5236
      ],
      "op": "POP",
      "path": "25"
    },
    "447": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5185,
        5236
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "448": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5185,
        5236
      ],
      "op": "POP",
      "path": "25"
    },
    "449": {
      "branch": 37,
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5250,
        5261
      ],
      "op": "DUP1",
      "path": "25"
    },
    "450": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5246,
        5654
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "451": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5246,
        5654
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1D0"
    },
    "454": {
      "branch": 37,
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5246,
        5654
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "455": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5528,
        5544
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "456": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5523,
        5526
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "458": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5523,
        5526
      ],
      "op": "DUP1",
      "path": "25"
    },
    "459": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5503,
        5545
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "460": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5574,
        5590
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "461": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5523,
        5526
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "463": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5562,
        5591
      ],
      "op": "RETURN",
      "path": "25"
    },
    "464": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5246,
        5654
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "465": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5635,
        5643
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 3,
      "value": "0x0"
    },
    "467": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5635,
        5643
      ],
      "op": "DUP1",
      "path": "25"
    },
    "468": {
      "fn": "Dispatcher.<fallback>",
      "offset": [
        5635,
        5643
      ],
      "op": "REVERT",
      "path": "25"
    },
    "469": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "470": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "471": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "DUP1",
      "path": "25"
    },
    "472": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "473": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1E1"
    },
    "476": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "477": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "479": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "DUP1",
      "path": "25"
    },
    "480": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "REVERT",
      "path": "25"
    },
    "481": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "482": {
      "op": "POP"
    },
    "483": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1F5"
    },
    "486": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1F0"
    },
    "489": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "490": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "492": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x945"
    },
    "495": {
      "fn": "Dispatcher.upgrade",
      "jump": "i",
      "offset": [
        2010,
        2579
      ],
      "op": "JUMP",
      "path": "25"
    },
    "496": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "497": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x398"
    },
    "500": {
      "fn": "Dispatcher.upgrade",
      "jump": "i",
      "offset": [
        2010,
        2579
      ],
      "op": "JUMP",
      "path": "25"
    },
    "501": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "502": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "STOP",
      "path": "25"
    },
    "503": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "504": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "505": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "DUP1",
      "path": "25"
    },
    "506": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "507": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x203"
    },
    "510": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "511": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "513": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "DUP1",
      "path": "25"
    },
    "514": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "REVERT",
      "path": "25"
    },
    "515": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "516": {
      "op": "POP"
    },
    "517": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "519": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "520": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1588,
        1589
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 4,
      "value": "0x2"
    },
    "522": {
      "op": "DUP2"
    },
    "523": {
      "op": "MSTORE"
    },
    "524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "526": {
      "op": "ADD"
    },
    "527": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "528": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "530": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "531": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "DUP1",
      "path": "25"
    },
    "532": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "533": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "SUB",
      "path": "25"
    },
    "534": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "535": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1509,
        1596
      ],
      "op": "RETURN",
      "path": "25"
    },
    "536": {
      "offset": [
        1026,
        1055
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "537": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1026,
        1055
      ],
      "op": "CALLVALUE",
      "path": "26"
    },
    "538": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1026,
        1055
      ],
      "op": "DUP1",
      "path": "26"
    },
    "539": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1026,
        1055
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "540": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1026,
        1055
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x224"
    },
    "543": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1026,
        1055
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "544": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1026,
        1055
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "546": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1026,
        1055
      ],
      "op": "DUP1",
      "path": "26"
    },
    "547": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1026,
        1055
      ],
      "op": "REVERT",
      "path": "26"
    },
    "548": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1026,
        1055
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "549": {
      "op": "POP"
    },
    "550": {
      "offset": [
        1026,
        1055
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "552": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1026,
        1055
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "553": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1026,
        1055
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x238"
    },
    "556": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1026,
        1055
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "563": {
      "op": "SHL"
    },
    "564": {
      "op": "SUB"
    },
    "565": {
      "offset": [
        1026,
        1055
      ],
      "op": "AND",
      "path": "26"
    },
    "566": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1026,
        1055
      ],
      "op": "DUP2",
      "path": "26"
    },
    "567": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1026,
        1055
      ],
      "op": "JUMP",
      "path": "26"
    },
    "568": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1026,
        1055
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "569": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1026,
        1055
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "571": {
      "fn": "Dispatcher.proxyType",
      "offset": [
        1026,
        1055
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "576": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "578": {
      "op": "SHL"
    },
    "579": {
      "op": "SUB"
    },
    "580": {
      "op": "SWAP1"
    },
    "581": {
      "op": "SWAP2"
    },
    "582": {
      "op": "AND"
    },
    "583": {
      "op": "DUP2"
    },
    "584": {
      "op": "MSTORE"
    },
    "585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "587": {
      "op": "ADD"
    },
    "588": {
      "offset": [
        1026,
        1055
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x20F"
    },
    "591": {
      "op": "JUMP"
    },
    "592": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1715,
        1812
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "593": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1715,
        1812
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "594": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1715,
        1812
      ],
      "op": "DUP1",
      "path": "25"
    },
    "595": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1715,
        1812
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "596": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1715,
        1812
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x25C"
    },
    "599": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1715,
        1812
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "600": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1715,
        1812
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "602": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1715,
        1812
      ],
      "op": "DUP1",
      "path": "25"
    },
    "603": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1715,
        1812
      ],
      "op": "REVERT",
      "path": "25"
    },
    "604": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1715,
        1812
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "605": {
      "op": "POP"
    },
    "606": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1799,
        1805
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 5,
      "value": "0x1"
    },
    "608": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1799,
        1805
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "SUB"
    },
    "617": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1799,
        1805
      ],
      "op": "AND",
      "path": "25"
    },
    "618": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1715,
        1812
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x238"
    },
    "621": {
      "fn": "Dispatcher.implementation",
      "offset": [
        1715,
        1812
      ],
      "op": "JUMP",
      "path": "25"
    },
    "622": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "623": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "CALLVALUE",
      "path": "34"
    },
    "624": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "DUP1",
      "path": "34"
    },
    "625": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "626": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x27A"
    },
    "629": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "630": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "632": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "DUP1",
      "path": "34"
    },
    "633": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "REVERT",
      "path": "34"
    },
    "634": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "635": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "POP",
      "path": "34"
    },
    "636": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x1F5"
    },
    "639": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x49F"
    },
    "642": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMP",
      "path": "34"
    },
    "643": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "644": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "CALLVALUE",
      "path": "34"
    },
    "645": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "DUP1",
      "path": "34"
    },
    "646": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "647": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x28F"
    },
    "650": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "651": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "653": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "DUP1",
      "path": "34"
    },
    "654": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "REVERT",
      "path": "34"
    },
    "655": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "656": {
      "op": "POP"
    },
    "657": {
      "fn": "Ownable.owner",
      "offset": [
        731,
        738
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "659": {
      "fn": "Ownable.owner",
      "offset": [
        757,
        763
      ],
      "op": "SLOAD",
      "path": "34",
      "statement": 6
    },
    "660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "666": {
      "op": "SHL"
    },
    "667": {
      "op": "SUB"
    },
    "668": {
      "fn": "Ownable.owner",
      "offset": [
        757,
        763
      ],
      "op": "AND",
      "path": "34"
    },
    "669": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x238"
    },
    "672": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "JUMP",
      "path": "34"
    },
    "673": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "674": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "CALLVALUE",
      "path": "34"
    },
    "675": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "DUP1",
      "path": "34"
    },
    "676": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "677": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x2AD"
    },
    "680": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "681": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "683": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "DUP1",
      "path": "34"
    },
    "684": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "REVERT",
      "path": "34"
    },
    "685": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "686": {
      "op": "POP"
    },
    "687": {
      "fn": "Ownable.isOwner",
      "offset": [
        1053,
        1057
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "689": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "SLOAD",
      "path": "34",
      "statement": 7
    },
    "690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "696": {
      "op": "SHL"
    },
    "697": {
      "op": "SUB"
    },
    "698": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "AND",
      "path": "34"
    },
    "699": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "34"
    },
    "700": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1096
      ],
      "op": "EQ",
      "path": "34"
    },
    "701": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "703": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "704": {
      "op": "SWAP1"
    },
    "705": {
      "op": "ISZERO"
    },
    "706": {
      "op": "ISZERO"
    },
    "707": {
      "op": "DUP2"
    },
    "708": {
      "op": "MSTORE"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "711": {
      "op": "ADD"
    },
    "712": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x20F"
    },
    "715": {
      "op": "JUMP"
    },
    "716": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2712,
        3268
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "717": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2712,
        3268
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "718": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2712,
        3268
      ],
      "op": "DUP1",
      "path": "25"
    },
    "719": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2712,
        3268
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "720": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2712,
        3268
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2D8"
    },
    "723": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2712,
        3268
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "724": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2712,
        3268
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "726": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2712,
        3268
      ],
      "op": "DUP1",
      "path": "25"
    },
    "727": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2712,
        3268
      ],
      "op": "REVERT",
      "path": "25"
    },
    "728": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2712,
        3268
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "729": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2712,
        3268
      ],
      "op": "POP",
      "path": "25"
    },
    "730": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2712,
        3268
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1F5"
    },
    "733": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2712,
        3268
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x500"
    },
    "736": {
      "fn": "Dispatcher.rollback",
      "jump": "i",
      "offset": [
        2712,
        3268
      ],
      "op": "JUMP",
      "path": "25"
    },
    "737": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "738": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "739": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "DUP1",
      "path": "25"
    },
    "740": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "741": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2ED"
    },
    "744": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "745": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "747": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "DUP1",
      "path": "25"
    },
    "748": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "REVERT",
      "path": "25"
    },
    "749": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "750": {
      "op": "POP"
    },
    "751": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1F5"
    },
    "754": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2FC"
    },
    "757": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "758": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "760": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x945"
    },
    "763": {
      "fn": "Dispatcher.verifyState",
      "jump": "i",
      "offset": [
        3836,
        4389
      ],
      "op": "JUMP",
      "path": "25"
    },
    "764": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "765": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x60D"
    },
    "768": {
      "fn": "Dispatcher.verifyState",
      "jump": "i",
      "offset": [
        3836,
        4389
      ],
      "op": "JUMP",
      "path": "25"
    },
    "769": {
      "offset": [
        912,
        933
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "770": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        912,
        933
      ],
      "op": "CALLVALUE",
      "path": "26"
    },
    "771": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        912,
        933
      ],
      "op": "DUP1",
      "path": "26"
    },
    "772": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        912,
        933
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "773": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        912,
        933
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x30D"
    },
    "776": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        912,
        933
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "777": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        912,
        933
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "779": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        912,
        933
      ],
      "op": "DUP1",
      "path": "26"
    },
    "780": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        912,
        933
      ],
      "op": "REVERT",
      "path": "26"
    },
    "781": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        912,
        933
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "782": {
      "op": "POP"
    },
    "783": {
      "offset": [
        912,
        933
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "785": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        912,
        933
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "786": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        912,
        933
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x238"
    },
    "789": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        912,
        933
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "796": {
      "op": "SHL"
    },
    "797": {
      "op": "SUB"
    },
    "798": {
      "offset": [
        912,
        933
      ],
      "op": "AND",
      "path": "26"
    },
    "799": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        912,
        933
      ],
      "op": "DUP2",
      "path": "26"
    },
    "800": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        912,
        933
      ],
      "op": "JUMP",
      "path": "26"
    },
    "801": {
      "offset": [
        1185,
        1207
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "802": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "CALLVALUE",
      "path": "26"
    },
    "803": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "DUP1",
      "path": "26"
    },
    "804": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "805": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x32D"
    },
    "808": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "809": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "811": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "DUP1",
      "path": "26"
    },
    "812": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "REVERT",
      "path": "26"
    },
    "813": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "814": {
      "op": "POP"
    },
    "815": {
      "offset": [
        1185,
        1207
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "817": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "818": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x342"
    },
    "821": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "826": {
      "op": "SHL"
    },
    "827": {
      "offset": [
        1185,
        1207
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "828": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "DIV",
      "path": "26"
    },
    "829": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xFF"
    },
    "831": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "AND",
      "path": "26"
    },
    "832": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "DUP2",
      "path": "26"
    },
    "833": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "JUMP",
      "path": "26"
    },
    "834": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "835": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "837": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1185,
        1207
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "838": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "840": {
      "op": "SWAP1"
    },
    "841": {
      "op": "SWAP2"
    },
    "842": {
      "op": "AND"
    },
    "843": {
      "op": "DUP2"
    },
    "844": {
      "op": "MSTORE"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "847": {
      "op": "ADD"
    },
    "848": {
      "offset": [
        1185,
        1207
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x20F"
    },
    "851": {
      "op": "JUMP"
    },
    "852": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4510,
        4560
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "853": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4510,
        4560
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "854": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4510,
        4560
      ],
      "op": "DUP1",
      "path": "25"
    },
    "855": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4510,
        4560
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "856": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4510,
        4560
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x360"
    },
    "859": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4510,
        4560
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "860": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4510,
        4560
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "862": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4510,
        4560
      ],
      "op": "DUP1",
      "path": "25"
    },
    "863": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4510,
        4560
      ],
      "op": "REVERT",
      "path": "25"
    },
    "864": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4510,
        4560
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "865": {
      "op": "POP"
    },
    "866": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4510,
        4560
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1F5"
    },
    "869": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4510,
        4560
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x36F"
    },
    "872": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4510,
        4560
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "873": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4510,
        4560
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "875": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4510,
        4560
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x945"
    },
    "878": {
      "fn": "Dispatcher.finishUpgrade",
      "jump": "i",
      "offset": [
        4510,
        4560
      ],
      "op": "JUMP",
      "path": "25"
    },
    "879": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        4510,
        4560
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "880": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "POP",
      "path": "25"
    },
    "881": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "JUMP",
      "path": "25"
    },
    "882": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "883": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "CALLVALUE",
      "path": "34"
    },
    "884": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "DUP1",
      "path": "34"
    },
    "885": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "886": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x37E"
    },
    "889": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "890": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "892": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "DUP1",
      "path": "34"
    },
    "893": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "REVERT",
      "path": "34"
    },
    "894": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "895": {
      "op": "POP"
    },
    "896": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x1F5"
    },
    "899": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x38D"
    },
    "902": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "CALLDATASIZE",
      "path": "34"
    },
    "903": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x4"
    },
    "905": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x945"
    },
    "908": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMP",
      "path": "34"
    },
    "909": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "910": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6E0"
    },
    "913": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMP",
      "path": "34"
    },
    "914": {
      "fn": "Address.isContract",
      "offset": [
        771,
        1148
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "915": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "40"
    },
    "916": {
      "fn": "Address.isContract",
      "offset": [
        1133,
        1141
      ],
      "op": "ISZERO",
      "path": "40",
      "statement": 8
    },
    "917": {
      "fn": "Address.isContract",
      "offset": [
        1133,
        1141
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "918": {
      "fn": "Address.isContract",
      "offset": [
        1133,
        1141
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "919": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        771,
        1148
      ],
      "op": "JUMP",
      "path": "40"
    },
    "920": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2010,
        2579
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "921": {
      "fn": "Ownable.isOwner",
      "offset": [
        1053,
        1057
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "923": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "930": {
      "op": "SHL"
    },
    "931": {
      "op": "SUB"
    },
    "932": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "AND",
      "path": "34"
    },
    "933": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "34"
    },
    "934": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1096
      ],
      "op": "EQ",
      "path": "34"
    },
    "935": {
      "offset": [
        889,
        907
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x3AF"
    },
    "938": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "939": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "941": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "DUP1",
      "path": "34"
    },
    "942": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "REVERT",
      "path": "34"
    },
    "943": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "944": {
      "offset": [
        1451,
        1452
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "946": {
      "offset": [
        811,
        835
      ],
      "op": "DUP1",
      "path": "25"
    },
    "947": {
      "fn": "Ownable.isOwner",
      "offset": [
        811,
        835
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "948": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "952": {
      "op": "SHL"
    },
    "953": {
      "op": "NOT"
    },
    "954": {
      "offset": [
        811,
        835
      ],
      "op": "AND",
      "path": "25"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "957": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "959": {
      "op": "SHL"
    },
    "960": {
      "offset": [
        811,
        835
      ],
      "op": "OR",
      "path": "25"
    },
    "961": {
      "fn": "Ownable.isOwner",
      "offset": [
        811,
        835
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "962": {
      "fn": "Ownable.isOwner",
      "offset": [
        811,
        835
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "969": {
      "op": "SHL"
    },
    "970": {
      "op": "SUB"
    },
    "971": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2089,
        2107
      ],
      "op": "DUP2",
      "path": "25",
      "statement": 9
    },
    "972": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2089,
        2107
      ],
      "op": "AND",
      "path": "25"
    },
    "973": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "40"
    },
    "974": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2081,
        2110
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3D6"
    },
    "977": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2081,
        2110
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "978": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2081,
        2110
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "980": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2081,
        2110
      ],
      "op": "DUP1",
      "path": "25"
    },
    "981": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2081,
        2110
      ],
      "op": "REVERT",
      "path": "25"
    },
    "982": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2081,
        2110
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "983": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2208,
        2228
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 10,
      "value": "0x3DF"
    },
    "986": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2220,
        2227
      ],
      "op": "DUP2",
      "path": "25"
    },
    "987": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2208,
        2219
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x60D"
    },
    "990": {
      "fn": "Dispatcher.upgrade",
      "jump": "i",
      "offset": [
        2208,
        2228
      ],
      "op": "JUMP",
      "path": "25"
    },
    "991": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2208,
        2228
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "992": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2290,
        2330
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 11,
      "value": "0x3E9"
    },
    "995": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2313,
        2320
      ],
      "op": "DUP2",
      "path": "25"
    },
    "996": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2322,
        2329
      ],
      "op": "DUP3",
      "path": "25"
    },
    "997": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2290,
        2312
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x700"
    },
    "1000": {
      "fn": "Dispatcher.upgrade",
      "jump": "i",
      "offset": [
        2290,
        2330
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1001": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2290,
        2330
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1002": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2344,
        2350
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "1004": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2344,
        2350
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1011": {
      "op": "SHL"
    },
    "1012": {
      "op": "SUB"
    },
    "1013": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2344,
        2350
      ],
      "op": "AND",
      "path": "25"
    },
    "1014": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "40"
    },
    "1015": {
      "fn": "Address.isContract",
      "offset": [
        1133,
        1141
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "1016": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2340,
        2429
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x411"
    },
    "1019": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2340,
        2429
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1020": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2402,
        2408
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 12,
      "value": "0x1"
    },
    "1022": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2402,
        2408
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1023": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2379,
        2418
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x411"
    },
    "1026": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2379,
        2418
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1033": {
      "op": "SHL"
    },
    "1034": {
      "op": "SUB"
    },
    "1035": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2402,
        2408
      ],
      "op": "AND",
      "path": "25"
    },
    "1036": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2410,
        2417
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1037": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2379,
        2401
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x700"
    },
    "1040": {
      "fn": "Dispatcher.upgrade",
      "jump": "i",
      "offset": [
        2379,
        2418
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1041": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2379,
        2418
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1042": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2455,
        2461
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 13,
      "value": "0x1"
    },
    "1044": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2455,
        2461
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1045": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2455,
        2461
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1046": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2438,
        2452
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "1048": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2438,
        2461
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1049": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2438,
        2461
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1056": {
      "op": "SHL"
    },
    "1057": {
      "op": "SUB"
    },
    "1058": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2455,
        2461
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1059": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2455,
        2461
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1060": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2455,
        2461
      ],
      "op": "AND",
      "path": "25"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1067": {
      "op": "SHL"
    },
    "1068": {
      "op": "SUB"
    },
    "1069": {
      "op": "NOT"
    },
    "1070": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2438,
        2461
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1071": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2438,
        2461
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1072": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2438,
        2461
      ],
      "op": "AND",
      "path": "25"
    },
    "1073": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2438,
        2461
      ],
      "op": "OR",
      "path": "25"
    },
    "1074": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2438,
        2461
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1075": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2438,
        2461
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1076": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2438,
        2461
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "1077": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2471,
        2487
      ],
      "op": "SWAP1",
      "path": "25",
      "statement": 14
    },
    "1078": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2471,
        2487
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1079": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2471,
        2487
      ],
      "op": "AND",
      "path": "25"
    },
    "1080": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2471,
        2487
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1081": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2471,
        2487
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1082": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2471,
        2487
      ],
      "op": "AND",
      "path": "25"
    },
    "1083": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2471,
        2487
      ],
      "op": "OR",
      "path": "25"
    },
    "1084": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2471,
        2487
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1085": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2471,
        2487
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "1086": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2497,
        2512
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 15,
      "value": "0x445"
    },
    "1089": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2497,
        2510
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x7A7"
    },
    "1092": {
      "fn": "Dispatcher.upgrade",
      "jump": "i",
      "offset": [
        2497,
        2512
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1093": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2497,
        2512
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1094": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2536,
        2550
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 16,
      "value": "0x2"
    },
    "1096": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2536,
        2550
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1097": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2527,
        2572
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1099": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2527,
        2572
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1100": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2561,
        2571
      ],
      "op": "CALLER",
      "path": "25"
    },
    "1101": {
      "op": "DUP2"
    },
    "1102": {
      "op": "MSTORE"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1109": {
      "op": "SHL"
    },
    "1110": {
      "op": "SUB"
    },
    "1111": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2527,
        2572
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1112": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2527,
        2572
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1113": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2527,
        2572
      ],
      "op": "AND",
      "path": "25"
    },
    "1114": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2527,
        2572
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1115": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2536,
        2550
      ],
      "op": "AND",
      "path": "25"
    },
    "1116": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2536,
        2550
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1117": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2527,
        2572
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x354BD4B6EB65D64E6C79C53FA4F983A5E6BEC4824CE4627C71BE0B2722F4917E"
    },
    "1150": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2527,
        2572
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1153": {
      "op": "ADD"
    },
    "1154": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2527,
        2572
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1156": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2527,
        2572
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1157": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2527,
        2572
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1158": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2527,
        2572
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1159": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2527,
        2572
      ],
      "op": "SUB",
      "path": "25"
    },
    "1160": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2527,
        2572
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1161": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        2527,
        2572
      ],
      "op": "LOG3",
      "path": "25"
    },
    "1162": {
      "op": "POP"
    },
    "1163": {
      "offset": [
        856,
        865
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "1165": {
      "offset": [
        856,
        881
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1166": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        856,
        881
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1167": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1171": {
      "op": "SHL"
    },
    "1172": {
      "op": "NOT"
    },
    "1173": {
      "offset": [
        856,
        881
      ],
      "op": "AND",
      "path": "25"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1178": {
      "op": "SHL"
    },
    "1179": {
      "offset": [
        856,
        881
      ],
      "op": "OR",
      "path": "25"
    },
    "1180": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        856,
        881
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1181": {
      "fn": "Dispatcher.upgrade",
      "offset": [
        856,
        881
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "1182": {
      "fn": "Dispatcher.upgrade",
      "jump": "o",
      "offset": [
        2010,
        2579
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1183": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1184": {
      "fn": "Ownable.isOwner",
      "offset": [
        1053,
        1057
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1186": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1193": {
      "op": "SHL"
    },
    "1194": {
      "op": "SUB"
    },
    "1195": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "AND",
      "path": "34"
    },
    "1196": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "34"
    },
    "1197": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1096
      ],
      "op": "EQ",
      "path": "34"
    },
    "1198": {
      "offset": [
        889,
        907
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x4B6"
    },
    "1201": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1202": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1204": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1205": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "REVERT",
      "path": "34"
    },
    "1206": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1207": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1479,
        1480
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 17,
      "value": "0x0"
    },
    "1209": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1210": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "1211": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "1213": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1220": {
      "op": "SHL"
    },
    "1221": {
      "op": "SUB"
    },
    "1222": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1223": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "1224": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "AND",
      "path": "34"
    },
    "1225": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1226": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "PUSH32",
      "path": "34",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1259": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1260": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1479,
        1480
      ],
      "op": "DUP4",
      "path": "34"
    },
    "1261": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1479,
        1480
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1262": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "LOG3",
      "path": "34"
    },
    "1263": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1509,
        1510
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 18,
      "value": "0x0"
    },
    "1265": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1266": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1273": {
      "op": "SHL"
    },
    "1274": {
      "op": "SUB"
    },
    "1275": {
      "op": "NOT"
    },
    "1276": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "AND",
      "path": "34"
    },
    "1277": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1278": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "SSTORE",
      "path": "34"
    },
    "1279": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1280": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2712,
        3268
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1281": {
      "fn": "Ownable.isOwner",
      "offset": [
        1053,
        1057
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1283": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1290": {
      "op": "SHL"
    },
    "1291": {
      "op": "SUB"
    },
    "1292": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "AND",
      "path": "34"
    },
    "1293": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "34"
    },
    "1294": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1096
      ],
      "op": "EQ",
      "path": "34"
    },
    "1295": {
      "offset": [
        889,
        907
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x517"
    },
    "1298": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1299": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1301": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1302": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "REVERT",
      "path": "34"
    },
    "1303": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1304": {
      "offset": [
        1451,
        1452
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "1306": {
      "offset": [
        811,
        835
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1307": {
      "fn": "Ownable.isOwner",
      "offset": [
        811,
        835
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1312": {
      "op": "SHL"
    },
    "1313": {
      "op": "NOT"
    },
    "1314": {
      "offset": [
        811,
        835
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1315": {
      "fn": "Ownable.isOwner",
      "offset": [
        811,
        835
      ],
      "op": "AND",
      "path": "25"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "1320": {
      "op": "SHL"
    },
    "1321": {
      "offset": [
        811,
        835
      ],
      "op": "OR",
      "path": "25"
    },
    "1322": {
      "fn": "Ownable.isOwner",
      "offset": [
        811,
        835
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1323": {
      "fn": "Ownable.isOwner",
      "offset": [
        811,
        835
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1324": {
      "fn": "Ownable.isOwner",
      "offset": [
        811,
        835
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1331": {
      "op": "SHL"
    },
    "1332": {
      "op": "SUB"
    },
    "1333": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2777,
        2791
      ],
      "op": "AND",
      "path": "25",
      "statement": 19
    },
    "1334": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "40"
    },
    "1335": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2769,
        2805
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x53F"
    },
    "1338": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2769,
        2805
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1339": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2769,
        2805
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1341": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2769,
        2805
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1342": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2769,
        2805
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1343": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2769,
        2805
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1344": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2839,
        2853
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 20,
      "value": "0x2"
    },
    "1346": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2839,
        2853
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1347": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2839,
        2853
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "1349": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2831,
        2837
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1350": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2820,
        2866
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1352": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2820,
        2866
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1353": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2855,
        2865
      ],
      "op": "CALLER",
      "path": "25"
    },
    "1354": {
      "op": "DUP2"
    },
    "1355": {
      "op": "MSTORE"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1362": {
      "op": "SHL"
    },
    "1363": {
      "op": "SUB"
    },
    "1364": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2839,
        2853
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1365": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2839,
        2853
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1366": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2839,
        2853
      ],
      "op": "AND",
      "path": "25"
    },
    "1367": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2839,
        2853
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1368": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2831,
        2837
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1369": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2831,
        2837
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1370": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2831,
        2837
      ],
      "op": "AND",
      "path": "25"
    },
    "1371": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2831,
        2837
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1372": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2820,
        2866
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x86E04D1DE380D22833CB4409F3EE7C6AD818A8D8387A83B6371F5CE018DDC154"
    },
    "1405": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2820,
        2866
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1408": {
      "op": "ADD"
    },
    "1409": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2820,
        2866
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1411": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2820,
        2866
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1412": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2820,
        2866
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1413": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2820,
        2866
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1414": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2820,
        2866
      ],
      "op": "SUB",
      "path": "25"
    },
    "1415": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2820,
        2866
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1416": {
      "fn": "Dispatcher.rollback",
      "offset": [
        2820,
        2866
      ],
      "op": "LOG3",
      "path": "25"
    },
    "1417": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3046,
        3060
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 21,
      "value": "0x2"
    },
    "1419": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3046,
        3060
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1420": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3034,
        3061
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x59D"
    },
    "1423": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3034,
        3061
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1430": {
      "op": "SHL"
    },
    "1431": {
      "op": "SUB"
    },
    "1432": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3046,
        3060
      ],
      "op": "AND",
      "path": "25"
    },
    "1433": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3034,
        3045
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x60D"
    },
    "1436": {
      "fn": "Dispatcher.rollback",
      "jump": "i",
      "offset": [
        3034,
        3061
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1437": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3034,
        3061
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1438": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3075,
        3081
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "1440": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3075,
        3081
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1447": {
      "op": "SHL"
    },
    "1448": {
      "op": "SUB"
    },
    "1449": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3075,
        3081
      ],
      "op": "AND",
      "path": "25"
    },
    "1450": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "40"
    },
    "1451": {
      "fn": "Address.isContract",
      "offset": [
        1133,
        1141
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "1452": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3071,
        3167
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5CB"
    },
    "1455": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3071,
        3167
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1456": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3133,
        3147
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 22,
      "value": "0x2"
    },
    "1458": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3133,
        3147
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1459": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3133,
        3147
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "1461": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3149,
        3155
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1462": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3110,
        3156
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5CB"
    },
    "1465": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3110,
        3156
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1472": {
      "op": "SHL"
    },
    "1473": {
      "op": "SUB"
    },
    "1474": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3133,
        3147
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1475": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3133,
        3147
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1476": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3133,
        3147
      ],
      "op": "AND",
      "path": "25"
    },
    "1477": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3133,
        3147
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1478": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3149,
        3155
      ],
      "op": "AND",
      "path": "25"
    },
    "1479": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3110,
        3132
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x700"
    },
    "1482": {
      "fn": "Dispatcher.rollback",
      "jump": "i",
      "offset": [
        3110,
        3156
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1483": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3110,
        3156
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1484": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3185,
        3199
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 23,
      "value": "0x2"
    },
    "1486": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3185,
        3199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1487": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3185,
        3199
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1488": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3185,
        3199
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "1490": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3176,
        3199
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1491": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3176,
        3199
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1498": {
      "op": "SHL"
    },
    "1499": {
      "op": "SUB"
    },
    "1500": {
      "op": "NOT"
    },
    "1501": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3176,
        3199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1502": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3176,
        3199
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1503": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3176,
        3199
      ],
      "op": "AND",
      "path": "25"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1510": {
      "op": "SHL"
    },
    "1511": {
      "op": "SUB"
    },
    "1512": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3185,
        3199
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1513": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3185,
        3199
      ],
      "op": "AND",
      "path": "25"
    },
    "1514": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3176,
        3199
      ],
      "op": "OR",
      "path": "25"
    },
    "1515": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3176,
        3199
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1516": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3176,
        3199
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1517": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3176,
        3199
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "1518": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3209,
        3236
      ],
      "op": "AND",
      "path": "25",
      "statement": 24
    },
    "1519": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3209,
        3236
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1520": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3209,
        3236
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "1521": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3246,
        3261
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 25,
      "value": "0x5F8"
    },
    "1524": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3246,
        3259
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x7A7"
    },
    "1527": {
      "fn": "Dispatcher.rollback",
      "jump": "i",
      "offset": [
        3246,
        3261
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1528": {
      "fn": "Dispatcher.rollback",
      "offset": [
        3246,
        3261
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1529": {
      "offset": [
        856,
        865
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "1531": {
      "offset": [
        856,
        881
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1532": {
      "fn": "Dispatcher.rollback",
      "offset": [
        856,
        881
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1537": {
      "op": "SHL"
    },
    "1538": {
      "op": "NOT"
    },
    "1539": {
      "offset": [
        856,
        881
      ],
      "op": "AND",
      "path": "25"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1544": {
      "op": "SHL"
    },
    "1545": {
      "offset": [
        856,
        881
      ],
      "op": "OR",
      "path": "25"
    },
    "1546": {
      "fn": "Dispatcher.rollback",
      "offset": [
        856,
        881
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1547": {
      "fn": "Dispatcher.rollback",
      "offset": [
        856,
        881
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "1548": {
      "fn": "Dispatcher.rollback",
      "jump": "o",
      "offset": [
        2712,
        3268
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1549": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        3836,
        4389
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1550": {
      "offset": [
        1451,
        1452
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "1552": {
      "offset": [
        1653,
        1662
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1553": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1653,
        1662
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1558": {
      "op": "SHL"
    },
    "1559": {
      "offset": [
        1653,
        1662
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1560": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1653,
        1662
      ],
      "op": "DIV",
      "path": "26"
    },
    "1561": {
      "offset": [
        1653,
        1678
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xFF"
    },
    "1563": {
      "offset": [
        1653,
        1662
      ],
      "op": "AND",
      "path": "26"
    },
    "1564": {
      "offset": [
        1653,
        1678
      ],
      "op": "EQ",
      "path": "26"
    },
    "1565": {
      "offset": [
        1645,
        1679
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x625"
    },
    "1568": {
      "offset": [
        1645,
        1679
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "1569": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1645,
        1679
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1571": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1645,
        1679
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1572": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1645,
        1679
      ],
      "op": "REVERT",
      "path": "26"
    },
    "1573": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        1645,
        1679
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1574": {
      "fn": "Ownable.owner",
      "offset": [
        731,
        738
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1576": {
      "fn": "Ownable.owner",
      "offset": [
        757,
        763
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1583": {
      "op": "SHL"
    },
    "1584": {
      "op": "SUB"
    },
    "1585": {
      "fn": "Ownable.owner",
      "offset": [
        757,
        763
      ],
      "op": "AND",
      "path": "34"
    },
    "1586": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4033,
        4078
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 26,
      "value": "0x642"
    },
    "1589": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4045,
        4056
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1590": {
      "op": "PUSH4",
      "value": "0x8DA5CB5B"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1597": {
      "op": "SHL"
    },
    "1598": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4033,
        4044
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x848"
    },
    "1601": {
      "fn": "Dispatcher.verifyState",
      "jump": "i",
      "offset": [
        4033,
        4078
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1602": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4033,
        4078
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1609": {
      "op": "SHL"
    },
    "1610": {
      "op": "SUB"
    },
    "1611": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4017,
        4091
      ],
      "op": "AND",
      "path": "25"
    },
    "1612": {
      "branch": 38,
      "fn": "Dispatcher.verifyState",
      "offset": [
        4017,
        4091
      ],
      "op": "EQ",
      "path": "25"
    },
    "1613": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4009,
        4092
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x655"
    },
    "1616": {
      "branch": 38,
      "fn": "Dispatcher.verifyState",
      "offset": [
        4009,
        4092
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1617": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4009,
        4092
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1619": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4009,
        4092
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1620": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4009,
        4092
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1621": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4009,
        4092
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1622": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4178,
        4184
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 27,
      "value": "0x1"
    },
    "1624": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4178,
        4184
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1631": {
      "op": "SHL"
    },
    "1632": {
      "op": "SUB"
    },
    "1633": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4178,
        4184
      ],
      "op": "AND",
      "path": "25"
    },
    "1634": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4126,
        4172
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x672"
    },
    "1637": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4138,
        4149
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1638": {
      "op": "PUSH4",
      "value": "0x6A5C1CC9"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1645": {
      "op": "SHL"
    },
    "1646": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4126,
        4137
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x848"
    },
    "1649": {
      "fn": "Dispatcher.verifyState",
      "jump": "i",
      "offset": [
        4126,
        4172
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1650": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4126,
        4172
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1657": {
      "op": "SHL"
    },
    "1658": {
      "op": "SUB"
    },
    "1659": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4110,
        4184
      ],
      "op": "AND",
      "path": "25"
    },
    "1660": {
      "branch": 39,
      "fn": "Dispatcher.verifyState",
      "offset": [
        4110,
        4184
      ],
      "op": "EQ",
      "path": "25"
    },
    "1661": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4102,
        4185
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x685"
    },
    "1664": {
      "branch": 39,
      "fn": "Dispatcher.verifyState",
      "offset": [
        4102,
        4185
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1665": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4102,
        4185
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1667": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4102,
        4185
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1668": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4102,
        4185
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1669": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4102,
        4185
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1670": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4279,
        4293
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 28,
      "value": "0x2"
    },
    "1672": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4279,
        4293
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1679": {
      "op": "SHL"
    },
    "1680": {
      "op": "SUB"
    },
    "1681": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4279,
        4293
      ],
      "op": "AND",
      "path": "25"
    },
    "1682": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4219,
        4273
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x6A2"
    },
    "1685": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4231,
        4242
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1686": {
      "op": "PUSH4",
      "value": "0x9659A23"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1693": {
      "op": "SHL"
    },
    "1694": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4219,
        4230
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x848"
    },
    "1697": {
      "fn": "Dispatcher.verifyState",
      "jump": "i",
      "offset": [
        4219,
        4273
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1698": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4219,
        4273
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1705": {
      "op": "SHL"
    },
    "1706": {
      "op": "SUB"
    },
    "1707": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4203,
        4293
      ],
      "op": "AND",
      "path": "25"
    },
    "1708": {
      "branch": 40,
      "fn": "Dispatcher.verifyState",
      "offset": [
        4203,
        4293
      ],
      "op": "EQ",
      "path": "25"
    },
    "1709": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4195,
        4294
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x6B5"
    },
    "1712": {
      "branch": 40,
      "fn": "Dispatcher.verifyState",
      "offset": [
        4195,
        4294
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1713": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4195,
        4294
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1715": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4195,
        4294
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1716": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4195,
        4294
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1717": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4195,
        4294
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1718": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4372,
        4381
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 29,
      "value": "0x2"
    },
    "1720": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4372,
        4381
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1725": {
      "op": "SHL"
    },
    "1726": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4372,
        4381
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1727": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4372,
        4381
      ],
      "op": "DIV",
      "path": "25"
    },
    "1728": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4372,
        4381
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "1730": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4372,
        4381
      ],
      "op": "AND",
      "path": "25"
    },
    "1731": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4318,
        4367
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x6D3"
    },
    "1734": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4330,
        4341
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1735": {
      "op": "PUSH4",
      "value": "0xE38A303B"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1742": {
      "op": "SHL"
    },
    "1743": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4318,
        4329
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x848"
    },
    "1746": {
      "fn": "Dispatcher.verifyState",
      "jump": "i",
      "offset": [
        4318,
        4367
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1747": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4318,
        4367
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1748": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4312,
        4381
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xFF"
    },
    "1750": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4312,
        4381
      ],
      "op": "AND",
      "path": "25"
    },
    "1751": {
      "branch": 41,
      "fn": "Dispatcher.verifyState",
      "offset": [
        4312,
        4381
      ],
      "op": "EQ",
      "path": "25"
    },
    "1752": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4304,
        4382
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x36F"
    },
    "1755": {
      "branch": 41,
      "fn": "Dispatcher.verifyState",
      "offset": [
        4304,
        4382
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1756": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4304,
        4382
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1758": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4304,
        4382
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1759": {
      "fn": "Dispatcher.verifyState",
      "offset": [
        4304,
        4382
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1760": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1761": {
      "fn": "Ownable.isOwner",
      "offset": [
        1053,
        1057
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1763": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1770": {
      "op": "SHL"
    },
    "1771": {
      "op": "SUB"
    },
    "1772": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "AND",
      "path": "34"
    },
    "1773": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "34"
    },
    "1774": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1096
      ],
      "op": "EQ",
      "path": "34"
    },
    "1775": {
      "offset": [
        889,
        907
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6F7"
    },
    "1778": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1779": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1781": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1782": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "REVERT",
      "path": "34"
    },
    "1783": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1784": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1769,
        1797
      ],
      "op": "PUSH2",
      "path": "34",
      "statement": 30,
      "value": "0x36F"
    },
    "1787": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1788,
        1796
      ],
      "op": "DUP2",
      "path": "34"
    },
    "1788": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1769,
        1787
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x861"
    },
    "1791": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1769,
        1797
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1792": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3349,
        3560
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1793": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1795": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1796": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1803": {
      "op": "SHL"
    },
    "1804": {
      "op": "SUB"
    },
    "1805": {
      "op": "DUP4"
    },
    "1806": {
      "op": "DUP2"
    },
    "1807": {
      "op": "AND"
    },
    "1808": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x24"
    },
    "1810": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1811": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1812": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "ADD",
      "path": "25"
    },
    "1813": {
      "op": "SWAP2"
    },
    "1814": {
      "op": "SWAP1"
    },
    "1815": {
      "op": "SWAP2"
    },
    "1816": {
      "op": "MSTORE"
    },
    "1817": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1818": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1819": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1820": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1821": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "SUB",
      "path": "25"
    },
    "1822": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1823": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1824": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "ADD",
      "path": "25"
    },
    "1825": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1826": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1829": {
      "op": "SWAP1"
    },
    "1830": {
      "op": "SWAP3"
    },
    "1831": {
      "op": "ADD"
    },
    "1832": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1833": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1834": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1836": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1837": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "ADD",
      "path": "25"
    },
    "1838": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1839": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1846": {
      "op": "SHL"
    },
    "1847": {
      "op": "SUB"
    },
    "1848": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "AND",
      "path": "25"
    },
    "1849": {
      "op": "PUSH4",
      "value": "0xB9626D21"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1856": {
      "op": "SHL"
    },
    "1857": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "OR",
      "path": "25"
    },
    "1858": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1859": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3468,
        3522
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1860": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1861": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1862": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3428,
        3444
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1864": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3428,
        3444
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1865": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3467
      ],
      "op": "DUP6",
      "path": "25"
    },
    "1866": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3467
      ],
      "op": "AND",
      "path": "25"
    },
    "1867": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3467
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1868": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x754"
    },
    "1871": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1872": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x975"
    },
    "1875": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "jump": "i",
      "offset": [
        3449,
        3523
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1876": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1877": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1879": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1881": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1882": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1883": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1884": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "SUB",
      "path": "25"
    },
    "1885": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1886": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "DUP6",
      "path": "25"
    },
    "1887": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "GAS",
      "path": "25"
    },
    "1888": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "DELEGATECALL",
      "path": "25"
    },
    "1889": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1890": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "POP",
      "path": "25"
    },
    "1891": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "POP",
      "path": "25"
    },
    "1892": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1893": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1894": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1896": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1897": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "EQ",
      "path": "25"
    },
    "1898": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x78F"
    },
    "1901": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1902": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1904": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1905": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1906": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "POP",
      "path": "25"
    },
    "1907": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "1909": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "NOT",
      "path": "25"
    },
    "1910": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3F"
    },
    "1912": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1913": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "ADD",
      "path": "25"
    },
    "1914": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "AND",
      "path": "25"
    },
    "1915": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1916": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "ADD",
      "path": "25"
    },
    "1917": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1919": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1920": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1921": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1922": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1923": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1924": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1926": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1928": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1929": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "ADD",
      "path": "25"
    },
    "1930": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "1931": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x794"
    },
    "1934": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1935": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1936": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "1938": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1939": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "POP",
      "path": "25"
    },
    "1940": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1941": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3449,
        3523
      ],
      "op": "POP",
      "path": "25"
    },
    "1942": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3427,
        3523
      ],
      "op": "POP",
      "path": "25"
    },
    "1943": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3427,
        3523
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1944": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3427,
        3523
      ],
      "op": "POP",
      "path": "25"
    },
    "1945": {
      "branch": 42,
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3541,
        3552
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 31
    },
    "1946": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3533,
        3553
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x7A2"
    },
    "1949": {
      "branch": 42,
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3533,
        3553
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1950": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3533,
        3553
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1952": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3533,
        3553
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1953": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3533,
        3553
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1954": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3533,
        3553
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1955": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3417,
        3560
      ],
      "op": "POP",
      "path": "25"
    },
    "1956": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3349,
        3560
      ],
      "op": "POP",
      "path": "25"
    },
    "1957": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "offset": [
        3349,
        3560
      ],
      "op": "POP",
      "path": "25"
    },
    "1958": {
      "fn": "Dispatcher.verifyUpgradeableState",
      "jump": "o",
      "offset": [
        3349,
        3560
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1959": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3648,
        3830
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1960": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3719
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "1962": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3719
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "1963": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1965": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1966": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1973": {
      "op": "SHL"
    },
    "1974": {
      "op": "SUB"
    },
    "1975": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3719
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1976": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3719
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1977": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3719
      ],
      "op": "AND",
      "path": "25"
    },
    "1978": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x24"
    },
    "1980": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1981": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1982": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "ADD",
      "path": "25"
    },
    "1983": {
      "op": "DUP3"
    },
    "1984": {
      "op": "SWAP1"
    },
    "1985": {
      "op": "MSTORE"
    },
    "1986": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1987": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1988": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1989": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "DUP6",
      "path": "25"
    },
    "1990": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "SUB",
      "path": "25"
    },
    "1991": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1992": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1993": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "ADD",
      "path": "25"
    },
    "1994": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1995": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1998": {
      "op": "SWAP1"
    },
    "1999": {
      "op": "SWAP4"
    },
    "2000": {
      "op": "ADD"
    },
    "2001": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2002": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2003": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2005": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2006": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "ADD",
      "path": "25"
    },
    "2007": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2008": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2015": {
      "op": "SHL"
    },
    "2016": {
      "op": "SUB"
    },
    "2017": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "AND",
      "path": "25"
    },
    "2018": {
      "op": "PUSH4",
      "value": "0x746E6683"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2025": {
      "op": "SHL"
    },
    "2026": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "OR",
      "path": "25"
    },
    "2027": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2028": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3733,
        3792
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2029": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2030": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2031": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3692,
        3708
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2033": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3692,
        3708
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "2034": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x7FA"
    },
    "2037": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2038": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x975"
    },
    "2041": {
      "fn": "Dispatcher.finishUpgrade",
      "jump": "i",
      "offset": [
        3713,
        3793
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2042": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2043": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2045": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2047": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2048": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2049": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2050": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "SUB",
      "path": "25"
    },
    "2051": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2052": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "DUP6",
      "path": "25"
    },
    "2053": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "GAS",
      "path": "25"
    },
    "2054": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "DELEGATECALL",
      "path": "25"
    },
    "2055": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2056": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "POP",
      "path": "25"
    },
    "2057": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "POP",
      "path": "25"
    },
    "2058": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2059": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2060": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2062": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2063": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "EQ",
      "path": "25"
    },
    "2064": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x835"
    },
    "2067": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2068": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2070": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2071": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2072": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "POP",
      "path": "25"
    },
    "2073": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "2075": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "NOT",
      "path": "25"
    },
    "2076": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x3F"
    },
    "2078": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2079": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "ADD",
      "path": "25"
    },
    "2080": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "AND",
      "path": "25"
    },
    "2081": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2082": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "ADD",
      "path": "25"
    },
    "2083": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2085": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2086": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2087": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2088": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2089": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2090": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2092": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2094": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2095": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "ADD",
      "path": "25"
    },
    "2096": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "2097": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x83A"
    },
    "2100": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2101": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2102": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "2104": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2105": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "POP",
      "path": "25"
    },
    "2106": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2107": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3713,
        3793
      ],
      "op": "POP",
      "path": "25"
    },
    "2108": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3691,
        3793
      ],
      "op": "POP",
      "path": "25"
    },
    "2109": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3691,
        3793
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2110": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3691,
        3793
      ],
      "op": "POP",
      "path": "25"
    },
    "2111": {
      "branch": 43,
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3811,
        3822
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 32
    },
    "2112": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3803,
        3823
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x36F"
    },
    "2115": {
      "branch": 43,
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3803,
        3823
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2116": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3803,
        3823
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2118": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3803,
        3823
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2119": {
      "fn": "Dispatcher.finishUpgrade",
      "offset": [
        3803,
        3823
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2120": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3599,
        3858
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2121": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3681,
        3695
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2123": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3681,
        3695
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2124": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3735,
        3779
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x858"
    },
    "2127": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3751,
        3758
      ],
      "op": "DUP5",
      "path": "26"
    },
    "2128": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3760,
        3769
      ],
      "op": "DUP5",
      "path": "26"
    },
    "2129": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3681,
        3695
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2130": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3681,
        3695
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2131": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3681,
        3695
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2132": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3735,
        3750
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x8CF"
    },
    "2135": {
      "fn": "Upgradeable.delegateGet",
      "jump": "i",
      "offset": [
        3735,
        3779
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2136": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3735,
        3779
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2137": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3822,
        3842
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2138": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3822,
        3842
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "2139": {
      "fn": "Upgradeable.delegateGet",
      "offset": [
        3599,
        3858
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "2140": {
      "op": "POP"
    },
    "2141": {
      "op": "POP"
    },
    "2142": {
      "op": "POP"
    },
    "2143": {
      "op": "POP"
    },
    "2144": {
      "fn": "Upgradeable.delegateGet",
      "jump": "o",
      "offset": [
        3599,
        3858
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2145": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1948,
        2131
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2152": {
      "op": "SHL"
    },
    "2153": {
      "op": "SUB"
    },
    "2154": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2021,
        2043
      ],
      "op": "DUP2",
      "path": "34",
      "statement": 33
    },
    "2155": {
      "branch": 44,
      "fn": "Ownable._transferOwnership",
      "offset": [
        2021,
        2043
      ],
      "op": "AND",
      "path": "34"
    },
    "2156": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x874"
    },
    "2159": {
      "branch": 44,
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "2160": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "2162": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "DUP1",
      "path": "34"
    },
    "2163": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "REVERT",
      "path": "34"
    },
    "2164": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "2165": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 34,
      "value": "0x0"
    },
    "2167": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "DUP1",
      "path": "34"
    },
    "2168": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "2169": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "2171": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2178": {
      "op": "SHL"
    },
    "2179": {
      "op": "SUB"
    },
    "2180": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "DUP1",
      "path": "34"
    },
    "2181": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "DUP6",
      "path": "34"
    },
    "2182": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "AND",
      "path": "34"
    },
    "2183": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "SWAP4",
      "path": "34"
    },
    "2184": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "2185": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "AND",
      "path": "34"
    },
    "2186": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "2187": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "PUSH32",
      "path": "34",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2220": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "2221": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "LOG3",
      "path": "34"
    },
    "2222": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2113
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 35,
      "value": "0x0"
    },
    "2224": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "DUP1",
      "path": "34"
    },
    "2225": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2232": {
      "op": "SHL"
    },
    "2233": {
      "op": "SUB"
    },
    "2234": {
      "op": "NOT"
    },
    "2235": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "AND",
      "path": "34"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2242": {
      "op": "SHL"
    },
    "2243": {
      "op": "SUB"
    },
    "2244": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "2245": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "2246": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "2247": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "AND",
      "path": "34"
    },
    "2248": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "2249": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "2250": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "2251": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "OR",
      "path": "34"
    },
    "2252": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "2253": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SSTORE",
      "path": "34"
    },
    "2254": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        1948,
        2131
      ],
      "op": "JUMP",
      "path": "34"
    },
    "2255": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2594,
        3493
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2256": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2875,
        2879
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2258": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2869,
        2880
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2259": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2893,
        2925
      ],
      "op": "DUP5",
      "path": "26"
    },
    "2260": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2893,
        2925
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2261": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2893,
        2925
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2262": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2941,
        2966
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2263": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2941,
        2966
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2264": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2938,
        3043
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x8E2"
    },
    "2267": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2938,
        3043
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2268": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3018,
        3028
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2269": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3011,
        3015
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2271": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2996,
        3009
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2272": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2992,
        3016
      ],
      "op": "ADD",
      "path": "26"
    },
    "2273": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2985,
        3029
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2274": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2938,
        3043
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2275": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3082,
        3083
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "2277": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3062,
        3080
      ],
      "op": "DUP5",
      "path": "26"
    },
    "2278": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3059,
        3084
      ],
      "op": "GT",
      "path": "26"
    },
    "2279": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3056,
        3161
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2280": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3056,
        3161
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x8F2"
    },
    "2283": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3056,
        3161
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2284": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3136,
        3146
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2285": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3129,
        3133
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x24"
    },
    "2287": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3114,
        3127
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2288": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3110,
        3134
      ],
      "op": "ADD",
      "path": "26"
    },
    "2289": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3103,
        3147
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2290": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3056,
        3161
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2291": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3270,
        3271
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2293": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3267,
        3268
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2294": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3245,
        3263
      ],
      "op": "DUP6",
      "path": "26"
    },
    "2295": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3239,
        3243
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2297": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3235,
        3264
      ],
      "op": "MUL",
      "path": "26"
    },
    "2298": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3229,
        3233
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2300": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3225,
        3265
      ],
      "op": "ADD",
      "path": "26"
    },
    "2301": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3210,
        3223
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2302": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3201,
        3208
      ],
      "op": "DUP10",
      "path": "26"
    },
    "2303": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3194,
        3199
      ],
      "op": "GAS",
      "path": "26"
    },
    "2304": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3181,
        3272
      ],
      "op": "DELEGATECALL",
      "path": "26"
    },
    "2305": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3289,
        3360
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2306": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3289,
        3360
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2307": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3289,
        3360
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x910"
    },
    "2310": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3289,
        3360
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2311": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3442,
        3458
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2312": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3437,
        3440
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2314": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3422,
        3435
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2315": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3407,
        3459
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "2316": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3174,
        3477
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x915"
    },
    "2319": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3174,
        3477
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2320": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3289,
        3360
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2321": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3340,
        3341
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2323": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3325,
        3338
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2324": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3318,
        3342
      ],
      "op": "REVERT",
      "path": "26"
    },
    "2325": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3174,
        3477
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2326": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        3174,
        3477
      ],
      "op": "POP",
      "path": "26"
    },
    "2327": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2594,
        3493
      ],
      "op": "SWAP6",
      "path": "26"
    },
    "2328": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2594,
        3493
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "2329": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2594,
        3493
      ],
      "op": "POP",
      "path": "26"
    },
    "2330": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2594,
        3493
      ],
      "op": "POP",
      "path": "26"
    },
    "2331": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2594,
        3493
      ],
      "op": "POP",
      "path": "26"
    },
    "2332": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2594,
        3493
      ],
      "op": "POP",
      "path": "26"
    },
    "2333": {
      "fn": "Upgradeable.delegateGetData",
      "offset": [
        2594,
        3493
      ],
      "op": "POP",
      "path": "26"
    },
    "2334": {
      "fn": "Upgradeable.delegateGetData",
      "jump": "o",
      "offset": [
        2594,
        3493
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2335": {
      "op": "JUMPDEST"
    },
    "2336": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2343": {
      "op": "SHL"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2346": {
      "op": "MSTORE"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2351": {
      "op": "MSTORE"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2356": {
      "op": "REVERT"
    },
    "2357": {
      "op": "JUMPDEST"
    },
    "2358": {
      "op": "DUP2"
    },
    "2359": {
      "op": "DUP4"
    },
    "2360": {
      "op": "DUP3"
    },
    "2361": {
      "op": "CALLDATACOPY"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2364": {
      "op": "SWAP2"
    },
    "2365": {
      "op": "ADD"
    },
    "2366": {
      "op": "SWAP1"
    },
    "2367": {
      "op": "DUP2"
    },
    "2368": {
      "op": "MSTORE"
    },
    "2369": {
      "op": "SWAP2"
    },
    "2370": {
      "op": "SWAP1"
    },
    "2371": {
      "op": "POP"
    },
    "2372": {
      "jump": "o",
      "op": "JUMP"
    },
    "2373": {
      "op": "JUMPDEST"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2378": {
      "op": "DUP3"
    },
    "2379": {
      "op": "DUP5"
    },
    "2380": {
      "op": "SUB"
    },
    "2381": {
      "op": "SLT"
    },
    "2382": {
      "op": "ISZERO"
    },
    "2383": {
      "op": "PUSH2",
      "value": "0x957"
    },
    "2386": {
      "op": "JUMPI"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2389": {
      "op": "DUP1"
    },
    "2390": {
      "op": "REVERT"
    },
    "2391": {
      "op": "JUMPDEST"
    },
    "2392": {
      "op": "DUP2"
    },
    "2393": {
      "op": "CALLDATALOAD"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2400": {
      "op": "SHL"
    },
    "2401": {
      "op": "SUB"
    },
    "2402": {
      "op": "DUP2"
    },
    "2403": {
      "op": "AND"
    },
    "2404": {
      "op": "DUP2"
    },
    "2405": {
      "op": "EQ"
    },
    "2406": {
      "op": "PUSH2",
      "value": "0x96E"
    },
    "2409": {
      "op": "JUMPI"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2412": {
      "op": "DUP1"
    },
    "2413": {
      "op": "REVERT"
    },
    "2414": {
      "op": "JUMPDEST"
    },
    "2415": {
      "op": "SWAP4"
    },
    "2416": {
      "op": "SWAP3"
    },
    "2417": {
      "op": "POP"
    },
    "2418": {
      "op": "POP"
    },
    "2419": {
      "op": "POP"
    },
    "2420": {
      "jump": "o",
      "op": "JUMP"
    },
    "2421": {
      "op": "JUMPDEST"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2424": {
      "op": "DUP3"
    },
    "2425": {
      "op": "MLOAD"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2428": {
      "op": "JUMPDEST"
    },
    "2429": {
      "op": "DUP2"
    },
    "2430": {
      "op": "DUP2"
    },
    "2431": {
      "op": "LT"
    },
    "2432": {
      "op": "ISZERO"
    },
    "2433": {
      "op": "PUSH2",
      "value": "0x996"
    },
    "2436": {
      "op": "JUMPI"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2439": {
      "op": "DUP2"
    },
    "2440": {
      "op": "DUP7"
    },
    "2441": {
      "op": "ADD"
    },
    "2442": {
      "op": "DUP2"
    },
    "2443": {
      "op": "ADD"
    },
    "2444": {
      "op": "MLOAD"
    },
    "2445": {
      "op": "DUP6"
    },
    "2446": {
      "op": "DUP4"
    },
    "2447": {
      "op": "ADD"
    },
    "2448": {
      "op": "MSTORE"
    },
    "2449": {
      "op": "ADD"
    },
    "2450": {
      "op": "PUSH2",
      "value": "0x97C"
    },
    "2453": {
      "op": "JUMP"
    },
    "2454": {
      "op": "JUMPDEST"
    },
    "2455": {
      "op": "DUP2"
    },
    "2456": {
      "op": "DUP2"
    },
    "2457": {
      "op": "GT"
    },
    "2458": {
      "op": "ISZERO"
    },
    "2459": {
      "op": "PUSH2",
      "value": "0x9A5"
    },
    "2462": {
      "op": "JUMPI"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2465": {
      "op": "DUP3"
    },
    "2466": {
      "op": "DUP6"
    },
    "2467": {
      "op": "ADD"
    },
    "2468": {
      "op": "MSTORE"
    },
    "2469": {
      "op": "JUMPDEST"
    },
    "2470": {
      "op": "POP"
    },
    "2471": {
      "op": "SWAP2"
    },
    "2472": {
      "op": "SWAP1"
    },
    "2473": {
      "op": "SWAP2"
    },
    "2474": {
      "op": "ADD"
    },
    "2475": {
      "op": "SWAP3"
    },
    "2476": {
      "op": "SWAP2"
    },
    "2477": {
      "op": "POP"
    },
    "2478": {
      "op": "POP"
    },
    "2479": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "b9ba00d85c9895121cce92d683d8712003755a10",
  "source": "// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.8.0;\n\n\nimport \"./Upgradeable.sol\";\nimport \"../../zeppelin/utils/Address.sol\";\n\n\n/**\n* @notice ERC897 - ERC DelegateProxy\n*/\ninterface ERCProxy {\n    function proxyType() external pure returns (uint256);\n    function implementation() external view returns (address);\n}\n\n\n/**\n* @notice Proxying requests to other contracts.\n* Client should use ABI of real contract and address of this contract\n*/\ncontract Dispatcher is Upgradeable, ERCProxy {\n    using Address for address;\n\n    event Upgraded(address indexed from, address indexed to, address owner);\n    event RolledBack(address indexed from, address indexed to, address owner);\n\n    /**\n    * @dev Set upgrading status before and after operations\n    */\n    modifier upgrading()\n    {\n        isUpgrade = UPGRADE_TRUE;\n        _;\n        isUpgrade = UPGRADE_FALSE;\n    }\n\n    /**\n    * @param _target Target contract address\n    */\n    constructor(address _target) upgrading {\n        require(_target.isContract());\n        // Checks that target contract inherits Dispatcher state\n        verifyState(_target);\n        // `verifyState` must work with its contract\n        verifyUpgradeableState(_target, _target);\n        target = _target;\n        finishUpgrade();\n        emit Upgraded(address(0), _target, msg.sender);\n    }\n\n    //------------------------ERC897------------------------\n    /**\n     * @notice ERC897, whether it is a forwarding (1) or an upgradeable (2) proxy\n     */\n    function proxyType() external pure override returns (uint256) {\n        return 2;\n    }\n\n    /**\n     * @notice ERC897, gets the address of the implementation where every call will be delegated\n     */\n    function implementation() external view override returns (address) {\n        return target;\n    }\n    //------------------------------------------------------------\n\n    /**\n    * @notice Verify new contract storage and upgrade target\n    * @param _target New target contract address\n    */\n    function upgrade(address _target) public onlyOwner upgrading {\n        require(_target.isContract());\n        // Checks that target contract has \"correct\" (as much as possible) state layout\n        verifyState(_target);\n        //`verifyState` must work with its contract\n        verifyUpgradeableState(_target, _target);\n        if (target.isContract()) {\n            verifyUpgradeableState(target, _target);\n        }\n        previousTarget = target;\n        target = _target;\n        finishUpgrade();\n        emit Upgraded(previousTarget, _target, msg.sender);\n    }\n\n    /**\n    * @notice Rollback to previous target\n    * @dev Test storage carefully before upgrade again after rollback\n    */\n    function rollback() public onlyOwner upgrading {\n        require(previousTarget.isContract());\n        emit RolledBack(target, previousTarget, msg.sender);\n        // should be always true because layout previousTarget -> target was already checked\n        // but `verifyState` is not 100% accurate so check again\n        verifyState(previousTarget);\n        if (target.isContract()) {\n            verifyUpgradeableState(previousTarget, target);\n        }\n        target = previousTarget;\n        previousTarget = address(0);\n        finishUpgrade();\n    }\n\n    /**\n    * @dev Call verifyState method for Upgradeable contract\n    */\n    function verifyUpgradeableState(address _from, address _to) private {\n        (bool callSuccess,) = _from.delegatecall(abi.encodeWithSelector(this.verifyState.selector, _to));\n        require(callSuccess);\n    }\n\n    /**\n    * @dev Call finishUpgrade method from the Upgradeable contract\n    */\n    function finishUpgrade() private {\n        (bool callSuccess,) = target.delegatecall(abi.encodeWithSelector(this.finishUpgrade.selector, target));\n        require(callSuccess);\n    }\n\n    function verifyState(address _testTarget) public override onlyWhileUpgrading {\n        //checks equivalence accessing state through new contract and current storage\n        require(address(uint160(delegateGet(_testTarget, this.owner.selector))) == owner());\n        require(address(uint160(delegateGet(_testTarget, this.target.selector))) == target);\n        require(address(uint160(delegateGet(_testTarget, this.previousTarget.selector))) == previousTarget);\n        require(uint8(delegateGet(_testTarget, this.isUpgrade.selector)) == isUpgrade);\n    }\n\n    /**\n    * @dev Override function using empty code because no reason to call this function in Dispatcher\n    */\n    function finishUpgrade(address) public override {}\n\n    /**\n    * @dev Receive function sends empty request to the target contract\n    */\n    receive() external payable {\n        assert(target.isContract());\n        // execute receive function from target contract using storage of the dispatcher\n        (bool callSuccess,) = target.delegatecall(\"\");\n        if (!callSuccess) {\n            revert();\n        }\n    }\n\n    /**\n    * @dev Fallback function sends all requests to the target contract\n    */\n    fallback() external payable {\n        assert(target.isContract());\n        // execute requested function from target contract using storage of the dispatcher\n        (bool callSuccess,) = target.delegatecall(msg.data);\n        if (callSuccess) {\n            // copy result of the request to the return data\n            // we can use the second return value from `delegatecall` (bytes memory)\n            // but it will consume a little more gas\n            assembly {\n                returndatacopy(0x0, 0x0, returndatasize())\n                return(0x0, returndatasize())\n            }\n        } else {\n            revert();\n        }\n    }\n\n}\n",
  "sourceMap": "461:5202:25:-:0;;;954:390;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;549:6:34;:19;;-1:-1:-1;;;;;;549:19:34;558:10;549:19;;;;;583:40;;558:10;;549:6;583:40;;549:6;;583:40;1451:1:26;811:24:25;;-1:-1:-1;;;;811:24:25;-1:-1:-1;;;811:24:25;;;1011:20:::1;-1:-1:-1::0;;;;;1011:18:25;::::1;;;::::0;;::::1;;;:20:::0;::::1;:::i;:::-;1003:29;;;::::0;::::1;;1107:20;1119:7:::0;1107:11:::1;:20::i;:::-;1190:40;1213:7:::0;;1190:22:::1;:40::i;:::-;1240:6;:16:::0;;-1:-1:-1;;;;;;1240:16:25::1;-1:-1:-1::0;;;;;1240:16:25;::::1;;::::0;;1266:15:::1;:13;:15::i;:::-;1296:41;::::0;1326:10:::1;455:51:41::0;;-1:-1:-1;;;;;1296:41:25;::::1;::::0;1313:1:::1;::::0;1296:41:::1;::::0;443:2:41;428:18;1296:41:25::1;;;;;;;-1:-1:-1::0;856:9:25;:25;;-1:-1:-1;;;;856:25:25;-1:-1:-1;;;856:25:25;;;461:5202;;771:377:40;1087:20;1133:8;;;771:377::o;3836:553:25:-;1451:1:26;1653:9;;-1:-1:-1;;;1653:9:26;;:25;:9;:25;1645:34;;;;;;731:7:34;757:6;-1:-1:-1;;;;;757:6:34;4033:45:25::1;4045:11:::0;-1:-1:-1;;;4033:11:25::1;:45::i;:::-;-1:-1:-1::0;;;;;4017:74:25::1;;4009:83;;;::::0;::::1;;4178:6;::::0;-1:-1:-1;;;;;4178:6:25::1;4126:46;4138:11:::0;-1:-1:-1;;;4126:11:25::1;:46::i;:::-;-1:-1:-1::0;;;;;4110:74:25::1;;4102:83;;;::::0;::::1;;4279:14;::::0;-1:-1:-1;;;;;4279:14:25::1;4219:54;4231:11:::0;-1:-1:-1;;;4219:11:25::1;:54::i;:::-;-1:-1:-1::0;;;;;4203:90:25::1;;4195:99;;;::::0;::::1;;4372:9;::::0;-1:-1:-1;;;4372:9:25;::::1;;;4318:49;4330:11:::0;-1:-1:-1;;;4318:11:25::1;:49::i;:::-;4312:69;;;4304:78;;;::::0;::::1;;3836:553:::0;:::o;3349:211::-;3468:54;;;-1:-1:-1;;;;;473:32:41;;;3468:54:25;;;;455:51:41;;;;3468:54:25;;;;;;;;;;428:18:41;;;;3468:54:25;;;;;;;-1:-1:-1;;;;;3468:54:25;-1:-1:-1;;;3468:54:25;;;3449:74;;3428:16;;3449:18;;;:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3427:96;;;3541:11;3533:20;;;;;;3417:143;3349:211;;:::o;3648:182::-;3713:6;;3733:59;;;-1:-1:-1;;;;;3713:6:25;;;3733:59;;;;455:51:41;;;3733:59:25;;;;;;;;;;428:18:41;;;;3733:59:25;;;;;;;-1:-1:-1;;;;;3733:59:25;-1:-1:-1;;;3733:59:25;;;3713:80;;3692:16;;3713:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3691:102;;;3811:11;3803:20;;;;;3599:259:26;3681:14;;3735:44;3751:7;3760:9;3681:14;;;3735:15;:44::i;:::-;3822:20;;3599:259;-1:-1:-1;;;;3599:259:26:o;2594:899::-;2875:4;2869:11;2893:32;;;2941:25;;2938:105;;3018:10;3011:4;2996:13;2992:24;2985:44;2938:105;3082:1;3062:18;3059:25;3056:105;;;3136:10;3129:4;3114:13;3110:24;3103:44;3056:105;3270:1;3267;3245:18;3239:4;3235:29;3229:4;3225:40;3210:13;3201:7;3194:5;3181:91;3289:71;;;;3442:16;3437:3;3422:13;3407:52;3174:303;;3289:71;3340:1;3325:13;3318:24;3174:303;;2594:899;;;;;;;:::o;14:290:41:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:41;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:41:o;517:426::-;646:3;684:6;678:13;709:1;719:129;733:6;730:1;727:13;719:129;;;831:4;815:14;;;811:25;;805:32;792:11;;;785:53;748:12;719:129;;;866:6;863:1;860:13;857:48;;;901:1;892:6;887:3;883:16;876:27;857:48;-1:-1:-1;921:16:41;;;;;517:426;-1:-1:-1;;517:426:41:o;:::-;461:5202:25;;;;;;",
  "sourcePath": "contracts/contracts/proxy/Dispatcher.sol",
  "type": "contract"
}