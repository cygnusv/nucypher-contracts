{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "36": "contracts/zeppelin/token/ERC20/ERC20.sol",
    "38": "contracts/zeppelin/token/ERC20/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/zeppelin/token/ERC20/ERC20.sol",
    "exportedSymbols": {
      "ERC20": [
        14103
      ],
      "IERC20": [
        14235
      ]
    },
    "id": 14104,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13714,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:36"
      },
      {
        "absolutePath": "contracts/zeppelin/token/ERC20/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 13715,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14104,
        "sourceUnit": 14236,
        "src": "59:22:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13717,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14235,
              "src": "668:6:36"
            },
            "id": 13718,
            "nodeType": "InheritanceSpecifier",
            "src": "668:6:36"
          }
        ],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 13716,
          "nodeType": "StructuredDocumentation",
          "src": "84:565:36",
          "text": " @title Standard ERC20 token\n @dev Implementation of the basic standard token.\n https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\n Originally based on code by FirstBlood:\n https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for\n all accounts just by listening to said events. Note that this isn't required by the specification, and other\n compliant implementations may not do it."
        },
        "fullyImplemented": true,
        "id": 14103,
        "linearizedBaseContracts": [
          14103,
          14235
        ],
        "name": "ERC20",
        "nameLocation": "659:5:36",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 13722,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "719:9:36",
            "nodeType": "VariableDeclaration",
            "scope": 14103,
            "src": "682:46:36",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 13721,
              "keyType": {
                "id": 13719,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "691:7:36",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "682:28:36",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 13720,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "702:7:36",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13728,
            "mutability": "mutable",
            "name": "_allowed",
            "nameLocation": "793:8:36",
            "nodeType": "VariableDeclaration",
            "scope": 14103,
            "src": "735:66:36",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 13727,
              "keyType": {
                "id": 13723,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "744:7:36",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "735:49:36",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 13726,
                "keyType": {
                  "id": 13724,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "764:7:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "755:28:36",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 13725,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "775:7:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13730,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "824:12:36",
            "nodeType": "VariableDeclaration",
            "scope": 14103,
            "src": "808:28:36",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13729,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "808:7:36",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              14202
            ],
            "body": {
              "id": 13739,
              "nodeType": "Block",
              "src": "969:36:36",
              "statements": [
                {
                  "expression": {
                    "id": 13737,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13730,
                    "src": "986:12:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13736,
                  "id": 13738,
                  "nodeType": "Return",
                  "src": "979:19:36"
                }
              ]
            },
            "documentation": {
              "id": 13731,
              "nodeType": "StructuredDocumentation",
              "src": "843:59:36",
              "text": " @dev Total number of tokens in existence"
            },
            "functionSelector": "18160ddd",
            "id": 13740,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "916:11:36",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13733,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "942:8:36"
            },
            "parameters": {
              "id": 13732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "927:2:36"
            },
            "returnParameters": {
              "id": 13736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13735,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13740,
                  "src": "960:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13734,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "960:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "959:9:36"
            },
            "scope": 14103,
            "src": "907:98:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14209
            ],
            "body": {
              "id": 13753,
              "nodeType": "Block",
              "src": "1291:40:36",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 13749,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13722,
                      "src": "1308:9:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 13751,
                    "indexExpression": {
                      "id": 13750,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13743,
                      "src": "1318:5:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1308:16:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13748,
                  "id": 13752,
                  "nodeType": "Return",
                  "src": "1301:23:36"
                }
              ]
            },
            "documentation": {
              "id": 13741,
              "nodeType": "StructuredDocumentation",
              "src": "1011:202:36",
              "text": " @dev Gets the balance of the specified address.\n @param owner The address to query the balance of.\n @return An uint256 representing the amount owned by the passed address."
            },
            "functionSelector": "70a08231",
            "id": 13754,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1227:9:36",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13745,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1264:8:36"
            },
            "parameters": {
              "id": 13744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13743,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1245:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 13754,
                  "src": "1237:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1237:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1236:15:36"
            },
            "returnParameters": {
              "id": 13748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13747,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13754,
                  "src": "1282:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1282:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1281:9:36"
            },
            "scope": 14103,
            "src": "1218:113:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14218
            ],
            "body": {
              "id": 13771,
              "nodeType": "Block",
              "src": "1752:48:36",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 13765,
                        "name": "_allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13728,
                        "src": "1769:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 13767,
                      "indexExpression": {
                        "id": 13766,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13757,
                        "src": "1778:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1769:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 13769,
                    "indexExpression": {
                      "id": 13768,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13759,
                      "src": "1785:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1769:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13764,
                  "id": 13770,
                  "nodeType": "Return",
                  "src": "1762:31:36"
                }
              ]
            },
            "documentation": {
              "id": 13755,
              "nodeType": "StructuredDocumentation",
              "src": "1337:320:36",
              "text": " @dev Function to check the amount of tokens that an owner allowed to a spender.\n @param owner address The address which owns the funds.\n @param spender address The address which will spend the funds.\n @return A uint256 specifying the amount of tokens still available for the spender."
            },
            "functionSelector": "dd62ed3e",
            "id": 13772,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "1671:9:36",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13761,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1725:8:36"
            },
            "parameters": {
              "id": 13760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13757,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1689:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 13772,
                  "src": "1681:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1681:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13759,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1704:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 13772,
                  "src": "1696:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1680:32:36"
            },
            "returnParameters": {
              "id": 13764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13763,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13772,
                  "src": "1743:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1743:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1742:9:36"
            },
            "scope": 14103,
            "src": "1662:138:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14177
            ],
            "body": {
              "id": 13792,
              "nodeType": "Block",
              "src": "2044:70:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13784,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2064:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2064:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13786,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13775,
                        "src": "2076:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13787,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13777,
                        "src": "2080:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13783,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13957,
                      "src": "2054:9:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2054:32:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13789,
                  "nodeType": "ExpressionStatement",
                  "src": "2054:32:36"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 13790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2103:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 13782,
                  "id": 13791,
                  "nodeType": "Return",
                  "src": "2096:11:36"
                }
              ]
            },
            "documentation": {
              "id": 13773,
              "nodeType": "StructuredDocumentation",
              "src": "1806:157:36",
              "text": " @dev Transfer token for a specified address\n @param to The address to transfer to.\n @param value The amount to be transferred."
            },
            "functionSelector": "a9059cbb",
            "id": 13793,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "1977:8:36",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13779,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2020:8:36"
            },
            "parameters": {
              "id": 13778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13775,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1994:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 13793,
                  "src": "1986:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13777,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2006:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 13793,
                  "src": "1998:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1998:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1985:27:36"
            },
            "returnParameters": {
              "id": 13782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13781,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13793,
                  "src": "2038:4:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13780,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2038:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2037:6:36"
            },
            "scope": 14103,
            "src": "1968:146:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14186
            ],
            "body": {
              "id": 13828,
              "nodeType": "Block",
              "src": "2830:447:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 13816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 13805,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13798,
                            "src": "3153:5:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 13806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3162:1:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3153:10:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 13808,
                                "name": "_allowed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13728,
                                "src": "3167:8:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 13811,
                              "indexExpression": {
                                "expression": {
                                  "id": 13809,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3176:3:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 13810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3176:10:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3167:20:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 13813,
                            "indexExpression": {
                              "id": 13812,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13796,
                              "src": "3188:7:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3167:29:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 13814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3200:1:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3167:34:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3153:48:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13804,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3145:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3145:57:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13818,
                  "nodeType": "ExpressionStatement",
                  "src": "3145:57:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13820,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3222:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3222:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13822,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13796,
                        "src": "3234:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13823,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13798,
                        "src": "3243:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13819,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14074,
                      "src": "3213:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3213:36:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13825,
                  "nodeType": "ExpressionStatement",
                  "src": "3213:36:36"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 13826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3266:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 13803,
                  "id": 13827,
                  "nodeType": "Return",
                  "src": "3259:11:36"
                }
              ]
            },
            "documentation": {
              "id": 13794,
              "nodeType": "StructuredDocumentation",
              "src": "2120:625:36",
              "text": " @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n Beware that changing an allowance with this method brings the risk that someone may use both the old\n and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent."
            },
            "functionSelector": "095ea7b3",
            "id": 13829,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "2759:7:36",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13800,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2806:8:36"
            },
            "parameters": {
              "id": 13799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13796,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2775:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 13829,
                  "src": "2767:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2767:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13798,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2792:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 13829,
                  "src": "2784:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2784:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2766:32:36"
            },
            "returnParameters": {
              "id": 13803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13802,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13829,
                  "src": "2824:4:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13801,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2824:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2823:6:36"
            },
            "scope": 14103,
            "src": "2750:527:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14197
            ],
            "body": {
              "id": 13864,
              "nodeType": "Block",
              "src": "3834:136:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13843,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13832,
                        "src": "3854:4:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13844,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13834,
                        "src": "3860:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13845,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13836,
                        "src": "3864:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13842,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13957,
                      "src": "3844:9:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3844:26:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13847,
                  "nodeType": "ExpressionStatement",
                  "src": "3844:26:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13849,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13832,
                        "src": "3889:4:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 13850,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3895:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3895:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 13852,
                              "name": "_allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13728,
                              "src": "3907:8:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 13854,
                            "indexExpression": {
                              "id": 13853,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13832,
                              "src": "3916:4:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3907:14:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 13857,
                          "indexExpression": {
                            "expression": {
                              "id": 13855,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3922:3:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 13856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3922:10:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3907:26:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 13858,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13836,
                          "src": "3936:5:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3907:34:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13848,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14074,
                      "src": "3880:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3880:62:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13861,
                  "nodeType": "ExpressionStatement",
                  "src": "3880:62:36"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 13862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3959:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 13841,
                  "id": 13863,
                  "nodeType": "Return",
                  "src": "3952:11:36"
                }
              ]
            },
            "documentation": {
              "id": 13830,
              "nodeType": "StructuredDocumentation",
              "src": "3283:452:36",
              "text": " @dev Transfer tokens from one address to another.\n Note that while this function emits an Approval event, this is not required as per the specification,\n and other compliant implementations may not emit the event.\n @param from address The address which you want to send tokens from\n @param to address The address which you want to transfer to\n @param value uint256 the amount of tokens to be transferred"
            },
            "functionSelector": "23b872dd",
            "id": 13865,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "3749:12:36",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13838,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3810:8:36"
            },
            "parameters": {
              "id": 13837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13832,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3770:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 13865,
                  "src": "3762:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3762:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13834,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3784:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 13865,
                  "src": "3776:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3776:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13836,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3796:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 13865,
                  "src": "3788:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3788:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3761:41:36"
            },
            "returnParameters": {
              "id": 13841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13840,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13865,
                  "src": "3828:4:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13839,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3828:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3827:6:36"
            },
            "scope": 14103,
            "src": "3740:230:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13891,
              "nodeType": "Block",
              "src": "4559:111:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13876,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4578:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4578:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13878,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13868,
                        "src": "4590:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 13879,
                              "name": "_allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13728,
                              "src": "4599:8:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 13882,
                            "indexExpression": {
                              "expression": {
                                "id": 13880,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4608:3:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 13881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4608:10:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4599:20:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 13884,
                          "indexExpression": {
                            "id": 13883,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13868,
                            "src": "4620:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4599:29:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 13885,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13870,
                          "src": "4631:10:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4599:42:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13875,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14074,
                      "src": "4569:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4569:73:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13888,
                  "nodeType": "ExpressionStatement",
                  "src": "4569:73:36"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 13889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4659:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 13874,
                  "id": 13890,
                  "nodeType": "Return",
                  "src": "4652:11:36"
                }
              ]
            },
            "documentation": {
              "id": 13866,
              "nodeType": "StructuredDocumentation",
              "src": "3976:492:36",
              "text": " @dev Increase the amount of tokens that an owner allowed to a spender.\n approve should be called when allowed_[_spender] == 0. To increment\n allowed value is better to use this function to avoid 2 calls (and wait until\n the first transaction is mined)\n From MonolithDAO Token.sol\n Emits an Approval event.\n @param spender The address which will spend the funds.\n @param addedValue The amount of tokens to increase the allowance by."
            },
            "functionSelector": "39509351",
            "id": 13892,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "4482:17:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13868,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4508:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 13892,
                  "src": "4500:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4500:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13870,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "4525:10:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 13892,
                  "src": "4517:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4517:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4499:37:36"
            },
            "returnParameters": {
              "id": 13874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13873,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13892,
                  "src": "4553:4:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13872,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4553:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4552:6:36"
            },
            "scope": 14103,
            "src": "4473:197:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13918,
              "nodeType": "Block",
              "src": "5269:116:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13903,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5288:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5288:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13905,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13895,
                        "src": "5300:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 13906,
                              "name": "_allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13728,
                              "src": "5309:8:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 13909,
                            "indexExpression": {
                              "expression": {
                                "id": 13907,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5318:3:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 13908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5318:10:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5309:20:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 13911,
                          "indexExpression": {
                            "id": 13910,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13895,
                            "src": "5330:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5309:29:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 13912,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13897,
                          "src": "5341:15:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5309:47:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13902,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14074,
                      "src": "5279:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5279:78:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13915,
                  "nodeType": "ExpressionStatement",
                  "src": "5279:78:36"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 13916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5374:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 13901,
                  "id": 13917,
                  "nodeType": "Return",
                  "src": "5367:11:36"
                }
              ]
            },
            "documentation": {
              "id": 13893,
              "nodeType": "StructuredDocumentation",
              "src": "4676:497:36",
              "text": " @dev Decrease the amount of tokens that an owner allowed to a spender.\n approve should be called when allowed_[_spender] == 0. To decrement\n allowed value is better to use this function to avoid 2 calls (and wait until\n the first transaction is mined)\n From MonolithDAO Token.sol\n Emits an Approval event.\n @param spender The address which will spend the funds.\n @param subtractedValue The amount of tokens to decrease the allowance by."
            },
            "functionSelector": "a457c2d7",
            "id": 13919,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "5187:17:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13895,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5213:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 13919,
                  "src": "5205:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5205:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13897,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "5230:15:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 13919,
                  "src": "5222:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5222:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5204:42:36"
            },
            "returnParameters": {
              "id": 13901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13900,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13919,
                  "src": "5263:4:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13899,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5263:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5262:6:36"
            },
            "scope": 14103,
            "src": "5178:207:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13956,
              "nodeType": "Block",
              "src": "5673:149:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13930,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13924,
                          "src": "5691:2:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 13933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5705:1:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13932,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5697:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13931,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5697:7:36",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5697:10:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5691:16:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13929,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5683:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5683:25:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13937,
                  "nodeType": "ExpressionStatement",
                  "src": "5683:25:36"
                },
                {
                  "expression": {
                    "id": 13942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13938,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13722,
                        "src": "5719:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 13940,
                      "indexExpression": {
                        "id": 13939,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13922,
                        "src": "5729:4:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5719:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 13941,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13926,
                      "src": "5738:5:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5719:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13943,
                  "nodeType": "ExpressionStatement",
                  "src": "5719:24:36"
                },
                {
                  "expression": {
                    "id": 13948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13944,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13722,
                        "src": "5753:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 13946,
                      "indexExpression": {
                        "id": 13945,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13924,
                        "src": "5763:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5753:13:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 13947,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13926,
                      "src": "5770:5:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5753:22:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13949,
                  "nodeType": "ExpressionStatement",
                  "src": "5753:22:36"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 13951,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13922,
                        "src": "5799:4:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13952,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13924,
                        "src": "5805:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13953,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13926,
                        "src": "5809:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13950,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14226,
                      "src": "5790:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5790:25:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13955,
                  "nodeType": "EmitStatement",
                  "src": "5785:30:36"
                }
              ]
            },
            "documentation": {
              "id": 13920,
              "nodeType": "StructuredDocumentation",
              "src": "5391:208:36",
              "text": " @dev Transfer token for a specified addresses\n @param from The address to transfer from.\n @param to The address to transfer to.\n @param value The amount to be transferred."
            },
            "id": 13957,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "5613:9:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13922,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5631:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 13957,
                  "src": "5623:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5623:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13924,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5645:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 13957,
                  "src": "5637:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5637:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13926,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "5657:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 13957,
                  "src": "5649:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5649:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5622:41:36"
            },
            "returnParameters": {
              "id": 13928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5673:0:36"
            },
            "scope": 14103,
            "src": "5604:218:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 13993,
              "nodeType": "Block",
              "src": "6221:167:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13966,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13960,
                          "src": "6239:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 13969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6258:1:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6250:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13967,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6250:7:36",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6250:10:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6239:21:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13965,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6231:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6231:30:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13973,
                  "nodeType": "ExpressionStatement",
                  "src": "6231:30:36"
                },
                {
                  "expression": {
                    "id": 13976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13974,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13730,
                      "src": "6272:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 13975,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13962,
                      "src": "6288:5:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6272:21:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13977,
                  "nodeType": "ExpressionStatement",
                  "src": "6272:21:36"
                },
                {
                  "expression": {
                    "id": 13982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13978,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13722,
                        "src": "6303:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 13980,
                      "indexExpression": {
                        "id": 13979,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13960,
                        "src": "6313:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6303:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 13981,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13962,
                      "src": "6325:5:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6303:27:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13983,
                  "nodeType": "ExpressionStatement",
                  "src": "6303:27:36"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 13987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6362:1:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 13986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6354:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13985,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6354:7:36",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6354:10:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13989,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13960,
                        "src": "6366:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13990,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13962,
                        "src": "6375:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13984,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14226,
                      "src": "6345:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6345:36:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13992,
                  "nodeType": "EmitStatement",
                  "src": "6340:41:36"
                }
              ]
            },
            "documentation": {
              "id": 13958,
              "nodeType": "StructuredDocumentation",
              "src": "5828:332:36",
              "text": " @dev Internal function that mints an amount of the token and assigns it to\n an account. This encapsulates the modification of balances such that the\n proper events are emitted.\n @param account The account that will receive the created tokens.\n @param value The amount that will be created."
            },
            "id": 13994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "6174:5:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13960,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6188:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 13994,
                  "src": "6180:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6180:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13962,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "6205:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 13994,
                  "src": "6197:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6197:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6179:32:36"
            },
            "returnParameters": {
              "id": 13964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6221:0:36"
            },
            "scope": 14103,
            "src": "6165:223:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14030,
              "nodeType": "Block",
              "src": "6670:167:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14003,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13997,
                          "src": "6688:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6707:1:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6699:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14004,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6699:7:36",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6699:10:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6688:21:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14002,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6680:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6680:30:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14010,
                  "nodeType": "ExpressionStatement",
                  "src": "6680:30:36"
                },
                {
                  "expression": {
                    "id": 14013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14011,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13730,
                      "src": "6721:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 14012,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13999,
                      "src": "6737:5:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6721:21:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14014,
                  "nodeType": "ExpressionStatement",
                  "src": "6721:21:36"
                },
                {
                  "expression": {
                    "id": 14019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14015,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13722,
                        "src": "6752:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 14017,
                      "indexExpression": {
                        "id": 14016,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13997,
                        "src": "6762:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6752:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 14018,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13999,
                      "src": "6774:5:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6752:27:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14020,
                  "nodeType": "ExpressionStatement",
                  "src": "6752:27:36"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14022,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13997,
                        "src": "6803:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 14025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6820:1:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 14024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6812:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14023,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6812:7:36",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 14026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6812:10:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14027,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13999,
                        "src": "6824:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14021,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14226,
                      "src": "6794:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 14028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6794:36:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14029,
                  "nodeType": "EmitStatement",
                  "src": "6789:41:36"
                }
              ]
            },
            "documentation": {
              "id": 13995,
              "nodeType": "StructuredDocumentation",
              "src": "6394:215:36",
              "text": " @dev Internal function that burns an amount of the token of a given\n account.\n @param account The account whose tokens will be burnt.\n @param value The amount that will be burnt."
            },
            "id": 14031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "6623:5:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13997,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6637:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 14031,
                  "src": "6629:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6629:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13999,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "6654:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 14031,
                  "src": "6646:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6646:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6628:32:36"
            },
            "returnParameters": {
              "id": 14001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6670:0:36"
            },
            "scope": 14103,
            "src": "6614:223:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14073,
              "nodeType": "Block",
              "src": "7176:174:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14042,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14036,
                          "src": "7194:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7213:1:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7205:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14043,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7205:7:36",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7205:10:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7194:21:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14041,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7186:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7186:30:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14049,
                  "nodeType": "ExpressionStatement",
                  "src": "7186:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14051,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14034,
                          "src": "7234:5:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14054,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7251:1:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7243:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14052,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7243:7:36",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7243:10:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7234:19:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14050,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7226:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7226:28:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14058,
                  "nodeType": "ExpressionStatement",
                  "src": "7226:28:36"
                },
                {
                  "expression": {
                    "id": 14065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 14059,
                          "name": "_allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13728,
                          "src": "7265:8:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 14062,
                        "indexExpression": {
                          "id": 14060,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14034,
                          "src": "7274:5:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7265:15:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 14063,
                      "indexExpression": {
                        "id": 14061,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14036,
                        "src": "7281:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7265:24:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14064,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14038,
                      "src": "7292:5:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7265:32:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14066,
                  "nodeType": "ExpressionStatement",
                  "src": "7265:32:36"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14068,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14034,
                        "src": "7321:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14069,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14036,
                        "src": "7328:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14070,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14038,
                        "src": "7337:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14067,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14234,
                      "src": "7312:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 14071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7312:31:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14072,
                  "nodeType": "EmitStatement",
                  "src": "7307:36:36"
                }
              ]
            },
            "documentation": {
              "id": 14032,
              "nodeType": "StructuredDocumentation",
              "src": "6843:254:36",
              "text": " @dev Approve an address to spend another addresses' tokens.\n @param owner The address that owns the tokens.\n @param spender The address that will spend the tokens.\n @param value The number of tokens that can be spent."
            },
            "id": 14074,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "7111:8:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14034,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7128:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 14074,
                  "src": "7120:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7120:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14036,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7143:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 14074,
                  "src": "7135:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7135:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14038,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "7160:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 14074,
                  "src": "7152:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7152:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7119:47:36"
            },
            "returnParameters": {
              "id": 14040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7176:0:36"
            },
            "scope": 14103,
            "src": "7102:248:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14101,
              "nodeType": "Block",
              "src": "7799:116:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14083,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14077,
                        "src": "7815:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14084,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14079,
                        "src": "7824:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14082,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14031,
                      "src": "7809:5:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 14085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7809:21:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14086,
                  "nodeType": "ExpressionStatement",
                  "src": "7809:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14088,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14077,
                        "src": "7849:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 14089,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7858:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 14090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7858:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 14091,
                              "name": "_allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13728,
                              "src": "7870:8:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 14093,
                            "indexExpression": {
                              "id": 14092,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14077,
                              "src": "7879:7:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7870:17:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 14096,
                          "indexExpression": {
                            "expression": {
                              "id": 14094,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7888:3:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 14095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7888:10:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7870:29:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 14097,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14079,
                          "src": "7902:5:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7870:37:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14087,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14074,
                      "src": "7840:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 14099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7840:68:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14100,
                  "nodeType": "ExpressionStatement",
                  "src": "7840:68:36"
                }
              ]
            },
            "documentation": {
              "id": 14075,
              "nodeType": "StructuredDocumentation",
              "src": "7356:378:36",
              "text": " @dev Internal function that burns an amount of the token of a given\n account, deducting from the sender's allowance for said account. Uses the\n internal burn function.\n Emits an Approval event (reflecting the reduced allowance).\n @param account The account whose tokens will be burnt.\n @param value The amount that will be burnt."
            },
            "id": 14102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnFrom",
            "nameLocation": "7748:9:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14077,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7766:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 14102,
                  "src": "7758:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7758:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14079,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "7783:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 14102,
                  "src": "7775:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14078,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7775:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7757:32:36"
            },
            "returnParameters": {
              "id": 14081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7799:0:36"
            },
            "scope": 14103,
            "src": "7739:176:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 14104,
        "src": "650:7268:36",
        "usedErrors": []
      }
    ],
    "src": "33:7886:36"
  },
  "bytecode": "608060405234801561001057600080fd5b5061051d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146100ed578063a457c2d714610116578063a9059cbb14610129578063dd62ed3e1461013c57600080fd5b8063095ea7b31461008d57806318160ddd146100b557806323b872dd146100c757806339509351146100da575b600080fd5b6100a061009b3660046103e7565b610175565b60405190151581526020015b60405180910390f35b6002545b6040519081526020016100ac565b6100a06100d5366004610411565b6101c2565b6100a06100e83660046103e7565b610214565b6100b96100fb36600461044d565b6001600160a01b031660009081526020819052604090205490565b6100a06101243660046103e7565b61024b565b6100a06101373660046103e7565b610282565b6100b961014a36600461046f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60008115806101a557503360009081526001602090815260408083206001600160a01b0387168452909152902054155b6101ae57600080fd5b6101b933848461028f565b50600192915050565b60006101cf848484610317565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461020a9186916102059086906104b8565b61028f565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916101b99185906102059086906104cf565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916101b99185906102059086906104b8565b60006101b9338484610317565b6001600160a01b0382166102a257600080fd5b6001600160a01b0383166102b557600080fd5b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03821661032a57600080fd5b6001600160a01b038316600090815260208190526040812080548392906103529084906104b8565b90915550506001600160a01b0382166000908152602081905260408120805483929061037f9084906104cf565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161030a91815260200190565b80356001600160a01b03811681146103e257600080fd5b919050565b600080604083850312156103fa57600080fd5b610403836103cb565b946020939093013593505050565b60008060006060848603121561042657600080fd5b61042f846103cb565b925061043d602085016103cb565b9150604084013590509250925092565b60006020828403121561045f57600080fd5b610468826103cb565b9392505050565b6000806040838503121561048257600080fd5b61048b836103cb565b9150610499602084016103cb565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b6000828210156104ca576104ca6104a2565b500390565b600082198211156104e2576104e26104a2565b50019056fea2646970667358221220caa4ccc589b7509866d99f1020377e7903c7c64955be5f08184623461660d3e264736f6c634300080a0033",
  "bytecodeSha1": "df95c0564a9f1214e75f10edc15784313a54af4b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "36": {
        "ERC20._approve": {
          "22": [
            7194,
            7215,
            true
          ],
          "23": [
            7234,
            7253,
            true
          ]
        },
        "ERC20._transfer": {
          "24": [
            5691,
            5707,
            true
          ]
        },
        "ERC20.approve": {
          "20": [
            3153,
            3163,
            true
          ],
          "21": [
            3167,
            3201,
            true
          ]
        }
      },
      "38": {}
    },
    "statements": {
      "36": {
        "ERC20._approve": {
          "12": [
            7186,
            7216
          ],
          "13": [
            7226,
            7254
          ],
          "14": [
            7265,
            7297
          ],
          "15": [
            7307,
            7343
          ]
        },
        "ERC20._transfer": {
          "16": [
            5683,
            5708
          ],
          "17": [
            5719,
            5743
          ],
          "18": [
            5753,
            5775
          ],
          "19": [
            5785,
            5815
          ]
        },
        "ERC20.allowance": {
          "2": [
            1762,
            1793
          ]
        },
        "ERC20.approve": {
          "3": [
            3145,
            3202
          ],
          "4": [
            3213,
            3249
          ],
          "5": [
            3259,
            3270
          ]
        },
        "ERC20.balanceOf": {
          "1": [
            1301,
            1324
          ]
        },
        "ERC20.decreaseAllowance": {
          "10": [
            5279,
            5357
          ]
        },
        "ERC20.increaseAllowance": {
          "9": [
            4569,
            4642
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            979,
            998
          ]
        },
        "ERC20.transfer": {
          "11": [
            2054,
            2086
          ]
        },
        "ERC20.transferFrom": {
          "6": [
            3844,
            3870
          ],
          "7": [
            3880,
            3942
          ],
          "8": [
            3952,
            3963
          ]
        }
      },
      "38": {}
    }
  },
  "dependencies": [
    "IERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146100ed578063a457c2d714610116578063a9059cbb14610129578063dd62ed3e1461013c57600080fd5b8063095ea7b31461008d57806318160ddd146100b557806323b872dd146100c757806339509351146100da575b600080fd5b6100a061009b3660046103e7565b610175565b60405190151581526020015b60405180910390f35b6002545b6040519081526020016100ac565b6100a06100d5366004610411565b6101c2565b6100a06100e83660046103e7565b610214565b6100b96100fb36600461044d565b6001600160a01b031660009081526020819052604090205490565b6100a06101243660046103e7565b61024b565b6100a06101373660046103e7565b610282565b6100b961014a36600461046f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60008115806101a557503360009081526001602090815260408083206001600160a01b0387168452909152902054155b6101ae57600080fd5b6101b933848461028f565b50600192915050565b60006101cf848484610317565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461020a9186916102059086906104b8565b61028f565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916101b99185906102059086906104cf565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916101b99185906102059086906104b8565b60006101b9338484610317565b6001600160a01b0382166102a257600080fd5b6001600160a01b0383166102b557600080fd5b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03821661032a57600080fd5b6001600160a01b038316600090815260208190526040812080548392906103529084906104b8565b90915550506001600160a01b0382166000908152602081905260408120805483929061037f9084906104cf565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161030a91815260200190565b80356001600160a01b03811681146103e257600080fd5b919050565b600080604083850312156103fa57600080fd5b610403836103cb565b946020939093013593505050565b60008060006060848603121561042657600080fd5b61042f846103cb565b925061043d602085016103cb565b9150604084013590509250925092565b60006020828403121561045f57600080fd5b610468826103cb565b9392505050565b6000806040838503121561048257600080fd5b61048b836103cb565b9150610499602084016103cb565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b6000828210156104ca576104ca6104a2565b500390565b600082198211156104e2576104e26104a2565b50019056fea2646970667358221220caa4ccc589b7509866d99f1020377e7903c7c64955be5f08184623461660d3e264736f6c634300080a0033",
  "deployedSourceMap": "650:7268:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2750:527;;;;;;:::i;:::-;;:::i;:::-;;;616:14:41;;609:22;591:41;;579:2;564:18;2750:527:36;;;;;;;;907:98;986:12;;907:98;;;789:25:41;;;777:2;762:18;907:98:36;643:177:41;3740:230:36;;;;;;:::i;:::-;;:::i;4473:197::-;;;;;;:::i;:::-;;:::i;1218:113::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1308:16:36;1282:7;1308:16;;;;;;;;;;;;1218:113;5178:207;;;;;;:::i;:::-;;:::i;1968:146::-;;;;;;:::i;:::-;;:::i;1662:138::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1769:15:36;;;1743:7;1769:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1662:138;2750:527;2824:4;3153:10;;;:48;;-1:-1:-1;3176:10:36;3167:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3167:29:36;;;;;;;;;;:34;3153:48;3145:57;;;;;;3213:36;3222:10;3234:7;3243:5;3213:8;:36::i;:::-;-1:-1:-1;3266:4:36;2750:527;;;;:::o;3740:230::-;3828:4;3844:26;3854:4;3860:2;3864:5;3844:9;:26::i;:::-;-1:-1:-1;;;;;3907:14:36;;;;;;:8;:14;;;;;;;;3895:10;3907:26;;;;;;;;;3880:62;;3889:4;;3907:34;;3936:5;;3907:34;:::i;:::-;3880:8;:62::i;:::-;-1:-1:-1;3959:4:36;3740:230;;;;;:::o;4473:197::-;4578:10;4553:4;4599:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4599:29:36;;;;;;;;;;4553:4;;4569:73;;4590:7;;4599:42;;4631:10;;4599:42;:::i;5178:207::-;5288:10;5263:4;5309:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5309:29:36;;;;;;;;;;5263:4;;5279:78;;5300:7;;5309:47;;5341:15;;5309:47;:::i;1968:146::-;2038:4;2054:32;2064:10;2076:2;2080:5;2054:9;:32::i;7102:248::-;-1:-1:-1;;;;;7194:21:36;;7186:30;;;;;;-1:-1:-1;;;;;7234:19:36;;7226:28;;;;;;-1:-1:-1;;;;;7265:15:36;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7312:31;;789:25:41;;;7312:31:36;;762:18:41;7312:31:36;;;;;;;;7102:248;;;:::o;5604:218::-;-1:-1:-1;;;;;5691:16:36;;5683:25;;;;;;-1:-1:-1;;;;;5719:15:36;;:9;:15;;;;;;;;;;:24;;5738:5;;5719:9;:24;;5738:5;;5719:24;:::i;:::-;;;;-1:-1:-1;;;;;;;5753:13:36;;:9;:13;;;;;;;;;;:22;;5770:5;;5753:9;:22;;5770:5;;5753:22;:::i;:::-;;;;;;;;5805:2;-1:-1:-1;;;;;5790:25:36;5799:4;-1:-1:-1;;;;;5790:25:36;;5809:5;5790:25;;;;789::41;;777:2;762:18;;643:177;14:173;82:20;;-1:-1:-1;;;;;131:31:41;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:41:o;825:328::-;902:6;910;918;971:2;959:9;950:7;946:23;942:32;939:52;;;987:1;984;977:12;939:52;1010:29;1029:9;1010:29;:::i;:::-;1000:39;;1058:38;1092:2;1081:9;1077:18;1058:38;:::i;:::-;1048:48;;1143:2;1132:9;1128:18;1115:32;1105:42;;825:328;;;;;:::o;1158:186::-;1217:6;1270:2;1258:9;1249:7;1245:23;1241:32;1238:52;;;1286:1;1283;1276:12;1238:52;1309:29;1328:9;1309:29;:::i;:::-;1299:39;1158:186;-1:-1:-1;;;1158:186:41:o;1349:260::-;1417:6;1425;1478:2;1466:9;1457:7;1453:23;1449:32;1446:52;;;1494:1;1491;1484:12;1446:52;1517:29;1536:9;1517:29;:::i;:::-;1507:39;;1565:38;1599:2;1588:9;1584:18;1565:38;:::i;:::-;1555:48;;1349:260;;;;;:::o;1614:127::-;1675:10;1670:3;1666:20;1663:1;1656:31;1706:4;1703:1;1696:15;1730:4;1727:1;1720:15;1746:125;1786:4;1814:1;1811;1808:8;1805:34;;;1819:18;;:::i;:::-;-1:-1:-1;1856:9:41;;1746:125::o;1876:128::-;1916:3;1947:1;1943:6;1940:1;1937:13;1934:39;;;1953:18;;:::i;:::-;-1:-1:-1;1989:9:41;;1876:128::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the basic standard token. https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md Originally based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for all accounts just by listening to said events. Note that this isn't required by the specification, and other compliant implementations may not do it.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "returns": {
          "_0": "A uint256 specifying the amount of tokens still available for the spender."
        }
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "returns": {
          "_0": "An uint256 representing the amount owned by the passed address."
        }
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    },
    "title": "Standard ERC20 token",
    "version": 1
  },
  "offset": [
    650,
    7918
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0xDA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST PUSH2 0xA0 PUSH2 0xD5 CALLDATASIZE PUSH1 0x4 PUSH2 0x411 JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0xE8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x214 JUMP JUMPDEST PUSH2 0xB9 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x44D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x282 JUMP JUMPDEST PUSH2 0xB9 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x1A5 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO JUMPDEST PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B9 CALLER DUP5 DUP5 PUSH2 0x28F JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF DUP5 DUP5 DUP5 PUSH2 0x317 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x20A SWAP2 DUP7 SWAP2 PUSH2 0x205 SWAP1 DUP7 SWAP1 PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x28F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x1B9 SWAP2 DUP6 SWAP1 PUSH2 0x205 SWAP1 DUP7 SWAP1 PUSH2 0x4CF JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x1B9 SWAP2 DUP6 SWAP1 PUSH2 0x205 SWAP1 DUP7 SWAP1 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B9 CALLER DUP5 DUP5 PUSH2 0x317 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x352 SWAP1 DUP5 SWAP1 PUSH2 0x4B8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x37F SWAP1 DUP5 SWAP1 PUSH2 0x4CF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x403 DUP4 PUSH2 0x3CB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x42F DUP5 PUSH2 0x3CB JUMP JUMPDEST SWAP3 POP PUSH2 0x43D PUSH1 0x20 DUP6 ADD PUSH2 0x3CB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x468 DUP3 PUSH2 0x3CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48B DUP4 PUSH2 0x3CB JUMP JUMPDEST SWAP2 POP PUSH2 0x499 PUSH1 0x20 DUP5 ADD PUSH2 0x3CB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4CA JUMPI PUSH2 0x4CA PUSH2 0x4A2 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4E2 JUMPI PUSH2 0x4E2 PUSH2 0x4A2 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA LOG4 0xCC 0xC5 DUP10 0xB7 POP SWAP9 PUSH7 0xD99F1020377E79 SUB 0xC7 0xC6 0x49 SSTORE 0xBE 0x5F ADDMOD XOR CHAINID 0x23 CHAINID AND PUSH1 0xD3 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        650,
        7918
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "5": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "CALLVALUE",
      "path": "36"
    },
    "6": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "DUP1",
      "path": "36"
    },
    "7": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "8": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "12": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "DUP1",
      "path": "36"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "REVERT",
      "path": "36"
    },
    "16": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "17": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "POP",
      "path": "36"
    },
    "18": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "21": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "LT",
      "path": "36"
    },
    "22": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x88"
    },
    "25": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "26": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "CALLDATALOAD",
      "path": "36"
    },
    "29": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "SHR",
      "path": "36"
    },
    "32": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "DUP1",
      "path": "36"
    },
    "33": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH4",
      "path": "36",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "GT",
      "path": "36"
    },
    "39": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "43": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "DUP1",
      "path": "36"
    },
    "44": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH4",
      "path": "36",
      "value": "0x70A08231"
    },
    "49": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "EQ",
      "path": "36"
    },
    "50": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xED"
    },
    "53": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "54": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "DUP1",
      "path": "36"
    },
    "55": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH4",
      "path": "36",
      "value": "0xA457C2D7"
    },
    "60": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "EQ",
      "path": "36"
    },
    "61": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x116"
    },
    "64": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "65": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "DUP1",
      "path": "36"
    },
    "66": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH4",
      "path": "36",
      "value": "0xA9059CBB"
    },
    "71": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "EQ",
      "path": "36"
    },
    "72": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x129"
    },
    "75": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "76": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "DUP1",
      "path": "36"
    },
    "77": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH4",
      "path": "36",
      "value": "0xDD62ED3E"
    },
    "82": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "EQ",
      "path": "36"
    },
    "83": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x13C"
    },
    "86": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "87": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "DUP1",
      "path": "36"
    },
    "90": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "REVERT",
      "path": "36"
    },
    "91": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "92": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "DUP1",
      "path": "36"
    },
    "93": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH4",
      "path": "36",
      "value": "0x95EA7B3"
    },
    "98": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "EQ",
      "path": "36"
    },
    "99": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x8D"
    },
    "102": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "103": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "DUP1",
      "path": "36"
    },
    "104": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH4",
      "path": "36",
      "value": "0x18160DDD"
    },
    "109": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "EQ",
      "path": "36"
    },
    "110": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xB5"
    },
    "113": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "114": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "DUP1",
      "path": "36"
    },
    "115": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH4",
      "path": "36",
      "value": "0x23B872DD"
    },
    "120": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "EQ",
      "path": "36"
    },
    "121": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xC7"
    },
    "124": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "125": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "DUP1",
      "path": "36"
    },
    "126": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH4",
      "path": "36",
      "value": "0x39509351"
    },
    "131": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "EQ",
      "path": "36"
    },
    "132": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xDA"
    },
    "135": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "136": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "137": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "139": {
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "DUP1",
      "path": "36"
    },
    "140": {
      "first_revert": true,
      "fn": null,
      "offset": [
        650,
        7918
      ],
      "op": "REVERT",
      "path": "36"
    },
    "141": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "142": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xA0"
    },
    "145": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x9B"
    },
    "148": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "149": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "151": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x3E7"
    },
    "154": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2750,
        3277
      ],
      "op": "JUMP",
      "path": "36"
    },
    "155": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "156": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x175"
    },
    "159": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2750,
        3277
      ],
      "op": "JUMP",
      "path": "36"
    },
    "160": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "161": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "163": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "164": {
      "op": "SWAP1"
    },
    "165": {
      "op": "ISZERO"
    },
    "166": {
      "op": "ISZERO"
    },
    "167": {
      "op": "DUP2"
    },
    "168": {
      "op": "MSTORE"
    },
    "169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "171": {
      "op": "ADD"
    },
    "172": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "173": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "175": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "176": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "DUP1",
      "path": "36"
    },
    "177": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "178": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "SUB",
      "path": "36"
    },
    "179": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "180": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "RETURN",
      "path": "36"
    },
    "181": {
      "fn": "ERC20.totalSupply",
      "offset": [
        907,
        1005
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "182": {
      "fn": "ERC20.totalSupply",
      "offset": [
        986,
        998
      ],
      "op": "PUSH1",
      "path": "36",
      "statement": 0,
      "value": "0x2"
    },
    "184": {
      "fn": "ERC20.totalSupply",
      "offset": [
        986,
        998
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "185": {
      "fn": "ERC20.totalSupply",
      "offset": [
        907,
        1005
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "186": {
      "fn": "ERC20.totalSupply",
      "offset": [
        907,
        1005
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "188": {
      "fn": "ERC20.totalSupply",
      "offset": [
        907,
        1005
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "189": {
      "op": "SWAP1"
    },
    "190": {
      "op": "DUP2"
    },
    "191": {
      "op": "MSTORE"
    },
    "192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "194": {
      "op": "ADD"
    },
    "195": {
      "fn": "ERC20.totalSupply",
      "offset": [
        907,
        1005
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xAC"
    },
    "198": {
      "op": "JUMP"
    },
    "199": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3740,
        3970
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "200": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3740,
        3970
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xA0"
    },
    "203": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3740,
        3970
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xD5"
    },
    "206": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3740,
        3970
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "207": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3740,
        3970
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "209": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3740,
        3970
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x411"
    },
    "212": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3740,
        3970
      ],
      "op": "JUMP",
      "path": "36"
    },
    "213": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3740,
        3970
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "214": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3740,
        3970
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1C2"
    },
    "217": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3740,
        3970
      ],
      "op": "JUMP",
      "path": "36"
    },
    "218": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4473,
        4670
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "219": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4473,
        4670
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xA0"
    },
    "222": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4473,
        4670
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xE8"
    },
    "225": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4473,
        4670
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "226": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4473,
        4670
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "228": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4473,
        4670
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x3E7"
    },
    "231": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        4473,
        4670
      ],
      "op": "JUMP",
      "path": "36"
    },
    "232": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4473,
        4670
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "233": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4473,
        4670
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x214"
    },
    "236": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        4473,
        4670
      ],
      "op": "JUMP",
      "path": "36"
    },
    "237": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1218,
        1331
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "238": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1218,
        1331
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xB9"
    },
    "241": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1218,
        1331
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xFB"
    },
    "244": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1218,
        1331
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "245": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1218,
        1331
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "247": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1218,
        1331
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x44D"
    },
    "250": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        1218,
        1331
      ],
      "op": "JUMP",
      "path": "36"
    },
    "251": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1218,
        1331
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "258": {
      "op": "SHL"
    },
    "259": {
      "op": "SUB"
    },
    "260": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1308,
        1324
      ],
      "op": "AND",
      "path": "36",
      "statement": 1
    },
    "261": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1282,
        1289
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "263": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1308,
        1324
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "264": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1308,
        1324
      ],
      "op": "DUP2",
      "path": "36"
    },
    "265": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1308,
        1324
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "266": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1308,
        1324
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "268": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1308,
        1324
      ],
      "op": "DUP2",
      "path": "36"
    },
    "269": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1308,
        1324
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "270": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1308,
        1324
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "271": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1308,
        1324
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "273": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1308,
        1324
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "274": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1308,
        1324
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "275": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1308,
        1324
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "276": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1308,
        1324
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "277": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1218,
        1331
      ],
      "op": "JUMP",
      "path": "36"
    },
    "278": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5178,
        5385
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "279": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5178,
        5385
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xA0"
    },
    "282": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5178,
        5385
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x124"
    },
    "285": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5178,
        5385
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "286": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5178,
        5385
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "288": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5178,
        5385
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x3E7"
    },
    "291": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        5178,
        5385
      ],
      "op": "JUMP",
      "path": "36"
    },
    "292": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5178,
        5385
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "293": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5178,
        5385
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x24B"
    },
    "296": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        5178,
        5385
      ],
      "op": "JUMP",
      "path": "36"
    },
    "297": {
      "fn": "ERC20.transfer",
      "offset": [
        1968,
        2114
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "298": {
      "fn": "ERC20.transfer",
      "offset": [
        1968,
        2114
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xA0"
    },
    "301": {
      "fn": "ERC20.transfer",
      "offset": [
        1968,
        2114
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x137"
    },
    "304": {
      "fn": "ERC20.transfer",
      "offset": [
        1968,
        2114
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "305": {
      "fn": "ERC20.transfer",
      "offset": [
        1968,
        2114
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "307": {
      "fn": "ERC20.transfer",
      "offset": [
        1968,
        2114
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x3E7"
    },
    "310": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        1968,
        2114
      ],
      "op": "JUMP",
      "path": "36"
    },
    "311": {
      "fn": "ERC20.transfer",
      "offset": [
        1968,
        2114
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "312": {
      "fn": "ERC20.transfer",
      "offset": [
        1968,
        2114
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x282"
    },
    "315": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        1968,
        2114
      ],
      "op": "JUMP",
      "path": "36"
    },
    "316": {
      "fn": "ERC20.allowance",
      "offset": [
        1662,
        1800
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "317": {
      "fn": "ERC20.allowance",
      "offset": [
        1662,
        1800
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xB9"
    },
    "320": {
      "fn": "ERC20.allowance",
      "offset": [
        1662,
        1800
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC20.allowance",
      "offset": [
        1662,
        1800
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "324": {
      "fn": "ERC20.allowance",
      "offset": [
        1662,
        1800
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC20.allowance",
      "offset": [
        1662,
        1800
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x46F"
    },
    "329": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        1662,
        1800
      ],
      "op": "JUMP",
      "path": "36"
    },
    "330": {
      "fn": "ERC20.allowance",
      "offset": [
        1662,
        1800
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "337": {
      "op": "SHL"
    },
    "338": {
      "op": "SUB"
    },
    "339": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1784
      ],
      "op": "SWAP2",
      "path": "36",
      "statement": 2
    },
    "340": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1784
      ],
      "op": "DUP3",
      "path": "36"
    },
    "341": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1784
      ],
      "op": "AND",
      "path": "36"
    },
    "342": {
      "fn": "ERC20.allowance",
      "offset": [
        1743,
        1750
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "344": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1784
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "345": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1784
      ],
      "op": "DUP2",
      "path": "36"
    },
    "346": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1784
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "347": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1777
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1"
    },
    "349": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1784
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "351": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1784
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "352": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1784
      ],
      "op": "DUP2",
      "path": "36"
    },
    "353": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1784
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "354": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1784
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "356": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1784
      ],
      "op": "DUP1",
      "path": "36"
    },
    "357": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1784
      ],
      "op": "DUP4",
      "path": "36"
    },
    "358": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1784
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "359": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1793
      ],
      "op": "SWAP4",
      "path": "36"
    },
    "360": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1793
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "361": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1793
      ],
      "op": "SWAP5",
      "path": "36"
    },
    "362": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1793
      ],
      "op": "AND",
      "path": "36"
    },
    "363": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1793
      ],
      "op": "DUP3",
      "path": "36"
    },
    "364": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1793
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "365": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1793
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "366": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1793
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "367": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1793
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "368": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1793
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "369": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1793
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "370": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1793
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "371": {
      "fn": "ERC20.allowance",
      "offset": [
        1769,
        1793
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "372": {
      "fn": "ERC20.allowance",
      "offset": [
        1662,
        1800
      ],
      "op": "JUMP",
      "path": "36"
    },
    "373": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "374": {
      "fn": "ERC20.approve",
      "offset": [
        2824,
        2828
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "376": {
      "fn": "ERC20.approve",
      "offset": [
        3153,
        3163
      ],
      "op": "DUP2",
      "path": "36",
      "statement": 3
    },
    "377": {
      "fn": "ERC20.approve",
      "offset": [
        3153,
        3163
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "378": {
      "branch": 20,
      "fn": "ERC20.approve",
      "offset": [
        3153,
        3163
      ],
      "op": "DUP1",
      "path": "36"
    },
    "379": {
      "fn": "ERC20.approve",
      "offset": [
        3153,
        3201
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1A5"
    },
    "382": {
      "branch": 20,
      "fn": "ERC20.approve",
      "offset": [
        3153,
        3201
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "383": {
      "op": "POP"
    },
    "384": {
      "fn": "ERC20.approve",
      "offset": [
        3176,
        3186
      ],
      "op": "CALLER",
      "path": "36"
    },
    "385": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3187
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "387": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3187
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "388": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3187
      ],
      "op": "DUP2",
      "path": "36"
    },
    "389": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3187
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "390": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3175
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1"
    },
    "392": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3187
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "394": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3187
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "395": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3187
      ],
      "op": "DUP2",
      "path": "36"
    },
    "396": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3187
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "397": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3187
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "399": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3187
      ],
      "op": "DUP1",
      "path": "36"
    },
    "400": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3187
      ],
      "op": "DUP4",
      "path": "36"
    },
    "401": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3187
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "408": {
      "op": "SHL"
    },
    "409": {
      "op": "SUB"
    },
    "410": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3196
      ],
      "op": "DUP8",
      "path": "36"
    },
    "411": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3196
      ],
      "op": "AND",
      "path": "36"
    },
    "412": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3196
      ],
      "op": "DUP5",
      "path": "36"
    },
    "413": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3196
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "414": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3196
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "415": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3196
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "416": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3196
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "417": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3196
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "418": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3196
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "419": {
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3196
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "420": {
      "branch": 21,
      "fn": "ERC20.approve",
      "offset": [
        3167,
        3201
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "421": {
      "fn": "ERC20.approve",
      "offset": [
        3153,
        3201
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "422": {
      "fn": "ERC20.approve",
      "offset": [
        3145,
        3202
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1AE"
    },
    "425": {
      "branch": 21,
      "fn": "ERC20.approve",
      "offset": [
        3145,
        3202
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "426": {
      "fn": "ERC20.approve",
      "offset": [
        3145,
        3202
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "428": {
      "fn": "ERC20.approve",
      "offset": [
        3145,
        3202
      ],
      "op": "DUP1",
      "path": "36"
    },
    "429": {
      "fn": "ERC20.approve",
      "offset": [
        3145,
        3202
      ],
      "op": "REVERT",
      "path": "36"
    },
    "430": {
      "fn": "ERC20.approve",
      "offset": [
        3145,
        3202
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "431": {
      "fn": "ERC20.approve",
      "offset": [
        3213,
        3249
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 4,
      "value": "0x1B9"
    },
    "434": {
      "fn": "ERC20.approve",
      "offset": [
        3222,
        3232
      ],
      "op": "CALLER",
      "path": "36"
    },
    "435": {
      "fn": "ERC20.approve",
      "offset": [
        3234,
        3241
      ],
      "op": "DUP5",
      "path": "36"
    },
    "436": {
      "fn": "ERC20.approve",
      "offset": [
        3243,
        3248
      ],
      "op": "DUP5",
      "path": "36"
    },
    "437": {
      "fn": "ERC20.approve",
      "offset": [
        3213,
        3221
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x28F"
    },
    "440": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        3213,
        3249
      ],
      "op": "JUMP",
      "path": "36"
    },
    "441": {
      "fn": "ERC20.approve",
      "offset": [
        3213,
        3249
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "442": {
      "op": "POP"
    },
    "443": {
      "fn": "ERC20.approve",
      "offset": [
        3266,
        3270
      ],
      "op": "PUSH1",
      "path": "36",
      "statement": 5,
      "value": "0x1"
    },
    "445": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "446": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "447": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "POP",
      "path": "36"
    },
    "448": {
      "fn": "ERC20.approve",
      "offset": [
        2750,
        3277
      ],
      "op": "POP",
      "path": "36"
    },
    "449": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        2750,
        3277
      ],
      "op": "JUMP",
      "path": "36"
    },
    "450": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3740,
        3970
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "451": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3828,
        3832
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "453": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3844,
        3870
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 6,
      "value": "0x1CF"
    },
    "456": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3854,
        3858
      ],
      "op": "DUP5",
      "path": "36"
    },
    "457": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3860,
        3862
      ],
      "op": "DUP5",
      "path": "36"
    },
    "458": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3864,
        3869
      ],
      "op": "DUP5",
      "path": "36"
    },
    "459": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3844,
        3853
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x317"
    },
    "462": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3844,
        3870
      ],
      "op": "JUMP",
      "path": "36"
    },
    "463": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3844,
        3870
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "470": {
      "op": "SHL"
    },
    "471": {
      "op": "SUB"
    },
    "472": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3921
      ],
      "op": "DUP5",
      "path": "36",
      "statement": 7
    },
    "473": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3921
      ],
      "op": "AND",
      "path": "36"
    },
    "474": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3921
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "476": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3921
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "477": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3921
      ],
      "op": "DUP2",
      "path": "36"
    },
    "478": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3921
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "479": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3915
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1"
    },
    "481": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3921
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "483": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3921
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "484": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3921
      ],
      "op": "DUP2",
      "path": "36"
    },
    "485": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3921
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "486": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3921
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "488": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3921
      ],
      "op": "DUP1",
      "path": "36"
    },
    "489": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3921
      ],
      "op": "DUP4",
      "path": "36"
    },
    "490": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3921
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "491": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3895,
        3905
      ],
      "op": "CALLER",
      "path": "36"
    },
    "492": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3933
      ],
      "op": "DUP1",
      "path": "36"
    },
    "493": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3933
      ],
      "op": "DUP6",
      "path": "36"
    },
    "494": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3933
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "495": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3933
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "496": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3933
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "497": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3933
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "498": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3933
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "499": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3933
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "500": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3933
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "501": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3880,
        3942
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x20A"
    },
    "504": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3880,
        3942
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "505": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3889,
        3893
      ],
      "op": "DUP7",
      "path": "36"
    },
    "506": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3889,
        3893
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "507": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3941
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x205"
    },
    "510": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3941
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "511": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3936,
        3941
      ],
      "op": "DUP7",
      "path": "36"
    },
    "512": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3936,
        3941
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "513": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3941
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4B8"
    },
    "516": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3907,
        3941
      ],
      "op": "JUMP",
      "path": "36"
    },
    "517": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3907,
        3941
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "518": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3880,
        3888
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x28F"
    },
    "521": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3880,
        3942
      ],
      "op": "JUMP",
      "path": "36"
    },
    "522": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3880,
        3942
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "523": {
      "op": "POP"
    },
    "524": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3959,
        3963
      ],
      "op": "PUSH1",
      "path": "36",
      "statement": 8,
      "value": "0x1"
    },
    "526": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3740,
        3970
      ],
      "op": "SWAP4",
      "path": "36"
    },
    "527": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3740,
        3970
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "528": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3740,
        3970
      ],
      "op": "POP",
      "path": "36"
    },
    "529": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3740,
        3970
      ],
      "op": "POP",
      "path": "36"
    },
    "530": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3740,
        3970
      ],
      "op": "POP",
      "path": "36"
    },
    "531": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        3740,
        3970
      ],
      "op": "JUMP",
      "path": "36"
    },
    "532": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4473,
        4670
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "533": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4578,
        4588
      ],
      "op": "CALLER",
      "path": "36",
      "statement": 9
    },
    "534": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4553,
        4557
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "536": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4619
      ],
      "op": "DUP2",
      "path": "36"
    },
    "537": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4619
      ],
      "op": "DUP2",
      "path": "36"
    },
    "538": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4619
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "539": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4607
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1"
    },
    "541": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4619
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "543": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4619
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "544": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4619
      ],
      "op": "DUP2",
      "path": "36"
    },
    "545": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4619
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "546": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4619
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "548": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4619
      ],
      "op": "DUP1",
      "path": "36"
    },
    "549": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4619
      ],
      "op": "DUP4",
      "path": "36"
    },
    "550": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4619
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "557": {
      "op": "SHL"
    },
    "558": {
      "op": "SUB"
    },
    "559": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4628
      ],
      "op": "DUP8",
      "path": "36"
    },
    "560": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4628
      ],
      "op": "AND",
      "path": "36"
    },
    "561": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4628
      ],
      "op": "DUP5",
      "path": "36"
    },
    "562": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4628
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "563": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4628
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "564": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4628
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "565": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4628
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "566": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4628
      ],
      "op": "DUP2",
      "path": "36"
    },
    "567": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4628
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "568": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4628
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "569": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4553,
        4557
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "570": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4553,
        4557
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "571": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4569,
        4642
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1B9"
    },
    "574": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4569,
        4642
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "575": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4590,
        4597
      ],
      "op": "DUP6",
      "path": "36"
    },
    "576": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4590,
        4597
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "577": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4641
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x205"
    },
    "580": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4641
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "581": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4631,
        4641
      ],
      "op": "DUP7",
      "path": "36"
    },
    "582": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4631,
        4641
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "583": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4599,
        4641
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4CF"
    },
    "586": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        4599,
        4641
      ],
      "op": "JUMP",
      "path": "36"
    },
    "587": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5178,
        5385
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "588": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5288,
        5298
      ],
      "op": "CALLER",
      "path": "36",
      "statement": 10
    },
    "589": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5263,
        5267
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "591": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5329
      ],
      "op": "DUP2",
      "path": "36"
    },
    "592": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5329
      ],
      "op": "DUP2",
      "path": "36"
    },
    "593": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5329
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "594": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5317
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1"
    },
    "596": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5329
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "598": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5329
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "599": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5329
      ],
      "op": "DUP2",
      "path": "36"
    },
    "600": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5329
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "601": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5329
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "603": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5329
      ],
      "op": "DUP1",
      "path": "36"
    },
    "604": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5329
      ],
      "op": "DUP4",
      "path": "36"
    },
    "605": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5329
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "612": {
      "op": "SHL"
    },
    "613": {
      "op": "SUB"
    },
    "614": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5338
      ],
      "op": "DUP8",
      "path": "36"
    },
    "615": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5338
      ],
      "op": "AND",
      "path": "36"
    },
    "616": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5338
      ],
      "op": "DUP5",
      "path": "36"
    },
    "617": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5338
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "618": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5338
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "619": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5338
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "620": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5338
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "621": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5338
      ],
      "op": "DUP2",
      "path": "36"
    },
    "622": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5338
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "623": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5338
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "624": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5263,
        5267
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "625": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5263,
        5267
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "626": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5279,
        5357
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1B9"
    },
    "629": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5279,
        5357
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "630": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5300,
        5307
      ],
      "op": "DUP6",
      "path": "36"
    },
    "631": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5300,
        5307
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "632": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5356
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x205"
    },
    "635": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5356
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "636": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5341,
        5356
      ],
      "op": "DUP7",
      "path": "36"
    },
    "637": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5341,
        5356
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "638": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        5309,
        5356
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4B8"
    },
    "641": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        5309,
        5356
      ],
      "op": "JUMP",
      "path": "36"
    },
    "642": {
      "fn": "ERC20.transfer",
      "offset": [
        1968,
        2114
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "643": {
      "fn": "ERC20.transfer",
      "offset": [
        2038,
        2042
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "645": {
      "fn": "ERC20.transfer",
      "offset": [
        2054,
        2086
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 11,
      "value": "0x1B9"
    },
    "648": {
      "fn": "ERC20.transfer",
      "offset": [
        2064,
        2074
      ],
      "op": "CALLER",
      "path": "36"
    },
    "649": {
      "fn": "ERC20.transfer",
      "offset": [
        2076,
        2078
      ],
      "op": "DUP5",
      "path": "36"
    },
    "650": {
      "fn": "ERC20.transfer",
      "offset": [
        2080,
        2085
      ],
      "op": "DUP5",
      "path": "36"
    },
    "651": {
      "fn": "ERC20.transfer",
      "offset": [
        2054,
        2063
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x317"
    },
    "654": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2054,
        2086
      ],
      "op": "JUMP",
      "path": "36"
    },
    "655": {
      "fn": "ERC20._approve",
      "offset": [
        7102,
        7350
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "660": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "662": {
      "op": "SHL"
    },
    "663": {
      "op": "SUB"
    },
    "664": {
      "fn": "ERC20._approve",
      "offset": [
        7194,
        7215
      ],
      "op": "DUP3",
      "path": "36",
      "statement": 12
    },
    "665": {
      "branch": 22,
      "fn": "ERC20._approve",
      "offset": [
        7194,
        7215
      ],
      "op": "AND",
      "path": "36"
    },
    "666": {
      "fn": "ERC20._approve",
      "offset": [
        7186,
        7216
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x2A2"
    },
    "669": {
      "branch": 22,
      "fn": "ERC20._approve",
      "offset": [
        7186,
        7216
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "670": {
      "fn": "ERC20._approve",
      "offset": [
        7186,
        7216
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "672": {
      "fn": "ERC20._approve",
      "offset": [
        7186,
        7216
      ],
      "op": "DUP1",
      "path": "36"
    },
    "673": {
      "fn": "ERC20._approve",
      "offset": [
        7186,
        7216
      ],
      "op": "REVERT",
      "path": "36"
    },
    "674": {
      "fn": "ERC20._approve",
      "offset": [
        7186,
        7216
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "681": {
      "op": "SHL"
    },
    "682": {
      "op": "SUB"
    },
    "683": {
      "fn": "ERC20._approve",
      "offset": [
        7234,
        7253
      ],
      "op": "DUP4",
      "path": "36",
      "statement": 13
    },
    "684": {
      "branch": 23,
      "fn": "ERC20._approve",
      "offset": [
        7234,
        7253
      ],
      "op": "AND",
      "path": "36"
    },
    "685": {
      "fn": "ERC20._approve",
      "offset": [
        7226,
        7254
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x2B5"
    },
    "688": {
      "branch": 23,
      "fn": "ERC20._approve",
      "offset": [
        7226,
        7254
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "689": {
      "fn": "ERC20._approve",
      "offset": [
        7226,
        7254
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "691": {
      "fn": "ERC20._approve",
      "offset": [
        7226,
        7254
      ],
      "op": "DUP1",
      "path": "36"
    },
    "692": {
      "fn": "ERC20._approve",
      "offset": [
        7226,
        7254
      ],
      "op": "REVERT",
      "path": "36"
    },
    "693": {
      "fn": "ERC20._approve",
      "offset": [
        7226,
        7254
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "700": {
      "op": "SHL"
    },
    "701": {
      "op": "SUB"
    },
    "702": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7280
      ],
      "op": "DUP4",
      "path": "36",
      "statement": 14
    },
    "703": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7280
      ],
      "op": "DUP2",
      "path": "36"
    },
    "704": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7280
      ],
      "op": "AND",
      "path": "36"
    },
    "705": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7280
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "707": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7280
      ],
      "op": "DUP2",
      "path": "36"
    },
    "708": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7280
      ],
      "op": "DUP2",
      "path": "36"
    },
    "709": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7280
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "710": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7273
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1"
    },
    "712": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7280
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "714": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7280
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "715": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7280
      ],
      "op": "DUP2",
      "path": "36"
    },
    "716": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7280
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "717": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7280
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "719": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7280
      ],
      "op": "DUP1",
      "path": "36"
    },
    "720": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7280
      ],
      "op": "DUP4",
      "path": "36"
    },
    "721": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7280
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "722": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7289
      ],
      "op": "SWAP5",
      "path": "36"
    },
    "723": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7289
      ],
      "op": "DUP8",
      "path": "36"
    },
    "724": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7289
      ],
      "op": "AND",
      "path": "36"
    },
    "725": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7289
      ],
      "op": "DUP1",
      "path": "36"
    },
    "726": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7289
      ],
      "op": "DUP5",
      "path": "36"
    },
    "727": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7289
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "728": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7289
      ],
      "op": "SWAP5",
      "path": "36"
    },
    "729": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7289
      ],
      "op": "DUP3",
      "path": "36"
    },
    "730": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7289
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "731": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7289
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "732": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7289
      ],
      "op": "DUP3",
      "path": "36"
    },
    "733": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7289
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "734": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7289
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "735": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7297
      ],
      "op": "DUP6",
      "path": "36"
    },
    "736": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7297
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "737": {
      "fn": "ERC20._approve",
      "offset": [
        7265,
        7297
      ],
      "op": "SSTORE",
      "path": "36"
    },
    "738": {
      "fn": "ERC20._approve",
      "offset": [
        7312,
        7343
      ],
      "op": "SWAP1",
      "path": "36",
      "statement": 15
    },
    "739": {
      "fn": "ERC20._approve",
      "offset": [
        7312,
        7343
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "740": {
      "op": "DUP5"
    },
    "741": {
      "op": "DUP2"
    },
    "742": {
      "op": "MSTORE"
    },
    "743": {
      "fn": "ERC20._approve",
      "offset": [
        7312,
        7343
      ],
      "op": "PUSH32",
      "path": "36",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "776": {
      "fn": "ERC20._approve",
      "offset": [
        7312,
        7343
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "777": {
      "op": "ADD"
    },
    "778": {
      "fn": "ERC20._approve",
      "offset": [
        7312,
        7343
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "779": {
      "fn": "ERC20._approve",
      "offset": [
        7312,
        7343
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "781": {
      "fn": "ERC20._approve",
      "offset": [
        7312,
        7343
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "782": {
      "fn": "ERC20._approve",
      "offset": [
        7312,
        7343
      ],
      "op": "DUP1",
      "path": "36"
    },
    "783": {
      "fn": "ERC20._approve",
      "offset": [
        7312,
        7343
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "784": {
      "fn": "ERC20._approve",
      "offset": [
        7312,
        7343
      ],
      "op": "SUB",
      "path": "36"
    },
    "785": {
      "fn": "ERC20._approve",
      "offset": [
        7312,
        7343
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "786": {
      "fn": "ERC20._approve",
      "offset": [
        7312,
        7343
      ],
      "op": "LOG3",
      "path": "36"
    },
    "787": {
      "fn": "ERC20._approve",
      "offset": [
        7102,
        7350
      ],
      "op": "POP",
      "path": "36"
    },
    "788": {
      "fn": "ERC20._approve",
      "offset": [
        7102,
        7350
      ],
      "op": "POP",
      "path": "36"
    },
    "789": {
      "fn": "ERC20._approve",
      "offset": [
        7102,
        7350
      ],
      "op": "POP",
      "path": "36"
    },
    "790": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        7102,
        7350
      ],
      "op": "JUMP",
      "path": "36"
    },
    "791": {
      "fn": "ERC20._transfer",
      "offset": [
        5604,
        5822
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "798": {
      "op": "SHL"
    },
    "799": {
      "op": "SUB"
    },
    "800": {
      "fn": "ERC20._transfer",
      "offset": [
        5691,
        5707
      ],
      "op": "DUP3",
      "path": "36",
      "statement": 16
    },
    "801": {
      "branch": 24,
      "fn": "ERC20._transfer",
      "offset": [
        5691,
        5707
      ],
      "op": "AND",
      "path": "36"
    },
    "802": {
      "fn": "ERC20._transfer",
      "offset": [
        5683,
        5708
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x32A"
    },
    "805": {
      "branch": 24,
      "fn": "ERC20._transfer",
      "offset": [
        5683,
        5708
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "806": {
      "fn": "ERC20._transfer",
      "offset": [
        5683,
        5708
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "808": {
      "fn": "ERC20._transfer",
      "offset": [
        5683,
        5708
      ],
      "op": "DUP1",
      "path": "36"
    },
    "809": {
      "fn": "ERC20._transfer",
      "offset": [
        5683,
        5708
      ],
      "op": "REVERT",
      "path": "36"
    },
    "810": {
      "fn": "ERC20._transfer",
      "offset": [
        5683,
        5708
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "817": {
      "op": "SHL"
    },
    "818": {
      "op": "SUB"
    },
    "819": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5734
      ],
      "op": "DUP4",
      "path": "36",
      "statement": 17
    },
    "820": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5734
      ],
      "op": "AND",
      "path": "36"
    },
    "821": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5728
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "823": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5734
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "824": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5734
      ],
      "op": "DUP2",
      "path": "36"
    },
    "825": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5734
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "826": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5734
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "828": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5734
      ],
      "op": "DUP2",
      "path": "36"
    },
    "829": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5734
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "830": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5734
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "831": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5734
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "833": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5734
      ],
      "op": "DUP2",
      "path": "36"
    },
    "834": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5734
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "835": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5743
      ],
      "op": "DUP1",
      "path": "36"
    },
    "836": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5743
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "837": {
      "fn": "ERC20._transfer",
      "offset": [
        5738,
        5743
      ],
      "op": "DUP4",
      "path": "36"
    },
    "838": {
      "fn": "ERC20._transfer",
      "offset": [
        5738,
        5743
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "839": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5728
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "840": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5743
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x352"
    },
    "843": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5743
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "844": {
      "fn": "ERC20._transfer",
      "offset": [
        5738,
        5743
      ],
      "op": "DUP5",
      "path": "36"
    },
    "845": {
      "fn": "ERC20._transfer",
      "offset": [
        5738,
        5743
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "846": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5743
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4B8"
    },
    "849": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        5719,
        5743
      ],
      "op": "JUMP",
      "path": "36"
    },
    "850": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5743
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "851": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5743
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "852": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5743
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "853": {
      "fn": "ERC20._transfer",
      "offset": [
        5719,
        5743
      ],
      "op": "SSTORE",
      "path": "36"
    },
    "854": {
      "op": "POP"
    },
    "855": {
      "op": "POP"
    },
    "856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "862": {
      "op": "SHL"
    },
    "863": {
      "op": "SUB"
    },
    "864": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5766
      ],
      "op": "DUP3",
      "path": "36",
      "statement": 18
    },
    "865": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5766
      ],
      "op": "AND",
      "path": "36"
    },
    "866": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5762
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "868": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5766
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "869": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5766
      ],
      "op": "DUP2",
      "path": "36"
    },
    "870": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5766
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "871": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5766
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "873": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5766
      ],
      "op": "DUP2",
      "path": "36"
    },
    "874": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5766
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "875": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5766
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "876": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5766
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "878": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5766
      ],
      "op": "DUP2",
      "path": "36"
    },
    "879": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5766
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "880": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5775
      ],
      "op": "DUP1",
      "path": "36"
    },
    "881": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5775
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "882": {
      "fn": "ERC20._transfer",
      "offset": [
        5770,
        5775
      ],
      "op": "DUP4",
      "path": "36"
    },
    "883": {
      "fn": "ERC20._transfer",
      "offset": [
        5770,
        5775
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "884": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5762
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "885": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5775
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x37F"
    },
    "888": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5775
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "889": {
      "fn": "ERC20._transfer",
      "offset": [
        5770,
        5775
      ],
      "op": "DUP5",
      "path": "36"
    },
    "890": {
      "fn": "ERC20._transfer",
      "offset": [
        5770,
        5775
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "891": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5775
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4CF"
    },
    "894": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        5753,
        5775
      ],
      "op": "JUMP",
      "path": "36"
    },
    "895": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5775
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "896": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5775
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "897": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5775
      ],
      "op": "POP",
      "path": "36"
    },
    "898": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5775
      ],
      "op": "POP",
      "path": "36"
    },
    "899": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5775
      ],
      "op": "DUP2",
      "path": "36"
    },
    "900": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5775
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "901": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5775
      ],
      "op": "SSTORE",
      "path": "36"
    },
    "902": {
      "fn": "ERC20._transfer",
      "offset": [
        5753,
        5775
      ],
      "op": "POP",
      "path": "36"
    },
    "903": {
      "fn": "ERC20._transfer",
      "offset": [
        5805,
        5807
      ],
      "op": "DUP2",
      "path": "36",
      "statement": 19
    },
    "904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "910": {
      "op": "SHL"
    },
    "911": {
      "op": "SUB"
    },
    "912": {
      "fn": "ERC20._transfer",
      "offset": [
        5790,
        5815
      ],
      "op": "AND",
      "path": "36"
    },
    "913": {
      "fn": "ERC20._transfer",
      "offset": [
        5799,
        5803
      ],
      "op": "DUP4",
      "path": "36"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "918": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "920": {
      "op": "SHL"
    },
    "921": {
      "op": "SUB"
    },
    "922": {
      "fn": "ERC20._transfer",
      "offset": [
        5790,
        5815
      ],
      "op": "AND",
      "path": "36"
    },
    "923": {
      "fn": "ERC20._transfer",
      "offset": [
        5790,
        5815
      ],
      "op": "PUSH32",
      "path": "36",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "956": {
      "fn": "ERC20._transfer",
      "offset": [
        5809,
        5814
      ],
      "op": "DUP4",
      "path": "36"
    },
    "957": {
      "fn": "ERC20._transfer",
      "offset": [
        5790,
        5815
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "959": {
      "fn": "ERC20._transfer",
      "offset": [
        5790,
        5815
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "960": {
      "fn": "ERC20._transfer",
      "offset": [
        5790,
        5815
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x30A"
    },
    "963": {
      "fn": "ERC20._transfer",
      "offset": [
        5790,
        5815
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "964": {
      "op": "DUP2"
    },
    "965": {
      "op": "MSTORE"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "968": {
      "op": "ADD"
    },
    "969": {
      "op": "SWAP1"
    },
    "970": {
      "op": "JUMP"
    },
    "971": {
      "op": "JUMPDEST"
    },
    "972": {
      "op": "DUP1"
    },
    "973": {
      "op": "CALLDATALOAD"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "980": {
      "op": "SHL"
    },
    "981": {
      "op": "SUB"
    },
    "982": {
      "op": "DUP2"
    },
    "983": {
      "op": "AND"
    },
    "984": {
      "op": "DUP2"
    },
    "985": {
      "op": "EQ"
    },
    "986": {
      "op": "PUSH2",
      "value": "0x3E2"
    },
    "989": {
      "op": "JUMPI"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "992": {
      "op": "DUP1"
    },
    "993": {
      "op": "REVERT"
    },
    "994": {
      "op": "JUMPDEST"
    },
    "995": {
      "op": "SWAP2"
    },
    "996": {
      "op": "SWAP1"
    },
    "997": {
      "op": "POP"
    },
    "998": {
      "jump": "o",
      "op": "JUMP"
    },
    "999": {
      "op": "JUMPDEST"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1002": {
      "op": "DUP1"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1005": {
      "op": "DUP4"
    },
    "1006": {
      "op": "DUP6"
    },
    "1007": {
      "op": "SUB"
    },
    "1008": {
      "op": "SLT"
    },
    "1009": {
      "op": "ISZERO"
    },
    "1010": {
      "op": "PUSH2",
      "value": "0x3FA"
    },
    "1013": {
      "op": "JUMPI"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1016": {
      "op": "DUP1"
    },
    "1017": {
      "op": "REVERT"
    },
    "1018": {
      "op": "JUMPDEST"
    },
    "1019": {
      "op": "PUSH2",
      "value": "0x403"
    },
    "1022": {
      "op": "DUP4"
    },
    "1023": {
      "op": "PUSH2",
      "value": "0x3CB"
    },
    "1026": {
      "jump": "i",
      "op": "JUMP"
    },
    "1027": {
      "op": "JUMPDEST"
    },
    "1028": {
      "op": "SWAP5"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1031": {
      "op": "SWAP4"
    },
    "1032": {
      "op": "SWAP1"
    },
    "1033": {
      "op": "SWAP4"
    },
    "1034": {
      "op": "ADD"
    },
    "1035": {
      "op": "CALLDATALOAD"
    },
    "1036": {
      "op": "SWAP4"
    },
    "1037": {
      "op": "POP"
    },
    "1038": {
      "op": "POP"
    },
    "1039": {
      "op": "POP"
    },
    "1040": {
      "jump": "o",
      "op": "JUMP"
    },
    "1041": {
      "op": "JUMPDEST"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1044": {
      "op": "DUP1"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1049": {
      "op": "DUP5"
    },
    "1050": {
      "op": "DUP7"
    },
    "1051": {
      "op": "SUB"
    },
    "1052": {
      "op": "SLT"
    },
    "1053": {
      "op": "ISZERO"
    },
    "1054": {
      "op": "PUSH2",
      "value": "0x426"
    },
    "1057": {
      "op": "JUMPI"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1060": {
      "op": "DUP1"
    },
    "1061": {
      "op": "REVERT"
    },
    "1062": {
      "op": "JUMPDEST"
    },
    "1063": {
      "op": "PUSH2",
      "value": "0x42F"
    },
    "1066": {
      "op": "DUP5"
    },
    "1067": {
      "op": "PUSH2",
      "value": "0x3CB"
    },
    "1070": {
      "jump": "i",
      "op": "JUMP"
    },
    "1071": {
      "op": "JUMPDEST"
    },
    "1072": {
      "op": "SWAP3"
    },
    "1073": {
      "op": "POP"
    },
    "1074": {
      "op": "PUSH2",
      "value": "0x43D"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1079": {
      "op": "DUP6"
    },
    "1080": {
      "op": "ADD"
    },
    "1081": {
      "op": "PUSH2",
      "value": "0x3CB"
    },
    "1084": {
      "jump": "i",
      "op": "JUMP"
    },
    "1085": {
      "op": "JUMPDEST"
    },
    "1086": {
      "op": "SWAP2"
    },
    "1087": {
      "op": "POP"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1090": {
      "op": "DUP5"
    },
    "1091": {
      "op": "ADD"
    },
    "1092": {
      "op": "CALLDATALOAD"
    },
    "1093": {
      "op": "SWAP1"
    },
    "1094": {
      "op": "POP"
    },
    "1095": {
      "op": "SWAP3"
    },
    "1096": {
      "op": "POP"
    },
    "1097": {
      "op": "SWAP3"
    },
    "1098": {
      "op": "POP"
    },
    "1099": {
      "op": "SWAP3"
    },
    "1100": {
      "jump": "o",
      "op": "JUMP"
    },
    "1101": {
      "op": "JUMPDEST"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1106": {
      "op": "DUP3"
    },
    "1107": {
      "op": "DUP5"
    },
    "1108": {
      "op": "SUB"
    },
    "1109": {
      "op": "SLT"
    },
    "1110": {
      "op": "ISZERO"
    },
    "1111": {
      "op": "PUSH2",
      "value": "0x45F"
    },
    "1114": {
      "op": "JUMPI"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1117": {
      "op": "DUP1"
    },
    "1118": {
      "op": "REVERT"
    },
    "1119": {
      "op": "JUMPDEST"
    },
    "1120": {
      "op": "PUSH2",
      "value": "0x468"
    },
    "1123": {
      "op": "DUP3"
    },
    "1124": {
      "op": "PUSH2",
      "value": "0x3CB"
    },
    "1127": {
      "jump": "i",
      "op": "JUMP"
    },
    "1128": {
      "op": "JUMPDEST"
    },
    "1129": {
      "op": "SWAP4"
    },
    "1130": {
      "op": "SWAP3"
    },
    "1131": {
      "op": "POP"
    },
    "1132": {
      "op": "POP"
    },
    "1133": {
      "op": "POP"
    },
    "1134": {
      "jump": "o",
      "op": "JUMP"
    },
    "1135": {
      "op": "JUMPDEST"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1138": {
      "op": "DUP1"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1141": {
      "op": "DUP4"
    },
    "1142": {
      "op": "DUP6"
    },
    "1143": {
      "op": "SUB"
    },
    "1144": {
      "op": "SLT"
    },
    "1145": {
      "op": "ISZERO"
    },
    "1146": {
      "op": "PUSH2",
      "value": "0x482"
    },
    "1149": {
      "op": "JUMPI"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1152": {
      "op": "DUP1"
    },
    "1153": {
      "op": "REVERT"
    },
    "1154": {
      "op": "JUMPDEST"
    },
    "1155": {
      "op": "PUSH2",
      "value": "0x48B"
    },
    "1158": {
      "op": "DUP4"
    },
    "1159": {
      "op": "PUSH2",
      "value": "0x3CB"
    },
    "1162": {
      "jump": "i",
      "op": "JUMP"
    },
    "1163": {
      "op": "JUMPDEST"
    },
    "1164": {
      "op": "SWAP2"
    },
    "1165": {
      "op": "POP"
    },
    "1166": {
      "op": "PUSH2",
      "value": "0x499"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1171": {
      "op": "DUP5"
    },
    "1172": {
      "op": "ADD"
    },
    "1173": {
      "op": "PUSH2",
      "value": "0x3CB"
    },
    "1176": {
      "jump": "i",
      "op": "JUMP"
    },
    "1177": {
      "op": "JUMPDEST"
    },
    "1178": {
      "op": "SWAP1"
    },
    "1179": {
      "op": "POP"
    },
    "1180": {
      "op": "SWAP3"
    },
    "1181": {
      "op": "POP"
    },
    "1182": {
      "op": "SWAP3"
    },
    "1183": {
      "op": "SWAP1"
    },
    "1184": {
      "op": "POP"
    },
    "1185": {
      "jump": "o",
      "op": "JUMP"
    },
    "1186": {
      "op": "JUMPDEST"
    },
    "1187": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1197": {
      "op": "MSTORE"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1202": {
      "op": "MSTORE"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1207": {
      "op": "REVERT"
    },
    "1208": {
      "op": "JUMPDEST"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1211": {
      "op": "DUP3"
    },
    "1212": {
      "op": "DUP3"
    },
    "1213": {
      "op": "LT"
    },
    "1214": {
      "op": "ISZERO"
    },
    "1215": {
      "op": "PUSH2",
      "value": "0x4CA"
    },
    "1218": {
      "op": "JUMPI"
    },
    "1219": {
      "op": "PUSH2",
      "value": "0x4CA"
    },
    "1222": {
      "op": "PUSH2",
      "value": "0x4A2"
    },
    "1225": {
      "jump": "i",
      "op": "JUMP"
    },
    "1226": {
      "op": "JUMPDEST"
    },
    "1227": {
      "op": "POP"
    },
    "1228": {
      "op": "SUB"
    },
    "1229": {
      "op": "SWAP1"
    },
    "1230": {
      "jump": "o",
      "op": "JUMP"
    },
    "1231": {
      "op": "JUMPDEST"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1234": {
      "op": "DUP3"
    },
    "1235": {
      "op": "NOT"
    },
    "1236": {
      "op": "DUP3"
    },
    "1237": {
      "op": "GT"
    },
    "1238": {
      "op": "ISZERO"
    },
    "1239": {
      "op": "PUSH2",
      "value": "0x4E2"
    },
    "1242": {
      "op": "JUMPI"
    },
    "1243": {
      "op": "PUSH2",
      "value": "0x4E2"
    },
    "1246": {
      "op": "PUSH2",
      "value": "0x4A2"
    },
    "1249": {
      "jump": "i",
      "op": "JUMP"
    },
    "1250": {
      "op": "JUMPDEST"
    },
    "1251": {
      "op": "POP"
    },
    "1252": {
      "op": "ADD"
    },
    "1253": {
      "op": "SWAP1"
    },
    "1254": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "6343c18418b041df01fb6af7d4818dc41a88a4f3",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n\nimport \"./IERC20.sol\";\n\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\n * Originally based on code by FirstBlood:\n * https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n *\n * This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for\n * all accounts just by listening to said events. Note that this isn't required by the specification, and other\n * compliant implementations may not do it.\n */\ncontract ERC20 is IERC20 {\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowed;\n\n    uint256 private _totalSupply;\n\n    /**\n     * @dev Total number of tokens in existence\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev Gets the balance of the specified address.\n     * @param owner The address to query the balance of.\n     * @return An uint256 representing the amount owned by the passed address.\n     */\n    function balanceOf(address owner) public view override returns (uint256) {\n        return _balances[owner];\n    }\n\n    /**\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\n     * @param owner address The address which owns the funds.\n     * @param spender address The address which will spend the funds.\n     * @return A uint256 specifying the amount of tokens still available for the spender.\n     */\n    function allowance(address owner, address spender) public view override returns (uint256) {\n        return _allowed[owner][spender];\n    }\n\n    /**\n     * @dev Transfer token for a specified address\n     * @param to The address to transfer to.\n     * @param value The amount to be transferred.\n     */\n    function transfer(address to, uint256 value) public override returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     */\n    function approve(address spender, uint256 value) public override returns (bool) {\n\n        // To change the approve amount you first have to reduce the addresses`\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\n        //  already 0 to mitigate the race condition described here:\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        require(value == 0 || _allowed[msg.sender][spender] == 0);\n\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev Transfer tokens from one address to another.\n     * Note that while this function emits an Approval event, this is not required as per the specification,\n     * and other compliant implementations may not emit the event.\n     * @param from address The address which you want to send tokens from\n     * @param to address The address which you want to transfer to\n     * @param value uint256 the amount of tokens to be transferred\n     */\n    function transferFrom(address from, address to, uint256 value) public override returns (bool) {\n        _transfer(from, to, value);\n        _approve(from, msg.sender, _allowed[from][msg.sender] - value);\n        return true;\n    }\n\n    /**\n     * @dev Increase the amount of tokens that an owner allowed to a spender.\n     * approve should be called when allowed_[_spender] == 0. To increment\n     * allowed value is better to use this function to avoid 2 calls (and wait until\n     * the first transaction is mined)\n     * From MonolithDAO Token.sol\n     * Emits an Approval event.\n     * @param spender The address which will spend the funds.\n     * @param addedValue The amount of tokens to increase the allowance by.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowed[msg.sender][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Decrease the amount of tokens that an owner allowed to a spender.\n     * approve should be called when allowed_[_spender] == 0. To decrement\n     * allowed value is better to use this function to avoid 2 calls (and wait until\n     * the first transaction is mined)\n     * From MonolithDAO Token.sol\n     * Emits an Approval event.\n     * @param spender The address which will spend the funds.\n     * @param subtractedValue The amount of tokens to decrease the allowance by.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowed[msg.sender][spender] - subtractedValue);\n        return true;\n    }\n\n    /**\n     * @dev Transfer token for a specified addresses\n     * @param from The address to transfer from.\n     * @param to The address to transfer to.\n     * @param value The amount to be transferred.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        require(to != address(0));\n\n        _balances[from] -= value;\n        _balances[to] += value;\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Internal function that mints an amount of the token and assigns it to\n     * an account. This encapsulates the modification of balances such that the\n     * proper events are emitted.\n     * @param account The account that will receive the created tokens.\n     * @param value The amount that will be created.\n     */\n    function _mint(address account, uint256 value) internal {\n        require(account != address(0));\n\n        _totalSupply += value;\n        _balances[account] += value;\n        emit Transfer(address(0), account, value);\n    }\n\n    /**\n     * @dev Internal function that burns an amount of the token of a given\n     * account.\n     * @param account The account whose tokens will be burnt.\n     * @param value The amount that will be burnt.\n     */\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0));\n\n        _totalSupply -= value;\n        _balances[account] -= value;\n        emit Transfer(account, address(0), value);\n    }\n\n    /**\n     * @dev Approve an address to spend another addresses' tokens.\n     * @param owner The address that owns the tokens.\n     * @param spender The address that will spend the tokens.\n     * @param value The number of tokens that can be spent.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(spender != address(0));\n        require(owner != address(0));\n\n        _allowed[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    /**\n     * @dev Internal function that burns an amount of the token of a given\n     * account, deducting from the sender's allowance for said account. Uses the\n     * internal burn function.\n     * Emits an Approval event (reflecting the reduced allowance).\n     * @param account The account whose tokens will be burnt.\n     * @param value The amount that will be burnt.\n     */\n    function _burnFrom(address account, uint256 value) internal {\n        _burn(account, value);\n        _approve(account, msg.sender, _allowed[account][msg.sender] - value);\n    }\n\n}\n",
  "sourceMap": "650:7268:36:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/zeppelin/token/ERC20/ERC20.sol",
  "type": "contract"
}