{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract NuCypherToken",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "contract IStakingEscrow",
          "name": "_escrow",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_startBidDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endBidDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endCancellationDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_boostingRefund",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "_stakingPeriods",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_minAllowedBid",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositedETH",
          "type": "uint256"
        }
      ],
      "name": "Bid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endIndex",
          "type": "uint256"
        }
      ],
      "name": "BiddersChecked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Canceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimedTokens",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "CompensationWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refundETH",
          "type": "uint256"
        }
      ],
      "name": "ForceRefund",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refundETH",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "completedWork",
          "type": "uint256"
        }
      ],
      "name": "Refund",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "Shutdown",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "SLOWING_REFUND",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bidders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bonusETHSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "boostingRefund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "claimedTokens",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compensation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endBidDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endCancellationDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "escrow",
      "outputs": [
        {
          "internalType": "contract IStakingEscrow",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ethAmount",
          "type": "uint256"
        }
      ],
      "name": "ethToTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ethAmount",
          "type": "uint256"
        }
      ],
      "name": "ethToWork",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable[]",
          "name": "_biddersForRefund",
          "type": "address[]"
        }
      ],
      "name": "forceRefund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bidder",
          "type": "address"
        }
      ],
      "name": "getAvailableRefund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBiddersLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bidder",
          "type": "address"
        }
      ],
      "name": "getRemainingWork",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isClaimingAvailable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxAllowableLockedTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minAllowableLockedTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minAllowedBid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextBidderToCheck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "refundETH",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shutdown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPeriods",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBidDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract NuCypherToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "tokenDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gasToSaveState",
          "type": "uint256"
        }
      ],
      "name": "verifyBiddingCorrectness",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawCompensation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "workInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "depositedETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "completedWork",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "claimed",
          "type": "bool"
        },
        {
          "internalType": "uint128",
          "name": "index",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_completedWork",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_depositedETH",
          "type": "uint256"
        }
      ],
      "name": "workToETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/contracts/IStakingEscrow.sol",
    "11": "contracts/contracts/NuCypherToken.sol",
    "15": "contracts/contracts/WorkLock.sol",
    "19": "contracts/contracts/lib/AdditionalMath.sol",
    "33": "contracts/zeppelin/math/SafeMath.sol",
    "34": "contracts/zeppelin/ownership/Ownable.sol",
    "36": "contracts/zeppelin/token/ERC20/ERC20.sol",
    "37": "contracts/zeppelin/token/ERC20/ERC20Detailed.sol",
    "38": "contracts/zeppelin/token/ERC20/IERC20.sol",
    "39": "contracts/zeppelin/token/ERC20/SafeERC20.sol",
    "40": "contracts/zeppelin/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/WorkLock.sol",
    "exportedSymbols": {
      "AdditionalMath": [
        7462
      ],
      "Address": [
        14756
      ],
      "ERC20": [
        14103
      ],
      "ERC20Detailed": [
        14165
      ],
      "IERC20": [
        14235
      ],
      "IStakingEscrow": [
        691
      ],
      "NuCypherToken": [
        751
      ],
      "Ownable": [
        13666
      ],
      "SafeERC20": [
        14459
      ],
      "SafeMath": [
        13545
      ],
      "TokenRecipient": [
        765
      ],
      "WorkLock": [
        7000
      ]
    },
    "id": 7001,
    "license": "AGPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5260,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "47:23:15"
      },
      {
        "absolutePath": "contracts/zeppelin/math/SafeMath.sol",
        "file": "../zeppelin/math/SafeMath.sol",
        "id": 5261,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7001,
        "sourceUnit": 13546,
        "src": "120:39:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/zeppelin/token/ERC20/SafeERC20.sol",
        "file": "../zeppelin/token/ERC20/SafeERC20.sol",
        "id": 5262,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7001,
        "sourceUnit": 14460,
        "src": "160:47:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/zeppelin/utils/Address.sol",
        "file": "../zeppelin/utils/Address.sol",
        "id": 5263,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7001,
        "sourceUnit": 14757,
        "src": "208:39:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/zeppelin/ownership/Ownable.sol",
        "file": "../zeppelin/ownership/Ownable.sol",
        "id": 5264,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7001,
        "sourceUnit": 13667,
        "src": "248:43:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/NuCypherToken.sol",
        "file": "./NuCypherToken.sol",
        "id": 5265,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7001,
        "sourceUnit": 766,
        "src": "292:29:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/IStakingEscrow.sol",
        "file": "./IStakingEscrow.sol",
        "id": 5266,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7001,
        "sourceUnit": 692,
        "src": "322:30:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/lib/AdditionalMath.sol",
        "file": "./lib/AdditionalMath.sol",
        "id": 5267,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7001,
        "sourceUnit": 7463,
        "src": "353:34:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5269,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13666,
              "src": "463:7:15"
            },
            "id": 5270,
            "nodeType": "InheritanceSpecifier",
            "src": "463:7:15"
          }
        ],
        "canonicalName": "WorkLock",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5268,
          "nodeType": "StructuredDocumentation",
          "src": "390:51:15",
          "text": " @notice The WorkLock distribution contract"
        },
        "fullyImplemented": true,
        "id": 7000,
        "linearizedBaseContracts": [
          7000,
          13666
        ],
        "name": "WorkLock",
        "nameLocation": "451:8:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5274,
            "libraryName": {
              "id": 5271,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14459,
              "src": "483:9:15"
            },
            "nodeType": "UsingForDirective",
            "src": "477:34:15",
            "typeName": {
              "id": 5273,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5272,
                "name": "NuCypherToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 751,
                "src": "497:13:15"
              },
              "referencedDeclaration": 751,
              "src": "497:13:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NuCypherToken_$751",
                "typeString": "contract NuCypherToken"
              }
            }
          },
          {
            "id": 5277,
            "libraryName": {
              "id": 5275,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13545,
              "src": "522:8:15"
            },
            "nodeType": "UsingForDirective",
            "src": "516:27:15",
            "typeName": {
              "id": 5276,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "535:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 5280,
            "libraryName": {
              "id": 5278,
              "name": "AdditionalMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7462,
              "src": "554:14:15"
            },
            "nodeType": "UsingForDirective",
            "src": "548:33:15",
            "typeName": {
              "id": 5279,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "573:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 5283,
            "libraryName": {
              "id": 5281,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14756,
              "src": "592:7:15"
            },
            "nodeType": "UsingForDirective",
            "src": "586:34:15",
            "typeName": {
              "id": 5282,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "604:15:15",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "id": 5286,
            "libraryName": {
              "id": 5284,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14756,
              "src": "631:7:15"
            },
            "nodeType": "UsingForDirective",
            "src": "625:26:15",
            "typeName": {
              "id": 5285,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "643:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "anonymous": false,
            "id": 5292,
            "name": "Deposited",
            "nameLocation": "663:9:15",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5288,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "689:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5292,
                  "src": "673:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5290,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "705:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5292,
                  "src": "697:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "672:39:15"
            },
            "src": "657:55:15"
          },
          {
            "anonymous": false,
            "id": 5298,
            "name": "Bid",
            "nameLocation": "723:3:15",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5294,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "743:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5298,
                  "src": "727:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "727:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5296,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "depositedETH",
                  "nameLocation": "759:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5298,
                  "src": "751:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "751:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "726:46:15"
            },
            "src": "717:56:15"
          },
          {
            "anonymous": false,
            "id": 5304,
            "name": "Claimed",
            "nameLocation": "784:7:15",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5300,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "808:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5304,
                  "src": "792:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5302,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimedTokens",
                  "nameLocation": "824:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5304,
                  "src": "816:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "791:47:15"
            },
            "src": "778:61:15"
          },
          {
            "anonymous": false,
            "id": 5312,
            "name": "Refund",
            "nameLocation": "850:6:15",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5306,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "873:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5312,
                  "src": "857:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "857:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5308,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "refundETH",
                  "nameLocation": "889:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5312,
                  "src": "881:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5310,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "completedWork",
                  "nameLocation": "908:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5312,
                  "src": "900:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "900:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "856:66:15"
            },
            "src": "844:79:15"
          },
          {
            "anonymous": false,
            "id": 5318,
            "name": "Canceled",
            "nameLocation": "934:8:15",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5314,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "959:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5318,
                  "src": "943:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5316,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "975:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5318,
                  "src": "967:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "942:39:15"
            },
            "src": "928:54:15"
          },
          {
            "anonymous": false,
            "id": 5326,
            "name": "BiddersChecked",
            "nameLocation": "993:14:15",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5320,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1024:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5326,
                  "src": "1008:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1008:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5322,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startIndex",
                  "nameLocation": "1040:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5326,
                  "src": "1032:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5324,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "endIndex",
                  "nameLocation": "1060:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5326,
                  "src": "1052:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5323,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1007:62:15"
            },
            "src": "987:83:15"
          },
          {
            "anonymous": false,
            "id": 5334,
            "name": "ForceRefund",
            "nameLocation": "1081:11:15",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5328,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1109:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5334,
                  "src": "1093:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5330,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "bidder",
                  "nameLocation": "1133:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5334,
                  "src": "1117:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5332,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "refundETH",
                  "nameLocation": "1149:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5334,
                  "src": "1141:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1141:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1092:67:15"
            },
            "src": "1075:85:15"
          },
          {
            "anonymous": false,
            "id": 5340,
            "name": "CompensationWithdrawn",
            "nameLocation": "1171:21:15",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5336,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1209:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5340,
                  "src": "1193:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1193:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5338,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1225:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5340,
                  "src": "1217:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1217:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1192:39:15"
            },
            "src": "1165:67:15"
          },
          {
            "anonymous": false,
            "id": 5344,
            "name": "Shutdown",
            "nameLocation": "1243:8:15",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5342,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1268:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5344,
                  "src": "1252:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1252:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1251:24:15"
            },
            "src": "1237:39:15"
          },
          {
            "canonicalName": "WorkLock.WorkInfo",
            "id": 5353,
            "members": [
              {
                "constant": false,
                "id": 5346,
                "mutability": "mutable",
                "name": "depositedETH",
                "nameLocation": "1316:12:15",
                "nodeType": "VariableDeclaration",
                "scope": 5353,
                "src": "1308:20:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 5345,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1308:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5348,
                "mutability": "mutable",
                "name": "completedWork",
                "nameLocation": "1346:13:15",
                "nodeType": "VariableDeclaration",
                "scope": 5353,
                "src": "1338:21:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 5347,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1338:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5350,
                "mutability": "mutable",
                "name": "claimed",
                "nameLocation": "1374:7:15",
                "nodeType": "VariableDeclaration",
                "scope": 5353,
                "src": "1369:12:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 5349,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1369:4:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5352,
                "mutability": "mutable",
                "name": "index",
                "nameLocation": "1399:5:15",
                "nodeType": "VariableDeclaration",
                "scope": 5353,
                "src": "1391:13:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 5351,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1391:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "WorkInfo",
            "nameLocation": "1289:8:15",
            "nodeType": "StructDefinition",
            "scope": 7000,
            "src": "1282:129:15",
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "87865033",
            "id": 5356,
            "mutability": "constant",
            "name": "SLOWING_REFUND",
            "nameLocation": "1440:14:15",
            "nodeType": "VariableDeclaration",
            "scope": 7000,
            "src": "1417:43:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 5354,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "1417:6:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 5355,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1457:3:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 5359,
            "mutability": "constant",
            "name": "MAX_ETH_SUPPLY",
            "nameLocation": "1491:14:15",
            "nodeType": "VariableDeclaration",
            "scope": 7000,
            "src": "1466:52:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5357,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1466:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32653130",
              "id": 5358,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1508:10:15",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20000000000000000000000000000_by_1",
                "typeString": "int_const 20000000000000000000000000000"
              },
              "value": "2e10"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 5362,
            "mutability": "immutable",
            "name": "token",
            "nameLocation": "1556:5:15",
            "nodeType": "VariableDeclaration",
            "scope": 7000,
            "src": "1525:36:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NuCypherToken_$751",
              "typeString": "contract NuCypherToken"
            },
            "typeName": {
              "id": 5361,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5360,
                "name": "NuCypherToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 751,
                "src": "1525:13:15"
              },
              "referencedDeclaration": 751,
              "src": "1525:13:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NuCypherToken_$751",
                "typeString": "contract NuCypherToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e2fdcc17",
            "id": 5365,
            "mutability": "immutable",
            "name": "escrow",
            "nameLocation": "1599:6:15",
            "nodeType": "VariableDeclaration",
            "scope": 7000,
            "src": "1567:38:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStakingEscrow_$691",
              "typeString": "contract IStakingEscrow"
            },
            "typeName": {
              "id": 5364,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5363,
                "name": "IStakingEscrow",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 691,
                "src": "1567:14:15"
              },
              "referencedDeclaration": 691,
              "src": "1567:14:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                "typeString": "contract IStakingEscrow"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5bf997f5",
            "id": 5367,
            "mutability": "immutable",
            "name": "boostingRefund",
            "nameLocation": "2060:14:15",
            "nodeType": "VariableDeclaration",
            "scope": 7000,
            "src": "2035:39:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5366,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2035:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4f1910a1",
            "id": 5369,
            "mutability": "immutable",
            "name": "minAllowedBid",
            "nameLocation": "2105:13:15",
            "nodeType": "VariableDeclaration",
            "scope": 7000,
            "src": "2080:38:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5368,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2080:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "be7ff580",
            "id": 5371,
            "mutability": "immutable",
            "name": "stakingPeriods",
            "nameLocation": "2148:14:15",
            "nodeType": "VariableDeclaration",
            "scope": 7000,
            "src": "2124:38:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 5370,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "2124:6:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6fb653a2",
            "id": 5373,
            "mutability": "immutable",
            "name": "maxAllowableLockedTokens",
            "nameLocation": "2230:24:15",
            "nodeType": "VariableDeclaration",
            "scope": 7000,
            "src": "2205:49:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5372,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2205:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8cab6c4f",
            "id": 5375,
            "mutability": "immutable",
            "name": "minAllowableLockedTokens",
            "nameLocation": "2285:24:15",
            "nodeType": "VariableDeclaration",
            "scope": 7000,
            "src": "2260:49:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5374,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2260:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7824407f",
            "id": 5377,
            "mutability": "mutable",
            "name": "tokenSupply",
            "nameLocation": "2331:11:15",
            "nodeType": "VariableDeclaration",
            "scope": 7000,
            "src": "2316:26:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5376,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2316:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7f4fad69",
            "id": 5379,
            "mutability": "mutable",
            "name": "startBidDate",
            "nameLocation": "2363:12:15",
            "nodeType": "VariableDeclaration",
            "scope": 7000,
            "src": "2348:27:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5378,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2348:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "897db45c",
            "id": 5381,
            "mutability": "mutable",
            "name": "endBidDate",
            "nameLocation": "2396:10:15",
            "nodeType": "VariableDeclaration",
            "scope": 7000,
            "src": "2381:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5380,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2381:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "617e677e",
            "id": 5383,
            "mutability": "mutable",
            "name": "endCancellationDate",
            "nameLocation": "2427:19:15",
            "nodeType": "VariableDeclaration",
            "scope": 7000,
            "src": "2412:34:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5382,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2412:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9b51ac85",
            "id": 5385,
            "mutability": "mutable",
            "name": "bonusETHSupply",
            "nameLocation": "2468:14:15",
            "nodeType": "VariableDeclaration",
            "scope": 7000,
            "src": "2453:29:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5384,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2453:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1f45002c",
            "id": 5390,
            "mutability": "mutable",
            "name": "workInfo",
            "nameLocation": "2524:8:15",
            "nodeType": "VariableDeclaration",
            "scope": 7000,
            "src": "2488:44:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WorkInfo_$5353_storage_$",
              "typeString": "mapping(address => struct WorkLock.WorkInfo)"
            },
            "typeName": {
              "id": 5389,
              "keyType": {
                "id": 5386,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2496:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2488:28:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WorkInfo_$5353_storage_$",
                "typeString": "mapping(address => struct WorkLock.WorkInfo)"
              },
              "valueType": {
                "id": 5388,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 5387,
                  "name": "WorkInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5353,
                  "src": "2507:8:15"
                },
                "referencedDeclaration": 5353,
                "src": "2507:8:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                  "typeString": "struct WorkLock.WorkInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5707bee5",
            "id": 5394,
            "mutability": "mutable",
            "name": "compensation",
            "nameLocation": "2573:12:15",
            "nodeType": "VariableDeclaration",
            "scope": 7000,
            "src": "2538:47:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5393,
              "keyType": {
                "id": 5391,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2546:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2538:27:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 5392,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2557:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cff29dfd",
            "id": 5397,
            "mutability": "mutable",
            "name": "bidders",
            "nameLocation": "2609:7:15",
            "nodeType": "VariableDeclaration",
            "scope": 7000,
            "src": "2592:24:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 5395,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2592:7:15",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 5396,
              "nodeType": "ArrayTypeName",
              "src": "2592:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b15cf964",
            "id": 5399,
            "mutability": "mutable",
            "name": "nextBidderToCheck",
            "nameLocation": "2702:17:15",
            "nodeType": "VariableDeclaration",
            "scope": 7000,
            "src": "2687:32:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5398,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2687:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 5411,
              "nodeType": "Block",
              "src": "2838:143:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5403,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2856:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 5404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2856:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 5405,
                          "name": "endCancellationDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5383,
                          "src": "2875:19:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2856:38:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7065726174696f6e20697320616c6c6f776564207768656e2063616e63656c6c6174696f6e207068617365206973206f766572",
                        "id": 5407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2908:54:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2f1719cd587e483d5caa26364d22be237e309b2e4b61bacef267f07d310ed0d",
                          "typeString": "literal_string \"Operation is allowed when cancellation phase is over\""
                        },
                        "value": "Operation is allowed when cancellation phase is over"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2f1719cd587e483d5caa26364d22be237e309b2e4b61bacef267f07d310ed0d",
                          "typeString": "literal_string \"Operation is allowed when cancellation phase is over\""
                        }
                      ],
                      "id": 5402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2848:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2848:115:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5409,
                  "nodeType": "ExpressionStatement",
                  "src": "2848:115:15"
                },
                {
                  "id": 5410,
                  "nodeType": "PlaceholderStatement",
                  "src": "2973:1:15"
                }
              ]
            },
            "documentation": {
              "id": 5400,
              "nodeType": "StructuredDocumentation",
              "src": "2726:68:15",
              "text": " @dev Checks timestamp regarding cancellation window"
            },
            "id": 5412,
            "name": "afterCancellationWindow",
            "nameLocation": "2808:23:15",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 5401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2831:2:15"
            },
            "src": "2799:182:15",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5555,
              "nodeType": "Block",
              "src": "3760:1791:15",
              "statements": [
                {
                  "assignments": [
                    5435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5435,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nameLocation": "3778:11:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 5555,
                      "src": "3770:19:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5434,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3770:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5439,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 5436,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5416,
                        "src": "3792:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$751",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 5437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13740,
                      "src": "3792:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 5438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3792:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3770:42:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 5476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 5472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 5468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 5464,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 5459,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 5455,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 5449,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 5443,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 5441,
                                          "name": "totalSupply",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5435,
                                          "src": "3830:11:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 5442,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3844:1:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "3830:15:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        },
                                        "id": 5448,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                              "id": 5444,
                                              "name": "_escrow",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 5419,
                                              "src": "3935:7:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                                                "typeString": "contract IStakingEscrow"
                                              }
                                            },
                                            "id": 5445,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "secondsPerPeriod",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 576,
                                            "src": "3935:24:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint32_$",
                                              "typeString": "function () view external returns (uint32)"
                                            }
                                          },
                                          "id": 5446,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3935:26:15",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 5447,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3964:1:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "3935:30:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "3830:135:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_contract$_NuCypherToken_$751",
                                        "typeString": "contract NuCypherToken"
                                      },
                                      "id": 5454,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "id": 5450,
                                            "name": "_escrow",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5419,
                                            "src": "4045:7:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                                              "typeString": "contract IStakingEscrow"
                                            }
                                          },
                                          "id": 5451,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "token",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 571,
                                          "src": "4045:13:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_NuCypherToken_$751_$",
                                            "typeString": "function () view external returns (contract NuCypherToken)"
                                          }
                                        },
                                        "id": 5452,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4045:15:15",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_NuCypherToken_$751",
                                          "typeString": "contract NuCypherToken"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "id": 5453,
                                        "name": "_token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5416,
                                        "src": "4064:6:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_NuCypherToken_$751",
                                          "typeString": "contract NuCypherToken"
                                        }
                                      },
                                      "src": "4045:25:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "3830:240:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 5458,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 5456,
                                      "name": "_endBidDate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5423,
                                      "src": "4155:11:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "id": 5457,
                                      "name": "_startBidDate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5421,
                                      "src": "4169:13:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4155:27:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "3830:352:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5463,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 5460,
                                    "name": "_endBidDate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5423,
                                    "src": "4253:11:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 5461,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "4267:5:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 5462,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "4267:15:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4253:29:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "3830:452:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5467,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 5465,
                                  "name": "_endCancellationDate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5425,
                                  "src": "4348:20:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 5466,
                                  "name": "_endBidDate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5423,
                                  "src": "4372:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4348:35:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3830:553:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5469,
                                "name": "_minAllowedBid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5431,
                                "src": "4452:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 5470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4469:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4452:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3830:640:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 5473,
                              "name": "_boostingRefund",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5427,
                              "src": "4543:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 5474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4561:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4543:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3830:732:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 5481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5477,
                            "name": "_stakingPeriods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5429,
                            "src": "4639:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 5478,
                                "name": "_escrow",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5419,
                                "src": "4658:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                                  "typeString": "contract IStakingEscrow"
                                }
                              },
                              "id": 5479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "minLockedPeriods",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 645,
                              "src": "4658:24:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
                                "typeString": "function () view external returns (uint16)"
                              }
                            },
                            "id": 5480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4658:26:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "4639:45:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3830:854:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3822:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3822:863:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5484,
                  "nodeType": "ExpressionStatement",
                  "src": "3822:863:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5490,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5488,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 5486,
                                    "name": "MAX_ETH_SUPPLY",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5359,
                                    "src": "4896:14:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 5487,
                                    "name": "totalSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5435,
                                    "src": "4913:11:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4896:28:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 5489,
                                  "name": "SLOWING_REFUND",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5356,
                                  "src": "4927:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "4896:45:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 5491,
                                "name": "MAX_ETH_SUPPLY",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5359,
                                "src": "4944:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4896:62:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 5493,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5435,
                              "src": "4961:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4896:76:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 5495,
                            "name": "SLOWING_REFUND",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5356,
                            "src": "4976:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "4896:94:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5499,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 5497,
                                    "name": "MAX_ETH_SUPPLY",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5359,
                                    "src": "5006:14:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 5498,
                                    "name": "totalSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5435,
                                    "src": "5023:11:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5006:28:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 5500,
                                  "name": "_boostingRefund",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5427,
                                  "src": "5037:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5006:46:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 5502,
                                "name": "MAX_ETH_SUPPLY",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5359,
                                "src": "5055:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5006:63:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 5504,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5435,
                              "src": "5072:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5006:77:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 5506,
                            "name": "_boostingRefund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5427,
                            "src": "5087:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5006:96:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4896:206:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5485,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4888:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4888:215:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5510,
                  "nodeType": "ExpressionStatement",
                  "src": "4888:215:15"
                },
                {
                  "expression": {
                    "id": 5513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5511,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5362,
                      "src": "5114:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NuCypherToken_$751",
                        "typeString": "contract NuCypherToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5512,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5416,
                      "src": "5122:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NuCypherToken_$751",
                        "typeString": "contract NuCypherToken"
                      }
                    },
                    "src": "5114:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NuCypherToken_$751",
                      "typeString": "contract NuCypherToken"
                    }
                  },
                  "id": 5514,
                  "nodeType": "ExpressionStatement",
                  "src": "5114:14:15"
                },
                {
                  "expression": {
                    "id": 5517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5515,
                      "name": "escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5365,
                      "src": "5138:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                        "typeString": "contract IStakingEscrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5516,
                      "name": "_escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5419,
                      "src": "5147:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                        "typeString": "contract IStakingEscrow"
                      }
                    },
                    "src": "5138:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                      "typeString": "contract IStakingEscrow"
                    }
                  },
                  "id": 5518,
                  "nodeType": "ExpressionStatement",
                  "src": "5138:16:15"
                },
                {
                  "expression": {
                    "id": 5521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5519,
                      "name": "startBidDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5379,
                      "src": "5164:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5520,
                      "name": "_startBidDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5421,
                      "src": "5179:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5164:28:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5522,
                  "nodeType": "ExpressionStatement",
                  "src": "5164:28:15"
                },
                {
                  "expression": {
                    "id": 5525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5523,
                      "name": "endBidDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5381,
                      "src": "5202:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5524,
                      "name": "_endBidDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5423,
                      "src": "5215:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5202:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5526,
                  "nodeType": "ExpressionStatement",
                  "src": "5202:24:15"
                },
                {
                  "expression": {
                    "id": 5529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5527,
                      "name": "endCancellationDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5383,
                      "src": "5236:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5528,
                      "name": "_endCancellationDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5425,
                      "src": "5258:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5236:42:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5530,
                  "nodeType": "ExpressionStatement",
                  "src": "5236:42:15"
                },
                {
                  "expression": {
                    "id": 5533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5531,
                      "name": "boostingRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5367,
                      "src": "5288:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5532,
                      "name": "_boostingRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5427,
                      "src": "5305:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5288:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5534,
                  "nodeType": "ExpressionStatement",
                  "src": "5288:32:15"
                },
                {
                  "expression": {
                    "id": 5537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5535,
                      "name": "stakingPeriods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5371,
                      "src": "5330:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5536,
                      "name": "_stakingPeriods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5429,
                      "src": "5347:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "5330:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 5538,
                  "nodeType": "ExpressionStatement",
                  "src": "5330:32:15"
                },
                {
                  "expression": {
                    "id": 5541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5539,
                      "name": "minAllowedBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5369,
                      "src": "5372:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5540,
                      "name": "_minAllowedBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5431,
                      "src": "5388:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5372:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5542,
                  "nodeType": "ExpressionStatement",
                  "src": "5372:30:15"
                },
                {
                  "expression": {
                    "id": 5547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5543,
                      "name": "maxAllowableLockedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5373,
                      "src": "5412:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 5544,
                          "name": "_escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5419,
                          "src": "5439:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                            "typeString": "contract IStakingEscrow"
                          }
                        },
                        "id": 5545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "maxAllowableLockedTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 650,
                        "src": "5439:32:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 5546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5439:34:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5412:61:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5548,
                  "nodeType": "ExpressionStatement",
                  "src": "5412:61:15"
                },
                {
                  "expression": {
                    "id": 5553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5549,
                      "name": "minAllowableLockedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5375,
                      "src": "5483:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 5550,
                          "name": "_escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5419,
                          "src": "5510:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                            "typeString": "contract IStakingEscrow"
                          }
                        },
                        "id": 5551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "minAllowableLockedTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 655,
                        "src": "5510:32:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 5552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5510:34:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5483:61:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5554,
                  "nodeType": "ExpressionStatement",
                  "src": "5483:61:15"
                }
              ]
            },
            "documentation": {
              "id": 5413,
              "nodeType": "StructuredDocumentation",
              "src": "2987:493:15",
              "text": " @param _token Token contract\n @param _escrow Escrow contract\n @param _startBidDate Timestamp when bidding starts\n @param _endBidDate Timestamp when bidding will end\n @param _endCancellationDate Timestamp when cancellation will ends\n @param _boostingRefund Coefficient to boost refund ETH\n @param _stakingPeriods Amount of periods during which tokens will be locked after claiming\n @param _minAllowedBid Minimum allowed ETH amount for bidding"
            },
            "id": 5556,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5416,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3520:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5556,
                  "src": "3506:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NuCypherToken_$751",
                    "typeString": "contract NuCypherToken"
                  },
                  "typeName": {
                    "id": 5415,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5414,
                      "name": "NuCypherToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 751,
                      "src": "3506:13:15"
                    },
                    "referencedDeclaration": 751,
                    "src": "3506:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NuCypherToken_$751",
                      "typeString": "contract NuCypherToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5419,
                  "mutability": "mutable",
                  "name": "_escrow",
                  "nameLocation": "3551:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5556,
                  "src": "3536:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                    "typeString": "contract IStakingEscrow"
                  },
                  "typeName": {
                    "id": 5418,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5417,
                      "name": "IStakingEscrow",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 691,
                      "src": "3536:14:15"
                    },
                    "referencedDeclaration": 691,
                    "src": "3536:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                      "typeString": "contract IStakingEscrow"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5421,
                  "mutability": "mutable",
                  "name": "_startBidDate",
                  "nameLocation": "3576:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5556,
                  "src": "3568:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3568:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5423,
                  "mutability": "mutable",
                  "name": "_endBidDate",
                  "nameLocation": "3607:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5556,
                  "src": "3599:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3599:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5425,
                  "mutability": "mutable",
                  "name": "_endCancellationDate",
                  "nameLocation": "3636:20:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5556,
                  "src": "3628:28:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3628:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5427,
                  "mutability": "mutable",
                  "name": "_boostingRefund",
                  "nameLocation": "3674:15:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5556,
                  "src": "3666:23:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3666:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5429,
                  "mutability": "mutable",
                  "name": "_stakingPeriods",
                  "nameLocation": "3706:15:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5556,
                  "src": "3699:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 5428,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3699:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5431,
                  "mutability": "mutable",
                  "name": "_minAllowedBid",
                  "nameLocation": "3739:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5556,
                  "src": "3731:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3731:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3496:263:15"
            },
            "returnParameters": {
              "id": 5433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3760:0:15"
            },
            "scope": 7000,
            "src": "3485:2066:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5592,
              "nodeType": "Block",
              "src": "5709:246:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5563,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5727:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 5564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5727:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 5565,
                          "name": "endBidDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5381,
                          "src": "5745:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5727:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e2774206465706f736974206d6f726520746f6b656e7320616674657220656e64206f662062696464696e67",
                        "id": 5567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5757:48:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_024e107dfc6e1a0b9c8398bcc0d405ff2fb3890ccfd28ea76ae2ffaa8dd72db7",
                          "typeString": "literal_string \"Can't deposit more tokens after end of bidding\""
                        },
                        "value": "Can't deposit more tokens after end of bidding"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_024e107dfc6e1a0b9c8398bcc0d405ff2fb3890ccfd28ea76ae2ffaa8dd72db7",
                          "typeString": "literal_string \"Can't deposit more tokens after end of bidding\""
                        }
                      ],
                      "id": 5562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5719:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5719:87:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5569,
                  "nodeType": "ExpressionStatement",
                  "src": "5719:87:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5573,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5839:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5839:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 5577,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5859:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WorkLock_$7000",
                              "typeString": "contract WorkLock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WorkLock_$7000",
                              "typeString": "contract WorkLock"
                            }
                          ],
                          "id": 5576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5851:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5575,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5851:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5851:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5579,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5559,
                        "src": "5866:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5570,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5362,
                        "src": "5816:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$751",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 5572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14292,
                      "src": "5816:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$14235_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$14235_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 5580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5816:57:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5581,
                  "nodeType": "ExpressionStatement",
                  "src": "5816:57:15"
                },
                {
                  "expression": {
                    "id": 5584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5582,
                      "name": "tokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5377,
                      "src": "5883:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 5583,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5559,
                      "src": "5898:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5883:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5585,
                  "nodeType": "ExpressionStatement",
                  "src": "5883:21:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5587,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5929:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5929:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5589,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5559,
                        "src": "5941:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5586,
                      "name": "Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5292,
                      "src": "5919:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5919:29:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5591,
                  "nodeType": "EmitStatement",
                  "src": "5914:34:15"
                }
              ]
            },
            "documentation": {
              "id": 5557,
              "nodeType": "StructuredDocumentation",
              "src": "5557:100:15",
              "text": " @notice Deposit tokens to contract\n @param _value Amount of tokens to transfer"
            },
            "functionSelector": "e1fe7d23",
            "id": 5593,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenDeposit",
            "nameLocation": "5671:12:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5559,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5692:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5593,
                  "src": "5684:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5684:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5683:16:15"
            },
            "returnParameters": {
              "id": 5561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5709:0:15"
            },
            "scope": 7000,
            "src": "5662:293:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5643,
              "nodeType": "Block",
              "src": "6195:491:15",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5601,
                      "name": "_ethAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5596,
                      "src": "6209:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 5602,
                      "name": "minAllowedBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5369,
                      "src": "6222:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6209:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5607,
                  "nodeType": "IfStatement",
                  "src": "6205:65:15",
                  "trueBody": {
                    "id": 5606,
                    "nodeType": "Block",
                    "src": "6237:33:15",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 5604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6258:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 5600,
                        "id": 5605,
                        "nodeType": "Return",
                        "src": "6251:8:15"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5608,
                      "name": "bonusETHSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5385,
                      "src": "6357:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6375:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6357:19:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5617,
                  "nodeType": "IfStatement",
                  "src": "6353:85:15",
                  "trueBody": {
                    "id": 5616,
                    "nodeType": "Block",
                    "src": "6378:60:15",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5611,
                            "name": "tokenSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5377,
                            "src": "6399:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "expression": {
                              "id": 5612,
                              "name": "bidders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5397,
                              "src": "6413:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 5613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6413:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6399:28:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 5600,
                        "id": 5615,
                        "nodeType": "Return",
                        "src": "6392:35:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    5619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5619,
                      "mutability": "mutable",
                      "name": "bonusETH",
                      "nameLocation": "6456:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 5643,
                      "src": "6448:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5618,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6448:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5623,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5620,
                      "name": "_ethAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5596,
                      "src": "6467:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 5621,
                      "name": "minAllowedBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5369,
                      "src": "6480:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6467:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6448:45:15"
                },
                {
                  "assignments": [
                    5625
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5625,
                      "mutability": "mutable",
                      "name": "bonusTokenSupply",
                      "nameLocation": "6511:16:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 5643,
                      "src": "6503:24:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5624,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6503:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5632,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5626,
                      "name": "tokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5377,
                      "src": "6530:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 5627,
                          "name": "bidders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5397,
                          "src": "6544:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 5628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6544:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 5629,
                        "name": "minAllowableLockedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5375,
                        "src": "6561:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6544:41:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6530:55:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6503:82:15"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5633,
                      "name": "minAllowableLockedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5375,
                      "src": "6602:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 5639,
                          "name": "bonusETHSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5385,
                          "src": "6664:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 5636,
                              "name": "bonusTokenSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5625,
                              "src": "6642:16:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 5634,
                              "name": "bonusETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5619,
                              "src": "6629:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13439,
                            "src": "6629:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 5637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6629:30:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13454,
                        "src": "6629:34:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6629:50:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6602:77:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5600,
                  "id": 5642,
                  "nodeType": "Return",
                  "src": "6595:84:15"
                }
              ]
            },
            "documentation": {
              "id": 5594,
              "nodeType": "StructuredDocumentation",
              "src": "5961:158:15",
              "text": " @notice Calculate amount of tokens that will be get for specified amount of ETH\n @dev This value will be fixed only after end of bidding"
            },
            "functionSelector": "a4c89322",
            "id": 5644,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ethToTokens",
            "nameLocation": "6133:11:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5596,
                  "mutability": "mutable",
                  "name": "_ethAmount",
                  "nameLocation": "6153:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5644,
                  "src": "6145:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6145:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6144:20:15"
            },
            "returnParameters": {
              "id": 5600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5599,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5644,
                  "src": "6186:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6186:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6185:9:15"
            },
            "scope": 7000,
            "src": "6124:562:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5670,
              "nodeType": "Block",
              "src": "6926:112:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5666,
                            "name": "boostingRefund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5367,
                            "src": "7015:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 5664,
                            "name": "_ethSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5651,
                            "src": "7000:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13439,
                          "src": "7000:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 5667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7000:30:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 5661,
                            "name": "SLOWING_REFUND",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5356,
                            "src": "6976:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 5658,
                                "name": "_tokenSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5649,
                                "src": "6958:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 5656,
                                "name": "_ethAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5647,
                                "src": "6943:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13439,
                              "src": "6943:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 5659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6943:28:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13439,
                          "src": "6943:32:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 5662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6943:48:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 5663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "divCeil",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7245,
                      "src": "6943:56:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 5668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6943:88:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5655,
                  "id": 5669,
                  "nodeType": "Return",
                  "src": "6936:95:15"
                }
              ]
            },
            "documentation": {
              "id": 5645,
              "nodeType": "StructuredDocumentation",
              "src": "6692:104:15",
              "text": " @notice Calculate amount of work that need to be done to refund specified amount of ETH"
            },
            "id": 5671,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ethToWork",
            "nameLocation": "6810:9:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5647,
                  "mutability": "mutable",
                  "name": "_ethAmount",
                  "nameLocation": "6828:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5671,
                  "src": "6820:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6820:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5649,
                  "mutability": "mutable",
                  "name": "_tokenSupply",
                  "nameLocation": "6848:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5671,
                  "src": "6840:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5648,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6840:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5651,
                  "mutability": "mutable",
                  "name": "_ethSupply",
                  "nameLocation": "6870:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5671,
                  "src": "6862:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6862:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6819:62:15"
            },
            "returnParameters": {
              "id": 5655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5654,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5671,
                  "src": "6913:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6913:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6912:9:15"
            },
            "scope": 7000,
            "src": "6801:237:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5787,
              "nodeType": "Block",
              "src": "7591:1823:15",
              "statements": [
                {
                  "assignments": [
                    5682
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5682,
                      "mutability": "mutable",
                      "name": "baseETHSupply",
                      "nameLocation": "7610:13:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 5787,
                      "src": "7602:21:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5681,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7602:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5687,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5683,
                        "name": "bidders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5397,
                        "src": "7626:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 5684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7626:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 5685,
                      "name": "minAllowedBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5369,
                      "src": "7643:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7626:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7602:54:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5688,
                      "name": "bonusETHSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5385,
                      "src": "7743:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7761:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7743:19:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5698,
                  "nodeType": "IfStatement",
                  "src": "7739:109:15",
                  "trueBody": {
                    "id": 5697,
                    "nodeType": "Block",
                    "src": "7764:84:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5692,
                              "name": "_ethToReclaim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5674,
                              "src": "7795:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 5693,
                              "name": "tokenSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5377,
                              "src": "7810:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 5694,
                              "name": "baseETHSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5682,
                              "src": "7823:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5691,
                            "name": "ethToWork",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5671,
                              5788,
                              5802
                            ],
                            "referencedDeclaration": 5671,
                            "src": "7785:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 5695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7785:52:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 5680,
                        "id": 5696,
                        "nodeType": "Return",
                        "src": "7778:59:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    5700
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5700,
                      "mutability": "mutable",
                      "name": "baseETH",
                      "nameLocation": "7866:7:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 5787,
                      "src": "7858:15:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5699,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7858:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5702,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 5701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7876:1:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7858:19:15"
                },
                {
                  "assignments": [
                    5704
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5704,
                      "mutability": "mutable",
                      "name": "bonusETH",
                      "nameLocation": "7895:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 5787,
                      "src": "7887:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5703,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7887:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5706,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 5705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7906:1:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7887:20:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5707,
                        "name": "_ethToReclaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5674,
                        "src": "8157:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 5708,
                        "name": "_restOfDepositedETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5676,
                        "src": "8173:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8157:35:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 5710,
                      "name": "minAllowedBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5369,
                      "src": "8196:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8157:52:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5717,
                        "name": "_restOfDepositedETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5676,
                        "src": "8512:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 5718,
                        "name": "minAllowedBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5369,
                        "src": "8535:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8512:36:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 5739,
                      "nodeType": "Block",
                      "src": "8855:135:15",
                      "statements": [
                        {
                          "expression": {
                            "id": 5731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 5725,
                              "name": "bonusETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5704,
                              "src": "8869:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 5726,
                                  "name": "_ethToReclaim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5674,
                                  "src": "8880:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 5727,
                                  "name": "_restOfDepositedETH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5676,
                                  "src": "8896:19:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8880:35:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 5729,
                                "name": "minAllowedBid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5369,
                                "src": "8918:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8880:51:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8869:62:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5732,
                          "nodeType": "ExpressionStatement",
                          "src": "8869:62:15"
                        },
                        {
                          "expression": {
                            "id": 5737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 5733,
                              "name": "baseETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5700,
                              "src": "8945:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5734,
                                "name": "_ethToReclaim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5674,
                                "src": "8955:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 5735,
                                "name": "bonusETH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5704,
                                "src": "8971:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8955:24:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8945:34:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5738,
                          "nodeType": "ExpressionStatement",
                          "src": "8945:34:15"
                        }
                      ]
                    },
                    "id": 5740,
                    "nodeType": "IfStatement",
                    "src": "8508:482:15",
                    "trueBody": {
                      "id": 5724,
                      "nodeType": "Block",
                      "src": "8550:299:15",
                      "statements": [
                        {
                          "expression": {
                            "id": 5722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 5720,
                              "name": "bonusETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5704,
                              "src": "8564:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 5721,
                              "name": "_ethToReclaim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5674,
                              "src": "8575:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8564:24:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5723,
                          "nodeType": "ExpressionStatement",
                          "src": "8564:24:15"
                        }
                      ]
                    }
                  },
                  "id": 5741,
                  "nodeType": "IfStatement",
                  "src": "8153:837:15",
                  "trueBody": {
                    "id": 5716,
                    "nodeType": "Block",
                    "src": "8211:291:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 5714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5712,
                            "name": "baseETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5700,
                            "src": "8225:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 5713,
                            "name": "_ethToReclaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5674,
                            "src": "8235:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8225:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5715,
                        "nodeType": "ExpressionStatement",
                        "src": "8225:23:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    5743
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5743,
                      "mutability": "mutable",
                      "name": "baseTokenSupply",
                      "nameLocation": "9008:15:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 5787,
                      "src": "9000:23:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5742,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9000:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5748,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5744,
                        "name": "bidders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5397,
                        "src": "9026:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 5745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9026:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 5746,
                      "name": "minAllowableLockedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5375,
                      "src": "9043:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9026:41:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9000:67:15"
                },
                {
                  "assignments": [
                    5750
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5750,
                      "mutability": "mutable",
                      "name": "work",
                      "nameLocation": "9085:4:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 5787,
                      "src": "9077:12:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5749,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9077:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5752,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 5751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9092:1:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9077:16:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5753,
                      "name": "baseETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5700,
                      "src": "9107:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9117:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9107:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5765,
                  "nodeType": "IfStatement",
                  "src": "9103:99:15",
                  "trueBody": {
                    "id": 5764,
                    "nodeType": "Block",
                    "src": "9120:82:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 5762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5756,
                            "name": "work",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5750,
                            "src": "9134:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 5758,
                                "name": "baseETH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5700,
                                "src": "9151:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 5759,
                                "name": "baseTokenSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5743,
                                "src": "9160:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 5760,
                                "name": "baseETHSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5682,
                                "src": "9177:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 5757,
                              "name": "ethToWork",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                5671,
                                5788,
                                5802
                              ],
                              "referencedDeclaration": 5671,
                              "src": "9141:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                              }
                            },
                            "id": 5761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9141:50:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9134:57:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5763,
                        "nodeType": "ExpressionStatement",
                        "src": "9134:57:15"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5766,
                      "name": "bonusETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5704,
                      "src": "9216:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9227:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9216:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5784,
                  "nodeType": "IfStatement",
                  "src": "9212:174:15",
                  "trueBody": {
                    "id": 5783,
                    "nodeType": "Block",
                    "src": "9230:156:15",
                    "statements": [
                      {
                        "assignments": [
                          5770
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5770,
                            "mutability": "mutable",
                            "name": "bonusTokenSupply",
                            "nameLocation": "9252:16:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 5783,
                            "src": "9244:24:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5769,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9244:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5774,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5771,
                            "name": "tokenSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5377,
                            "src": "9271:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 5772,
                            "name": "baseTokenSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5743,
                            "src": "9285:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9271:29:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9244:56:15"
                      },
                      {
                        "expression": {
                          "id": 5781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5775,
                            "name": "work",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5750,
                            "src": "9314:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 5777,
                                "name": "bonusETH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5704,
                                "src": "9332:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 5778,
                                "name": "bonusTokenSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5770,
                                "src": "9342:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 5779,
                                "name": "bonusETHSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5385,
                                "src": "9360:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 5776,
                              "name": "ethToWork",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                5671,
                                5788,
                                5802
                              ],
                              "referencedDeclaration": 5671,
                              "src": "9322:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                              }
                            },
                            "id": 5780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9322:53:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9314:61:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5782,
                        "nodeType": "ExpressionStatement",
                        "src": "9314:61:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 5785,
                    "name": "work",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5750,
                    "src": "9403:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5680,
                  "id": 5786,
                  "nodeType": "Return",
                  "src": "9396:11:15"
                }
              ]
            },
            "documentation": {
              "id": 5672,
              "nodeType": "StructuredDocumentation",
              "src": "7044:439:15",
              "text": " @notice Calculate amount of work that need to be done to refund specified amount of ETH\n @dev This value will be fixed only after end of bidding\n @param _ethToReclaim Specified sum of ETH staker wishes to reclaim following completion of work\n @param _restOfDepositedETH Remaining ETH in staker's deposit once ethToReclaim sum has been subtracted\n @dev _ethToReclaim + _restOfDepositedETH = depositedETH"
            },
            "id": 5788,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ethToWork",
            "nameLocation": "7497:9:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5674,
                  "mutability": "mutable",
                  "name": "_ethToReclaim",
                  "nameLocation": "7515:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5788,
                  "src": "7507:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7507:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5676,
                  "mutability": "mutable",
                  "name": "_restOfDepositedETH",
                  "nameLocation": "7538:19:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5788,
                  "src": "7530:27:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7530:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7506:52:15"
            },
            "returnParameters": {
              "id": 5680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5679,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5788,
                  "src": "7582:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7582:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7581:9:15"
            },
            "scope": 7000,
            "src": "7488:1926:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5801,
              "nodeType": "Block",
              "src": "9660:48:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5797,
                        "name": "_ethAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5791,
                        "src": "9687:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 5798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9699:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 5796,
                      "name": "ethToWork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5671,
                        5788,
                        5802
                      ],
                      "referencedDeclaration": 5788,
                      "src": "9677:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 5799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9677:24:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5795,
                  "id": 5800,
                  "nodeType": "Return",
                  "src": "9670:31:15"
                }
              ]
            },
            "documentation": {
              "id": 5789,
              "nodeType": "StructuredDocumentation",
              "src": "9420:166:15",
              "text": " @notice Calculate amount of work that need to be done to refund specified amount of ETH\n @dev This value will be fixed only after end of bidding"
            },
            "functionSelector": "124a1f4f",
            "id": 5802,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ethToWork",
            "nameLocation": "9600:9:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5791,
                  "mutability": "mutable",
                  "name": "_ethAmount",
                  "nameLocation": "9618:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5802,
                  "src": "9610:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9610:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9609:20:15"
            },
            "returnParameters": {
              "id": 5795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5794,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5802,
                  "src": "9651:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5793,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9651:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9650:9:15"
            },
            "scope": 7000,
            "src": "9591:117:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5828,
              "nodeType": "Block",
              "src": "9956:112:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5824,
                            "name": "SLOWING_REFUND",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5356,
                            "src": "10045:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "expression": {
                            "id": 5822,
                            "name": "_tokenSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5809,
                            "src": "10028:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13439,
                          "src": "10028:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 5825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10028:32:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 5819,
                            "name": "boostingRefund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5367,
                            "src": "10008:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 5816,
                                "name": "_ethSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5807,
                                "src": "9992:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 5814,
                                "name": "_completedWork",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5805,
                                "src": "9973:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13439,
                              "src": "9973:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 5817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9973:30:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13439,
                          "src": "9973:34:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 5820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9973:50:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 5821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13454,
                      "src": "9973:54:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 5826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9973:88:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5813,
                  "id": 5827,
                  "nodeType": "Return",
                  "src": "9966:95:15"
                }
              ]
            },
            "documentation": {
              "id": 5803,
              "nodeType": "StructuredDocumentation",
              "src": "9714:108:15",
              "text": " @notice Calculate amount of ETH that will be refund for completing specified amount of work"
            },
            "id": 5829,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "workToETH",
            "nameLocation": "9836:9:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5805,
                  "mutability": "mutable",
                  "name": "_completedWork",
                  "nameLocation": "9854:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5829,
                  "src": "9846:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9846:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5807,
                  "mutability": "mutable",
                  "name": "_ethSupply",
                  "nameLocation": "9878:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5829,
                  "src": "9870:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9870:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5809,
                  "mutability": "mutable",
                  "name": "_tokenSupply",
                  "nameLocation": "9898:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5829,
                  "src": "9890:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9890:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9845:66:15"
            },
            "returnParameters": {
              "id": 5813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5812,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5829,
                  "src": "9943:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5811,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9943:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9942:9:15"
            },
            "scope": 7000,
            "src": "9827:241:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5920,
              "nodeType": "Block",
              "src": "10345:930:15",
              "statements": [
                {
                  "assignments": [
                    5840
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5840,
                      "mutability": "mutable",
                      "name": "baseETHSupply",
                      "nameLocation": "10363:13:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 5920,
                      "src": "10355:21:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5839,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10355:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5845,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5841,
                        "name": "bidders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5397,
                        "src": "10379:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 5842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10379:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 5843,
                      "name": "minAllowedBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5369,
                      "src": "10396:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10379:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10355:54:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5846,
                      "name": "bonusETHSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5385,
                      "src": "10496:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10514:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10496:19:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5856,
                  "nodeType": "IfStatement",
                  "src": "10492:110:15",
                  "trueBody": {
                    "id": 5855,
                    "nodeType": "Block",
                    "src": "10517:85:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5850,
                              "name": "_completedWork",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5832,
                              "src": "10548:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 5851,
                              "name": "baseETHSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5840,
                              "src": "10564:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 5852,
                              "name": "tokenSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5377,
                              "src": "10579:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5849,
                            "name": "workToETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5829,
                              5921
                            ],
                            "referencedDeclaration": 5829,
                            "src": "10538:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 5853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10538:53:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 5838,
                        "id": 5854,
                        "nodeType": "Return",
                        "src": "10531:60:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    5858
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5858,
                      "mutability": "mutable",
                      "name": "bonusWork",
                      "nameLocation": "10620:9:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 5920,
                      "src": "10612:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5857,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10612:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5860,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 5859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10632:1:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10612:21:15"
                },
                {
                  "assignments": [
                    5862
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5862,
                      "mutability": "mutable",
                      "name": "bonusETH",
                      "nameLocation": "10651:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 5920,
                      "src": "10643:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5861,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10643:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5864,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 5863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10662:1:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10643:20:15"
                },
                {
                  "assignments": [
                    5866
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5866,
                      "mutability": "mutable",
                      "name": "baseTokenSupply",
                      "nameLocation": "10681:15:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 5920,
                      "src": "10673:23:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5865,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10673:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5871,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5867,
                        "name": "bidders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5397,
                        "src": "10699:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 5868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10699:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 5869,
                      "name": "minAllowableLockedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5375,
                      "src": "10716:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10699:41:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10673:67:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5872,
                      "name": "_depositedETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5834,
                      "src": "10755:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 5873,
                      "name": "minAllowedBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5369,
                      "src": "10771:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10755:29:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5907,
                  "nodeType": "IfStatement",
                  "src": "10751:395:15",
                  "trueBody": {
                    "id": 5906,
                    "nodeType": "Block",
                    "src": "10786:360:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 5879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5875,
                            "name": "bonusETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5862,
                            "src": "10800:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 5876,
                              "name": "_depositedETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5834,
                              "src": "10811:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 5877,
                              "name": "minAllowedBid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5369,
                              "src": "10827:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10811:29:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10800:40:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5880,
                        "nodeType": "ExpressionStatement",
                        "src": "10800:40:15"
                      },
                      {
                        "assignments": [
                          5882
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5882,
                            "mutability": "mutable",
                            "name": "bonusTokenSupply",
                            "nameLocation": "10862:16:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 5906,
                            "src": "10854:24:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5881,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10854:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5886,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5883,
                            "name": "tokenSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5377,
                            "src": "10881:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 5884,
                            "name": "baseTokenSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5866,
                            "src": "10895:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10881:29:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10854:56:15"
                      },
                      {
                        "expression": {
                          "id": 5893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5887,
                            "name": "bonusWork",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5858,
                            "src": "10924:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 5889,
                                "name": "bonusETH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5862,
                                "src": "10946:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 5890,
                                "name": "bonusTokenSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5882,
                                "src": "10956:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 5891,
                                "name": "bonusETHSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5385,
                                "src": "10974:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 5888,
                              "name": "ethToWork",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                5671,
                                5788,
                                5802
                              ],
                              "referencedDeclaration": 5671,
                              "src": "10936:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                              }
                            },
                            "id": 5892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10936:53:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10924:65:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5894,
                        "nodeType": "ExpressionStatement",
                        "src": "10924:65:15"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5895,
                            "name": "_completedWork",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5832,
                            "src": "11008:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 5896,
                            "name": "bonusWork",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5858,
                            "src": "11026:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11008:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5905,
                        "nodeType": "IfStatement",
                        "src": "11004:132:15",
                        "trueBody": {
                          "id": 5904,
                          "nodeType": "Block",
                          "src": "11037:99:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 5899,
                                    "name": "_completedWork",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5832,
                                    "src": "11072:14:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 5900,
                                    "name": "bonusETHSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5385,
                                    "src": "11088:14:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 5901,
                                    "name": "bonusTokenSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5882,
                                    "src": "11104:16:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 5898,
                                  "name": "workToETH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    5829,
                                    5921
                                  ],
                                  "referencedDeclaration": 5829,
                                  "src": "11062:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                                  }
                                },
                                "id": 5902,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11062:59:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 5838,
                              "id": 5903,
                              "nodeType": "Return",
                              "src": "11055:66:15"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 5910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5908,
                      "name": "_completedWork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5832,
                      "src": "11156:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 5909,
                      "name": "bonusWork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5858,
                      "src": "11174:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11156:27:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5911,
                  "nodeType": "ExpressionStatement",
                  "src": "11156:27:15"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5912,
                      "name": "bonusETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5862,
                      "src": "11200:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 5914,
                          "name": "_completedWork",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5832,
                          "src": "11221:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 5915,
                          "name": "baseETHSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5840,
                          "src": "11237:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 5916,
                          "name": "baseTokenSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5866,
                          "src": "11252:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 5913,
                        "name": "workToETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          5829,
                          5921
                        ],
                        "referencedDeclaration": 5829,
                        "src": "11211:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 5917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11211:57:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11200:68:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5838,
                  "id": 5919,
                  "nodeType": "Return",
                  "src": "11193:75:15"
                }
              ]
            },
            "documentation": {
              "id": 5830,
              "nodeType": "StructuredDocumentation",
              "src": "10074:170:15",
              "text": " @notice Calculate amount of ETH that will be refund for completing specified amount of work\n @dev This value will be fixed only after end of bidding"
            },
            "functionSelector": "66ade78e",
            "id": 5921,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "workToETH",
            "nameLocation": "10258:9:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5832,
                  "mutability": "mutable",
                  "name": "_completedWork",
                  "nameLocation": "10276:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5921,
                  "src": "10268:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10268:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5834,
                  "mutability": "mutable",
                  "name": "_depositedETH",
                  "nameLocation": "10300:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5921,
                  "src": "10292:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10292:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10267:47:15"
            },
            "returnParameters": {
              "id": 5838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5837,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5921,
                  "src": "10336:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5836,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10336:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10335:9:15"
            },
            "scope": 7000,
            "src": "10249:1026:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5965,
              "nodeType": "Block",
              "src": "11419:334:15",
              "statements": [
                {
                  "assignments": [
                    5931
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5931,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "11446:4:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 5965,
                      "src": "11429:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                        "typeString": "struct WorkLock.WorkInfo"
                      },
                      "typeName": {
                        "id": 5930,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5929,
                          "name": "WorkInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5353,
                          "src": "11429:8:15"
                        },
                        "referencedDeclaration": 5353,
                        "src": "11429:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                          "typeString": "struct WorkLock.WorkInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5935,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5932,
                      "name": "workInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5390,
                      "src": "11453:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WorkInfo_$5353_storage_$",
                        "typeString": "mapping(address => struct WorkLock.WorkInfo storage ref)"
                      }
                    },
                    "id": 5934,
                    "indexExpression": {
                      "id": 5933,
                      "name": "_bidder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5924,
                      "src": "11462:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11453:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WorkInfo_$5353_storage",
                      "typeString": "struct WorkLock.WorkInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11429:41:15"
                },
                {
                  "assignments": [
                    5937
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5937,
                      "mutability": "mutable",
                      "name": "completedWork",
                      "nameLocation": "11488:13:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 5965,
                      "src": "11480:21:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5936,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11480:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5946,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5943,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5931,
                          "src": "11541:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                            "typeString": "struct WorkLock.WorkInfo storage pointer"
                          }
                        },
                        "id": 5944,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "completedWork",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5348,
                        "src": "11541:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 5940,
                            "name": "_bidder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5924,
                            "src": "11528:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 5938,
                            "name": "escrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5365,
                            "src": "11504:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                              "typeString": "contract IStakingEscrow"
                            }
                          },
                          "id": 5939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getCompletedWork",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 662,
                          "src": "11504:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 5941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11504:32:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 5942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13424,
                      "src": "11504:36:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 5945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11504:56:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11480:80:15"
                },
                {
                  "assignments": [
                    5948
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5948,
                      "mutability": "mutable",
                      "name": "remainingWork",
                      "nameLocation": "11578:13:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 5965,
                      "src": "11570:21:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5947,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11570:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5953,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5950,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5931,
                          "src": "11604:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                            "typeString": "struct WorkLock.WorkInfo storage pointer"
                          }
                        },
                        "id": 5951,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "depositedETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5346,
                        "src": "11604:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5949,
                      "name": "ethToWork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5671,
                        5788,
                        5802
                      ],
                      "referencedDeclaration": 5802,
                      "src": "11594:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 5952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11594:28:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11570:52:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5954,
                      "name": "remainingWork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5948,
                      "src": "11636:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 5955,
                      "name": "completedWork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5937,
                      "src": "11653:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11636:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5960,
                  "nodeType": "IfStatement",
                  "src": "11632:69:15",
                  "trueBody": {
                    "id": 5959,
                    "nodeType": "Block",
                    "src": "11668:33:15",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 5957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11689:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 5928,
                        "id": 5958,
                        "nodeType": "Return",
                        "src": "11682:8:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5961,
                      "name": "remainingWork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5948,
                      "src": "11717:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 5962,
                      "name": "completedWork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5937,
                      "src": "11733:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11717:29:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5928,
                  "id": 5964,
                  "nodeType": "Return",
                  "src": "11710:36:15"
                }
              ]
            },
            "documentation": {
              "id": 5922,
              "nodeType": "StructuredDocumentation",
              "src": "11281:58:15",
              "text": " @notice Get remaining work to full refund"
            },
            "functionSelector": "0594851c",
            "id": 5966,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRemainingWork",
            "nameLocation": "11353:16:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5924,
                  "mutability": "mutable",
                  "name": "_bidder",
                  "nameLocation": "11378:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 5966,
                  "src": "11370:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11370:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11369:17:15"
            },
            "returnParameters": {
              "id": 5928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5927,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5966,
                  "src": "11410:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11410:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11409:9:15"
            },
            "scope": 7000,
            "src": "11344:409:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5975,
              "nodeType": "Block",
              "src": "11876:38:15",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 5972,
                      "name": "bidders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5397,
                      "src": "11893:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 5973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "11893:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5971,
                  "id": 5974,
                  "nodeType": "Return",
                  "src": "11886:21:15"
                }
              ]
            },
            "documentation": {
              "id": 5967,
              "nodeType": "StructuredDocumentation",
              "src": "11759:52:15",
              "text": " @notice Get length of bidders array"
            },
            "functionSelector": "1bb89762",
            "id": 5976,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBiddersLength",
            "nameLocation": "11825:16:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11841:2:15"
            },
            "returnParameters": {
              "id": 5971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5970,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5976,
                  "src": "11867:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11867:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11866:9:15"
            },
            "scope": 7000,
            "src": "11816:98:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6082,
              "nodeType": "Block",
              "src": "12016:828:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5981,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12034:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 5982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12034:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 5983,
                          "name": "startBidDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5379,
                          "src": "12053:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12034:31:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42696464696e67206973206e6f74206f70656e20796574",
                        "id": 5985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12067:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_acf8e2d6b63559301bb8edffc72263005365c1fac015b947fe5b39762c980035",
                          "typeString": "literal_string \"Bidding is not open yet\""
                        },
                        "value": "Bidding is not open yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_acf8e2d6b63559301bb8edffc72263005365c1fac015b947fe5b39762c980035",
                          "typeString": "literal_string \"Bidding is not open yet\""
                        }
                      ],
                      "id": 5980,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12026:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12026:67:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5987,
                  "nodeType": "ExpressionStatement",
                  "src": "12026:67:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5989,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12111:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 5990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12111:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 5991,
                          "name": "endBidDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5381,
                          "src": "12129:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12111:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42696464696e6720697320616c72656164792066696e6973686564",
                        "id": 5993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12141:29:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ef77cbc055804ffc8e622e725424f78630320509b41d5701698488e175a5b8b",
                          "typeString": "literal_string \"Bidding is already finished\""
                        },
                        "value": "Bidding is already finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ef77cbc055804ffc8e622e725424f78630320509b41d5701698488e175a5b8b",
                          "typeString": "literal_string \"Bidding is already finished\""
                        }
                      ],
                      "id": 5988,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12103:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12103:68:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5995,
                  "nodeType": "ExpressionStatement",
                  "src": "12103:68:15"
                },
                {
                  "assignments": [
                    5998
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5998,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "12198:4:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6082,
                      "src": "12181:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                        "typeString": "struct WorkLock.WorkInfo"
                      },
                      "typeName": {
                        "id": 5997,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5996,
                          "name": "WorkInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5353,
                          "src": "12181:8:15"
                        },
                        "referencedDeclaration": 5353,
                        "src": "12181:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                          "typeString": "struct WorkLock.WorkInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6003,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5999,
                      "name": "workInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5390,
                      "src": "12205:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WorkInfo_$5353_storage_$",
                        "typeString": "mapping(address => struct WorkLock.WorkInfo storage ref)"
                      }
                    },
                    "id": 6002,
                    "indexExpression": {
                      "expression": {
                        "id": 6000,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "12214:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "12214:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12205:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WorkInfo_$5353_storage",
                      "typeString": "struct WorkLock.WorkInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12181:44:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6004,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5998,
                        "src": "12261:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                          "typeString": "struct WorkLock.WorkInfo storage pointer"
                        }
                      },
                      "id": 6005,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositedETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5346,
                      "src": "12261:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 6006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12282:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12261:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 6062,
                    "nodeType": "Block",
                    "src": "12663:71:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 6060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6054,
                            "name": "bonusETHSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5385,
                            "src": "12677:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 6057,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "12713:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 6058,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "12713:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 6055,
                                "name": "bonusETHSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5385,
                                "src": "12694:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13409,
                              "src": "12694:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 6059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12694:29:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12677:46:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6061,
                        "nodeType": "ExpressionStatement",
                        "src": "12677:46:15"
                      }
                    ]
                  },
                  "id": 6063,
                  "nodeType": "IfStatement",
                  "src": "12257:477:15",
                  "trueBody": {
                    "id": 6053,
                    "nodeType": "Block",
                    "src": "12285:372:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 6012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 6009,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "12307:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 6010,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "12307:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 6011,
                                "name": "minAllowedBid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5369,
                                "src": "12320:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12307:26:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "426964206d757374206265206174206c65617374206d696e696d756d",
                              "id": 6013,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12335:30:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cb86bdc04868c92a7a6bba307fd7ecb4c1f9335fc63cab8b3a5a8bc52a599fbf",
                                "typeString": "literal_string \"Bid must be at least minimum\""
                              },
                              "value": "Bid must be at least minimum"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cb86bdc04868c92a7a6bba307fd7ecb4c1f9335fc63cab8b3a5a8bc52a599fbf",
                                "typeString": "literal_string \"Bid must be at least minimum\""
                              }
                            ],
                            "id": 6008,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12299:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 6014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12299:67:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6015,
                        "nodeType": "ExpressionStatement",
                        "src": "12299:67:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 6022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 6017,
                                  "name": "bidders",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5397,
                                  "src": "12388:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 6018,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "12388:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 6021,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 6019,
                                  "name": "tokenSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5377,
                                  "src": "12405:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 6020,
                                  "name": "minAllowableLockedTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5375,
                                  "src": "12419:24:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12405:38:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12388:55:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656e6f75676820746f6b656e7320666f72206d6f72652062696464657273",
                              "id": 6023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12445:36:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8ebedfd1fe915e07141e3272052e88dc126ef983b7107299a7eaf681cd441d23",
                                "typeString": "literal_string \"Not enough tokens for more bidders\""
                              },
                              "value": "Not enough tokens for more bidders"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8ebedfd1fe915e07141e3272052e88dc126ef983b7107299a7eaf681cd441d23",
                                "typeString": "literal_string \"Not enough tokens for more bidders\""
                              }
                            ],
                            "id": 6016,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12380:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 6024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12380:102:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6025,
                        "nodeType": "ExpressionStatement",
                        "src": "12380:102:15"
                      },
                      {
                        "expression": {
                          "id": 6034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 6026,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5998,
                              "src": "12496:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                                "typeString": "struct WorkLock.WorkInfo storage pointer"
                              }
                            },
                            "id": 6028,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "index",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5352,
                            "src": "12496:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 6031,
                                  "name": "bidders",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5397,
                                  "src": "12517:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 6032,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "12517:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 6030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12509:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 6029,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "12509:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12509:23:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "12496:36:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 6035,
                        "nodeType": "ExpressionStatement",
                        "src": "12496:36:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 6039,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12559:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12559:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 6036,
                              "name": "bidders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5397,
                              "src": "12546:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 6038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "12546:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 6041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12546:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6042,
                        "nodeType": "ExpressionStatement",
                        "src": "12546:24:15"
                      },
                      {
                        "expression": {
                          "id": 6051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6043,
                            "name": "bonusETHSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5385,
                            "src": "12584:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 6049,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 6046,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "12620:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 6047,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "12620:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 6048,
                                  "name": "minAllowedBid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5369,
                                  "src": "12632:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12620:25:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 6044,
                                "name": "bonusETHSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5385,
                                "src": "12601:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13409,
                              "src": "12601:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 6050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12601:45:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12584:62:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6052,
                        "nodeType": "ExpressionStatement",
                        "src": "12584:62:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 6073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 6064,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5998,
                        "src": "12744:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                          "typeString": "struct WorkLock.WorkInfo storage pointer"
                        }
                      },
                      "id": 6066,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "depositedETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5346,
                      "src": "12744:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 6070,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12786:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "12786:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 6067,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5998,
                            "src": "12764:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                              "typeString": "struct WorkLock.WorkInfo storage pointer"
                            }
                          },
                          "id": 6068,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "depositedETH",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5346,
                          "src": "12764:17:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13409,
                        "src": "12764:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12764:32:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12744:52:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6074,
                  "nodeType": "ExpressionStatement",
                  "src": "12744:52:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6076,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12815:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12815:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6078,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12827:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "12827:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6075,
                      "name": "Bid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5298,
                      "src": "12811:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12811:26:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6081,
                  "nodeType": "EmitStatement",
                  "src": "12806:31:15"
                }
              ]
            },
            "documentation": {
              "id": 5977,
              "nodeType": "StructuredDocumentation",
              "src": "11920:59:15",
              "text": " @notice Bid for tokens by transferring ETH"
            },
            "functionSelector": "1998aeef",
            "id": 6083,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bid",
            "nameLocation": "11993:3:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11996:2:15"
            },
            "returnParameters": {
              "id": 5979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12016:0:15"
            },
            "scope": 7000,
            "src": "11984:860:15",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6197,
              "nodeType": "Block",
              "src": "12945:956:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6088,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12963:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 6089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12963:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 6090,
                          "name": "endCancellationDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5383,
                          "src": "12981:19:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12963:37:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e63656c6c6174696f6e20616c6c6f776564206f6e6c7920647572696e672063616e63656c6c6174696f6e2077696e646f77",
                        "id": 6092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13014:54:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67ad9ad795b3256b06f2bcbb375b0792655bd2992808b3217d8a76893825fa79",
                          "typeString": "literal_string \"Cancellation allowed only during cancellation window\""
                        },
                        "value": "Cancellation allowed only during cancellation window"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67ad9ad795b3256b06f2bcbb375b0792655bd2992808b3217d8a76893825fa79",
                          "typeString": "literal_string \"Cancellation allowed only during cancellation window\""
                        }
                      ],
                      "id": 6087,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12955:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12955:114:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6094,
                  "nodeType": "ExpressionStatement",
                  "src": "12955:114:15"
                },
                {
                  "assignments": [
                    6097
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6097,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "13096:4:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6197,
                      "src": "13079:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                        "typeString": "struct WorkLock.WorkInfo"
                      },
                      "typeName": {
                        "id": 6096,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6095,
                          "name": "WorkInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5353,
                          "src": "13079:8:15"
                        },
                        "referencedDeclaration": 5353,
                        "src": "13079:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                          "typeString": "struct WorkLock.WorkInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6102,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6098,
                      "name": "workInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5390,
                      "src": "13103:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WorkInfo_$5353_storage_$",
                        "typeString": "mapping(address => struct WorkLock.WorkInfo storage ref)"
                      }
                    },
                    "id": 6101,
                    "indexExpression": {
                      "expression": {
                        "id": 6099,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "13112:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "13112:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13103:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WorkInfo_$5353_storage",
                      "typeString": "struct WorkLock.WorkInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13079:44:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6104,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6097,
                            "src": "13141:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                              "typeString": "struct WorkLock.WorkInfo storage pointer"
                            }
                          },
                          "id": 6105,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "depositedETH",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5346,
                          "src": "13141:17:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13161:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13141:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2062696420746f2063616e63656c",
                        "id": 6108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13164:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e2be0bba60f6969b72af36fc01e389092f39aebb2aa91488ea98d6f333685cd",
                          "typeString": "literal_string \"No bid to cancel\""
                        },
                        "value": "No bid to cancel"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e2be0bba60f6969b72af36fc01e389092f39aebb2aa91488ea98d6f333685cd",
                          "typeString": "literal_string \"No bid to cancel\""
                        }
                      ],
                      "id": 6103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13133:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13133:50:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6110,
                  "nodeType": "ExpressionStatement",
                  "src": "13133:50:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "13201:13:15",
                        "subExpression": {
                          "expression": {
                            "id": 6112,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6097,
                            "src": "13202:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                              "typeString": "struct WorkLock.WorkInfo storage pointer"
                            }
                          },
                          "id": 6113,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "claimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5350,
                          "src": "13202:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e732061726520616c726561647920636c61696d6564",
                        "id": 6115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13216:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ac387390bf8547fd38a8faf54494b8c21259e062be6516d0293a4b1e30777bb",
                          "typeString": "literal_string \"Tokens are already claimed\""
                        },
                        "value": "Tokens are already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ac387390bf8547fd38a8faf54494b8c21259e062be6516d0293a4b1e30777bb",
                          "typeString": "literal_string \"Tokens are already claimed\""
                        }
                      ],
                      "id": 6111,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13193:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13193:52:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6117,
                  "nodeType": "ExpressionStatement",
                  "src": "13193:52:15"
                },
                {
                  "assignments": [
                    6119
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6119,
                      "mutability": "mutable",
                      "name": "refundETH",
                      "nameLocation": "13263:9:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6197,
                      "src": "13255:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6118,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13255:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6122,
                  "initialValue": {
                    "expression": {
                      "id": 6120,
                      "name": "info",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6097,
                      "src": "13275:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                        "typeString": "struct WorkLock.WorkInfo storage pointer"
                      }
                    },
                    "id": 6121,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "depositedETH",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5346,
                    "src": "13275:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13255:37:15"
                },
                {
                  "expression": {
                    "id": 6127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 6123,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6097,
                        "src": "13302:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                          "typeString": "struct WorkLock.WorkInfo storage pointer"
                        }
                      },
                      "id": 6125,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "depositedETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5346,
                      "src": "13302:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 6126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13322:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13302:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6128,
                  "nodeType": "ExpressionStatement",
                  "src": "13302:21:15"
                },
                {
                  "assignments": [
                    6130
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6130,
                      "mutability": "mutable",
                      "name": "lastIndex",
                      "nameLocation": "13416:9:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6197,
                      "src": "13408:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6129,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13408:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6135,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6131,
                        "name": "bidders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5397,
                        "src": "13428:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 6132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13428:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 6133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13445:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13428:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13408:38:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6136,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6097,
                        "src": "13460:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                          "typeString": "struct WorkLock.WorkInfo storage pointer"
                        }
                      },
                      "id": 6137,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "index",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5352,
                      "src": "13460:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 6138,
                      "name": "lastIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6130,
                      "src": "13474:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13460:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6162,
                  "nodeType": "IfStatement",
                  "src": "13456:192:15",
                  "trueBody": {
                    "id": 6161,
                    "nodeType": "Block",
                    "src": "13485:163:15",
                    "statements": [
                      {
                        "assignments": [
                          6141
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6141,
                            "mutability": "mutable",
                            "name": "lastBidder",
                            "nameLocation": "13507:10:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 6161,
                            "src": "13499:18:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 6140,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13499:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6145,
                        "initialValue": {
                          "baseExpression": {
                            "id": 6142,
                            "name": "bidders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5397,
                            "src": "13520:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 6144,
                          "indexExpression": {
                            "id": 6143,
                            "name": "lastIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6130,
                            "src": "13528:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13520:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13499:39:15"
                      },
                      {
                        "expression": {
                          "id": 6151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 6146,
                              "name": "bidders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5397,
                              "src": "13552:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 6149,
                            "indexExpression": {
                              "expression": {
                                "id": 6147,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6097,
                                "src": "13560:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                                  "typeString": "struct WorkLock.WorkInfo storage pointer"
                                }
                              },
                              "id": 6148,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "index",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5352,
                              "src": "13560:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13552:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 6150,
                            "name": "lastBidder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6141,
                            "src": "13574:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13552:32:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 6152,
                        "nodeType": "ExpressionStatement",
                        "src": "13552:32:15"
                      },
                      {
                        "expression": {
                          "id": 6159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 6153,
                                "name": "workInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5390,
                                "src": "13598:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WorkInfo_$5353_storage_$",
                                  "typeString": "mapping(address => struct WorkLock.WorkInfo storage ref)"
                                }
                              },
                              "id": 6155,
                              "indexExpression": {
                                "id": 6154,
                                "name": "lastBidder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6141,
                                "src": "13607:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13598:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_WorkInfo_$5353_storage",
                                "typeString": "struct WorkLock.WorkInfo storage ref"
                              }
                            },
                            "id": 6156,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "index",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5352,
                            "src": "13598:26:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 6157,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6097,
                              "src": "13627:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                                "typeString": "struct WorkLock.WorkInfo storage pointer"
                              }
                            },
                            "id": 6158,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "index",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5352,
                            "src": "13627:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "13598:39:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 6160,
                        "nodeType": "ExpressionStatement",
                        "src": "13598:39:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 6163,
                        "name": "bidders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5397,
                        "src": "13657:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 6165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "src": "13657:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer)"
                      }
                    },
                    "id": 6166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13657:13:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6167,
                  "nodeType": "ExpressionStatement",
                  "src": "13657:13:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6168,
                      "name": "refundETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6119,
                      "src": "13685:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 6169,
                      "name": "minAllowedBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5369,
                      "src": "13697:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13685:25:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6181,
                  "nodeType": "IfStatement",
                  "src": "13681:118:15",
                  "trueBody": {
                    "id": 6180,
                    "nodeType": "Block",
                    "src": "13712:87:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 6178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6171,
                            "name": "bonusETHSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5385,
                            "src": "13726:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 6176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 6174,
                                  "name": "refundETH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6119,
                                  "src": "13762:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 6175,
                                  "name": "minAllowedBid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5369,
                                  "src": "13774:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13762:25:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 6172,
                                "name": "bonusETHSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5385,
                                "src": "13743:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13424,
                              "src": "13743:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 6177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13743:45:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13726:62:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6179,
                        "nodeType": "ExpressionStatement",
                        "src": "13726:62:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6188,
                        "name": "refundETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6119,
                        "src": "13838:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 6184,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "13816:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "13816:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13808:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 6182,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13808:8:15",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13808:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 6187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14513,
                      "src": "13808:29:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 6189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13808:40:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6190,
                  "nodeType": "ExpressionStatement",
                  "src": "13808:40:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6192,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13872:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13872:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6194,
                        "name": "refundETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6119,
                        "src": "13884:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6191,
                      "name": "Canceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5318,
                      "src": "13863:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13863:31:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6196,
                  "nodeType": "EmitStatement",
                  "src": "13858:36:15"
                }
              ]
            },
            "documentation": {
              "id": 6084,
              "nodeType": "StructuredDocumentation",
              "src": "12850:60:15",
              "text": " @notice Cancel bid and refund deposited ETH"
            },
            "functionSelector": "9435c887",
            "id": 6198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelBid",
            "nameLocation": "12924:9:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12933:2:15"
            },
            "returnParameters": {
              "id": 6086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12945:0:15"
            },
            "scope": 7000,
            "src": "12915:986:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6214,
              "nodeType": "Block",
              "src": "14059:113:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "14077:22:15",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6205,
                            "name": "isClaimingAvailable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "14078:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 6206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14078:21:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d696e672068617320616c7265616479206265656e20656e61626c6564",
                        "id": 6208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14101:35:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3d23150e4f57f156e005c3d550205e90c46b50d1b888b0fcb939bf29b9853a0",
                          "typeString": "literal_string \"Claiming has already been enabled\""
                        },
                        "value": "Claiming has already been enabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3d23150e4f57f156e005c3d550205e90c46b50d1b888b0fcb939bf29b9853a0",
                          "typeString": "literal_string \"Claiming has already been enabled\""
                        }
                      ],
                      "id": 6204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14069:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14069:68:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6210,
                  "nodeType": "ExpressionStatement",
                  "src": "14069:68:15"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6211,
                      "name": "internalShutdown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6249,
                      "src": "14147:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 6212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14147:18:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6213,
                  "nodeType": "ExpressionStatement",
                  "src": "14147:18:15"
                }
              ]
            },
            "documentation": {
              "id": 6199,
              "nodeType": "StructuredDocumentation",
              "src": "13907:108:15",
              "text": " @notice Cancels distribution, makes possible to retrieve all bids and owner gets all tokens"
            },
            "functionSelector": "fc0e74d1",
            "id": 6215,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6202,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6201,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13593,
                  "src": "14049:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "14049:9:15"
              }
            ],
            "name": "shutdown",
            "nameLocation": "14029:8:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14037:2:15"
            },
            "returnParameters": {
              "id": 6203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14059:0:15"
            },
            "scope": 7000,
            "src": "14020:152:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6248,
              "nodeType": "Block",
              "src": "14328:225:15",
              "statements": [
                {
                  "expression": {
                    "id": 6221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6219,
                      "name": "startBidDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5379,
                      "src": "14338:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 6220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14353:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14338:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6222,
                  "nodeType": "ExpressionStatement",
                  "src": "14338:16:15"
                },
                {
                  "expression": {
                    "id": 6225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6223,
                      "name": "endBidDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5381,
                      "src": "14364:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 6224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14377:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14364:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6226,
                  "nodeType": "ExpressionStatement",
                  "src": "14364:14:15"
                },
                {
                  "expression": {
                    "id": 6233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6227,
                      "name": "endCancellationDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5383,
                      "src": "14388:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 6230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14415:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 6229,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14415:7:15",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 6228,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "14410:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 6231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14410:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 6232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "14410:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14388:39:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6234,
                  "nodeType": "ExpressionStatement",
                  "src": "14388:39:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6238,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13583,
                          "src": "14490:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 6239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14490:7:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6240,
                        "name": "tokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5377,
                        "src": "14499:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6235,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5362,
                        "src": "14471:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$751",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 6237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14266,
                      "src": "14471:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$14235_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$14235_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 6241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14471:40:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6242,
                  "nodeType": "ExpressionStatement",
                  "src": "14471:40:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6244,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14535:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14535:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6243,
                      "name": "Shutdown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5344,
                      "src": "14526:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 6246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14526:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6247,
                  "nodeType": "EmitStatement",
                  "src": "14521:25:15"
                }
              ]
            },
            "documentation": {
              "id": 6216,
              "nodeType": "StructuredDocumentation",
              "src": "14178:108:15",
              "text": " @notice Cancels distribution, makes possible to retrieve all bids and owner gets all tokens"
            },
            "id": 6249,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "internalShutdown",
            "nameLocation": "14300:16:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14316:2:15"
            },
            "returnParameters": {
              "id": 6218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14328:0:15"
            },
            "scope": 7000,
            "src": "14291:262:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6578,
              "nodeType": "Block",
              "src": "14863:3062:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6259,
                          "name": "nextBidderToCheck",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5399,
                          "src": "14881:17:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 6260,
                            "name": "bidders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5397,
                            "src": "14902:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 6261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "14902:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14881:35:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42696464657273206861766520616c7265616479206265656e20636865636b6564",
                        "id": 6263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14918:35:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_043323a02d106b64868ee136d3c68682c28cba7a0d6c2b6919c814e38d562f40",
                          "typeString": "literal_string \"Bidders have already been checked\""
                        },
                        "value": "Bidders have already been checked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_043323a02d106b64868ee136d3c68682c28cba7a0d6c2b6919c814e38d562f40",
                          "typeString": "literal_string \"Bidders have already been checked\""
                        }
                      ],
                      "id": 6258,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14873:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14873:81:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6265,
                  "nodeType": "ExpressionStatement",
                  "src": "14873:81:15"
                },
                {
                  "assignments": [
                    6267
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6267,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "14973:6:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6578,
                      "src": "14965:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6266,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14965:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6270,
                  "initialValue": {
                    "expression": {
                      "id": 6268,
                      "name": "_biddersForRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6253,
                      "src": "14982:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
                        "typeString": "address payable[] calldata"
                      }
                    },
                    "id": 6269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "14982:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14965:41:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6272,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6267,
                          "src": "15024:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15033:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15024:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206174206c65617374206f6e652062696464657220666f72206120726566756e64",
                        "id": 6275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15036:42:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f26eadeb7b2a53ed367f3bf9aaee50e3a4f8954b18c3c3b23a4fc8516e647ac",
                          "typeString": "literal_string \"Must be at least one bidder for a refund\""
                        },
                        "value": "Must be at least one bidder for a refund"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f26eadeb7b2a53ed367f3bf9aaee50e3a4f8954b18c3c3b23a4fc8516e647ac",
                          "typeString": "literal_string \"Must be at least one bidder for a refund\""
                        }
                      ],
                      "id": 6271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15016:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15016:63:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6277,
                  "nodeType": "ExpressionStatement",
                  "src": "15016:63:15"
                },
                {
                  "assignments": [
                    6279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6279,
                      "mutability": "mutable",
                      "name": "minNumberOfBidders",
                      "nameLocation": "15098:18:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6578,
                      "src": "15090:26:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6278,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15090:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6284,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6282,
                        "name": "maxAllowableLockedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5373,
                        "src": "15139:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6280,
                        "name": "tokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5377,
                        "src": "15119:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "divCeil",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7245,
                      "src": "15119:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15119:45:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15090:74:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6285,
                        "name": "bidders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5397,
                        "src": "15178:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 6286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "15178:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6287,
                      "name": "minNumberOfBidders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6279,
                      "src": "15195:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15178:35:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6294,
                  "nodeType": "IfStatement",
                  "src": "15174:104:15",
                  "trueBody": {
                    "id": 6293,
                    "nodeType": "Block",
                    "src": "15215:63:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6289,
                            "name": "internalShutdown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6249,
                            "src": "15229:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 6290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15229:18:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6291,
                        "nodeType": "ExpressionStatement",
                        "src": "15229:18:15"
                      },
                      {
                        "functionReturnParameters": 6257,
                        "id": 6292,
                        "nodeType": "Return",
                        "src": "15261:7:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    6296
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6296,
                      "mutability": "mutable",
                      "name": "previousBidder",
                      "nameLocation": "15296:14:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6578,
                      "src": "15288:22:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6295,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15288:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6300,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6297,
                      "name": "_biddersForRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6253,
                      "src": "15313:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
                        "typeString": "address payable[] calldata"
                      }
                    },
                    "id": 6299,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 6298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15331:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15313:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15288:45:15"
                },
                {
                  "assignments": [
                    6302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6302,
                      "mutability": "mutable",
                      "name": "minBid",
                      "nameLocation": "15351:6:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6578,
                      "src": "15343:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6301,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15343:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6307,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 6303,
                        "name": "workInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5390,
                        "src": "15360:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WorkInfo_$5353_storage_$",
                          "typeString": "mapping(address => struct WorkLock.WorkInfo storage ref)"
                        }
                      },
                      "id": 6305,
                      "indexExpression": {
                        "id": 6304,
                        "name": "previousBidder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6296,
                        "src": "15369:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15360:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WorkInfo_$5353_storage",
                        "typeString": "struct WorkLock.WorkInfo storage ref"
                      }
                    },
                    "id": 6306,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "depositedETH",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5346,
                    "src": "15360:37:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15343:54:15"
                },
                {
                  "assignments": [
                    6309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6309,
                      "mutability": "mutable",
                      "name": "maxBid",
                      "nameLocation": "15415:6:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6578,
                      "src": "15407:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6308,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15407:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6311,
                  "initialValue": {
                    "id": 6310,
                    "name": "minBid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6302,
                    "src": "15424:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15407:23:15"
                },
                {
                  "body": {
                    "id": 6368,
                    "nodeType": "Block",
                    "src": "15518:460:15",
                    "statements": [
                      {
                        "assignments": [
                          6323
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6323,
                            "mutability": "mutable",
                            "name": "bidder",
                            "nameLocation": "15540:6:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 6368,
                            "src": "15532:14:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 6322,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15532:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6327,
                        "initialValue": {
                          "baseExpression": {
                            "id": 6324,
                            "name": "_biddersForRefund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6253,
                            "src": "15549:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
                              "typeString": "address payable[] calldata"
                            }
                          },
                          "id": 6326,
                          "indexExpression": {
                            "id": 6325,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6313,
                            "src": "15567:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15549:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15532:37:15"
                      },
                      {
                        "assignments": [
                          6329
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6329,
                            "mutability": "mutable",
                            "name": "depositedETH",
                            "nameLocation": "15591:12:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 6368,
                            "src": "15583:20:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 6328,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15583:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6334,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 6330,
                              "name": "workInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5390,
                              "src": "15606:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WorkInfo_$5353_storage_$",
                                "typeString": "mapping(address => struct WorkLock.WorkInfo storage ref)"
                              }
                            },
                            "id": 6332,
                            "indexExpression": {
                              "id": 6331,
                              "name": "bidder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6323,
                              "src": "15615:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15606:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WorkInfo_$5353_storage",
                              "typeString": "struct WorkLock.WorkInfo storage ref"
                            }
                          },
                          "id": 6333,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "depositedETH",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5346,
                          "src": "15606:29:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15583:52:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 6342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 6338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 6336,
                                  "name": "bidder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6323,
                                  "src": "15657:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 6337,
                                  "name": "previousBidder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6296,
                                  "src": "15666:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "15657:23:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 6341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 6339,
                                  "name": "depositedETH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6329,
                                  "src": "15684:12:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 6340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15699:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "15684:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "15657:43:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573736573206d75737420626520616e206172726179206f6620756e697175652062696464657273",
                              "id": 6343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15702:46:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_098c98a210060d2488bb8066b1e32de2f803328ec7f7621418b08adc55a75dcf",
                                "typeString": "literal_string \"Addresses must be an array of unique bidders\""
                              },
                              "value": "Addresses must be an array of unique bidders"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_098c98a210060d2488bb8066b1e32de2f803328ec7f7621418b08adc55a75dcf",
                                "typeString": "literal_string \"Addresses must be an array of unique bidders\""
                              }
                            ],
                            "id": 6335,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15649:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 6344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15649:100:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6345,
                        "nodeType": "ExpressionStatement",
                        "src": "15649:100:15"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6346,
                            "name": "minBid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6302,
                            "src": "15767:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 6347,
                            "name": "depositedETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6329,
                            "src": "15776:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15767:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 6356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 6354,
                              "name": "maxBid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6309,
                              "src": "15854:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 6355,
                              "name": "depositedETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6329,
                              "src": "15863:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15854:21:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 6362,
                          "nodeType": "IfStatement",
                          "src": "15850:81:15",
                          "trueBody": {
                            "id": 6361,
                            "nodeType": "Block",
                            "src": "15877:54:15",
                            "statements": [
                              {
                                "expression": {
                                  "id": 6359,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 6357,
                                    "name": "maxBid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6309,
                                    "src": "15895:6:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "id": 6358,
                                    "name": "depositedETH",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6329,
                                    "src": "15904:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "15895:21:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 6360,
                                "nodeType": "ExpressionStatement",
                                "src": "15895:21:15"
                              }
                            ]
                          }
                        },
                        "id": 6363,
                        "nodeType": "IfStatement",
                        "src": "15763:168:15",
                        "trueBody": {
                          "id": 6353,
                          "nodeType": "Block",
                          "src": "15790:54:15",
                          "statements": [
                            {
                              "expression": {
                                "id": 6351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 6349,
                                  "name": "minBid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6302,
                                  "src": "15808:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 6350,
                                  "name": "depositedETH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6329,
                                  "src": "15817:12:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15808:21:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6352,
                              "nodeType": "ExpressionStatement",
                              "src": "15808:21:15"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 6366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6364,
                            "name": "previousBidder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6296,
                            "src": "15944:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 6365,
                            "name": "bidder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6323,
                            "src": "15961:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15944:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 6367,
                        "nodeType": "ExpressionStatement",
                        "src": "15944:23:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6316,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6313,
                      "src": "15501:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6317,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6267,
                      "src": "15505:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15501:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6369,
                  "initializationExpression": {
                    "assignments": [
                      6313
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6313,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15494:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 6369,
                        "src": "15486:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6312,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15486:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 6315,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 6314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15498:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15486:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 6320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15513:3:15",
                      "subExpression": {
                        "id": 6319,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6313,
                        "src": "15513:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6321,
                    "nodeType": "ExpressionStatement",
                    "src": "15513:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "15481:497:15"
                },
                {
                  "assignments": [
                    6374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6374,
                      "mutability": "mutable",
                      "name": "refunds",
                      "nameLocation": "16005:7:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6578,
                      "src": "15988:24:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 6372,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15988:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6373,
                        "nodeType": "ArrayTypeName",
                        "src": "15988:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6380,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6378,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6267,
                        "src": "16029:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "16015:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 6375,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16019:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6376,
                        "nodeType": "ArrayTypeName",
                        "src": "16019:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 6379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16015:21:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15988:48:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6381,
                      "name": "minBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6302,
                      "src": "16097:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 6382,
                      "name": "maxBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6309,
                      "src": "16107:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16097:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6437,
                  "nodeType": "IfStatement",
                  "src": "16093:438:15",
                  "trueBody": {
                    "id": 6436,
                    "nodeType": "Block",
                    "src": "16115:416:15",
                    "statements": [
                      {
                        "body": {
                          "id": 6434,
                          "nodeType": "Block",
                          "src": "16166:355:15",
                          "statements": [
                            {
                              "assignments": [
                                6395
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 6395,
                                  "mutability": "mutable",
                                  "name": "bidder",
                                  "nameLocation": "16192:6:15",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 6434,
                                  "src": "16184:14:15",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 6394,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "16184:7:15",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 6399,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 6396,
                                  "name": "_biddersForRefund",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6253,
                                  "src": "16201:17:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
                                    "typeString": "address payable[] calldata"
                                  }
                                },
                                "id": 6398,
                                "indexExpression": {
                                  "id": 6397,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6385,
                                  "src": "16219:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16201:20:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "16184:37:15"
                            },
                            {
                              "assignments": [
                                6402
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 6402,
                                  "mutability": "mutable",
                                  "name": "info",
                                  "nameLocation": "16256:4:15",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 6434,
                                  "src": "16239:21:15",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                                    "typeString": "struct WorkLock.WorkInfo"
                                  },
                                  "typeName": {
                                    "id": 6401,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 6400,
                                      "name": "WorkInfo",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 5353,
                                      "src": "16239:8:15"
                                    },
                                    "referencedDeclaration": 5353,
                                    "src": "16239:8:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                                      "typeString": "struct WorkLock.WorkInfo"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 6406,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 6403,
                                  "name": "workInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5390,
                                  "src": "16263:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WorkInfo_$5353_storage_$",
                                    "typeString": "mapping(address => struct WorkLock.WorkInfo storage ref)"
                                  }
                                },
                                "id": 6405,
                                "indexExpression": {
                                  "id": 6404,
                                  "name": "bidder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6395,
                                  "src": "16272:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16263:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_WorkInfo_$5353_storage",
                                  "typeString": "struct WorkLock.WorkInfo storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "16239:40:15"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 6410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 6407,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6402,
                                    "src": "16301:4:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                                      "typeString": "struct WorkLock.WorkInfo storage pointer"
                                    }
                                  },
                                  "id": 6408,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "depositedETH",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5346,
                                  "src": "16301:17:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 6409,
                                  "name": "minBid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6302,
                                  "src": "16321:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16301:26:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 6433,
                              "nodeType": "IfStatement",
                              "src": "16297:210:15",
                              "trueBody": {
                                "id": 6432,
                                "nodeType": "Block",
                                "src": "16329:178:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 6418,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 6411,
                                          "name": "refunds",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6374,
                                          "src": "16351:7:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 6413,
                                        "indexExpression": {
                                          "id": 6412,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6385,
                                          "src": "16359:1:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "16351:10:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 6417,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 6414,
                                            "name": "info",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 6402,
                                            "src": "16364:4:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                                              "typeString": "struct WorkLock.WorkInfo storage pointer"
                                            }
                                          },
                                          "id": 6415,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "depositedETH",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 5346,
                                          "src": "16364:17:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 6416,
                                          "name": "minBid",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6302,
                                          "src": "16384:6:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "16364:26:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "16351:39:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 6419,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16351:39:15"
                                  },
                                  {
                                    "expression": {
                                      "id": 6424,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 6420,
                                          "name": "info",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6402,
                                          "src": "16412:4:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                                            "typeString": "struct WorkLock.WorkInfo storage pointer"
                                          }
                                        },
                                        "id": 6422,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "depositedETH",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 5346,
                                        "src": "16412:17:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 6423,
                                        "name": "minBid",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6302,
                                        "src": "16432:6:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "16412:26:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 6425,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16412:26:15"
                                  },
                                  {
                                    "expression": {
                                      "id": 6430,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 6426,
                                        "name": "bonusETHSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5385,
                                        "src": "16460:14:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "-=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 6427,
                                          "name": "refunds",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6374,
                                          "src": "16478:7:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 6429,
                                        "indexExpression": {
                                          "id": 6428,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6385,
                                          "src": "16486:1:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "16478:10:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "16460:28:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 6431,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16460:28:15"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6388,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6385,
                            "src": "16149:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 6389,
                            "name": "length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6267,
                            "src": "16153:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16149:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 6435,
                        "initializationExpression": {
                          "assignments": [
                            6385
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 6385,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "16142:1:15",
                              "nodeType": "VariableDeclaration",
                              "scope": 6435,
                              "src": "16134:9:15",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 6384,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "16134:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 6387,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 6386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16146:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "16134:13:15"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 6392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "16161:3:15",
                            "subExpression": {
                              "id": 6391,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6385,
                              "src": "16161:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 6393,
                          "nodeType": "ExpressionStatement",
                          "src": "16161:3:15"
                        },
                        "nodeType": "ForStatement",
                        "src": "16129:392:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 6440,
                              "name": "minBid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6302,
                              "src": "16561:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 6439,
                            "name": "ethToTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5644,
                            "src": "16549:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 6441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16549:19:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 6442,
                          "name": "maxAllowableLockedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5373,
                          "src": "16571:24:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16549:46:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4174206c65617374206f6e65206f6620626964646572732068617320616c6c6f7761626c6520626964",
                        "id": 6444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16609:43:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b84a42fb1a1260e6a1e541af84fa6c70bc6fbb58d390c8963d23949c4445ff6f",
                          "typeString": "literal_string \"At least one of bidders has allowable bid\""
                        },
                        "value": "At least one of bidders has allowable bid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b84a42fb1a1260e6a1e541af84fa6c70bc6fbb58d390c8963d23949c4445ff6f",
                          "typeString": "literal_string \"At least one of bidders has allowable bid\""
                        }
                      ],
                      "id": 6438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16541:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16541:112:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6446,
                  "nodeType": "ExpressionStatement",
                  "src": "16541:112:15"
                },
                {
                  "assignments": [
                    6448
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6448,
                      "mutability": "mutable",
                      "name": "maxBonusTokens",
                      "nameLocation": "16834:14:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6578,
                      "src": "16826:22:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6447,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16826:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6452,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6449,
                      "name": "maxAllowableLockedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5373,
                      "src": "16851:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 6450,
                      "name": "minAllowableLockedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5375,
                      "src": "16878:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16851:51:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16826:76:15"
                },
                {
                  "assignments": [
                    6454
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6454,
                      "mutability": "mutable",
                      "name": "minBonusETH",
                      "nameLocation": "16920:11:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6578,
                      "src": "16912:19:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6453,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16912:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6458,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6455,
                      "name": "minBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6302,
                      "src": "16934:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 6456,
                      "name": "minAllowedBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5369,
                      "src": "16943:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16934:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16912:44:15"
                },
                {
                  "assignments": [
                    6460
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6460,
                      "mutability": "mutable",
                      "name": "bonusTokenSupply",
                      "nameLocation": "16974:16:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6578,
                      "src": "16966:24:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6459,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16966:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6467,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6461,
                      "name": "tokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5377,
                      "src": "16993:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 6462,
                          "name": "bidders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5397,
                          "src": "17007:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 6463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "17007:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 6464,
                        "name": "minAllowableLockedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5375,
                        "src": "17024:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "17007:41:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16993:55:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16966:82:15"
                },
                {
                  "assignments": [
                    6469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6469,
                      "mutability": "mutable",
                      "name": "refundETH",
                      "nameLocation": "17066:9:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6578,
                      "src": "17058:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6468,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17058:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6488,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6481,
                          "name": "bonusTokenSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6460,
                          "src": "17226:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 6484,
                              "name": "length",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6267,
                              "src": "17264:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 6482,
                              "name": "maxBonusTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6448,
                              "src": "17245:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 6483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13439,
                            "src": "17245:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17245:26:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17226:45:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 6477,
                                "name": "bonusETHSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5385,
                                "src": "17168:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 6475,
                                "name": "maxBonusTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6448,
                                "src": "17149:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13439,
                              "src": "17149:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 6478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17149:34:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 6472,
                                "name": "bonusTokenSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6460,
                                "src": "17094:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 6470,
                                "name": "minBonusETH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6454,
                                "src": "17078:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13439,
                              "src": "17078:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 6473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17078:33:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 6474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13424,
                          "src": "17078:70:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 6479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17078:106:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "divCeil",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7245,
                      "src": "17078:147:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17078:194:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17058:214:15"
                },
                {
                  "assignments": [
                    6490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6490,
                      "mutability": "mutable",
                      "name": "resultBid",
                      "nameLocation": "17290:9:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6578,
                      "src": "17282:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6489,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17282:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6495,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6493,
                        "name": "refundETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6469,
                        "src": "17313:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6491,
                        "name": "minBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6302,
                        "src": "17302:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13424,
                      "src": "17302:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17302:21:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17282:41:15"
                },
                {
                  "expression": {
                    "id": 6500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6496,
                      "name": "bonusETHSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5385,
                      "src": "17333:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6497,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6267,
                        "src": "17351:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 6498,
                        "name": "refundETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6469,
                        "src": "17360:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "17351:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17333:36:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6501,
                  "nodeType": "ExpressionStatement",
                  "src": "17333:36:15"
                },
                {
                  "body": {
                    "id": 6537,
                    "nodeType": "Block",
                    "src": "17416:196:15",
                    "statements": [
                      {
                        "assignments": [
                          6513
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6513,
                            "mutability": "mutable",
                            "name": "bidder",
                            "nameLocation": "17438:6:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 6537,
                            "src": "17430:14:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 6512,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17430:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6517,
                        "initialValue": {
                          "baseExpression": {
                            "id": 6514,
                            "name": "_biddersForRefund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6253,
                            "src": "17447:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
                              "typeString": "address payable[] calldata"
                            }
                          },
                          "id": 6516,
                          "indexExpression": {
                            "id": 6515,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6503,
                            "src": "17465:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17447:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17430:37:15"
                      },
                      {
                        "assignments": [
                          6520
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6520,
                            "mutability": "mutable",
                            "name": "info",
                            "nameLocation": "17498:4:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 6537,
                            "src": "17481:21:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                              "typeString": "struct WorkLock.WorkInfo"
                            },
                            "typeName": {
                              "id": 6519,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 6518,
                                "name": "WorkInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 5353,
                                "src": "17481:8:15"
                              },
                              "referencedDeclaration": 5353,
                              "src": "17481:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                                "typeString": "struct WorkLock.WorkInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6524,
                        "initialValue": {
                          "baseExpression": {
                            "id": 6521,
                            "name": "workInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5390,
                            "src": "17505:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WorkInfo_$5353_storage_$",
                              "typeString": "mapping(address => struct WorkLock.WorkInfo storage ref)"
                            }
                          },
                          "id": 6523,
                          "indexExpression": {
                            "id": 6522,
                            "name": "bidder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6513,
                            "src": "17514:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17505:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WorkInfo_$5353_storage",
                            "typeString": "struct WorkLock.WorkInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17481:40:15"
                      },
                      {
                        "expression": {
                          "id": 6529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 6525,
                              "name": "refunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6374,
                              "src": "17535:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 6527,
                            "indexExpression": {
                              "id": 6526,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6503,
                              "src": "17543:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "17535:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 6528,
                            "name": "refundETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6469,
                            "src": "17549:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17535:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6530,
                        "nodeType": "ExpressionStatement",
                        "src": "17535:23:15"
                      },
                      {
                        "expression": {
                          "id": 6535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 6531,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6520,
                              "src": "17572:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                                "typeString": "struct WorkLock.WorkInfo storage pointer"
                              }
                            },
                            "id": 6533,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "depositedETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5346,
                            "src": "17572:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 6534,
                            "name": "resultBid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6490,
                            "src": "17592:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17572:29:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6536,
                        "nodeType": "ExpressionStatement",
                        "src": "17572:29:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6506,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6503,
                      "src": "17399:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6507,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6267,
                      "src": "17403:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17399:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6538,
                  "initializationExpression": {
                    "assignments": [
                      6503
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6503,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "17392:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 6538,
                        "src": "17384:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6502,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17384:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 6505,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 6504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17396:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "17384:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 6510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "17411:3:15",
                      "subExpression": {
                        "id": 6509,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6503,
                        "src": "17411:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6511,
                    "nodeType": "ExpressionStatement",
                    "src": "17411:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "17379:233:15"
                },
                {
                  "expression": {
                    "id": 6541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6539,
                      "name": "nextBidderToCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5399,
                      "src": "17652:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 6540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17672:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17652:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6542,
                  "nodeType": "ExpressionStatement",
                  "src": "17652:21:15"
                },
                {
                  "body": {
                    "id": 6576,
                    "nodeType": "Block",
                    "src": "17746:172:15",
                    "statements": [
                      {
                        "assignments": [
                          6554
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6554,
                            "mutability": "mutable",
                            "name": "bidder",
                            "nameLocation": "17768:6:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 6576,
                            "src": "17760:14:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 6553,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17760:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6558,
                        "initialValue": {
                          "baseExpression": {
                            "id": 6555,
                            "name": "_biddersForRefund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6253,
                            "src": "17777:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
                              "typeString": "address payable[] calldata"
                            }
                          },
                          "id": 6557,
                          "indexExpression": {
                            "id": 6556,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6544,
                            "src": "17795:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17777:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17760:37:15"
                      },
                      {
                        "expression": {
                          "id": 6565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 6559,
                              "name": "compensation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5394,
                              "src": "17811:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 6561,
                            "indexExpression": {
                              "id": 6560,
                              "name": "bidder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6554,
                              "src": "17824:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "17811:20:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 6562,
                              "name": "refunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6374,
                              "src": "17835:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 6564,
                            "indexExpression": {
                              "id": 6563,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6544,
                              "src": "17843:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17835:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17811:34:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6566,
                        "nodeType": "ExpressionStatement",
                        "src": "17811:34:15"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 6568,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "17876:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "17876:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6570,
                              "name": "bidder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6554,
                              "src": "17888:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 6571,
                                "name": "refunds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6374,
                                "src": "17896:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 6573,
                              "indexExpression": {
                                "id": 6572,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6544,
                                "src": "17904:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17896:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 6567,
                            "name": "ForceRefund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5334,
                            "src": "17864:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 6574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17864:43:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6575,
                        "nodeType": "EmitStatement",
                        "src": "17859:48:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6547,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6544,
                      "src": "17729:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6548,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6267,
                      "src": "17733:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17729:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6577,
                  "initializationExpression": {
                    "assignments": [
                      6544
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6544,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "17722:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 6577,
                        "src": "17714:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6543,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17714:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 6546,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 6545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17726:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "17714:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 6551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "17741:3:15",
                      "subExpression": {
                        "id": 6550,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6544,
                        "src": "17741:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6552,
                    "nodeType": "ExpressionStatement",
                    "src": "17741:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "17709:209:15"
                }
              ]
            },
            "documentation": {
              "id": 6250,
              "nodeType": "StructuredDocumentation",
              "src": "14559:199:15",
              "text": " @notice Make force refund to bidders who can get tokens more than maximum allowed\n @param _biddersForRefund Sorted list of unique bidders. Only bidders who must receive a refund"
            },
            "functionSelector": "cbce49ed",
            "id": 6579,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6256,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6255,
                  "name": "afterCancellationWindow",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5412,
                  "src": "14839:23:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "14839:23:15"
              }
            ],
            "name": "forceRefund",
            "nameLocation": "14772:11:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6253,
                  "mutability": "mutable",
                  "name": "_biddersForRefund",
                  "nameLocation": "14811:17:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 6579,
                  "src": "14784:44:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
                    "typeString": "address payable[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6251,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14784:15:15",
                      "stateMutability": "payable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 6252,
                    "nodeType": "ArrayTypeName",
                    "src": "14784:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                      "typeString": "address payable[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14783:46:15"
            },
            "returnParameters": {
              "id": 6257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14863:0:15"
            },
            "scope": 7000,
            "src": "14763:3162:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6619,
              "nodeType": "Block",
              "src": "18042:256:15",
              "statements": [
                {
                  "assignments": [
                    6584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6584,
                      "mutability": "mutable",
                      "name": "refund",
                      "nameLocation": "18060:6:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6619,
                      "src": "18052:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6583,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18052:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6589,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6585,
                      "name": "compensation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5394,
                      "src": "18069:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 6588,
                    "indexExpression": {
                      "expression": {
                        "id": 6586,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "18082:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "18082:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18069:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18052:41:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6591,
                          "name": "refund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6584,
                          "src": "18111:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18120:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "18111:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f20636f6d70656e736174696f6e",
                        "id": 6594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18123:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f1d7627cf564a7f3059ba862dfed07965d7be1a333a6fd7eed4c387a9418309",
                          "typeString": "literal_string \"There is no compensation\""
                        },
                        "value": "There is no compensation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f1d7627cf564a7f3059ba862dfed07965d7be1a333a6fd7eed4c387a9418309",
                          "typeString": "literal_string \"There is no compensation\""
                        }
                      ],
                      "id": 6590,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18103:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18103:47:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6596,
                  "nodeType": "ExpressionStatement",
                  "src": "18103:47:15"
                },
                {
                  "expression": {
                    "id": 6602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6597,
                        "name": "compensation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5394,
                        "src": "18160:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6600,
                      "indexExpression": {
                        "expression": {
                          "id": 6598,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "18173:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "18173:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18160:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 6601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18187:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18160:28:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6603,
                  "nodeType": "ExpressionStatement",
                  "src": "18160:28:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6610,
                        "name": "refund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6584,
                        "src": "18228:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 6606,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "18206:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "18206:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18198:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 6604,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18198:8:15",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18198:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 6609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14513,
                      "src": "18198:29:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 6611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18198:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6612,
                  "nodeType": "ExpressionStatement",
                  "src": "18198:37:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6614,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "18272:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "18272:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6616,
                        "name": "refund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6584,
                        "src": "18284:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6613,
                      "name": "CompensationWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5340,
                      "src": "18250:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18250:41:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6618,
                  "nodeType": "EmitStatement",
                  "src": "18245:46:15"
                }
              ]
            },
            "documentation": {
              "id": 6580,
              "nodeType": "StructuredDocumentation",
              "src": "17931:65:15",
              "text": " @notice Withdraw compensation after force refund"
            },
            "functionSelector": "87a15dc9",
            "id": 6620,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawCompensation",
            "nameLocation": "18010:20:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18030:2:15"
            },
            "returnParameters": {
              "id": 6582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18042:0:15"
            },
            "scope": 7000,
            "src": "18001:297:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6737,
              "nodeType": "Block",
              "src": "18837:1144:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6631,
                          "name": "nextBidderToCheck",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5399,
                          "src": "18855:17:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 6632,
                            "name": "bidders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5397,
                            "src": "18876:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 6633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "18876:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "18855:35:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42696464657273206861766520616c7265616479206265656e20636865636b6564",
                        "id": 6635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18892:35:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_043323a02d106b64868ee136d3c68682c28cba7a0d6c2b6919c814e38d562f40",
                          "typeString": "literal_string \"Bidders have already been checked\""
                        },
                        "value": "Bidders have already been checked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_043323a02d106b64868ee136d3c68682c28cba7a0d6c2b6919c814e38d562f40",
                          "typeString": "literal_string \"Bidders have already been checked\""
                        }
                      ],
                      "id": 6630,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18847:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18847:81:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6637,
                  "nodeType": "ExpressionStatement",
                  "src": "18847:81:15"
                },
                {
                  "assignments": [
                    6639
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6639,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "19015:5:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6737,
                      "src": "19007:13:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6638,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19007:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6641,
                  "initialValue": {
                    "id": 6640,
                    "name": "nextBidderToCheck",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5399,
                    "src": "19023:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19007:33:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6642,
                      "name": "bonusETHSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5385,
                      "src": "19054:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 6643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19072:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19054:19:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6661,
                  "nodeType": "IfStatement",
                  "src": "19050:173:15",
                  "trueBody": {
                    "id": 6660,
                    "nodeType": "Block",
                    "src": "19075:148:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 6651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 6649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 6646,
                                  "name": "tokenSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5377,
                                  "src": "19097:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "expression": {
                                    "id": 6647,
                                    "name": "bidders",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5397,
                                    "src": "19111:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 6648,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "19111:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19097:28:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 6650,
                                "name": "maxAllowableLockedTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5373,
                                "src": "19129:24:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19097:56:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656e6f7567682062696464657273",
                              "id": 6652,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19155:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0d6672b3e220f36ab59563e64c0f359ca6f5bffa348639c44e19843a7e7984d5",
                                "typeString": "literal_string \"Not enough bidders\""
                              },
                              "value": "Not enough bidders"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0d6672b3e220f36ab59563e64c0f359ca6f5bffa348639c44e19843a7e7984d5",
                                "typeString": "literal_string \"Not enough bidders\""
                              }
                            ],
                            "id": 6645,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19089:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 6653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19089:87:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6654,
                        "nodeType": "ExpressionStatement",
                        "src": "19089:87:15"
                      },
                      {
                        "expression": {
                          "id": 6658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6655,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6639,
                            "src": "19190:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 6656,
                              "name": "bidders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5397,
                              "src": "19198:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 6657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "19198:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19190:22:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6659,
                        "nodeType": "ExpressionStatement",
                        "src": "19190:22:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    6663
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6663,
                      "mutability": "mutable",
                      "name": "maxBonusTokens",
                      "nameLocation": "19241:14:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6737,
                      "src": "19233:22:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6662,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19233:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6667,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6664,
                      "name": "maxAllowableLockedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5373,
                      "src": "19258:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 6665,
                      "name": "minAllowableLockedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5375,
                      "src": "19285:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19258:51:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19233:76:15"
                },
                {
                  "assignments": [
                    6669
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6669,
                      "mutability": "mutable",
                      "name": "bonusTokenSupply",
                      "nameLocation": "19327:16:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6737,
                      "src": "19319:24:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6668,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19319:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6676,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6670,
                      "name": "tokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5377,
                      "src": "19346:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 6671,
                          "name": "bidders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5397,
                          "src": "19360:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 6672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "19360:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 6673,
                        "name": "minAllowableLockedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5375,
                        "src": "19377:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "19360:41:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19346:55:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19319:82:15"
                },
                {
                  "assignments": [
                    6678
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6678,
                      "mutability": "mutable",
                      "name": "maxBidFromMaxStake",
                      "nameLocation": "19419:18:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6737,
                      "src": "19411:26:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6677,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19411:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6688,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6679,
                      "name": "minAllowedBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5369,
                      "src": "19440:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 6685,
                          "name": "bonusTokenSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6669,
                          "src": "19495:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 6682,
                              "name": "bonusETHSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5385,
                              "src": "19475:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 6680,
                              "name": "maxBonusTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6663,
                              "src": "19456:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 6681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13439,
                            "src": "19456:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19456:34:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13454,
                        "src": "19456:38:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19456:56:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19440:72:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19411:101:15"
                },
                {
                  "body": {
                    "id": 6717,
                    "nodeType": "Block",
                    "src": "19586:192:15",
                    "statements": [
                      {
                        "assignments": [
                          6699
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6699,
                            "mutability": "mutable",
                            "name": "bidder",
                            "nameLocation": "19608:6:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 6717,
                            "src": "19600:14:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 6698,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19600:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6703,
                        "initialValue": {
                          "baseExpression": {
                            "id": 6700,
                            "name": "bidders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5397,
                            "src": "19617:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 6702,
                          "indexExpression": {
                            "id": 6701,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6639,
                            "src": "19625:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19617:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19600:31:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 6710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 6705,
                                    "name": "workInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5390,
                                    "src": "19653:8:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WorkInfo_$5353_storage_$",
                                      "typeString": "mapping(address => struct WorkLock.WorkInfo storage ref)"
                                    }
                                  },
                                  "id": 6707,
                                  "indexExpression": {
                                    "id": 6706,
                                    "name": "bidder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6699,
                                    "src": "19662:6:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "19653:16:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_WorkInfo_$5353_storage",
                                    "typeString": "struct WorkLock.WorkInfo storage ref"
                                  }
                                },
                                "id": 6708,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "depositedETH",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5346,
                                "src": "19653:29:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 6709,
                                "name": "maxBidFromMaxStake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6678,
                                "src": "19686:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19653:51:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4269642069732067726561746572207468616e206d617820616c6c6f7761626c6520626964",
                              "id": 6711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19706:39:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_409c53c9dc2f8c6be4b7ea1b1224116133527e8e68b6770d971949aa278ca188",
                                "typeString": "literal_string \"Bid is greater than max allowable bid\""
                              },
                              "value": "Bid is greater than max allowable bid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_409c53c9dc2f8c6be4b7ea1b1224116133527e8e68b6770d971949aa278ca188",
                                "typeString": "literal_string \"Bid is greater than max allowable bid\""
                              }
                            ],
                            "id": 6704,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19645:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 6712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19645:101:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6713,
                        "nodeType": "ExpressionStatement",
                        "src": "19645:101:15"
                      },
                      {
                        "expression": {
                          "id": 6715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "19760:7:15",
                          "subExpression": {
                            "id": 6714,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6639,
                            "src": "19760:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6716,
                        "nodeType": "ExpressionStatement",
                        "src": "19760:7:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 6697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6689,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6639,
                        "src": "19531:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "expression": {
                          "id": 6690,
                          "name": "bidders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5397,
                          "src": "19539:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 6691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "19539:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "19531:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6693,
                          "name": "gasleft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -7,
                          "src": "19557:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 6694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19557:9:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 6695,
                        "name": "_gasToSaveState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6623,
                        "src": "19569:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "19557:27:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "19531:53:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6718,
                  "nodeType": "WhileStatement",
                  "src": "19524:254:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6719,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6639,
                      "src": "19792:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 6720,
                      "name": "nextBidderToCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5399,
                      "src": "19801:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19792:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6734,
                  "nodeType": "IfStatement",
                  "src": "19788:153:15",
                  "trueBody": {
                    "id": 6733,
                    "nodeType": "Block",
                    "src": "19820:121:15",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 6723,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "19854:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "19854:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6725,
                              "name": "nextBidderToCheck",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5399,
                              "src": "19866:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 6726,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6639,
                              "src": "19885:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 6722,
                            "name": "BiddersChecked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5326,
                            "src": "19839:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 6727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19839:52:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6728,
                        "nodeType": "EmitStatement",
                        "src": "19834:57:15"
                      },
                      {
                        "expression": {
                          "id": 6731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6729,
                            "name": "nextBidderToCheck",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5399,
                            "src": "19905:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 6730,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6639,
                            "src": "19925:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19905:25:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6732,
                        "nodeType": "ExpressionStatement",
                        "src": "19905:25:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 6735,
                    "name": "nextBidderToCheck",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5399,
                    "src": "19957:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6629,
                  "id": 6736,
                  "nodeType": "Return",
                  "src": "19950:24:15"
                }
              ]
            },
            "documentation": {
              "id": 6621,
              "nodeType": "StructuredDocumentation",
              "src": "18304:418:15",
              "text": " @notice Check that the claimed tokens are within `maxAllowableLockedTokens` for all participants,\n starting from the last point `nextBidderToCheck`\n @dev Method stops working when the remaining gas is less than `_gasToSaveState`\n and saves the state in `nextBidderToCheck`.\n If all bidders have been checked then `nextBidderToCheck` will be equal to the length of the bidders array"
            },
            "functionSelector": "bc859f44",
            "id": 6738,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6626,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6625,
                  "name": "afterCancellationWindow",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5412,
                  "src": "18795:23:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "18795:23:15"
              }
            ],
            "name": "verifyBiddingCorrectness",
            "nameLocation": "18736:24:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6623,
                  "mutability": "mutable",
                  "name": "_gasToSaveState",
                  "nameLocation": "18769:15:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 6738,
                  "src": "18761:23:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18761:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18760:25:15"
            },
            "returnParameters": {
              "id": 6629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6628,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6738,
                  "src": "18828:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18828:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18827:9:15"
            },
            "scope": 7000,
            "src": "18727:1254:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6754,
              "nodeType": "Block",
              "src": "20103:113:15",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 6752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 6744,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "20120:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 6745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "20120:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 6746,
                        "name": "endCancellationDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5383,
                        "src": "20139:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "20120:38:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6748,
                        "name": "nextBidderToCheck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5399,
                        "src": "20174:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 6749,
                          "name": "bidders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5397,
                          "src": "20195:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 6750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "20195:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "20174:35:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "20120:89:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6743,
                  "id": 6753,
                  "nodeType": "Return",
                  "src": "20113:96:15"
                }
              ]
            },
            "documentation": {
              "id": 6739,
              "nodeType": "StructuredDocumentation",
              "src": "19987:53:15",
              "text": " @notice Checks if claiming available"
            },
            "functionSelector": "88657c7a",
            "id": 6755,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isClaimingAvailable",
            "nameLocation": "20054:19:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20073:2:15"
            },
            "returnParameters": {
              "id": 6743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6742,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6755,
                  "src": "20097:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6741,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "20097:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20096:6:15"
            },
            "scope": 7000,
            "src": "20045:171:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6838,
              "nodeType": "Block",
              "src": "20393:599:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6762,
                          "name": "isClaimingAvailable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6755,
                          "src": "20411:19:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 6763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20411:21:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d696e6720686173206e6f74206265656e20656e61626c656420796574",
                        "id": 6764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20434:35:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a4f12b970792fb7fa5a0b04cd65673ccd03ba854f4df5a3c758b0b169073fdb",
                          "typeString": "literal_string \"Claiming has not been enabled yet\""
                        },
                        "value": "Claiming has not been enabled yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a4f12b970792fb7fa5a0b04cd65673ccd03ba854f4df5a3c758b0b169073fdb",
                          "typeString": "literal_string \"Claiming has not been enabled yet\""
                        }
                      ],
                      "id": 6761,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20403:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20403:67:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6766,
                  "nodeType": "ExpressionStatement",
                  "src": "20403:67:15"
                },
                {
                  "assignments": [
                    6769
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6769,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "20497:4:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6838,
                      "src": "20480:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                        "typeString": "struct WorkLock.WorkInfo"
                      },
                      "typeName": {
                        "id": 6768,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6767,
                          "name": "WorkInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5353,
                          "src": "20480:8:15"
                        },
                        "referencedDeclaration": 5353,
                        "src": "20480:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                          "typeString": "struct WorkLock.WorkInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6774,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6770,
                      "name": "workInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5390,
                      "src": "20504:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WorkInfo_$5353_storage_$",
                        "typeString": "mapping(address => struct WorkLock.WorkInfo storage ref)"
                      }
                    },
                    "id": 6773,
                    "indexExpression": {
                      "expression": {
                        "id": 6771,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "20513:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "20513:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "20504:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WorkInfo_$5353_storage",
                      "typeString": "struct WorkLock.WorkInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20480:44:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "20542:13:15",
                        "subExpression": {
                          "expression": {
                            "id": 6776,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6769,
                            "src": "20543:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                              "typeString": "struct WorkLock.WorkInfo storage pointer"
                            }
                          },
                          "id": 6777,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "claimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5350,
                          "src": "20543:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e732061726520616c726561647920636c61696d6564",
                        "id": 6779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20557:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ac387390bf8547fd38a8faf54494b8c21259e062be6516d0293a4b1e30777bb",
                          "typeString": "literal_string \"Tokens are already claimed\""
                        },
                        "value": "Tokens are already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ac387390bf8547fd38a8faf54494b8c21259e062be6516d0293a4b1e30777bb",
                          "typeString": "literal_string \"Tokens are already claimed\""
                        }
                      ],
                      "id": 6775,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20534:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20534:52:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6781,
                  "nodeType": "ExpressionStatement",
                  "src": "20534:52:15"
                },
                {
                  "expression": {
                    "id": 6787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6782,
                      "name": "claimedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6759,
                      "src": "20596:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 6784,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6769,
                            "src": "20624:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                              "typeString": "struct WorkLock.WorkInfo storage pointer"
                            }
                          },
                          "id": 6785,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "depositedETH",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5346,
                          "src": "20624:17:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 6783,
                        "name": "ethToTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5644,
                        "src": "20612:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 6786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20612:30:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20596:46:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6788,
                  "nodeType": "ExpressionStatement",
                  "src": "20596:46:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6790,
                          "name": "claimedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6759,
                          "src": "20660:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20676:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "20660:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7468696e6720746f20636c61696d",
                        "id": 6793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20679:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
                          "typeString": "literal_string \"Nothing to claim\""
                        },
                        "value": "Nothing to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
                          "typeString": "literal_string \"Nothing to claim\""
                        }
                      ],
                      "id": 6789,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20652:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20652:46:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6795,
                  "nodeType": "ExpressionStatement",
                  "src": "20652:46:15"
                },
                {
                  "expression": {
                    "id": 6800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 6796,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6769,
                        "src": "20709:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                          "typeString": "struct WorkLock.WorkInfo storage pointer"
                        }
                      },
                      "id": 6798,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5350,
                      "src": "20709:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 6799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20724:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "20709:19:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6801,
                  "nodeType": "ExpressionStatement",
                  "src": "20709:19:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6807,
                            "name": "escrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5365,
                            "src": "20760:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                              "typeString": "contract IStakingEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                              "typeString": "contract IStakingEscrow"
                            }
                          ],
                          "id": 6806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20752:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6805,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20752:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20752:15:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6809,
                        "name": "claimedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6759,
                        "src": "20769:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6802,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5362,
                        "src": "20738:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$751",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 6804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13829,
                      "src": "20738:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 6810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20738:45:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6811,
                  "nodeType": "ExpressionStatement",
                  "src": "20738:45:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6815,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "20820:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "20820:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6817,
                        "name": "claimedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6759,
                        "src": "20832:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6818,
                        "name": "stakingPeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5371,
                        "src": "20847:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 6812,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5365,
                        "src": "20793:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                          "typeString": "contract IStakingEscrow"
                        }
                      },
                      "id": 6814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositFromWorkLock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 671,
                      "src": "20793:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,uint16) external"
                      }
                    },
                    "id": 6819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20793:69:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6820,
                  "nodeType": "ExpressionStatement",
                  "src": "20793:69:15"
                },
                {
                  "expression": {
                    "id": 6830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 6821,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6769,
                        "src": "20872:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                          "typeString": "struct WorkLock.WorkInfo storage pointer"
                        }
                      },
                      "id": 6823,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "completedWork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5348,
                      "src": "20872:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 6826,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "20919:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "20919:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 6828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20931:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 6824,
                          "name": "escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5365,
                          "src": "20893:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                            "typeString": "contract IStakingEscrow"
                          }
                        },
                        "id": 6825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "setWorkMeasurement",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 680,
                        "src": "20893:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_uint256_$",
                          "typeString": "function (address,bool) external returns (uint256)"
                        }
                      },
                      "id": 6829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20893:43:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20872:64:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6831,
                  "nodeType": "ExpressionStatement",
                  "src": "20872:64:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6833,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "20959:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "20959:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6835,
                        "name": "claimedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6759,
                        "src": "20971:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6832,
                      "name": "Claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5304,
                      "src": "20951:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20951:34:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6837,
                  "nodeType": "EmitStatement",
                  "src": "20946:39:15"
                }
              ]
            },
            "documentation": {
              "id": 6756,
              "nodeType": "StructuredDocumentation",
              "src": "20222:108:15",
              "text": " @notice Claimed tokens will be deposited and locked as stake in the StakingEscrow contract."
            },
            "functionSelector": "4e71d92d",
            "id": 6839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "20344:5:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20349:2:15"
            },
            "returnParameters": {
              "id": 6760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6759,
                  "mutability": "mutable",
                  "name": "claimedTokens",
                  "nameLocation": "20378:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 6839,
                  "src": "20370:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6758,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20370:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20369:23:15"
            },
            "scope": 7000,
            "src": "20335:657:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6905,
              "nodeType": "Block",
              "src": "21134:616:15",
              "statements": [
                {
                  "assignments": [
                    6849
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6849,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "21161:4:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6905,
                      "src": "21144:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                        "typeString": "struct WorkLock.WorkInfo"
                      },
                      "typeName": {
                        "id": 6848,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6847,
                          "name": "WorkInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5353,
                          "src": "21144:8:15"
                        },
                        "referencedDeclaration": 5353,
                        "src": "21144:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                          "typeString": "struct WorkLock.WorkInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6853,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6850,
                      "name": "workInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5390,
                      "src": "21168:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WorkInfo_$5353_storage_$",
                        "typeString": "mapping(address => struct WorkLock.WorkInfo storage ref)"
                      }
                    },
                    "id": 6852,
                    "indexExpression": {
                      "id": 6851,
                      "name": "_bidder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6842,
                      "src": "21177:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "21168:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WorkInfo_$5353_storage",
                      "typeString": "struct WorkLock.WorkInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21144:41:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6854,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6849,
                        "src": "21228:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                          "typeString": "struct WorkLock.WorkInfo storage pointer"
                        }
                      },
                      "id": 6855,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositedETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5346,
                      "src": "21228:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 6856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21249:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "21228:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6861,
                  "nodeType": "IfStatement",
                  "src": "21224:61:15",
                  "trueBody": {
                    "id": 6860,
                    "nodeType": "Block",
                    "src": "21252:33:15",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 6858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21273:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 6846,
                        "id": 6859,
                        "nodeType": "Return",
                        "src": "21266:8:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    6863
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6863,
                      "mutability": "mutable",
                      "name": "currentWork",
                      "nameLocation": "21303:11:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6905,
                      "src": "21295:19:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6862,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21295:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6868,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6866,
                        "name": "_bidder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6842,
                        "src": "21341:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6864,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5365,
                        "src": "21317:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                          "typeString": "contract IStakingEscrow"
                        }
                      },
                      "id": 6865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCompletedWork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 662,
                      "src": "21317:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 6867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21317:32:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21295:54:15"
                },
                {
                  "assignments": [
                    6870
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6870,
                      "mutability": "mutable",
                      "name": "completedWork",
                      "nameLocation": "21367:13:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6905,
                      "src": "21359:21:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6869,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21359:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6876,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6873,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6849,
                          "src": "21399:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                            "typeString": "struct WorkLock.WorkInfo storage pointer"
                          }
                        },
                        "id": 6874,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "completedWork",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5348,
                        "src": "21399:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6871,
                        "name": "currentWork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6863,
                        "src": "21383:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13424,
                      "src": "21383:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21383:35:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21359:59:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6877,
                      "name": "completedWork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6870,
                      "src": "21493:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 6878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21510:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "21493:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6883,
                  "nodeType": "IfStatement",
                  "src": "21489:57:15",
                  "trueBody": {
                    "id": 6882,
                    "nodeType": "Block",
                    "src": "21513:33:15",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 6880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21534:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 6846,
                        "id": 6881,
                        "nodeType": "Return",
                        "src": "21527:8:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    6885
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6885,
                      "mutability": "mutable",
                      "name": "refundETH",
                      "nameLocation": "21564:9:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6905,
                      "src": "21556:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6884,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21556:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6891,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6887,
                        "name": "completedWork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6870,
                        "src": "21586:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 6888,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6849,
                          "src": "21601:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                            "typeString": "struct WorkLock.WorkInfo storage pointer"
                          }
                        },
                        "id": 6889,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "depositedETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5346,
                        "src": "21601:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6886,
                      "name": "workToETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5829,
                        5921
                      ],
                      "referencedDeclaration": 5921,
                      "src": "21576:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 6890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21576:43:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21556:63:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6892,
                      "name": "refundETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6885,
                      "src": "21633:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 6893,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6849,
                        "src": "21645:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                          "typeString": "struct WorkLock.WorkInfo storage pointer"
                        }
                      },
                      "id": 6894,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositedETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5346,
                      "src": "21645:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21633:29:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6902,
                  "nodeType": "IfStatement",
                  "src": "21629:89:15",
                  "trueBody": {
                    "id": 6901,
                    "nodeType": "Block",
                    "src": "21664:54:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 6899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6896,
                            "name": "refundETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6885,
                            "src": "21678:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 6897,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6849,
                              "src": "21690:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                                "typeString": "struct WorkLock.WorkInfo storage pointer"
                              }
                            },
                            "id": 6898,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "depositedETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5346,
                            "src": "21690:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21678:29:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6900,
                        "nodeType": "ExpressionStatement",
                        "src": "21678:29:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 6903,
                    "name": "refundETH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6885,
                    "src": "21734:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6846,
                  "id": 6904,
                  "nodeType": "Return",
                  "src": "21727:16:15"
                }
              ]
            },
            "documentation": {
              "id": 6840,
              "nodeType": "StructuredDocumentation",
              "src": "20998:56:15",
              "text": " @notice Get available refund for bidder"
            },
            "functionSelector": "72f96040",
            "id": 6906,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableRefund",
            "nameLocation": "21068:18:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6842,
                  "mutability": "mutable",
                  "name": "_bidder",
                  "nameLocation": "21095:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 6906,
                  "src": "21087:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21087:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21086:17:15"
            },
            "returnParameters": {
              "id": 6846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6845,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6906,
                  "src": "21125:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6844,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21125:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21124:9:15"
            },
            "scope": 7000,
            "src": "21059:691:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6998,
              "nodeType": "Block",
              "src": "21874:791:15",
              "statements": [
                {
                  "assignments": [
                    6914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6914,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "21901:4:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6998,
                      "src": "21884:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                        "typeString": "struct WorkLock.WorkInfo"
                      },
                      "typeName": {
                        "id": 6913,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6912,
                          "name": "WorkInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5353,
                          "src": "21884:8:15"
                        },
                        "referencedDeclaration": 5353,
                        "src": "21884:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                          "typeString": "struct WorkLock.WorkInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6919,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6915,
                      "name": "workInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5390,
                      "src": "21908:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WorkInfo_$5353_storage_$",
                        "typeString": "mapping(address => struct WorkLock.WorkInfo storage ref)"
                      }
                    },
                    "id": 6918,
                    "indexExpression": {
                      "expression": {
                        "id": 6916,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "21917:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "21917:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "21908:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WorkInfo_$5353_storage",
                      "typeString": "struct WorkLock.WorkInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21884:44:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6921,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6914,
                          "src": "21946:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                            "typeString": "struct WorkLock.WorkInfo storage pointer"
                          }
                        },
                        "id": 6922,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5350,
                        "src": "21946:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e73206d75737420626520636c61696d6564206265666f726520726566756e64",
                        "id": 6923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21960:38:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31643afd198ef80b161d589e5c4071b29ae981c63a9edf2323e797986448dd85",
                          "typeString": "literal_string \"Tokens must be claimed before refund\""
                        },
                        "value": "Tokens must be claimed before refund"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31643afd198ef80b161d589e5c4071b29ae981c63a9edf2323e797986448dd85",
                          "typeString": "literal_string \"Tokens must be claimed before refund\""
                        }
                      ],
                      "id": 6920,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21938:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21938:61:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6925,
                  "nodeType": "ExpressionStatement",
                  "src": "21938:61:15"
                },
                {
                  "expression": {
                    "id": 6931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6926,
                      "name": "refundETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6910,
                      "src": "22009:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 6928,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "22040:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "22040:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6927,
                        "name": "getAvailableRefund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6906,
                        "src": "22021:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 6930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22021:30:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22009:42:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6932,
                  "nodeType": "ExpressionStatement",
                  "src": "22009:42:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6934,
                          "name": "refundETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6910,
                          "src": "22069:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22081:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "22069:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7468696e6720746f20726566756e643a207468657265206973206e6f2045544820746f20726566756e64206f72206e6f20636f6d706c6574656420776f726b",
                        "id": 6937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22084:67:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_631c2fb01d96fff242279f969feb56e42eae4f29538d0f02ae0da82fc9a10903",
                          "typeString": "literal_string \"Nothing to refund: there is no ETH to refund or no completed work\""
                        },
                        "value": "Nothing to refund: there is no ETH to refund or no completed work"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_631c2fb01d96fff242279f969feb56e42eae4f29538d0f02ae0da82fc9a10903",
                          "typeString": "literal_string \"Nothing to refund: there is no ETH to refund or no completed work\""
                        }
                      ],
                      "id": 6933,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22061:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22061:91:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6939,
                  "nodeType": "ExpressionStatement",
                  "src": "22061:91:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6940,
                      "name": "refundETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6910,
                      "src": "22167:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 6941,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6914,
                        "src": "22180:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                          "typeString": "struct WorkLock.WorkInfo storage pointer"
                        }
                      },
                      "id": 6942,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositedETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5346,
                      "src": "22180:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22167:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6953,
                  "nodeType": "IfStatement",
                  "src": "22163:105:15",
                  "trueBody": {
                    "id": 6952,
                    "nodeType": "Block",
                    "src": "22199:69:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 6947,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "22239:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "22239:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 6949,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22251:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 6944,
                              "name": "escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5365,
                              "src": "22213:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                                "typeString": "contract IStakingEscrow"
                              }
                            },
                            "id": 6946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setWorkMeasurement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 680,
                            "src": "22213:25:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_uint256_$",
                              "typeString": "function (address,bool) external returns (uint256)"
                            }
                          },
                          "id": 6950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22213:44:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6951,
                        "nodeType": "ExpressionStatement",
                        "src": "22213:44:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 6962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 6954,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6914,
                        "src": "22277:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                          "typeString": "struct WorkLock.WorkInfo storage pointer"
                        }
                      },
                      "id": 6956,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "depositedETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5346,
                      "src": "22277:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6960,
                          "name": "refundETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6910,
                          "src": "22319:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 6957,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6914,
                            "src": "22297:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                              "typeString": "struct WorkLock.WorkInfo storage pointer"
                            }
                          },
                          "id": 6958,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "depositedETH",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5346,
                          "src": "22297:17:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13424,
                        "src": "22297:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22297:32:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22277:52:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6963,
                  "nodeType": "ExpressionStatement",
                  "src": "22277:52:15"
                },
                {
                  "assignments": [
                    6965
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6965,
                      "mutability": "mutable",
                      "name": "completedWork",
                      "nameLocation": "22425:13:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 6998,
                      "src": "22417:21:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6964,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22417:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6971,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6967,
                        "name": "refundETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6910,
                        "src": "22451:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 6968,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6914,
                          "src": "22462:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                            "typeString": "struct WorkLock.WorkInfo storage pointer"
                          }
                        },
                        "id": 6969,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "depositedETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5346,
                        "src": "22462:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6966,
                      "name": "ethToWork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5671,
                        5788,
                        5802
                      ],
                      "referencedDeclaration": 5788,
                      "src": "22441:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 6970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22441:39:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22417:63:15"
                },
                {
                  "expression": {
                    "id": 6980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 6972,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6914,
                        "src": "22491:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                          "typeString": "struct WorkLock.WorkInfo storage pointer"
                        }
                      },
                      "id": 6974,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "completedWork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5348,
                      "src": "22491:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6978,
                          "name": "completedWork",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6965,
                          "src": "22535:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 6975,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6914,
                            "src": "22512:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WorkInfo_$5353_storage_ptr",
                              "typeString": "struct WorkLock.WorkInfo storage pointer"
                            }
                          },
                          "id": 6976,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "completedWork",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5348,
                          "src": "22512:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13409,
                        "src": "22512:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22512:37:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22491:58:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6981,
                  "nodeType": "ExpressionStatement",
                  "src": "22491:58:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6983,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "22571:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "22571:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6985,
                        "name": "refundETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6910,
                        "src": "22583:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6986,
                        "name": "completedWork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6965,
                        "src": "22594:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6982,
                      "name": "Refund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5312,
                      "src": "22564:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 6987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22564:44:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6988,
                  "nodeType": "EmitStatement",
                  "src": "22559:49:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6995,
                        "name": "refundETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6910,
                        "src": "22648:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 6991,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "22626:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "22626:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "22618:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 6989,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "22618:8:15",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22618:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 6994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14513,
                      "src": "22618:29:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 6996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22618:40:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6997,
                  "nodeType": "ExpressionStatement",
                  "src": "22618:40:15"
                }
              ]
            },
            "documentation": {
              "id": 6907,
              "nodeType": "StructuredDocumentation",
              "src": "21756:58:15",
              "text": " @notice Refund ETH for the completed work"
            },
            "functionSelector": "590e1ae3",
            "id": 6999,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "21828:6:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21834:2:15"
            },
            "returnParameters": {
              "id": 6911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6910,
                  "mutability": "mutable",
                  "name": "refundETH",
                  "nameLocation": "21863:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 6999,
                  "src": "21855:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21855:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21854:19:15"
            },
            "scope": 7000,
            "src": "21819:846:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7001,
        "src": "442:22225:15",
        "usedErrors": []
      }
    ],
    "src": "47:22621:15"
  },
  "bytecode": "6101606040523480156200001257600080fd5b50604051620034433803806200344383398101604081905262000035916200047a565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36000886001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000b5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000db9190620004fc565b90506000811180156200015857506000886001600160a01b031663407f80016040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200012a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000150919062000516565b63ffffffff16115b8015620001da5750886001600160a01b0316886001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001a9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001cf919062000545565b6001600160a01b0316145b8015620001e657508686115b8015620001f257504286115b8015620001ff5750858510155b80156200020c5750600082115b8015620002195750600084115b8015620002925750876001600160a01b0316633ac5743d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000260573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000286919062000565565b61ffff168361ffff1610155b6200029c57600080fd5b6064816b409f9cbc7c4a04c22000000082620002b9838362000583565b620002c5919062000583565b620002d19190620005b1565b620002dd9190620005b1565b14801562000328575083816b409f9cbc7c4a04c2200000008262000302838362000583565b6200030e919062000583565b6200031a9190620005b1565b620003269190620005b1565b145b6200033257600080fd5b6001600160a01b03808a16608052881660a081905260028890556003879055600486815560c086905261ffff85166101005260e0849052604080516337db29d160e11b81529051636fb653a2928281019260209291908290030181865afa158015620003a2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003c89190620004fc565b6101208181525050876001600160a01b0316638cab6c4f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200040f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004359190620004fc565b6101405250620005d4975050505050505050565b6001600160a01b03811681146200045f57600080fd5b50565b805161ffff811681146200047557600080fd5b919050565b600080600080600080600080610100898b0312156200049857600080fd5b8851620004a58162000449565b60208a0151909850620004b88162000449565b8097505060408901519550606089015194506080890151935060a08901519250620004e660c08a0162000462565b915060e089015190509295985092959890939650565b6000602082840312156200050f57600080fd5b5051919050565b6000602082840312156200052957600080fd5b815163ffffffff811681146200053e57600080fd5b9392505050565b6000602082840312156200055857600080fd5b81516200053e8162000449565b6000602082840312156200057857600080fd5b6200053e8262000462565b6000816000190483118215151615620005ac57634e487b7160e01b600052601160045260246000fd5b500290565b600082620005cf57634e487b7160e01b600052601260045260246000fd5b500490565b60805160a05160c05160e051610100516101205161014051612cf56200074e6000396000818161052301528181610976015281816110bf015281816117410152818161179301528181611891015281816118e501528181611e5601528181611ed801526123f701526000818161041601528181611819015281816118b201528181611b2e01528181611dc80152611e7701526000818161062a0152610cf50152600081816103360152818161090601528181610a7101528181611071015281816110f20152818161111d0152818161161901528181611647015281816116c10152818161170d0152818161193a01528181611ea4015281816122ff015281816123430152818161237b01526123a90152600081816103ac015281816125af01526125e90152600081816106be0152818161078901528181610c3901528181610d1c01528181610d9a01528181610f6e015261125d01526000818161071201528181610c68015281816121ca01526126850152612cf56000f3fe60806040526004361061021a5760003560e01c806387a15dc911610123578063b15cf964116100ab578063e1fe7d231161006f578063e1fe7d231461068c578063e2fdcc17146106ac578063f2fde38b146106e0578063fc0c546a14610700578063fc0e74d11461073457600080fd5b8063b15cf964146105e2578063bc859f44146105f8578063be7ff58014610618578063cbce49ed1461064c578063cff29dfd1461066c57600080fd5b80638da5cb5b116100f25780638da5cb5b146105455780638f32d59b146105775780639435c887146105975780639b51ac85146105ac578063a4c89322146105c257600080fd5b806387a15dc9146104c157806388657c7a146104d6578063897db45c146104fb5780638cab6c4f1461051157600080fd5b80635bf997f5116101a6578063715018a611610175578063715018a61461043857806372f960401461044d5780637824407f1461046d5780637f4fad6914610483578063878650331461049957600080fd5b80635bf997f51461039a578063617e677e146103ce57806366ade78e146103e45780636fb653a21461040457600080fd5b80631f45002c116101ed5780631f45002c146102915780634e71d92d1461030f5780634f1910a1146103245780635707bee514610358578063590e1ae31461038557600080fd5b80630594851c1461021f578063124a1f4f146102525780631998aeef146102725780631bb897621461027c575b600080fd5b34801561022b57600080fd5b5061023f61023a3660046129c4565b610749565b6040519081526020015b60405180910390f35b34801561025e57600080fd5b5061023f61026d3660046129e1565b610834565b61027a610847565b005b34801561028857600080fd5b5060085461023f565b34801561029d57600080fd5b506102e06102ac3660046129c4565b60066020526000908152604090208054600182015460029092015490919060ff81169061010090046001600160801b031684565b604080519485526020850193909352901515918301919091526001600160801b03166060820152608001610249565b34801561031b57600080fd5b5061023f610aff565b34801561033057600080fd5b5061023f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561036457600080fd5b5061023f6103733660046129c4565b60076020526000908152604090205481565b34801561039157600080fd5b5061023f610e4f565b3480156103a657600080fd5b5061023f7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103da57600080fd5b5061023f60045481565b3480156103f057600080fd5b5061023f6103ff3660046129fa565b611063565b34801561041057600080fd5b5061023f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561044457600080fd5b5061027a6111b3565b34801561045957600080fd5b5061023f6104683660046129c4565b611214565b34801561047957600080fd5b5061023f60015481565b34801561048f57600080fd5b5061023f60025481565b3480156104a557600080fd5b506104ae606481565b60405161ffff9091168152602001610249565b3480156104cd57600080fd5b5061027a61131e565b3480156104e257600080fd5b506104eb6113c7565b6040519015158152602001610249565b34801561050757600080fd5b5061023f60035481565b34801561051d57600080fd5b5061023f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561055157600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610249565b34801561058357600080fd5b506000546001600160a01b031633146104eb565b3480156105a357600080fd5b5061027a6113e3565b3480156105b857600080fd5b5061023f60055481565b3480156105ce57600080fd5b5061023f6105dd3660046129e1565b6116bd565b3480156105ee57600080fd5b5061023f60095481565b34801561060457600080fd5b5061023f6106133660046129e1565b6117bf565b34801561062457600080fd5b506104ae7f000000000000000000000000000000000000000000000000000000000000000081565b34801561065857600080fd5b5061027a610667366004612a1c565b611a7d565b34801561067857600080fd5b5061055f6106873660046129e1565b61212b565b34801561069857600080fd5b5061027a6106a73660046129e1565b612155565b3480156106b857600080fd5b5061055f7f000000000000000000000000000000000000000000000000000000000000000081565b3480156106ec57600080fd5b5061027a6106fb3660046129c4565b61223b565b34801561070c57600080fd5b5061055f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561074057600080fd5b5061027a61225e565b6001600160a01b038082166000818152600660205260408082206001810154915163d094adbf60e01b815260048101949094529193919284926107fc92917f00000000000000000000000000000000000000000000000000000000000000009091169063d094adbf90602401602060405180830381865afa1580156107d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f69190612a91565b906122de565b9050600061080d8360000154610834565b905081811161082157506000949350505050565b61082b8282612ac0565b95945050505050565b60006108418260006122f1565b92915050565b60025442101561089e5760405162461bcd60e51b815260206004820152601760248201527f42696464696e67206973206e6f74206f70656e2079657400000000000000000060448201526064015b60405180910390fd5b60035442106108ef5760405162461bcd60e51b815260206004820152601b60248201527f42696464696e6720697320616c72656164792066696e697368656400000000006044820152606401610895565b3360009081526006602052604090208054610aa7577f00000000000000000000000000000000000000000000000000000000000000003410156109745760405162461bcd60e51b815260206004820152601c60248201527f426964206d757374206265206174206c65617374206d696e696d756d000000006044820152606401610895565b7f00000000000000000000000000000000000000000000000000000000000000006001546109a29190612ad7565b600854106109fd5760405162461bcd60e51b815260206004820152602260248201527f4e6f7420656e6f75676820746f6b656e7320666f72206d6f7265206269646465604482015261727360f01b6064820152608401610895565b600880546002830180546001600160801b0390921661010002610100600160881b031990921691909117905580546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b03191633179055610a9f610a967f000000000000000000000000000000000000000000000000000000000000000034612ac0565b60055490612470565b600555610ab8565b600554610ab49034612470565b6005555b8054610ac49034612470565b815560405134815233907fe684a55f31b79eca403df938249029212a5925ec6be8012e099b45bc1019e5d2906020015b60405180910390a250565b6000610b096113c7565b610b5f5760405162461bcd60e51b815260206004820152602160248201527f436c61696d696e6720686173206e6f74206265656e20656e61626c65642079656044820152601d60fa1b6064820152608401610895565b336000908152600660205260409020600281015460ff1615610bc35760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e732061726520616c726561647920636c61696d65640000000000006044820152606401610895565b8054610bce906116bd565b915060008211610c135760405162461bcd60e51b815260206004820152601060248201526f4e6f7468696e6720746f20636c61696d60801b6044820152606401610895565b60028101805460ff1916600117905560405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af1158015610cb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd59190612af9565b50604051630b8f81e160e11b81523360048201526024810183905261ffff7f00000000000000000000000000000000000000000000000000000000000000001660448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063171f03c290606401600060405180830381600087803b158015610d6857600080fd5b505af1158015610d7c573d6000803e3d6000fd5b50506040516312796b7560e21b8152336004820152600160248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692506349e5add491506044016020604051808303816000875af1158015610ded573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e119190612a91565b600182015560405182815233907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9060200160405180910390a25090565b336000908152600660205260408120600281015460ff16610ebe5760405162461bcd60e51b8152602060048201526024808201527f546f6b656e73206d75737420626520636c61696d6564206265666f7265207265604482015263199d5b9960e21b6064820152608401610895565b610ec733611214565b915060008211610f495760405162461bcd60e51b815260206004820152604160248201527f4e6f7468696e6720746f20726566756e643a207468657265206973206e6f204560448201527f544820746f20726566756e64206f72206e6f20636f6d706c6574656420776f726064820152606b60f81b608482015260a401610895565b8054821415610fe5576040516312796b7560e21b8152336004820152600060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906349e5add4906044016020604051808303816000875af1158015610fbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe39190612a91565b505b8054610ff190836122de565b8082556000906110029084906122f1565b60018301549091506110149082612470565b6001830155604080518481526020810183905233917f73f04af9dcc582a923ec15d3eea990fe34adabfff2879e28d44572e01a54abb6910160405180910390a261105e338461247c565b505090565b6008546000908190611096907f000000000000000000000000000000000000000000000000000000000000000090612b1b565b9050600554600014156110b8576110b0848260015461259a565b915050610841565b60008060007f00000000000000000000000000000000000000000000000000000000000000006008805490506110ee9190612b1b565b90507f0000000000000000000000000000000000000000000000000000000000000000861115611187576111427f000000000000000000000000000000000000000000000000000000000000000087612ac0565b91506000816001546111549190612ac0565b905061116383826005546125de565b935083881161118557611179886005548361259a565b95505050505050610841565b505b6111918388612ac0565b965061119e87858361259a565b6111a89083612b3a565b979650505050505050565b6000546001600160a01b031633146111ca57600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001600160a01b0381166000908152600660205260408120805461123b5750600092915050565b60405163d094adbf60e01b81526001600160a01b0384811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063d094adbf90602401602060405180830381865afa1580156112a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ca9190612a91565b905060006112e58360010154836122de90919063ffffffff16565b9050806112f757506000949350505050565b6000611307828560000154611063565b845490915081111561082b57505090549392505050565b336000908152600760205260409020548061137b5760405162461bcd60e51b815260206004820152601860248201527f5468657265206973206e6f20636f6d70656e736174696f6e00000000000000006044820152606401610895565b33600081815260076020526040812055611395908261247c565b60405181815233907f1480b15e3eab83a9b923578ffe330e3dce94536007ec9c0b48a5dfbde8c4918190602001610af4565b600060045442101580156113de5750600854600954145b905090565b60045442106114515760405162461bcd60e51b815260206004820152603460248201527f43616e63656c6c6174696f6e20616c6c6f776564206f6e6c7920647572696e676044820152732063616e63656c6c6174696f6e2077696e646f7760601b6064820152608401610895565b33600090815260066020526040902080546114a15760405162461bcd60e51b815260206004820152601060248201526f139bc8189a59081d1bc818d85b98d95b60821b6044820152606401610895565b600281015460ff16156114f65760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e732061726520616c726561647920636c61696d65640000000000006044820152606401610895565b8054600080835560085461150c90600190612ac0565b600284015490915061010090046001600160801b031681146115e45760006008828154811061153d5761153d612b52565b6000918252602090912001546002850154600880546001600160a01b0390931693508392909161010090046001600160801b031690811061158057611580612b52565b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790556002878101549490931682526006905260409020018054610100600160881b031916610100928390046001600160801b03169092029190911790555b60088054806115f5576115f5612b68565b600082815260209020810160001990810180546001600160a01b03191690550190557f00000000000000000000000000000000000000000000000000000000000000008211156116795761167561166c7f000000000000000000000000000000000000000000000000000000000000000084612ac0565b600554906122de565b6005555b611683338361247c565b60405182815233907ff3a6ef5718c05d9183af076f5753197b68b04552a763c34796637d6134bdd0f29060200160405180910390a2505050565b60007f00000000000000000000000000000000000000000000000000000000000000008210156116ef57506000919050565b600554611706576008546001546108419190612ad7565b60006117327f000000000000000000000000000000000000000000000000000000000000000084612ac0565b600854909150600090611766907f000000000000000000000000000000000000000000000000000000000000000090612b1b565b6001546117739190612ac0565b60055490915061178d906117878484612618565b90612624565b6117b7907f0000000000000000000000000000000000000000000000000000000000000000612b3a565b949350505050565b60006004544210156117e35760405162461bcd60e51b815260040161089590612b7e565b60085460095414156118075760405162461bcd60e51b815260040161089590612bd2565b60095460055461188a576008546001547f00000000000000000000000000000000000000000000000000000000000000009161184291612ad7565b11156118855760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f756768206269646465727360701b6044820152606401610895565b506008545b60006118d67f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612ac0565b60085490915060009061190a907f000000000000000000000000000000000000000000000000000000000000000090612b1b565b6001546119179190612ac0565b90506000611934826117876005548661261890919063ffffffff16565b61195e907f0000000000000000000000000000000000000000000000000000000000000000612b3a565b90505b600854841080156119715750855a115b15611a235760006008858154811061198b5761198b612b52565b60009182526020808320909101546001600160a01b03168083526006909152604090912054909150821015611a105760405162461bcd60e51b815260206004820152602560248201527f4269642069732067726561746572207468616e206d617820616c6c6f7761626c6044820152641948189a5960da1b6064820152608401610895565b84611a1a81612c13565b95505050611961565b6009548414611a7057600954604080519182526020820186905233917f97d5ad02b58968c48057bb16e90b9468ec753e30169bf00692b7ba02b47b090e910160405180910390a260098490555b5050600954949350505050565b600454421015611a9f5760405162461bcd60e51b815260040161089590612b7e565b6008546009541415611ac35760405162461bcd60e51b815260040161089590612bd2565b8080611b225760405162461bcd60e51b815260206004820152602860248201527f4d757374206265206174206c65617374206f6e652062696464657220666f722060448201526718481c99599d5b9960c21b6064820152608401610895565b600154600090611b52907f0000000000000000000000000000000000000000000000000000000000000000612630565b600854909150811115611b6d57611b67612653565b50505050565b600084846000818110611b8257611b82612b52565b9050602002016020810190611b9791906129c4565b6001600160a01b0381166000908152600660205260409020549091508060015b85811015611ca7576000888883818110611bd357611bd3612b52565b9050602002016020810190611be891906129c4565b6001600160a01b03808216600081815260066020526040902054929350908716108015611c155750600081115b611c765760405162461bcd60e51b815260206004820152602c60248201527f416464726573736573206d75737420626520616e206172726179206f6620756e60448201526b69717565206269646465727360a01b6064820152608401610895565b80851115611c8657809450611c92565b80841015611c92578093505b50935080611c9f81612c13565b915050611bb7565b5060008567ffffffffffffffff811115611cc357611cc3612c2e565b604051908082528060200260200182016040528015611cec578160200160208202803683370190505b509050818314611dc65760005b86811015611dc4576000898983818110611d1557611d15612b52565b9050602002016020810190611d2a91906129c4565b6001600160a01b0381166000908152600660205260409020805491925090861015611daf578054611d5c908790612ac0565b848481518110611d6e57611d6e612b52565b60209081029190910101528581558351849084908110611d9057611d90612b52565b602002602001015160056000828254611da99190612ac0565b90915550505b50508080611dbc90612c13565b915050611cf9565b505b7f0000000000000000000000000000000000000000000000000000000000000000611df0846116bd565b11611e4f5760405162461bcd60e51b815260206004820152602960248201527f4174206c65617374206f6e65206f6620626964646572732068617320616c6c6f6044820152681dd8589b1948189a5960ba1b6064820152608401610895565b6000611e9b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612ac0565b90506000611ec97f000000000000000000000000000000000000000000000000000000000000000086612ac0565b600854909150600090611efd907f000000000000000000000000000000000000000000000000000000000000000090612b1b565b600154611f0a9190612ac0565b90506000611f4d611f1b858c612618565b611f259084612ac0565b611f47611f3d6005548861261890919063ffffffff16565b6107f68787612618565b90612630565b90506000611f5b88836122de565b9050611f67828c612b1b565b60056000828254611f789190612ac0565b90915550600090505b8b8110156120115760008e8e83818110611f9d57611f9d612b52565b9050602002016020810190611fb291906129c4565b6001600160a01b038116600090815260066020526040902089519192509085908a9085908110611fe457611fe4612b52565b60200260200101818151611ff89190612b3a565b905250839055508061200981612c13565b915050611f81565b50600060098190555b8b81101561211b5760008e8e8381811061203657612036612b52565b905060200201602081019061204b91906129c4565b905087828151811061205f5761205f612b52565b602002602001015160076000836001600160a01b03166001600160a01b03168152602001908152602001600020600082825461209b9190612b3a565b92505081905550806001600160a01b0316336001600160a01b03167f2887b6da4c721c91735aada87ddc427d4ef240ef9b54e759ef10c0792b4093738a85815181106120e9576120e9612b52565b602002602001015160405161210091815260200190565b60405180910390a3508061211381612c13565b91505061201a565b5050505050505050505050505050565b6008818154811061213b57600080fd5b6000918252602090912001546001600160a01b0316905081565b60035442106121bd5760405162461bcd60e51b815260206004820152602e60248201527f43616e2774206465706f736974206d6f726520746f6b656e732061667465722060448201526d656e64206f662062696464696e6760901b6064820152608401610895565b6121f26001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846126d9565b80600160008282546122049190612b3a565b909155505060405181815233907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c490602001610af4565b6000546001600160a01b0316331461225257600080fd5b61225b81612744565b50565b6000546001600160a01b0316331461227557600080fd5b61227d6113c7565b156122d45760405162461bcd60e51b815260206004820152602160248201527f436c61696d696e672068617320616c7265616479206265656e20656e61626c656044820152601960fa1b6064820152608401610895565b6122dc612653565b565b60006122ea8284612ac0565b9392505050565b6008546000908190612324907f000000000000000000000000000000000000000000000000000000000000000090612b1b565b90506005546000141561233e576110b084600154836125de565b6000807f000000000000000000000000000000000000000000000000000000000000000061236c8688612b3a565b11612379578591506123eb565b7f000000000000000000000000000000000000000000000000000000000000000085106123a75750846123eb565b7f00000000000000000000000000000000000000000000000000000000000000006123d28688612b3a565b6123dc9190612ac0565b90506123e88187612ac0565b91505b60085460009061241c907f000000000000000000000000000000000000000000000000000000000000000090612b1b565b905060008315612434576124318483876125de565b90505b82156111a85760008260015461244a9190612ac0565b905061245984826005546125de565b6124639083612b3a565b9998505050505050505050565b60006122ea8284612b3a565b804710156124cc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610895565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612519576040519150601f19603f3d011682016040523d82523d6000602084013e61251e565b606091505b50509050806125955760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610895565b505050565b60006117b76125aa836064612618565b6117877f00000000000000000000000000000000000000000000000000000000000000006125d88888612618565b90612618565b60006117b761260d837f0000000000000000000000000000000000000000000000000000000000000000612618565b611f4760646125d888885b60006122ea8284612b1b565b60006122ea8284612ad7565b600081600161263f8583612470565b6126499190612ac0565b6122ea9190612ad7565b600060028190556003556000196004556126ac6126786000546001600160a01b031690565b6001546001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691906127b2565b60405133907f28b4c24cb1012c094cd2f59f98e89d791973295f8fda6eaa118022d6d318960a90600090a2565b6040516001600160a01b0380851660248301528316604482015260648101829052611b679085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526127e2565b6001600160a01b03811661275757600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6040516001600160a01b03831660248201526044810182905261259590849063a9059cbb60e01b9060640161270d565b6000612837826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166128b49092919063ffffffff16565b80519091501561259557808060200190518101906128559190612af9565b6125955760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610895565b60606117b7848460008585843b61290d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610895565b600080866001600160a01b031685876040516129299190612c70565b60006040518083038185875af1925050503d8060008114612966576040519150601f19603f3d011682016040523d82523d6000602084013e61296b565b606091505b50915091506111a8828286606083156129855750816122ea565b8251156129955782518084602001fd5b8160405162461bcd60e51b81526004016108959190612c8c565b6001600160a01b038116811461225b57600080fd5b6000602082840312156129d657600080fd5b81356122ea816129af565b6000602082840312156129f357600080fd5b5035919050565b60008060408385031215612a0d57600080fd5b50508035926020909101359150565b60008060208385031215612a2f57600080fd5b823567ffffffffffffffff80821115612a4757600080fd5b818501915085601f830112612a5b57600080fd5b813581811115612a6a57600080fd5b8660208260051b8501011115612a7f57600080fd5b60209290920196919550909350505050565b600060208284031215612aa357600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612ad257612ad2612aaa565b500390565b600082612af457634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215612b0b57600080fd5b815180151581146122ea57600080fd5b6000816000190483118215151615612b3557612b35612aaa565b500290565b60008219821115612b4d57612b4d612aaa565b500190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60208082526034908201527f4f7065726174696f6e20697320616c6c6f776564207768656e2063616e63656c6040820152733630ba34b7b710383430b9b29034b99037bb32b960611b606082015260800190565b60208082526021908201527f42696464657273206861766520616c7265616479206265656e20636865636b656040820152601960fa1b606082015260800190565b6000600019821415612c2757612c27612aaa565b5060010190565b634e487b7160e01b600052604160045260246000fd5b60005b83811015612c5f578181015183820152602001612c47565b83811115611b675750506000910152565b60008251612c82818460208701612c44565b9190910192915050565b6020815260008251806020840152612cab816040850160208701612c44565b601f01601f1916919091016040019291505056fea2646970667358221220c7a3b4e140f1161b52ad5af8283035212e37cb53be2a4bff70afd23954bc6d5a64736f6c634300080a0033",
  "bytecodeSha1": "4cf52cdcde22d76156dc68e47fa2c85ce2ea70d5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "WorkLock",
  "coverageMap": {
    "branches": {
      "10": {},
      "11": {},
      "15": {
        "WorkLock.bid": {
          "134": [
            12034,
            12065,
            true
          ],
          "135": [
            12111,
            12139,
            true
          ],
          "136": [
            12307,
            12333,
            true
          ],
          "137": [
            12388,
            12443,
            true
          ]
        },
        "WorkLock.cancelBid": {
          "150": [
            12963,
            13000,
            true
          ],
          "151": [
            13201,
            13214,
            true
          ],
          "152": [
            13460,
            13483,
            false
          ],
          "153": [
            13685,
            13710,
            false
          ]
        },
        "WorkLock.claim": {
          "138": [
            20411,
            20432,
            true
          ],
          "139": [
            20542,
            20555,
            true
          ],
          "140": [
            20660,
            20677,
            true
          ]
        },
        "WorkLock.ethToTokens": {
          "154": [
            6209,
            6235,
            false
          ]
        },
        "WorkLock.ethToWork": {
          "172": [
            7743,
            7762,
            false
          ],
          "173": [
            8157,
            8209,
            false
          ],
          "174": [
            8512,
            8548,
            false
          ],
          "175": [
            9107,
            9118,
            false
          ],
          "176": [
            9216,
            9228,
            false
          ]
        },
        "WorkLock.forceRefund": {
          "159": [
            2856,
            2894,
            true
          ],
          "160": [
            14881,
            14916,
            true
          ],
          "161": [
            15024,
            15034,
            true
          ],
          "162": [
            15178,
            15213,
            false
          ],
          "163": [
            15657,
            15680,
            false
          ],
          "164": [
            15684,
            15700,
            true
          ],
          "165": [
            15767,
            15788,
            false
          ],
          "166": [
            15854,
            15875,
            false
          ],
          "167": [
            16097,
            16113,
            false
          ],
          "168": [
            16301,
            16327,
            false
          ],
          "169": [
            16549,
            16595,
            true
          ]
        },
        "WorkLock.getAvailableRefund": {
          "147": [
            21493,
            21511,
            false
          ],
          "148": [
            21633,
            21662,
            false
          ]
        },
        "WorkLock.getRemainingWork": {
          "133": [
            11636,
            11666,
            false
          ]
        },
        "WorkLock.refund": {
          "141": [
            21946,
            21958,
            true
          ],
          "142": [
            22069,
            22082,
            true
          ],
          "143": [
            22167,
            22197,
            false
          ]
        },
        "WorkLock.shutdown": {
          "171": [
            14077,
            14099,
            true
          ]
        },
        "WorkLock.tokenDeposit": {
          "170": [
            5727,
            5755,
            true
          ]
        },
        "WorkLock.verifyBiddingCorrectness": {
          "155": [
            18855,
            18890,
            true
          ],
          "156": [
            19097,
            19153,
            true
          ],
          "157": [
            19653,
            19704,
            true
          ],
          "158": [
            19792,
            19818,
            false
          ]
        },
        "WorkLock.withdrawCompensation": {
          "149": [
            18111,
            18121,
            true
          ]
        },
        "WorkLock.workToETH": {
          "144": [
            10496,
            10515,
            false
          ],
          "145": [
            10755,
            10784,
            false
          ],
          "146": [
            11008,
            11035,
            false
          ]
        }
      },
      "19": {},
      "33": {},
      "34": {
        "Ownable._transferOwnership": {
          "181": [
            2021,
            2043,
            true
          ]
        }
      },
      "36": {},
      "37": {},
      "38": {},
      "39": {
        "SafeERC20._callOptionalReturn": {
          "182": [
            3731,
            3752,
            false
          ],
          "183": [
            3815,
            3845,
            true
          ]
        }
      },
      "40": {
        "Address.sendValue": {
          "177": [
            2154,
            2185,
            true
          ],
          "178": [
            2300,
            2307,
            true
          ]
        },
        "Address.verifyCallResult": {
          "179": [
            7388,
            7395,
            false
          ],
          "180": [
            7529,
            7550,
            false
          ]
        }
      }
    },
    "statements": {
      "10": {},
      "11": {},
      "15": {
        "WorkLock.bid": {
          "6": [
            12026,
            12093
          ],
          "7": [
            12103,
            12171
          ],
          "8": [
            12299,
            12366
          ],
          "9": [
            12380,
            12482
          ],
          "10": [
            12496,
            12532
          ],
          "11": [
            12546,
            12570
          ],
          "12": [
            12584,
            12646
          ],
          "13": [
            12677,
            12723
          ],
          "14": [
            12744,
            12796
          ],
          "15": [
            12806,
            12837
          ]
        },
        "WorkLock.cancelBid": {
          "50": [
            12955,
            13069
          ],
          "51": [
            13133,
            13183
          ],
          "52": [
            13193,
            13245
          ],
          "53": [
            13302,
            13323
          ],
          "54": [
            13552,
            13584
          ],
          "55": [
            13598,
            13637
          ],
          "56": [
            13657,
            13670
          ],
          "57": [
            13726,
            13788
          ],
          "58": [
            13808,
            13848
          ],
          "59": [
            13858,
            13894
          ]
        },
        "WorkLock.claim": {
          "16": [
            20403,
            20470
          ],
          "17": [
            20534,
            20586
          ],
          "18": [
            20596,
            20642
          ],
          "19": [
            20652,
            20698
          ],
          "20": [
            20709,
            20728
          ],
          "21": [
            20738,
            20783
          ],
          "22": [
            20793,
            20862
          ],
          "23": [
            20872,
            20936
          ],
          "24": [
            20946,
            20985
          ]
        },
        "WorkLock.ethToTokens": {
          "60": [
            6251,
            6259
          ],
          "61": [
            6392,
            6427
          ],
          "62": [
            6595,
            6679
          ]
        },
        "WorkLock.ethToWork": {
          "5": [
            9670,
            9701
          ],
          "101": [
            7778,
            7837
          ],
          "102": [
            8225,
            8248
          ],
          "103": [
            8564,
            8588
          ],
          "104": [
            8869,
            8931
          ],
          "105": [
            8945,
            8979
          ],
          "106": [
            9134,
            9191
          ],
          "107": [
            9314,
            9375
          ],
          "108": [
            9396,
            9407
          ],
          "113": [
            6936,
            7031
          ]
        },
        "WorkLock.forceRefund": {
          "71": [
            14873,
            14954
          ],
          "72": [
            15016,
            15079
          ],
          "73": [
            15229,
            15247
          ],
          "74": [
            15261,
            15268
          ],
          "75": [
            15649,
            15749
          ],
          "76": [
            15808,
            15829
          ],
          "77": [
            15895,
            15916
          ],
          "78": [
            15944,
            15967
          ],
          "79": [
            15513,
            15516
          ],
          "80": [
            16351,
            16390
          ],
          "81": [
            16412,
            16438
          ],
          "82": [
            16460,
            16488
          ],
          "83": [
            16161,
            16164
          ],
          "84": [
            16541,
            16653
          ],
          "85": [
            17333,
            17369
          ],
          "86": [
            17535,
            17558
          ],
          "87": [
            17572,
            17601
          ],
          "88": [
            17411,
            17414
          ],
          "89": [
            17652,
            17673
          ],
          "90": [
            17811,
            17845
          ],
          "91": [
            17859,
            17907
          ],
          "92": [
            17741,
            17744
          ]
        },
        "WorkLock.getAvailableRefund": {
          "41": [
            21266,
            21274
          ],
          "42": [
            21527,
            21535
          ],
          "43": [
            21678,
            21707
          ],
          "44": [
            21727,
            21743
          ]
        },
        "WorkLock.getBiddersLength": {
          "0": [
            11886,
            11907
          ]
        },
        "WorkLock.getRemainingWork": {
          "3": [
            11682,
            11690
          ],
          "4": [
            11710,
            11746
          ]
        },
        "WorkLock.internalShutdown": {
          "117": [
            14338,
            14354
          ],
          "118": [
            14364,
            14378
          ],
          "119": [
            14388,
            14427
          ],
          "120": [
            14471,
            14511
          ],
          "121": [
            14521,
            14546
          ]
        },
        "WorkLock.isClaimingAvailable": {
          "49": [
            20113,
            20209
          ]
        },
        "WorkLock.refund": {
          "25": [
            21938,
            21999
          ],
          "26": [
            22009,
            22051
          ],
          "27": [
            22061,
            22152
          ],
          "28": [
            22213,
            22257
          ],
          "29": [
            22277,
            22329
          ],
          "30": [
            22491,
            22549
          ],
          "31": [
            22559,
            22608
          ],
          "32": [
            22618,
            22658
          ]
        },
        "WorkLock.shutdown": {
          "98": [
            14069,
            14137
          ],
          "99": [
            14147,
            14165
          ]
        },
        "WorkLock.tokenDeposit": {
          "93": [
            5719,
            5806
          ],
          "94": [
            5816,
            5873
          ],
          "95": [
            5883,
            5904
          ],
          "96": [
            5914,
            5948
          ]
        },
        "WorkLock.verifyBiddingCorrectness": {
          "63": [
            18847,
            18928
          ],
          "64": [
            19089,
            19176
          ],
          "65": [
            19190,
            19212
          ],
          "66": [
            19645,
            19746
          ],
          "67": [
            19760,
            19767
          ],
          "68": [
            19834,
            19891
          ],
          "69": [
            19905,
            19930
          ],
          "70": [
            19950,
            19974
          ]
        },
        "WorkLock.withdrawCompensation": {
          "45": [
            18103,
            18150
          ],
          "46": [
            18160,
            18188
          ],
          "47": [
            18198,
            18235
          ],
          "48": [
            18245,
            18291
          ]
        },
        "WorkLock.workToETH": {
          "33": [
            10531,
            10591
          ],
          "34": [
            10800,
            10840
          ],
          "35": [
            10924,
            10989
          ],
          "36": [
            11055,
            11121
          ],
          "37": [
            11156,
            11183
          ],
          "38": [
            11193,
            11268
          ],
          "112": [
            9966,
            10061
          ]
        }
      },
      "19": {
        "AdditionalMath.divCeil": {
          "116": [
            571,
            596
          ]
        }
      },
      "33": {
        "SafeMath.add": {
          "109": [
            2818,
            2830
          ]
        },
        "SafeMath.div": {
          "115": [
            3913,
            3925
          ]
        },
        "SafeMath.mul": {
          "114": [
            3528,
            3540
          ]
        },
        "SafeMath.sub": {
          "100": [
            3185,
            3197
          ]
        }
      },
      "34": {
        "Ownable._transferOwnership": {
          "123": [
            2013,
            2044
          ],
          "124": [
            2054,
            2097
          ],
          "125": [
            2107,
            2124
          ]
        },
        "Ownable.isOwner": {
          "2": [
            1069,
            1096
          ]
        },
        "Ownable.owner": {
          "1": [
            750,
            763
          ]
        },
        "Ownable.renounceOwnership": {
          "39": [
            1437,
            1482
          ],
          "40": [
            1492,
            1511
          ]
        },
        "Ownable.transferOwnership": {
          "97": [
            1769,
            1797
          ]
        }
      },
      "36": {},
      "37": {},
      "38": {},
      "39": {
        "SafeERC20._callOptionalReturn": {
          "127": [
            3807,
            3892
          ]
        },
        "SafeERC20.safeTransfer": {
          "126": [
            809,
            895
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "122": [
            1046,
            1142
          ]
        }
      },
      "40": {
        "Address.functionCall": {
          "128": [
            3671,
            3730
          ]
        },
        "Address.functionCallWithValue": {
          "129": [
            4881,
            4941
          ],
          "130": [
            5035,
            5093
          ]
        },
        "Address.sendValue": {
          "110": [
            2146,
            2219
          ],
          "111": [
            2292,
            2370
          ]
        },
        "Address.verifyCallResult": {
          "131": [
            7411,
            7428
          ],
          "132": [
            7855,
            7875
          ]
        }
      }
    }
  },
  "dependencies": [
    "AdditionalMath",
    "Address",
    "ERC20",
    "ERC20Detailed",
    "IERC20",
    "IStakingEscrow",
    "NuCypherToken",
    "Ownable",
    "SafeERC20",
    "SafeMath",
    "TokenRecipient"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "442:22225:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11344:409;;;;;;;;;;-1:-1:-1;11344:409:15;;;;;:::i;:::-;;:::i;:::-;;;548:25:41;;;536:2;521:18;11344:409:15;;;;;;;;9591:117;;;;;;;;;;-1:-1:-1;9591:117:15;;;;;:::i;:::-;;:::i;11984:860::-;;;:::i;:::-;;11816:98;;;;;;;;;;-1:-1:-1;11893:7:15;:14;11816:98;;2488:44;;;;;;;;;;-1:-1:-1;2488:44:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2488:44:15;;;;;;;994:25:41;;;1050:2;1035:18;;1028:34;;;;1105:14;;1098:22;1078:18;;;1071:50;;;;-1:-1:-1;;;;;1157:47:41;1152:2;1137:18;;1130:75;981:3;966:19;2488:44:15;769:442:41;20335:657:15;;;;;;;;;;;;;:::i;2080:38::-;;;;;;;;;;;;;;;2538:47;;;;;;;;;;-1:-1:-1;2538:47:15;;;;;:::i;:::-;;;;;;;;;;;;;;21819:846;;;;;;;;;;;;;:::i;2035:39::-;;;;;;;;;;;;;;;2412:34;;;;;;;;;;;;;;;;10249:1026;;;;;;;;;;-1:-1:-1;10249:1026:15;;;;;:::i;:::-;;:::i;2205:49::-;;;;;;;;;;;;;;;1381:137:34;;;;;;;;;;;;;:::i;21059:691:15:-;;;;;;;;;;-1:-1:-1;21059:691:15;;;;;:::i;:::-;;:::i;2316:26::-;;;;;;;;;;;;;;;;2348:27;;;;;;;;;;;;;;;;1417:43;;;;;;;;;;;;1457:3;1417:43;;;;;1643:6:41;1631:19;;;1613:38;;1601:2;1586:18;1417:43:15;1469:188:41;18001:297:15;;;;;;;;;;;;;:::i;20045:171::-;;;;;;;;;;;;;:::i;:::-;;;1827:14:41;;1820:22;1802:41;;1790:2;1775:18;20045:171:15;1662:187:41;2381:25:15;;;;;;;;;;;;;;;;2260:49;;;;;;;;;;;;;;;693:77:34;;;;;;;;;;-1:-1:-1;731:7:34;757:6;-1:-1:-1;;;;;757:6:34;693:77;;;-1:-1:-1;;;;;2018:32:41;;;2000:51;;1988:2;1973:18;693:77:34;1854:203:41;1013:90:34;;;;;;;;;;-1:-1:-1;1053:4:34;1090:6;-1:-1:-1;;;;;1090:6:34;1076:10;:20;1013:90;;12915:986:15;;;;;;;;;;;;;:::i;2453:29::-;;;;;;;;;;;;;;;;6124:562;;;;;;;;;;-1:-1:-1;6124:562:15;;;;;:::i;:::-;;:::i;2687:32::-;;;;;;;;;;;;;;;;18727:1254;;;;;;;;;;-1:-1:-1;18727:1254:15;;;;;:::i;:::-;;:::i;2124:38::-;;;;;;;;;;;;;;;14763:3162;;;;;;;;;;-1:-1:-1;14763:3162:15;;;;;:::i;:::-;;:::i;2592:24::-;;;;;;;;;;-1:-1:-1;2592:24:15;;;;;:::i;:::-;;:::i;5662:293::-;;;;;;;;;;-1:-1:-1;5662:293:15;;;;;:::i;:::-;;:::i;1567:38::-;;;;;;;;;;;;;;;1689:115:34;;;;;;;;;;-1:-1:-1;1689:115:34;;;;;:::i;:::-;;:::i;1525:36:15:-;;;;;;;;;;;;;;;14020:152;;;;;;;;;;;;;:::i;11344:409::-;-1:-1:-1;;;;;11453:17:15;;;11410:7;11453:17;;;:8;:17;;;;;;11541:18;;;;11504:32;;-1:-1:-1;;;11504:32:15;;;;;2000:51:41;;;;11410:7:15;;11453:17;;11410:7;;11504:56;;11541:18;11504:6;:23;;;;;;1973:18:41;;11504:32:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;:56::i;:::-;11480:80;;11570:21;11594:28;11604:4;:17;;;11594:9;:28::i;:::-;11570:52;;11653:13;11636;:30;11632:69;;-1:-1:-1;11689:1:15;;11344:409;-1:-1:-1;;;;11344:409:15:o;11632:69::-;11717:29;11733:13;11717;:29;:::i;:::-;11710:36;11344:409;-1:-1:-1;;;;;11344:409:15:o;9591:117::-;9651:7;9677:24;9687:10;9699:1;9677:9;:24::i;:::-;9670:31;9591:117;-1:-1:-1;;9591:117:15:o;11984:860::-;12053:12;;12034:15;:31;;12026:67;;;;-1:-1:-1;;;12026:67:15;;3802:2:41;12026:67:15;;;3784:21:41;3841:2;3821:18;;;3814:30;3880:25;3860:18;;;3853:53;3923:18;;12026:67:15;;;;;;;;;12129:10;;12111:15;:28;12103:68;;;;-1:-1:-1;;;12103:68:15;;4154:2:41;12103:68:15;;;4136:21:41;4193:2;4173:18;;;4166:30;4232:29;4212:18;;;4205:57;4279:18;;12103:68:15;3952:351:41;12103:68:15;12214:10;12181:21;12205:20;;;:8;:20;;;;;12261:17;;12257:477;;12320:13;12307:9;:26;;12299:67;;;;-1:-1:-1;;;12299:67:15;;4510:2:41;12299:67:15;;;4492:21:41;4549:2;4529:18;;;4522:30;4588;4568:18;;;4561:58;4636:18;;12299:67:15;4308:352:41;12299:67:15;12419:24;12405:11;;:38;;;;:::i;:::-;12388:7;:14;:55;12380:102;;;;-1:-1:-1;;;12380:102:15;;5089:2:41;12380:102:15;;;5071:21:41;5128:2;5108:18;;;5101:30;5167:34;5147:18;;;5140:62;-1:-1:-1;;;5218:18:41;;;5211:32;5260:19;;12380:102:15;4887:398:41;12380:102:15;12517:7;:14;;12496:10;;;:36;;-1:-1:-1;;;;;12496:36:15;;;;;-1:-1:-1;;;;;;12496:36:15;;;;;;;;;12546:24;;12496:10;12546:24;;;;-1:-1:-1;12546:24:15;;;;;;;;-1:-1:-1;;;;;;12546:24:15;12559:10;12546:24;;;12601:45;12620:25;12632:13;12620:9;:25;:::i;:::-;12601:14;;;:18;:45::i;:::-;12584:14;:62;12257:477;;;12694:14;;:29;;12713:9;12694:18;:29::i;:::-;12677:14;:46;12257:477;12764:17;;:32;;12786:9;12764:21;:32::i;:::-;12744:52;;12811:26;;12827:9;548:25:41;;12815:10:15;;12811:26;;536:2:41;521:18;12811:26:15;;;;;;;;12016:828;11984:860::o;20335:657::-;20370:21;20411;:19;:21::i;:::-;20403:67;;;;-1:-1:-1;;;20403:67:15;;5492:2:41;20403:67:15;;;5474:21:41;5531:2;5511:18;;;5504:30;5570:34;5550:18;;;5543:62;-1:-1:-1;;;5621:18:41;;;5614:31;5662:19;;20403:67:15;5290:397:41;20403:67:15;20513:10;20480:21;20504:20;;;:8;:20;;;;;20543:12;;;;;;20542:13;20534:52;;;;-1:-1:-1;;;20534:52:15;;5894:2:41;20534:52:15;;;5876:21:41;5933:2;5913:18;;;5906:30;5972:28;5952:18;;;5945:56;6018:18;;20534:52:15;5692:350:41;20534:52:15;20624:17;;20612:30;;:11;:30::i;:::-;20596:46;;20676:1;20660:13;:17;20652:46;;;;-1:-1:-1;;;20652:46:15;;6249:2:41;20652:46:15;;;6231:21:41;6288:2;6268:18;;;6261:30;-1:-1:-1;;;6307:18:41;;;6300:46;6363:18;;20652:46:15;6047:340:41;20652:46:15;20709:12;;;:19;;-1:-1:-1;;20709:19:15;20724:4;20709:19;;;20738:45;;-1:-1:-1;;;20738:45:15;;-1:-1:-1;;;;;20760:6:15;6584:32:41;;20738:45:15;;;6566:51:41;6633:18;;;6626:34;;;20738:5:15;:13;;;;6539:18:41;;20738:45:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;20793:69:15;;-1:-1:-1;;;20793:69:15;;20820:10;20793:69;;;7153:51:41;7220:18;;;7213:34;;;7295:6;20847:14:15;7283:19:41;7263:18;;;7256:47;20793:6:15;-1:-1:-1;;;;;20793:26:15;;;;7126:18:41;;20793:69:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20893:43:15;;-1:-1:-1;;;20893:43:15;;20919:10;20893:43;;;7482:51:41;20931:4:15;7549:18:41;;;7542:50;20893:6:15;-1:-1:-1;;;;;20893:25:15;;-1:-1:-1;20893:25:15;;-1:-1:-1;7455:18:41;;20893:43:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20872:18;;;:64;20951:34;;548:25:41;;;20959:10:15;;20951:34;;536:2:41;521:18;20951:34:15;;;;;;;20393:599;20335:657;:::o;21819:846::-;21917:10;21855:17;21908:20;;;:8;:20;;;;;21946:12;;;;;;21938:61;;;;-1:-1:-1;;;21938:61:15;;7805:2:41;21938:61:15;;;7787:21:41;7844:2;7824:18;;;7817:30;7883:34;7863:18;;;7856:62;-1:-1:-1;;;7934:18:41;;;7927:34;7978:19;;21938:61:15;7603:400:41;21938:61:15;22021:30;22040:10;22021:18;:30::i;:::-;22009:42;;22081:1;22069:9;:13;22061:91;;;;-1:-1:-1;;;22061:91:15;;8210:2:41;22061:91:15;;;8192:21:41;8249:2;8229:18;;;8222:30;8288:34;8268:18;;;8261:62;8359:34;8339:18;;;8332:62;-1:-1:-1;;;8410:19:41;;;8403:32;8452:19;;22061:91:15;8008:469:41;22061:91:15;22180:17;;22167:30;;22163:105;;;22213:44;;-1:-1:-1;;;22213:44:15;;22239:10;22213:44;;;7482:51:41;22251:5:15;7549:18:41;;;7542:50;22213:6:15;-1:-1:-1;;;;;22213:25:15;;;;7455:18:41;;22213:44:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;22163:105;22297:17;;:32;;22319:9;22297:21;:32::i;:::-;22277:52;;;:17;;22441:39;;22451:9;;22441;:39::i;:::-;22512:18;;;;22417:63;;-1:-1:-1;22512:37:15;;22417:63;22512:22;:37::i;:::-;22491:18;;;:58;22564:44;;;8656:25:41;;;8712:2;8697:18;;8690:34;;;22571:10:15;;22564:44;;8629:18:41;22564:44:15;;;;;;;22618:40;22626:10;22648:9;22618:29;:40::i;:::-;21874:791;;21819:846;:::o;10249:1026::-;10379:7;:14;10336:7;;;;10379:30;;10396:13;;10379:30;:::i;:::-;10355:54;;10496:14;;10514:1;10496:19;10492:110;;;10538:53;10548:14;10564:13;10579:11;;10538:9;:53::i;:::-;10531:60;;;;;10492:110;10612:17;10643:16;10673:23;10716:24;10699:7;:14;;;;:41;;;;:::i;:::-;10673:67;;10771:13;10755;:29;10751:395;;;10811:29;10827:13;10811;:29;:::i;:::-;10800:40;;10854:24;10895:15;10881:11;;:29;;;;:::i;:::-;10854:56;;10936:53;10946:8;10956:16;10974:14;;10936:9;:53::i;:::-;10924:65;;11026:9;11008:14;:27;11004:132;;11062:59;11072:14;11088;;11104:16;11062:9;:59::i;:::-;11055:66;;;;;;;;;11004:132;10786:360;10751:395;11156:27;11174:9;11156:27;;:::i;:::-;;;11211:57;11221:14;11237:13;11252:15;11211:9;:57::i;:::-;11200:68;;:8;:68;:::i;:::-;11193:75;10249:1026;-1:-1:-1;;;;;;;10249:1026:15:o;1381:137:34:-;1053:4;1090:6;-1:-1:-1;;;;;1090:6:34;1076:10;:20;889:18;;;;;;1479:1:::1;1463:6:::0;;1442:40:::1;::::0;-1:-1:-1;;;;;1463:6:34;;::::1;::::0;1442:40:::1;::::0;1479:1;;1442:40:::1;1509:1;1492:19:::0;;-1:-1:-1;;;;;;1492:19:34::1;::::0;;1381:137::o;21059:691:15:-;-1:-1:-1;;;;;21168:17:15;;21125:7;21168:17;;;:8;:17;;;;;21228;;21224:61;;-1:-1:-1;21273:1:15;;21059:691;-1:-1:-1;;21059:691:15:o;21224:61::-;21317:32;;-1:-1:-1;;;21317:32:15;;-1:-1:-1;;;;;2018:32:41;;;21317::15;;;2000:51:41;21295:19:15;;21317:6;:23;;;;;;1973:18:41;;21317:32:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21295:54;;21359:21;21383:35;21399:4;:18;;;21383:11;:15;;:35;;;;:::i;:::-;21359:59;-1:-1:-1;21493:18:15;21489:57;;-1:-1:-1;21534:1:15;;21059:691;-1:-1:-1;;;;21059:691:15:o;21489:57::-;21556:17;21576:43;21586:13;21601:4;:17;;;21576:9;:43::i;:::-;21645:17;;21556:63;;-1:-1:-1;21633:29:15;;21629:89;;;-1:-1:-1;;21690:17:15;;;21734:9;-1:-1:-1;;;21059:691:15:o;18001:297::-;18082:10;18052:14;18069:24;;;:12;:24;;;;;;18111:10;18103:47;;;;-1:-1:-1;;;18103:47:15;;9243:2:41;18103:47:15;;;9225:21:41;9282:2;9262:18;;;9255:30;9321:26;9301:18;;;9294:54;9365:18;;18103:47:15;9041:348:41;18103:47:15;18173:10;18187:1;18160:24;;;:12;:24;;;;;:28;18198:37;;18228:6;18198:29;:37::i;:::-;18250:41;;548:25:41;;;18272:10:15;;18250:41;;536:2:41;521:18;18250:41:15;402:177:41;20045:171:15;20097:4;20139:19;;20120:15;:38;;:89;;;;-1:-1:-1;20195:7:15;:14;20174:17;;:35;20120:89;20113:96;;20045:171;:::o;12915:986::-;12981:19;;12963:15;:37;12955:114;;;;-1:-1:-1;;;12955:114:15;;9596:2:41;12955:114:15;;;9578:21:41;9635:2;9615:18;;;9608:30;9674:34;9654:18;;;9647:62;-1:-1:-1;;;9725:18:41;;;9718:50;9785:19;;12955:114:15;9394:416:41;12955:114:15;13112:10;13079:21;13103:20;;;:8;:20;;;;;13141:17;;13133:50;;;;-1:-1:-1;;;13133:50:15;;10017:2:41;13133:50:15;;;9999:21:41;10056:2;10036:18;;;10029:30;-1:-1:-1;;;10075:18:41;;;10068:46;10131:18;;13133:50:15;9815:340:41;13133:50:15;13202:12;;;;;;13201:13;13193:52;;;;-1:-1:-1;;;13193:52:15;;5894:2:41;13193:52:15;;;5876:21:41;5933:2;5913:18;;;5906:30;5972:28;5952:18;;;5945:56;6018:18;;13193:52:15;5692:350:41;13193:52:15;13275:17;;13255;13302:21;;;13428:7;:14;:18;;-1:-1:-1;;13428:18:15;:::i;:::-;13460:10;;;;13408:38;;-1:-1:-1;13460:10:15;;;-1:-1:-1;;;;;13460:10:15;:23;;13456:192;;13499:18;13520:7;13528:9;13520:18;;;;;;;;:::i;:::-;;;;;;;;;;;13560:10;;;;13552:7;:19;;-1:-1:-1;;;;;13520:18:15;;;;-1:-1:-1;13520:18:15;;13552:7;;13520:18;13560:10;;-1:-1:-1;;;;;13560:10:15;;13552:19;;;;;;:::i;:::-;;;;;;;;;;;;;:32;;-1:-1:-1;;;;;;13552:32:15;-1:-1:-1;;;;;13552:32:15;;;;;;13627:10;;;;;13598:20;;;;;;:8;:20;;;;;:26;:39;;-1:-1:-1;;;;;;13598:39:15;13552:32;13627:10;;;;-1:-1:-1;;;;;13627:10:15;13598:39;;;;;;;;;13456:192;13657:7;:13;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;13657:13:15;;;;;-1:-1:-1;;;;;;13657:13:15;;;;;;13697;13685:25;;13681:118;;;13743:45;13762:25;13774:13;13762:9;:25;:::i;:::-;13743:14;;;:18;:45::i;:::-;13726:14;:62;13681:118;13808:40;13816:10;13838:9;13808:29;:40::i;:::-;13863:31;;548:25:41;;;13872:10:15;;13863:31;;536:2:41;521:18;13863:31:15;;;;;;;12945:956;;;12915:986::o;6124:562::-;6186:7;6222:13;6209:10;:26;6205:65;;;-1:-1:-1;6258:1:15;;6124:562;-1:-1:-1;6124:562:15:o;6205:65::-;6357:14;;6353:85;;6413:7;:14;6399:11;;:28;;6413:14;6399:28;:::i;6353:85::-;6448:16;6467:26;6480:13;6467:10;:26;:::i;:::-;6544:7;:14;6448:45;;-1:-1:-1;6503:24:15;;6544:41;;6561:24;;6544:41;:::i;:::-;6530:11;;:55;;;;:::i;:::-;6664:14;;6503:82;;-1:-1:-1;6629:50:15;;:30;:8;6503:82;6629:12;:30::i;:::-;:34;;:50::i;:::-;6602:77;;:24;:77;:::i;:::-;6595:84;6124:562;-1:-1:-1;;;;6124:562:15:o;18727:1254::-;18828:7;2875:19;;2856:15;:38;;2848:115;;;;-1:-1:-1;;;2848:115:15;;;;;;;:::i;:::-;18876:7:::1;:14:::0;18855:17:::1;::::0;:35:::1;;18847:81;;;;-1:-1:-1::0;;;18847:81:15::1;;;;;;;:::i;:::-;19023:17;::::0;19054:14:::1;::::0;19050:173:::1;;19111:7;:14:::0;19097:11:::1;::::0;19129:24:::1;::::0;19097:28:::1;::::0;::::1;:::i;:::-;:56;;19089:87;;;::::0;-1:-1:-1;;;19089:87:15;;11449:2:41;19089:87:15::1;::::0;::::1;11431:21:41::0;11488:2;11468:18;;;11461:30;-1:-1:-1;;;11507:18:41;;;11500:48;11565:18;;19089:87:15::1;11247:342:41::0;19089:87:15::1;-1:-1:-1::0;19198:7:15::1;:14:::0;19050:173:::1;19233:22;19258:51;19285:24;19258;:51;:::i;:::-;19360:7;:14:::0;19233:76;;-1:-1:-1;19319:24:15::1;::::0;19360:41:::1;::::0;19377:24:::1;::::0;19360:41:::1;:::i;:::-;19346:11;;:55;;;;:::i;:::-;19319:82;;19411:26;19456:56;19495:16;19456:34;19475:14;;19456;:18;;:34;;;;:::i;:56::-;19440:72;::::0;:13:::1;:72;:::i;:::-;19411:101;;19524:254;19539:7;:14:::0;19531:22;::::1;:53:::0;::::1;;;;19569:15;19557:9;:27;19531:53;19524:254;;;19600:14;19617:7;19625:5;19617:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;19617:14:15::1;19653:16:::0;;;:8:::1;:16:::0;;;;;;;:29;19617:14;;-1:-1:-1;19653:51:15;-1:-1:-1;19653:51:15::1;19645:101;;;::::0;-1:-1:-1;;;19645:101:15;;11796:2:41;19645:101:15::1;::::0;::::1;11778:21:41::0;11835:2;11815:18;;;11808:30;11874:34;11854:18;;;11847:62;-1:-1:-1;;;11925:18:41;;;11918:35;11970:19;;19645:101:15::1;11594:401:41::0;19645:101:15::1;19760:7:::0;::::1;::::0;::::1;:::i;:::-;;;;19586:192;19524:254;;;19801:17;;19792:5;:26;19788:153;;19866:17;::::0;19839:52:::1;::::0;;8656:25:41;;;8712:2;8697:18;;8690:34;;;19854:10:15::1;::::0;19839:52:::1;::::0;8629:18:41;19839:52:15::1;;;;;;;19905:17;:25:::0;;;19788:153:::1;-1:-1:-1::0;;19957:17:15::1;::::0;;18727:1254;-1:-1:-1;;;;18727:1254:15:o;14763:3162::-;2875:19;;2856:15;:38;;2848:115;;;;-1:-1:-1;;;2848:115:15;;;;;;;:::i;:::-;14902:7:::1;:14:::0;14881:17:::1;::::0;:35:::1;;14873:81;;;;-1:-1:-1::0;;;14873:81:15::1;;;;;;;:::i;:::-;14982:17:::0;15024:10;15016:63:::1;;;::::0;-1:-1:-1;;;15016:63:15;;12342:2:41;15016:63:15::1;::::0;::::1;12324:21:41::0;12381:2;12361:18;;;12354:30;12420:34;12400:18;;;12393:62;-1:-1:-1;;;12471:18:41;;;12464:38;12519:19;;15016:63:15::1;12140:404:41::0;15016:63:15::1;15119:11;::::0;15090:26:::1;::::0;15119:45:::1;::::0;15139:24:::1;15119:19;:45::i;:::-;15178:7;:14:::0;15090:74;;-1:-1:-1;15178:35:15;-1:-1:-1;15174:104:15::1;;;15229:18;:16;:18::i;:::-;15261:7;;14763:3162:::0;;:::o;15174:104::-:1;15288:22;15313:17;;15331:1;15313:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;15360:24:15;::::1;15343:14;15360:24:::0;;;:8:::1;:24;::::0;;;;:37;15288:45;;-1:-1:-1;15360:37:15;15498:1:::1;15481:497;15505:6;15501:1;:10;15481:497;;;15532:14;15549:17;;15567:1;15549:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;15606:16:15;;::::1;15583:20;15606:16:::0;;;:8:::1;:16;::::0;;;;:29;15532:37;;-1:-1:-1;15657:23:15;;::::1;-1:-1:-1::0;15657:43:15;::::1;;;;15699:1;15684:12;:16;15657:43;15649:100;;;::::0;-1:-1:-1;;;15649:100:15;;13011:2:41;15649:100:15::1;::::0;::::1;12993:21:41::0;13050:2;13030:18;;;13023:30;13089:34;13069:18;;;13062:62;-1:-1:-1;;;13140:18:41;;;13133:42;13192:19;;15649:100:15::1;12809:408:41::0;15649:100:15::1;15776:12;15767:6;:21;15763:168;;;15817:12;15808:21;;15763:168;;;15863:12;15854:6;:21;15850:81;;;15904:12;15895:21;;15850:81;-1:-1:-1::0;15961:6:15;-1:-1:-1;15513:3:15;::::1;::::0;::::1;:::i;:::-;;;;15481:497;;;;15988:24;16029:6;16015:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;16015:21:15::1;;15988:48;;16107:6;16097;:16;16093:438;;16134:9;16129:392;16153:6;16149:1;:10;16129:392;;;16184:14;16201:17;;16219:1;16201:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;16263:16:15;::::1;16239:21;16263:16:::0;;;:8:::1;:16;::::0;;;;16301:17;;16184:37;;-1:-1:-1;16263:16:15;16301:26;-1:-1:-1;16297:210:15::1;;;16364:17:::0;;:26:::1;::::0;16384:6;;16364:26:::1;:::i;:::-;16351:7;16359:1;16351:10;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:39;16412:26;;;16478:10;;:7;;16486:1;;16478:10;::::1;;;;;:::i;:::-;;;;;;;16460:14;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;16297:210:15::1;16166:355;;16161:3;;;;;:::i;:::-;;;;16129:392;;;;16093:438;16571:24;16549:19;16561:6;16549:11;:19::i;:::-;:46;16541:112;;;::::0;-1:-1:-1;;;16541:112:15;;13556:2:41;16541:112:15::1;::::0;::::1;13538:21:41::0;13595:2;13575:18;;;13568:30;13634:34;13614:18;;;13607:62;-1:-1:-1;;;13685:18:41;;;13678:39;13734:19;;16541:112:15::1;13354:405:41::0;16541:112:15::1;16826:22;16851:51;16878:24;16851;:51;:::i;:::-;16826:76:::0;-1:-1:-1;16912:19:15::1;16934:22;16943:13;16934:6:::0;:22:::1;:::i;:::-;17007:7;:14:::0;16912:44;;-1:-1:-1;16966:24:15::1;::::0;17007:41:::1;::::0;17024:24:::1;::::0;17007:41:::1;:::i;:::-;16993:11;;:55;;;;:::i;:::-;16966:82:::0;-1:-1:-1;17058:17:15::1;17078:194;17245:26;:14:::0;17264:6;17245:18:::1;:26::i;:::-;17226:45;::::0;:16;:45:::1;:::i;:::-;17078:106;17149:34;17168:14;;17149;:18;;:34;;;;:::i;:::-;17078:33;:11:::0;17094:16;17078:15:::1;:33::i;:106::-;:147:::0;::::1;:194::i;:::-;17058:214:::0;-1:-1:-1;17282:17:15::1;17302:21;:6:::0;17058:214;17302:10:::1;:21::i;:::-;17282:41:::0;-1:-1:-1;17351:18:15::1;17360:9:::0;17351:6;:18:::1;:::i;:::-;17333:14;;:36;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;17384:9:15::1;::::0;-1:-1:-1;17379:233:15::1;17403:6;17399:1;:10;17379:233;;;17430:14;17447:17;;17465:1;17447:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;17505:16:15;::::1;17481:21;17505:16:::0;;;:8:::1;:16;::::0;;;;17535:10;;17430:37;;-1:-1:-1;17505:16:15;17549:9;;17535:7;;17543:1;;17535:10;::::1;;;;;:::i;:::-;;;;;;:23;;;;;;;:::i;:::-;::::0;;-1:-1:-1;17572:29:15;;;-1:-1:-1;17411:3:15;::::1;::::0;::::1;:::i;:::-;;;;17379:233;;;-1:-1:-1::0;17672:1:15::1;17652:17;:21:::0;;;17709:209:::1;17733:6;17729:1;:10;17709:209;;;17760:14;17777:17;;17795:1;17777:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;17760:37;;17835:7;17843:1;17835:10;;;;;;;;:::i;:::-;;;;;;;17811:12;:20;17824:6;-1:-1:-1::0;;;;;17811:20:15::1;-1:-1:-1::0;;;;;17811:20:15::1;;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;;;;;17888:6;-1:-1:-1::0;;;;;17864:43:15::1;17876:10;-1:-1:-1::0;;;;;17864:43:15::1;;17896:7;17904:1;17896:10;;;;;;;;:::i;:::-;;;;;;;17864:43;;;;548:25:41::0;;536:2;521:18;;402:177;17864:43:15::1;;;;;;;;-1:-1:-1::0;17741:3:15;::::1;::::0;::::1;:::i;:::-;;;;17709:209;;;;14863:3062;;;;;;;;;;;14763:3162:::0;;:::o;2592:24::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2592:24:15;;-1:-1:-1;2592:24:15;:::o;5662:293::-;5745:10;;5727:15;:28;5719:87;;;;-1:-1:-1;;;5719:87:15;;13966:2:41;5719:87:15;;;13948:21:41;14005:2;13985:18;;;13978:30;14044:34;14024:18;;;14017:62;-1:-1:-1;;;14095:18:41;;;14088:44;14149:19;;5719:87:15;13764:410:41;5719:87:15;5816:57;-1:-1:-1;;;;;5816:5:15;:22;5839:10;5859:4;5866:6;5816:22;:57::i;:::-;5898:6;5883:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;5919:29:15;;548:25:41;;;5929:10:15;;5919:29;;536:2:41;521:18;5919:29:15;402:177:41;1689:115:34;1053:4;1090:6;-1:-1:-1;;;;;1090:6:34;1076:10;:20;889:18;;;;;;1769:28:::1;1788:8;1769:18;:28::i;:::-;1689:115:::0;:::o;14020:152:15:-;1053:4:34;1090:6;-1:-1:-1;;;;;1090:6:34;1076:10;:20;889:18;;;;;;14078:21:15::1;:19;:21::i;:::-;14077:22;14069:68;;;::::0;-1:-1:-1;;;14069:68:15;;14381:2:41;14069:68:15::1;::::0;::::1;14363:21:41::0;14420:2;14400:18;;;14393:30;14459:34;14439:18;;;14432:62;-1:-1:-1;;;14510:18:41;;;14503:31;14551:19;;14069:68:15::1;14179:397:41::0;14069:68:15::1;14147:18;:16;:18::i;:::-;14020:152::o:0;3108:96:33:-;3166:7;3192:5;3196:1;3192;:5;:::i;:::-;3185:12;3108:96;-1:-1:-1;;;3108:96:33:o;7488:1926:15:-;7626:7;:14;7582:7;;;;7626:30;;7643:13;;7626:30;:::i;:::-;7602:54;;7743:14;;7761:1;7743:19;7739:109;;;7785:52;7795:13;7810:11;;7823:13;7785:9;:52::i;7739:109::-;7858:15;;8196:13;8157:35;8173:19;8157:13;:35;:::i;:::-;:52;8153:837;;8235:13;8225:23;;8153:837;;;8535:13;8512:19;:36;8508:482;;-1:-1:-1;8575:13:15;8508:482;;;8918:13;8880:35;8896:19;8880:13;:35;:::i;:::-;:51;;;;:::i;:::-;8869:62;-1:-1:-1;8955:24:15;8869:62;8955:13;:24;:::i;:::-;8945:34;;8508:482;9026:7;:14;9000:23;;9026:41;;9043:24;;9026:41;:::i;:::-;9000:67;-1:-1:-1;9077:12:15;9107:11;;9103:99;;9141:50;9151:7;9160:15;9177:13;9141:9;:50::i;:::-;9134:57;;9103:99;9216:12;;9212:174;;9244:24;9285:15;9271:11;;:29;;;;:::i;:::-;9244:56;;9322:53;9332:8;9342:16;9360:14;;9322:9;:53::i;:::-;9314:61;;;;:::i;:::-;;9403:4;-1:-1:-1;;;;;;;;;7488:1926:15:o;2741:96:33:-;2799:7;2825:5;2829:1;2825;:5;:::i;2065:312:40:-;2179:6;2154:21;:31;;2146:73;;;;-1:-1:-1;;;2146:73:40;;14783:2:41;2146:73:40;;;14765:21:41;14822:2;14802:18;;;14795:30;14861:31;14841:18;;;14834:59;14910:18;;2146:73:40;14581:353:41;2146:73:40;2231:12;2249:9;-1:-1:-1;;;;;2249:14:40;2271:6;2249:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2230:52;;;2300:7;2292:78;;;;-1:-1:-1;;;2292:78:40;;15351:2:41;2292:78:40;;;15333:21:41;15390:2;15370:18;;;15363:30;15429:34;15409:18;;;15402:62;15500:28;15480:18;;;15473:56;15546:19;;2292:78:40;15149:422:41;2292:78:40;2136:241;2065:312;;:::o;9827:241:15:-;9943:7;9973:88;10028:32;:12;1457:3;10028:16;:32::i;:::-;9973:50;10008:14;9973:30;:14;9992:10;9973:18;:30::i;:::-;:34;;:50::i;6801:237::-;6913:7;6943:88;7000:30;:10;7015:14;7000;:30::i;:::-;6943:48;1457:3;6943:28;:10;6958:12;3451:96:33;3509:7;3535:5;3539:1;3535;:5;:::i;3836:96::-;3894:7;3920:5;3924:1;3920;:5;:::i;490:113:19:-;552:7;595:1;590;579:8;:1;595;579:5;:8::i;:::-;:12;;;;:::i;:::-;578:18;;;;:::i;14291:262:15:-;14353:1;14338:12;:16;;;14364:10;:14;-1:-1:-1;;14388:19:15;:39;14471:40;14490:7;731::34;757:6;-1:-1:-1;;;;;757:6:34;;693:77;14490:7:15;14499:11;;-1:-1:-1;;;;;14471:5:15;:18;;:40;:18;:40::i;:::-;14526:20;;14535:10;;14526:20;;;;;14291:262::o;908:241:39:-;1073:68;;-1:-1:-1;;;;;15834:15:41;;;1073:68:39;;;15816:34:41;15886:15;;15866:18;;;15859:43;15918:18;;;15911:34;;;1046:96:39;;1066:5;;-1:-1:-1;;;1096:27:39;15751:18:41;;1073:68:39;;;;-1:-1:-1;;1073:68:39;;;;;;;;;;;;;;-1:-1:-1;;;;;1073:68:39;-1:-1:-1;;;;;;1073:68:39;;;;;;;;;;1046:19;:96::i;1948:183:34:-;-1:-1:-1;;;;;2021:22:34;;2013:31;;;;;;2080:6;;;2059:38;;-1:-1:-1;;;;;2059:38:34;;;;2080:6;;;2059:38;;;2107:6;:17;;-1:-1:-1;;;;;;2107:17:34;-1:-1:-1;;;;;2107:17:34;;;;;;;;;;1948:183::o;697:205:39:-;836:58;;-1:-1:-1;;;;;6584:32:41;;836:58:39;;;6566:51:41;6633:18;;;6626:34;;;809:86:39;;829:5;;-1:-1:-1;;;859:23:39;6539:18:41;;836:58:39;6392:274:41;3203:706:39;3622:23;3648:69;3676:4;3648:69;;;;;;;;;;;;;;;;;3656:5;-1:-1:-1;;;;;3648:27:39;;;:69;;;;;:::i;:::-;3731:17;;3622:95;;-1:-1:-1;3731:21:39;3727:176;;3826:10;3815:30;;;;;;;;;;;;:::i;:::-;3807:85;;;;-1:-1:-1;;;3807:85:39;;16158:2:41;3807:85:39;;;16140:21:41;16197:2;16177:18;;;16170:30;16236:34;16216:18;;;16209:62;-1:-1:-1;;;16287:18:41;;;16280:40;16337:19;;3807:85:39;15956:406:41;3514:223:40;3647:12;3678:52;3700:6;3708:4;3714:1;3717:12;3647;1087:20;;4881:60;;;;-1:-1:-1;;;4881:60:40;;16976:2:41;4881:60:40;;;16958:21:41;17015:2;16995:18;;;16988:30;17054:31;17034:18;;;17027:59;17103:18;;4881:60:40;16774:353:41;4881:60:40;4953:12;4967:23;4994:6;-1:-1:-1;;;;;4994:11:40;5013:5;5020:4;4994:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4952:73;;;;5042:51;5059:7;5068:10;5080:12;7360;7388:7;7384:516;;;-1:-1:-1;7418:10:40;7411:17;;7384:516;7529:17;;:21;7525:365;;7723:10;7717:17;7783:15;7770:10;7766:2;7762:19;7755:44;7525:365;7862:12;7855:20;;-1:-1:-1;;;7855:20:40;;;;;;;;:::i;14:131:41:-;-1:-1:-1;;;;;89:31:41;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;584:180::-;643:6;696:2;684:9;675:7;671:23;667:32;664:52;;;712:1;709;702:12;664:52;-1:-1:-1;735:23:41;;584:180;-1:-1:-1;584:180:41:o;1216:248::-;1284:6;1292;1345:2;1333:9;1324:7;1320:23;1316:32;1313:52;;;1361:1;1358;1351:12;1313:52;-1:-1:-1;;1384:23:41;;;1454:2;1439:18;;;1426:32;;-1:-1:-1;1216:248:41:o;2062:623::-;2156:6;2164;2217:2;2205:9;2196:7;2192:23;2188:32;2185:52;;;2233:1;2230;2223:12;2185:52;2273:9;2260:23;2302:18;2343:2;2335:6;2332:14;2329:34;;;2359:1;2356;2349:12;2329:34;2397:6;2386:9;2382:22;2372:32;;2442:7;2435:4;2431:2;2427:13;2423:27;2413:55;;2464:1;2461;2454:12;2413:55;2504:2;2491:16;2530:2;2522:6;2519:14;2516:34;;;2546:1;2543;2536:12;2516:34;2599:7;2594:2;2584:6;2581:1;2577:14;2573:2;2569:23;2565:32;2562:45;2559:65;;;2620:1;2617;2610:12;2559:65;2651:2;2643:11;;;;;2673:6;;-1:-1:-1;2062:623:41;;-1:-1:-1;;;;2062:623:41:o;3149:184::-;3219:6;3272:2;3260:9;3251:7;3247:23;3243:32;3240:52;;;3288:1;3285;3278:12;3240:52;-1:-1:-1;3311:16:41;;3149:184;-1:-1:-1;3149:184:41:o;3338:127::-;3399:10;3394:3;3390:20;3387:1;3380:31;3430:4;3427:1;3420:15;3454:4;3451:1;3444:15;3470:125;3510:4;3538:1;3535;3532:8;3529:34;;;3543:18;;:::i;:::-;-1:-1:-1;3580:9:41;;3470:125::o;4665:217::-;4705:1;4731;4721:132;;4775:10;4770:3;4766:20;4763:1;4756:31;4810:4;4807:1;4800:15;4838:4;4835:1;4828:15;4721:132;-1:-1:-1;4867:9:41;;4665:217::o;6671:277::-;6738:6;6791:2;6779:9;6770:7;6766:23;6762:32;6759:52;;;6807:1;6804;6797:12;6759:52;6839:9;6833:16;6892:5;6885:13;6878:21;6871:5;6868:32;6858:60;;6914:1;6911;6904:12;8735:168;8775:7;8841:1;8837;8833:6;8829:14;8826:1;8823:21;8818:1;8811:9;8804:17;8800:45;8797:71;;;8848:18;;:::i;:::-;-1:-1:-1;8888:9:41;;8735:168::o;8908:128::-;8948:3;8979:1;8975:6;8972:1;8969:13;8966:39;;;8985:18;;:::i;:::-;-1:-1:-1;9021:9:41;;8908:128::o;10160:127::-;10221:10;10216:3;10212:20;10209:1;10202:31;10252:4;10249:1;10242:15;10276:4;10273:1;10266:15;10292:127;10353:10;10348:3;10344:20;10341:1;10334:31;10384:4;10381:1;10374:15;10408:4;10405:1;10398:15;10424:416;10626:2;10608:21;;;10665:2;10645:18;;;10638:30;10704:34;10699:2;10684:18;;10677:62;-1:-1:-1;;;10770:2:41;10755:18;;10748:50;10830:3;10815:19;;10424:416::o;10845:397::-;11047:2;11029:21;;;11086:2;11066:18;;;11059:30;11125:34;11120:2;11105:18;;11098:62;-1:-1:-1;;;11191:2:41;11176:18;;11169:31;11232:3;11217:19;;10845:397::o;12000:135::-;12039:3;-1:-1:-1;;12060:17:41;;12057:43;;;12080:18;;:::i;:::-;-1:-1:-1;12127:1:41;12116:13;;12000:135::o;13222:127::-;13283:10;13278:3;13274:20;13271:1;13264:31;13314:4;13311:1;13304:15;13338:4;13335:1;13328:15;17132:258;17204:1;17214:113;17228:6;17225:1;17222:13;17214:113;;;17304:11;;;17298:18;17285:11;;;17278:39;17250:2;17243:10;17214:113;;;17345:6;17342:1;17339:13;17336:48;;;-1:-1:-1;;17380:1:41;17362:16;;17355:27;17132:258::o;17395:274::-;17524:3;17562:6;17556:13;17578:53;17624:6;17619:3;17612:4;17604:6;17600:17;17578:53;:::i;:::-;17647:16;;;;;17395:274;-1:-1:-1;;17395:274:41:o;17674:383::-;17823:2;17812:9;17805:21;17786:4;17855:6;17849:13;17898:6;17893:2;17882:9;17878:18;17871:34;17914:66;17973:6;17968:2;17957:9;17953:18;17948:2;17940:6;17936:15;17914:66;:::i;:::-;18041:2;18020:15;-1:-1:-1;;18016:29:41;18001:45;;;;18048:2;17997:54;;17674:383;-1:-1:-1;;17674:383:41:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "bid()": {
        "notice": "Bid for tokens by transferring ETH"
      },
      "cancelBid()": {
        "notice": "Cancel bid and refund deposited ETH"
      },
      "claim()": {
        "notice": "Claimed tokens will be deposited and locked as stake in the StakingEscrow contract."
      },
      "constructor": {
        "params": {
          "_boostingRefund": "Coefficient to boost refund ETH",
          "_endBidDate": "Timestamp when bidding will end",
          "_endCancellationDate": "Timestamp when cancellation will ends",
          "_escrow": "Escrow contract",
          "_minAllowedBid": "Minimum allowed ETH amount for bidding",
          "_stakingPeriods": "Amount of periods during which tokens will be locked after claiming",
          "_startBidDate": "Timestamp when bidding starts",
          "_token": "Token contract"
        }
      },
      "ethToTokens(uint256)": {
        "details": "This value will be fixed only after end of bidding",
        "notice": "Calculate amount of tokens that will be get for specified amount of ETH"
      },
      "ethToWork(uint256)": {
        "details": "This value will be fixed only after end of bidding",
        "notice": "Calculate amount of work that need to be done to refund specified amount of ETH"
      },
      "forceRefund(address[])": {
        "notice": "Make force refund to bidders who can get tokens more than maximum allowed",
        "params": {
          "_biddersForRefund": "Sorted list of unique bidders. Only bidders who must receive a refund"
        }
      },
      "getAvailableRefund(address)": {
        "notice": "Get available refund for bidder"
      },
      "getBiddersLength()": {
        "notice": "Get length of bidders array"
      },
      "getRemainingWork(address)": {
        "notice": "Get remaining work to full refund"
      },
      "isClaimingAvailable()": {
        "notice": "Checks if claiming available"
      },
      "isOwner()": {
        "returns": {
          "_0": "true if `msg.sender` is the owner of the contract."
        }
      },
      "owner()": {
        "returns": {
          "_0": "the address of the owner."
        }
      },
      "refund()": {
        "notice": "Refund ETH for the completed work"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.",
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "shutdown()": {
        "notice": "Cancels distribution, makes possible to retrieve all bids and owner gets all tokens"
      },
      "tokenDeposit(uint256)": {
        "notice": "Deposit tokens to contract",
        "params": {
          "_value": "Amount of tokens to transfer"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "verifyBiddingCorrectness(uint256)": {
        "details": "Method stops working when the remaining gas is less than `_gasToSaveState` and saves the state in `nextBidderToCheck`. If all bidders have been checked then `nextBidderToCheck` will be equal to the length of the bidders array",
        "notice": "Check that the claimed tokens are within `maxAllowableLockedTokens` for all participants, starting from the last point `nextBidderToCheck`"
      },
      "withdrawCompensation()": {
        "notice": "Withdraw compensation after force refund"
      },
      "workToETH(uint256,uint256)": {
        "details": "This value will be fixed only after end of bidding",
        "notice": "Calculate amount of ETH that will be refund for completing specified amount of work"
      }
    },
    "notice": "The WorkLock distribution contract",
    "version": 1
  },
  "offset": [
    442,
    22667
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87A15DC9 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xB15CF964 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xE1FE7D23 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE1FE7D23 EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0xE2FDCC17 EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E0 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x700 JUMPI DUP1 PUSH4 0xFC0E74D1 EQ PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB15CF964 EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xBC859F44 EQ PUSH2 0x5F8 JUMPI DUP1 PUSH4 0xBE7FF580 EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0xCBCE49ED EQ PUSH2 0x64C JUMPI DUP1 PUSH4 0xCFF29DFD EQ PUSH2 0x66C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0x9435C887 EQ PUSH2 0x597 JUMPI DUP1 PUSH4 0x9B51AC85 EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0xA4C89322 EQ PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x87A15DC9 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x88657C7A EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0x897DB45C EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x8CAB6C4F EQ PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5BF997F5 GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x72F96040 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x7824407F EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x7F4FAD69 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0x87865033 EQ PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5BF997F5 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x617E677E EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x66ADE78E EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0x6FB653A2 EQ PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F45002C GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x1F45002C EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x4F1910A1 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x5707BEE5 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x590E1AE3 EQ PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x594851C EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x124A1F4F EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x1998AEEF EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x1BB89762 EQ PUSH2 0x27C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x29C4 JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x29E1 JUMP JUMPDEST PUSH2 0x834 JUMP JUMPDEST PUSH2 0x27A PUSH2 0x847 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x23F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 ISZERO ISZERO SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x249 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0xAFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0xE4F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x3FF CALLDATASIZE PUSH1 0x4 PUSH2 0x29FA JUMP JUMPDEST PUSH2 0x1063 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x11B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x29C4 JUMP JUMPDEST PUSH2 0x1214 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AE PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x249 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x131E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EB PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x249 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x249 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x13E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x5DD CALLDATASIZE PUSH1 0x4 PUSH2 0x29E1 JUMP JUMPDEST PUSH2 0x16BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x613 CALLDATASIZE PUSH1 0x4 PUSH2 0x29E1 JUMP JUMPDEST PUSH2 0x17BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AE PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x667 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A1C JUMP JUMPDEST PUSH2 0x1A7D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55F PUSH2 0x687 CALLDATASIZE PUSH1 0x4 PUSH2 0x29E1 JUMP JUMPDEST PUSH2 0x212B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x6A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x29E1 JUMP JUMPDEST PUSH2 0x2155 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55F PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x6FB CALLDATASIZE PUSH1 0x4 PUSH2 0x29C4 JUMP JUMPDEST PUSH2 0x223B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55F PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x225E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 MLOAD PUSH4 0xD094ADBF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 PUSH2 0x7FC SWAP3 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xD094ADBF SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F6 SWAP2 SWAP1 PUSH2 0x2A91 JUMP JUMPDEST SWAP1 PUSH2 0x22DE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x80D DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x834 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT PUSH2 0x821 JUMPI POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x82B DUP3 DUP3 PUSH2 0x2AC0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x841 DUP3 PUSH1 0x0 PUSH2 0x22F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42696464696E67206973206E6F74206F70656E20796574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP LT PUSH2 0x8EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42696464696E6720697320616C72656164792066696E69736865640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x895 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xAA7 JUMPI PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x974 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426964206D757374206265206174206C65617374206D696E696D756D00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x895 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 SLOAD PUSH2 0x9A2 SWAP2 SWAP1 PUSH2 0x2AD7 JUMP JUMPDEST PUSH1 0x8 SLOAD LT PUSH2 0x9FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320666F72206D6F7265206269646465 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7273 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x895 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0x88 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0xA9F PUSH2 0xA96 PUSH32 0x0 CALLVALUE PUSH2 0x2AC0 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0xAB8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xAB4 SWAP1 CALLVALUE PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMPDEST DUP1 SLOAD PUSH2 0xAC4 SWAP1 CALLVALUE PUSH2 0x2470 JUMP JUMPDEST DUP2 SSTORE PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xE684A55F31B79ECA403DF938249029212A5925EC6BE8012E099B45BC1019E5D2 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB09 PUSH2 0x13C7 JUMP JUMPDEST PUSH2 0xB5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D696E6720686173206E6F74206265656E20656E61626C6564207965 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x895 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E732061726520616C726561647920636C61696D6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x895 JUMP JUMPDEST DUP1 SLOAD PUSH2 0xBCE SWAP1 PUSH2 0x16BD JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 GT PUSH2 0xC13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F7468696E6720746F20636C61696D PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x895 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x2AF9 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xB8F81E1 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH2 0xFFFF PUSH32 0x0 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x171F03C2 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x12796B75 PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH4 0x49E5ADD4 SWAP2 POP PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE11 SWAP2 SWAP1 PUSH2 0x2A91 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0xEBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E73206D75737420626520636C61696D6564206265666F7265207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x199D5B99 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x895 JUMP JUMPDEST PUSH2 0xEC7 CALLER PUSH2 0x1214 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 GT PUSH2 0xF49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F20726566756E643A207468657265206973206E6F2045 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x544820746F20726566756E64206F72206E6F20636F6D706C6574656420776F72 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x6B PUSH1 0xF8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x895 JUMP JUMPDEST DUP1 SLOAD DUP3 EQ ISZERO PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12796B75 PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x49E5ADD4 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFE3 SWAP2 SWAP1 PUSH2 0x2A91 JUMP JUMPDEST POP JUMPDEST DUP1 SLOAD PUSH2 0xFF1 SWAP1 DUP4 PUSH2 0x22DE JUMP JUMPDEST DUP1 DUP3 SSTORE PUSH1 0x0 SWAP1 PUSH2 0x1002 SWAP1 DUP5 SWAP1 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0x1014 SWAP1 DUP3 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x73F04AF9DCC582A923EC15D3EEA990FE34ADABFFF2879E28D44572E01A54ABB6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x105E CALLER DUP5 PUSH2 0x247C JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x1096 SWAP1 PUSH32 0x0 SWAP1 PUSH2 0x2B1B JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x10B8 JUMPI PUSH2 0x10B0 DUP5 DUP3 PUSH1 0x1 SLOAD PUSH2 0x259A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x841 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x10EE SWAP2 SWAP1 PUSH2 0x2B1B JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP7 GT ISZERO PUSH2 0x1187 JUMPI PUSH2 0x1142 PUSH32 0x0 DUP8 PUSH2 0x2AC0 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP2 PUSH1 0x1 SLOAD PUSH2 0x1154 SWAP2 SWAP1 PUSH2 0x2AC0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1163 DUP4 DUP3 PUSH1 0x5 SLOAD PUSH2 0x25DE JUMP JUMPDEST SWAP4 POP DUP4 DUP9 GT PUSH2 0x1185 JUMPI PUSH2 0x1179 DUP9 PUSH1 0x5 SLOAD DUP4 PUSH2 0x259A JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x841 JUMP JUMPDEST POP JUMPDEST PUSH2 0x1191 DUP4 DUP9 PUSH2 0x2AC0 JUMP JUMPDEST SWAP7 POP PUSH2 0x119E DUP8 DUP6 DUP4 PUSH2 0x259A JUMP JUMPDEST PUSH2 0x11A8 SWAP1 DUP4 PUSH2 0x2B3A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x123B JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD094ADBF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xD094ADBF SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12CA SWAP2 SWAP1 PUSH2 0x2A91 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12E5 DUP4 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x22DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x12F7 JUMPI POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1307 DUP3 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x1063 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0x82B JUMPI POP POP SWAP1 SLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x137B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206973206E6F20636F6D70656E736174696F6E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x895 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x1395 SWAP1 DUP3 PUSH2 0x247C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x1480B15E3EAB83A9B923578FFE330E3DCE94536007EC9C0B48A5DFBDE8C49181 SWAP1 PUSH1 0x20 ADD PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x13DE JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD EQ JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x1451 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E63656C6C6174696F6E20616C6C6F776564206F6E6C7920647572696E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2063616E63656C6C6174696F6E2077696E646F77 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x895 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x14A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BC8189A59081D1BC818D85B98D95B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x895 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E732061726520616C726561647920636C61696D6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x895 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 DUP1 DUP4 SSTORE PUSH1 0x8 SLOAD PUSH2 0x150C SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2AC0 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 EQ PUSH2 0x15E4 JUMPI PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x153D JUMPI PUSH2 0x153D PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 DUP2 LT PUSH2 0x1580 JUMPI PUSH2 0x1580 PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE PUSH1 0x2 DUP8 DUP2 ADD SLOAD SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x6 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0x88 SHL SUB NOT AND PUSH2 0x100 SWAP3 DUP4 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x15F5 JUMPI PUSH2 0x15F5 PUSH2 0x2B68 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH32 0x0 DUP3 GT ISZERO PUSH2 0x1679 JUMPI PUSH2 0x1675 PUSH2 0x166C PUSH32 0x0 DUP5 PUSH2 0x2AC0 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH2 0x22DE JUMP JUMPDEST PUSH1 0x5 SSTORE JUMPDEST PUSH2 0x1683 CALLER DUP4 PUSH2 0x247C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xF3A6EF5718C05D9183AF076F5753197B68B04552A763C34796637D6134BDD0F2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP3 LT ISZERO PUSH2 0x16EF JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1706 JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 SLOAD PUSH2 0x841 SWAP2 SWAP1 PUSH2 0x2AD7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1732 PUSH32 0x0 DUP5 PUSH2 0x2AC0 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1766 SWAP1 PUSH32 0x0 SWAP1 PUSH2 0x2B1B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1773 SWAP2 SWAP1 PUSH2 0x2AC0 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH2 0x178D SWAP1 PUSH2 0x1787 DUP5 DUP5 PUSH2 0x2618 JUMP JUMPDEST SWAP1 PUSH2 0x2624 JUMP JUMPDEST PUSH2 0x17B7 SWAP1 PUSH32 0x0 PUSH2 0x2B3A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD TIMESTAMP LT ISZERO PUSH2 0x17E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x895 SWAP1 PUSH2 0x2B7E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD EQ ISZERO PUSH2 0x1807 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x895 SWAP1 PUSH2 0x2BD2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x5 SLOAD PUSH2 0x188A JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 SLOAD PUSH32 0x0 SWAP2 PUSH2 0x1842 SWAP2 PUSH2 0x2AD7 JUMP JUMPDEST GT ISZERO PUSH2 0x1885 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F7420656E6F7567682062696464657273 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x895 JUMP JUMPDEST POP PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x18D6 PUSH32 0x0 PUSH32 0x0 PUSH2 0x2AC0 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x190A SWAP1 PUSH32 0x0 SWAP1 PUSH2 0x2B1B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1917 SWAP2 SWAP1 PUSH2 0x2AC0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1934 DUP3 PUSH2 0x1787 PUSH1 0x5 SLOAD DUP7 PUSH2 0x2618 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x195E SWAP1 PUSH32 0x0 PUSH2 0x2B3A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP5 LT DUP1 ISZERO PUSH2 0x1971 JUMPI POP DUP6 GAS GT JUMPDEST ISZERO PUSH2 0x1A23 JUMPI PUSH1 0x0 PUSH1 0x8 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x198B JUMPI PUSH2 0x198B PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP3 LT ISZERO PUSH2 0x1A10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4269642069732067726561746572207468616E206D617820616C6C6F7761626C PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1948189A59 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x895 JUMP JUMPDEST DUP5 PUSH2 0x1A1A DUP2 PUSH2 0x2C13 JUMP JUMPDEST SWAP6 POP POP POP PUSH2 0x1961 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP5 EQ PUSH2 0x1A70 JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x97D5AD02B58968C48057BB16E90B9468EC753E30169BF00692B7BA02B47B090E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x9 DUP5 SWAP1 SSTORE JUMPDEST POP POP PUSH1 0x9 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1A9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x895 SWAP1 PUSH2 0x2B7E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD EQ ISZERO PUSH2 0x1AC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x895 SWAP1 PUSH2 0x2BD2 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1B22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206174206C65617374206F6E652062696464657220666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x18481C99599D5B99 PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x895 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1B52 SWAP1 PUSH32 0x0 PUSH2 0x2630 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0x1B6D JUMPI PUSH2 0x1B67 PUSH2 0x2653 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1B82 JUMPI PUSH2 0x1B82 PUSH2 0x2B52 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1B97 SWAP2 SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 PUSH1 0x1 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1CA7 JUMPI PUSH1 0x0 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x1BD3 JUMPI PUSH2 0x1BD3 PUSH2 0x2B52 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1BE8 SWAP2 SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP1 DUP8 AND LT DUP1 ISZERO PUSH2 0x1C15 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x1C76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573736573206D75737420626520616E206172726179206F6620756E PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x697175652062696464657273 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x895 JUMP JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1C86 JUMPI DUP1 SWAP5 POP PUSH2 0x1C92 JUMP JUMPDEST DUP1 DUP5 LT ISZERO PUSH2 0x1C92 JUMPI DUP1 SWAP4 POP JUMPDEST POP SWAP4 POP DUP1 PUSH2 0x1C9F DUP2 PUSH2 0x2C13 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1BB7 JUMP JUMPDEST POP PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CC3 JUMPI PUSH2 0x1CC3 PUSH2 0x2C2E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1CEC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP4 EQ PUSH2 0x1DC6 JUMPI PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1DC4 JUMPI PUSH1 0x0 DUP10 DUP10 DUP4 DUP2 DUP2 LT PUSH2 0x1D15 JUMPI PUSH2 0x1D15 PUSH2 0x2B52 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1D2A SWAP2 SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 DUP7 LT ISZERO PUSH2 0x1DAF JUMPI DUP1 SLOAD PUSH2 0x1D5C SWAP1 DUP8 SWAP1 PUSH2 0x2AC0 JUMP JUMPDEST DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1D6E JUMPI PUSH2 0x1D6E PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP6 DUP2 SSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1D90 JUMPI PUSH2 0x1D90 PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1DA9 SWAP2 SWAP1 PUSH2 0x2AC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x1DBC SWAP1 PUSH2 0x2C13 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1CF9 JUMP JUMPDEST POP JUMPDEST PUSH32 0x0 PUSH2 0x1DF0 DUP5 PUSH2 0x16BD JUMP JUMPDEST GT PUSH2 0x1E4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C65617374206F6E65206F6620626964646572732068617320616C6C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1DD8589B1948189A59 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x895 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E9B PUSH32 0x0 PUSH32 0x0 PUSH2 0x2AC0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1EC9 PUSH32 0x0 DUP7 PUSH2 0x2AC0 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1EFD SWAP1 PUSH32 0x0 SWAP1 PUSH2 0x2B1B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1F0A SWAP2 SWAP1 PUSH2 0x2AC0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F4D PUSH2 0x1F1B DUP6 DUP13 PUSH2 0x2618 JUMP JUMPDEST PUSH2 0x1F25 SWAP1 DUP5 PUSH2 0x2AC0 JUMP JUMPDEST PUSH2 0x1F47 PUSH2 0x1F3D PUSH1 0x5 SLOAD DUP9 PUSH2 0x2618 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7F6 DUP8 DUP8 PUSH2 0x2618 JUMP JUMPDEST SWAP1 PUSH2 0x2630 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F5B DUP9 DUP4 PUSH2 0x22DE JUMP JUMPDEST SWAP1 POP PUSH2 0x1F67 DUP3 DUP13 PUSH2 0x2B1B JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1F78 SWAP2 SWAP1 PUSH2 0x2AC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP12 DUP2 LT ISZERO PUSH2 0x2011 JUMPI PUSH1 0x0 DUP15 DUP15 DUP4 DUP2 DUP2 LT PUSH2 0x1F9D JUMPI PUSH2 0x1F9D PUSH2 0x2B52 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1FB2 SWAP2 SWAP1 PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP10 MLOAD SWAP2 SWAP3 POP SWAP1 DUP6 SWAP1 DUP11 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x1FE4 JUMPI PUSH2 0x1FE4 PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MLOAD PUSH2 0x1FF8 SWAP2 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST SWAP1 MSTORE POP DUP4 SWAP1 SSTORE POP DUP1 PUSH2 0x2009 DUP2 PUSH2 0x2C13 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1F81 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE JUMPDEST DUP12 DUP2 LT ISZERO PUSH2 0x211B JUMPI PUSH1 0x0 DUP15 DUP15 DUP4 DUP2 DUP2 LT PUSH2 0x2036 JUMPI PUSH2 0x2036 PUSH2 0x2B52 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x204B SWAP2 SWAP1 PUSH2 0x29C4 JUMP JUMPDEST SWAP1 POP DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x205F JUMPI PUSH2 0x205F PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x7 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x209B SWAP2 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2887B6DA4C721C91735AADA87DDC427D4EF240EF9B54E759EF10C0792B409373 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x20E9 JUMPI PUSH2 0x20E9 PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x2100 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP1 PUSH2 0x2113 DUP2 PUSH2 0x2C13 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x201A JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x213B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP LT PUSH2 0x21BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E2774206465706F736974206D6F726520746F6B656E7320616674657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x656E64206F662062696464696E67 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x895 JUMP JUMPDEST PUSH2 0x21F2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x26D9 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2204 SWAP2 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 SWAP1 PUSH1 0x20 ADD PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x225B DUP2 PUSH2 0x2744 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x227D PUSH2 0x13C7 JUMP JUMPDEST ISZERO PUSH2 0x22D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D696E672068617320616C7265616479206265656E20656E61626C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x895 JUMP JUMPDEST PUSH2 0x22DC PUSH2 0x2653 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22EA DUP3 DUP5 PUSH2 0x2AC0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x2324 SWAP1 PUSH32 0x0 SWAP1 PUSH2 0x2B1B JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x233E JUMPI PUSH2 0x10B0 DUP5 PUSH1 0x1 SLOAD DUP4 PUSH2 0x25DE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH2 0x236C DUP7 DUP9 PUSH2 0x2B3A JUMP JUMPDEST GT PUSH2 0x2379 JUMPI DUP6 SWAP2 POP PUSH2 0x23EB JUMP JUMPDEST PUSH32 0x0 DUP6 LT PUSH2 0x23A7 JUMPI POP DUP5 PUSH2 0x23EB JUMP JUMPDEST PUSH32 0x0 PUSH2 0x23D2 DUP7 DUP9 PUSH2 0x2B3A JUMP JUMPDEST PUSH2 0x23DC SWAP2 SWAP1 PUSH2 0x2AC0 JUMP JUMPDEST SWAP1 POP PUSH2 0x23E8 DUP2 DUP8 PUSH2 0x2AC0 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x241C SWAP1 PUSH32 0x0 SWAP1 PUSH2 0x2B1B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 ISZERO PUSH2 0x2434 JUMPI PUSH2 0x2431 DUP5 DUP4 DUP8 PUSH2 0x25DE JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 ISZERO PUSH2 0x11A8 JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 SLOAD PUSH2 0x244A SWAP2 SWAP1 PUSH2 0x2AC0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2459 DUP5 DUP3 PUSH1 0x5 SLOAD PUSH2 0x25DE JUMP JUMPDEST PUSH2 0x2463 SWAP1 DUP4 PUSH2 0x2B3A JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22EA DUP3 DUP5 PUSH2 0x2B3A JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x24CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x895 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2519 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x251E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2595 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x895 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B7 PUSH2 0x25AA DUP4 PUSH1 0x64 PUSH2 0x2618 JUMP JUMPDEST PUSH2 0x1787 PUSH32 0x0 PUSH2 0x25D8 DUP9 DUP9 PUSH2 0x2618 JUMP JUMPDEST SWAP1 PUSH2 0x2618 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B7 PUSH2 0x260D DUP4 PUSH32 0x0 PUSH2 0x2618 JUMP JUMPDEST PUSH2 0x1F47 PUSH1 0x64 PUSH2 0x25D8 DUP9 DUP9 JUMPDEST PUSH1 0x0 PUSH2 0x22EA DUP3 DUP5 PUSH2 0x2B1B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22EA DUP3 DUP5 PUSH2 0x2AD7 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH2 0x263F DUP6 DUP4 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x2649 SWAP2 SWAP1 PUSH2 0x2AC0 JUMP JUMPDEST PUSH2 0x22EA SWAP2 SWAP1 PUSH2 0x2AD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x3 SSTORE PUSH1 0x0 NOT PUSH1 0x4 SSTORE PUSH2 0x26AC PUSH2 0x2678 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 SWAP1 PUSH2 0x27B2 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x28B4C24CB1012C094CD2F59F98E89D791973295F8FDA6EAA118022D6D318960A SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1B67 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x27E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2595 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x270D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2837 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28B4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2595 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2855 SWAP2 SWAP1 PUSH2 0x2AF9 JUMP JUMPDEST PUSH2 0x2595 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x895 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x17B7 DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 DUP5 EXTCODESIZE PUSH2 0x290D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x895 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2929 SWAP2 SWAP1 PUSH2 0x2C70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2966 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x296B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x11A8 DUP3 DUP3 DUP7 PUSH1 0x60 DUP4 ISZERO PUSH2 0x2985 JUMPI POP DUP2 PUSH2 0x22EA JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2995 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x895 SWAP2 SWAP1 PUSH2 0x2C8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x225B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22EA DUP2 PUSH2 0x29AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2A47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2A6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2A7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2AD2 JUMPI PUSH2 0x2AD2 PUSH2 0x2AAA JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2AF4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x22EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2B35 JUMPI PUSH2 0x2B35 PUSH2 0x2AAA JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2B4D JUMPI PUSH2 0x2B4D PUSH2 0x2AAA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x34 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F7065726174696F6E20697320616C6C6F776564207768656E2063616E63656C PUSH1 0x40 DUP3 ADD MSTORE PUSH20 0x3630BA34B7B710383430B9B29034B99037BB32B9 PUSH1 0x61 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x42696464657273206861766520616C7265616479206265656E20636865636B65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2C27 JUMPI PUSH2 0x2C27 PUSH2 0x2AAA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C5F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2C47 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1B67 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2C82 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2C44 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2CAB DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2C44 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 LOG3 0xB4 0xE1 BLOCKHASH CALL AND SHL MSTORE 0xAD GAS 0xF8 0x28 ADDRESS CALLDATALOAD 0x21 0x2E CALLDATACOPY 0xCB MSTORE8 0xBE 0x2A 0x4B SELFDESTRUCT PUSH17 0xAFD23954BC6D5A64736F6C634300080A00 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        442,
        22667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "8": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "LT",
      "path": "15"
    },
    "9": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21A"
    },
    "12": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "16": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "SHR",
      "path": "15"
    },
    "19": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "20": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x87A15DC9"
    },
    "25": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "GT",
      "path": "15"
    },
    "26": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x123"
    },
    "29": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "30": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "31": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xB15CF964"
    },
    "36": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "GT",
      "path": "15"
    },
    "37": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAB"
    },
    "40": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "41": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "42": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xE1FE7D23"
    },
    "47": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "GT",
      "path": "15"
    },
    "48": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6F"
    },
    "51": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "52": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "53": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xE1FE7D23"
    },
    "58": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "59": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x68C"
    },
    "62": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "63": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "64": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xE2FDCC17"
    },
    "69": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "70": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6AC"
    },
    "73": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "74": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "75": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "81": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6E0"
    },
    "84": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "85": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "86": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFC0C546A"
    },
    "91": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "92": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x700"
    },
    "95": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "96": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "97": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFC0E74D1"
    },
    "102": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "103": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x734"
    },
    "106": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "107": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "110": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "REVERT",
      "path": "15"
    },
    "111": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "112": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "113": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xB15CF964"
    },
    "118": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "119": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5E2"
    },
    "122": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "123": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "124": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xBC859F44"
    },
    "129": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "130": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5F8"
    },
    "133": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "134": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "135": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xBE7FF580"
    },
    "140": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "141": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x618"
    },
    "144": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "145": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "146": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xCBCE49ED"
    },
    "151": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "152": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x64C"
    },
    "155": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "156": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "157": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xCFF29DFD"
    },
    "162": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "163": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x66C"
    },
    "166": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "167": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "169": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "170": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "REVERT",
      "path": "15"
    },
    "171": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "172": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "173": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8DA5CB5B"
    },
    "178": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "GT",
      "path": "15"
    },
    "179": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF2"
    },
    "182": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "183": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "184": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8DA5CB5B"
    },
    "189": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "190": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x545"
    },
    "193": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "194": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "195": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8F32D59B"
    },
    "200": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "201": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x577"
    },
    "204": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "205": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "206": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x9435C887"
    },
    "211": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "212": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x597"
    },
    "215": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "216": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "217": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x9B51AC85"
    },
    "222": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "223": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5AC"
    },
    "226": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "227": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "228": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA4C89322"
    },
    "233": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "234": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5C2"
    },
    "237": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "238": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "240": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "241": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "REVERT",
      "path": "15"
    },
    "242": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "243": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "244": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x87A15DC9"
    },
    "249": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "250": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4C1"
    },
    "253": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "254": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "255": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x88657C7A"
    },
    "260": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "261": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D6"
    },
    "264": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "265": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "266": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x897DB45C"
    },
    "271": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "272": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4FB"
    },
    "275": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "276": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "277": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8CAB6C4F"
    },
    "282": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "283": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x511"
    },
    "286": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "287": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "289": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "290": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "REVERT",
      "path": "15"
    },
    "291": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "292": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "293": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x5BF997F5"
    },
    "298": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "GT",
      "path": "15"
    },
    "299": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A6"
    },
    "302": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "303": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "304": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x715018A6"
    },
    "309": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "GT",
      "path": "15"
    },
    "310": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x175"
    },
    "313": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "314": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "315": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x715018A6"
    },
    "320": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "321": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x438"
    },
    "324": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "325": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "326": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x72F96040"
    },
    "331": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "332": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x44D"
    },
    "335": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "336": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "337": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x7824407F"
    },
    "342": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "343": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x46D"
    },
    "346": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "347": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "348": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x7F4FAD69"
    },
    "353": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "354": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x483"
    },
    "357": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "358": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "359": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x87865033"
    },
    "364": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "365": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x499"
    },
    "368": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "369": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "371": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "372": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "REVERT",
      "path": "15"
    },
    "373": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "374": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "375": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x5BF997F5"
    },
    "380": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "381": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x39A"
    },
    "384": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "385": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "386": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x617E677E"
    },
    "391": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "392": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3CE"
    },
    "395": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "396": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "397": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x66ADE78E"
    },
    "402": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "403": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E4"
    },
    "406": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "407": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "408": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x6FB653A2"
    },
    "413": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "414": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x404"
    },
    "417": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "418": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "420": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "421": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "REVERT",
      "path": "15"
    },
    "422": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "423": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "424": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1F45002C"
    },
    "429": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "GT",
      "path": "15"
    },
    "430": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1ED"
    },
    "433": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "434": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "435": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1F45002C"
    },
    "440": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "441": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x291"
    },
    "444": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "445": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "446": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x4E71D92D"
    },
    "451": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "452": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x30F"
    },
    "455": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "456": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "457": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x4F1910A1"
    },
    "462": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "463": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x324"
    },
    "466": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "467": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "468": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x5707BEE5"
    },
    "473": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "474": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x358"
    },
    "477": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "478": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "479": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x590E1AE3"
    },
    "484": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "485": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x385"
    },
    "488": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "489": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "491": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "492": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "REVERT",
      "path": "15"
    },
    "493": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "494": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "495": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x594851C"
    },
    "500": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "501": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21F"
    },
    "504": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "505": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "506": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x124A1F4F"
    },
    "511": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "512": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x252"
    },
    "515": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "516": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "517": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1998AEEF"
    },
    "522": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "523": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x272"
    },
    "526": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "527": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "528": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1BB89762"
    },
    "533": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "EQ",
      "path": "15"
    },
    "534": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27C"
    },
    "537": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "538": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "539": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "541": {
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "542": {
      "first_revert": true,
      "fn": null,
      "offset": [
        442,
        22667
      ],
      "op": "REVERT",
      "path": "15"
    },
    "543": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "544": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "545": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "DUP1",
      "path": "15"
    },
    "546": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "547": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22B"
    },
    "550": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "551": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "553": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "DUP1",
      "path": "15"
    },
    "554": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "REVERT",
      "path": "15"
    },
    "555": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "556": {
      "op": "POP"
    },
    "557": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "560": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23A"
    },
    "563": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "564": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "566": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29C4"
    },
    "569": {
      "fn": "WorkLock.getRemainingWork",
      "jump": "i",
      "offset": [
        11344,
        11753
      ],
      "op": "JUMP",
      "path": "15"
    },
    "570": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "571": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x749"
    },
    "574": {
      "fn": "WorkLock.getRemainingWork",
      "jump": "i",
      "offset": [
        11344,
        11753
      ],
      "op": "JUMP",
      "path": "15"
    },
    "575": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "576": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "578": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "579": {
      "op": "SWAP1"
    },
    "580": {
      "op": "DUP2"
    },
    "581": {
      "op": "MSTORE"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "584": {
      "op": "ADD"
    },
    "585": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "586": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "588": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "589": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "DUP1",
      "path": "15"
    },
    "590": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "591": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "SUB",
      "path": "15"
    },
    "592": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "593": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "RETURN",
      "path": "15"
    },
    "594": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9591,
        9708
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "595": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9591,
        9708
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "596": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9591,
        9708
      ],
      "op": "DUP1",
      "path": "15"
    },
    "597": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9591,
        9708
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "598": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9591,
        9708
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25E"
    },
    "601": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9591,
        9708
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "602": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9591,
        9708
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "604": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9591,
        9708
      ],
      "op": "DUP1",
      "path": "15"
    },
    "605": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9591,
        9708
      ],
      "op": "REVERT",
      "path": "15"
    },
    "606": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9591,
        9708
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9591,
        9708
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "611": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9591,
        9708
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x26D"
    },
    "614": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9591,
        9708
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "615": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9591,
        9708
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "617": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9591,
        9708
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29E1"
    },
    "620": {
      "fn": "WorkLock.ethToWork",
      "jump": "i",
      "offset": [
        9591,
        9708
      ],
      "op": "JUMP",
      "path": "15"
    },
    "621": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9591,
        9708
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "622": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9591,
        9708
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x834"
    },
    "625": {
      "fn": "WorkLock.ethToWork",
      "jump": "i",
      "offset": [
        9591,
        9708
      ],
      "op": "JUMP",
      "path": "15"
    },
    "626": {
      "fn": "WorkLock.bid",
      "offset": [
        11984,
        12844
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "627": {
      "fn": "WorkLock.bid",
      "offset": [
        11984,
        12844
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27A"
    },
    "630": {
      "fn": "WorkLock.bid",
      "offset": [
        11984,
        12844
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x847"
    },
    "633": {
      "fn": "WorkLock.bid",
      "jump": "i",
      "offset": [
        11984,
        12844
      ],
      "op": "JUMP",
      "path": "15"
    },
    "634": {
      "fn": "WorkLock.bid",
      "offset": [
        11984,
        12844
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "635": {
      "fn": "WorkLock.bid",
      "offset": [
        11984,
        12844
      ],
      "op": "STOP",
      "path": "15"
    },
    "636": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        11816,
        11914
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "637": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        11816,
        11914
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "638": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        11816,
        11914
      ],
      "op": "DUP1",
      "path": "15"
    },
    "639": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        11816,
        11914
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "640": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        11816,
        11914
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x288"
    },
    "643": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        11816,
        11914
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "644": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        11816,
        11914
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "646": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        11816,
        11914
      ],
      "op": "DUP1",
      "path": "15"
    },
    "647": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        11816,
        11914
      ],
      "op": "REVERT",
      "path": "15"
    },
    "648": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        11816,
        11914
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "649": {
      "op": "POP"
    },
    "650": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        11893,
        11900
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 0,
      "value": "0x8"
    },
    "652": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        11893,
        11907
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "653": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        11816,
        11914
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "656": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        11816,
        11914
      ],
      "op": "JUMP",
      "path": "15"
    },
    "657": {
      "offset": [
        2488,
        2532
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "658": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "659": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "DUP1",
      "path": "15"
    },
    "660": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "661": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29D"
    },
    "664": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "665": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "667": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "DUP1",
      "path": "15"
    },
    "668": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "REVERT",
      "path": "15"
    },
    "669": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "670": {
      "op": "POP"
    },
    "671": {
      "offset": [
        2488,
        2532
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E0"
    },
    "674": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC"
    },
    "677": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "678": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "680": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29C4"
    },
    "683": {
      "fn": "WorkLock.getBiddersLength",
      "jump": "i",
      "offset": [
        2488,
        2532
      ],
      "op": "JUMP",
      "path": "15"
    },
    "684": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "685": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "687": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "689": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "690": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "692": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "693": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "DUP2",
      "path": "15"
    },
    "694": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "695": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "697": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "698": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "699": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "DUP1",
      "path": "15"
    },
    "700": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "701": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "703": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "DUP3",
      "path": "15"
    },
    "704": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "ADD",
      "path": "15"
    },
    "705": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "706": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "708": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "709": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "710": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "ADD",
      "path": "15"
    },
    "711": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "712": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "713": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "714": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "715": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "717": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "DUP2",
      "path": "15"
    },
    "718": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "AND",
      "path": "15"
    },
    "719": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "720": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "723": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "724": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "DIV",
      "path": "15"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "731": {
      "op": "SHL"
    },
    "732": {
      "op": "SUB"
    },
    "733": {
      "offset": [
        2488,
        2532
      ],
      "op": "AND",
      "path": "15"
    },
    "734": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "DUP5",
      "path": "15"
    },
    "735": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "JUMP",
      "path": "15"
    },
    "736": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "737": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "739": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "DUP1",
      "path": "15"
    },
    "740": {
      "fn": "WorkLock.getBiddersLength",
      "offset": [
        2488,
        2532
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "741": {
      "op": "SWAP5"
    },
    "742": {
      "op": "DUP6"
    },
    "743": {
      "op": "MSTORE"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "746": {
      "op": "DUP6"
    },
    "747": {
      "op": "ADD"
    },
    "748": {
      "op": "SWAP4"
    },
    "749": {
      "op": "SWAP1"
    },
    "750": {
      "op": "SWAP4"
    },
    "751": {
      "op": "MSTORE"
    },
    "752": {
      "op": "SWAP1"
    },
    "753": {
      "op": "ISZERO"
    },
    "754": {
      "op": "ISZERO"
    },
    "755": {
      "op": "SWAP2"
    },
    "756": {
      "op": "DUP4"
    },
    "757": {
      "op": "ADD"
    },
    "758": {
      "op": "SWAP2"
    },
    "759": {
      "op": "SWAP1"
    },
    "760": {
      "op": "SWAP2"
    },
    "761": {
      "op": "MSTORE"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "768": {
      "op": "SHL"
    },
    "769": {
      "op": "SUB"
    },
    "770": {
      "op": "AND"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "773": {
      "op": "DUP3"
    },
    "774": {
      "op": "ADD"
    },
    "775": {
      "op": "MSTORE"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "778": {
      "op": "ADD"
    },
    "779": {
      "offset": [
        2488,
        2532
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x249"
    },
    "782": {
      "op": "JUMP"
    },
    "783": {
      "fn": "WorkLock.claim",
      "offset": [
        20335,
        20992
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "784": {
      "fn": "WorkLock.claim",
      "offset": [
        20335,
        20992
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "785": {
      "fn": "WorkLock.claim",
      "offset": [
        20335,
        20992
      ],
      "op": "DUP1",
      "path": "15"
    },
    "786": {
      "fn": "WorkLock.claim",
      "offset": [
        20335,
        20992
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "787": {
      "fn": "WorkLock.claim",
      "offset": [
        20335,
        20992
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31B"
    },
    "790": {
      "fn": "WorkLock.claim",
      "offset": [
        20335,
        20992
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "791": {
      "fn": "WorkLock.claim",
      "offset": [
        20335,
        20992
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "793": {
      "fn": "WorkLock.claim",
      "offset": [
        20335,
        20992
      ],
      "op": "DUP1",
      "path": "15"
    },
    "794": {
      "fn": "WorkLock.claim",
      "offset": [
        20335,
        20992
      ],
      "op": "REVERT",
      "path": "15"
    },
    "795": {
      "fn": "WorkLock.claim",
      "offset": [
        20335,
        20992
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "796": {
      "fn": "WorkLock.claim",
      "offset": [
        20335,
        20992
      ],
      "op": "POP",
      "path": "15"
    },
    "797": {
      "fn": "WorkLock.claim",
      "offset": [
        20335,
        20992
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "800": {
      "fn": "WorkLock.claim",
      "offset": [
        20335,
        20992
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAFF"
    },
    "803": {
      "fn": "WorkLock.claim",
      "jump": "i",
      "offset": [
        20335,
        20992
      ],
      "op": "JUMP",
      "path": "15"
    },
    "804": {
      "offset": [
        2080,
        2118
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "805": {
      "fn": "WorkLock.claim",
      "offset": [
        2080,
        2118
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "806": {
      "fn": "WorkLock.claim",
      "offset": [
        2080,
        2118
      ],
      "op": "DUP1",
      "path": "15"
    },
    "807": {
      "fn": "WorkLock.claim",
      "offset": [
        2080,
        2118
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "808": {
      "fn": "WorkLock.claim",
      "offset": [
        2080,
        2118
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x330"
    },
    "811": {
      "fn": "WorkLock.claim",
      "offset": [
        2080,
        2118
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "812": {
      "fn": "WorkLock.claim",
      "offset": [
        2080,
        2118
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "814": {
      "fn": "WorkLock.claim",
      "offset": [
        2080,
        2118
      ],
      "op": "DUP1",
      "path": "15"
    },
    "815": {
      "fn": "WorkLock.claim",
      "offset": [
        2080,
        2118
      ],
      "op": "REVERT",
      "path": "15"
    },
    "816": {
      "fn": "WorkLock.claim",
      "offset": [
        2080,
        2118
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "817": {
      "fn": "WorkLock.claim",
      "offset": [
        2080,
        2118
      ],
      "op": "POP",
      "path": "15"
    },
    "818": {
      "fn": "WorkLock.claim",
      "offset": [
        2080,
        2118
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "821": {
      "fn": "WorkLock.claim",
      "offset": [
        2080,
        2118
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "854": {
      "fn": "WorkLock.claim",
      "offset": [
        2080,
        2118
      ],
      "op": "DUP2",
      "path": "15"
    },
    "855": {
      "fn": "WorkLock.claim",
      "offset": [
        2080,
        2118
      ],
      "op": "JUMP",
      "path": "15"
    },
    "856": {
      "offset": [
        2538,
        2585
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "857": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "858": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "DUP1",
      "path": "15"
    },
    "859": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "860": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x364"
    },
    "863": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "864": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "866": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "DUP1",
      "path": "15"
    },
    "867": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "REVERT",
      "path": "15"
    },
    "868": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "869": {
      "op": "POP"
    },
    "870": {
      "offset": [
        2538,
        2585
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "873": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x373"
    },
    "876": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "877": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "879": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29C4"
    },
    "882": {
      "fn": "WorkLock.claim",
      "jump": "i",
      "offset": [
        2538,
        2585
      ],
      "op": "JUMP",
      "path": "15"
    },
    "883": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "884": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "886": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "888": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "889": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "891": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "892": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "DUP2",
      "path": "15"
    },
    "893": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "894": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "896": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "897": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "898": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "899": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "DUP2",
      "path": "15"
    },
    "900": {
      "fn": "WorkLock.claim",
      "offset": [
        2538,
        2585
      ],
      "op": "JUMP",
      "path": "15"
    },
    "901": {
      "fn": "WorkLock.refund",
      "offset": [
        21819,
        22665
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "902": {
      "fn": "WorkLock.refund",
      "offset": [
        21819,
        22665
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "903": {
      "fn": "WorkLock.refund",
      "offset": [
        21819,
        22665
      ],
      "op": "DUP1",
      "path": "15"
    },
    "904": {
      "fn": "WorkLock.refund",
      "offset": [
        21819,
        22665
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "905": {
      "fn": "WorkLock.refund",
      "offset": [
        21819,
        22665
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x391"
    },
    "908": {
      "fn": "WorkLock.refund",
      "offset": [
        21819,
        22665
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "909": {
      "fn": "WorkLock.refund",
      "offset": [
        21819,
        22665
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "911": {
      "fn": "WorkLock.refund",
      "offset": [
        21819,
        22665
      ],
      "op": "DUP1",
      "path": "15"
    },
    "912": {
      "fn": "WorkLock.refund",
      "offset": [
        21819,
        22665
      ],
      "op": "REVERT",
      "path": "15"
    },
    "913": {
      "fn": "WorkLock.refund",
      "offset": [
        21819,
        22665
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "914": {
      "fn": "WorkLock.refund",
      "offset": [
        21819,
        22665
      ],
      "op": "POP",
      "path": "15"
    },
    "915": {
      "fn": "WorkLock.refund",
      "offset": [
        21819,
        22665
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "918": {
      "fn": "WorkLock.refund",
      "offset": [
        21819,
        22665
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE4F"
    },
    "921": {
      "fn": "WorkLock.refund",
      "jump": "i",
      "offset": [
        21819,
        22665
      ],
      "op": "JUMP",
      "path": "15"
    },
    "922": {
      "offset": [
        2035,
        2074
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "923": {
      "fn": "WorkLock.refund",
      "offset": [
        2035,
        2074
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "924": {
      "fn": "WorkLock.refund",
      "offset": [
        2035,
        2074
      ],
      "op": "DUP1",
      "path": "15"
    },
    "925": {
      "fn": "WorkLock.refund",
      "offset": [
        2035,
        2074
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "926": {
      "fn": "WorkLock.refund",
      "offset": [
        2035,
        2074
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3A6"
    },
    "929": {
      "fn": "WorkLock.refund",
      "offset": [
        2035,
        2074
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "930": {
      "fn": "WorkLock.refund",
      "offset": [
        2035,
        2074
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "932": {
      "fn": "WorkLock.refund",
      "offset": [
        2035,
        2074
      ],
      "op": "DUP1",
      "path": "15"
    },
    "933": {
      "fn": "WorkLock.refund",
      "offset": [
        2035,
        2074
      ],
      "op": "REVERT",
      "path": "15"
    },
    "934": {
      "fn": "WorkLock.refund",
      "offset": [
        2035,
        2074
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "935": {
      "fn": "WorkLock.refund",
      "offset": [
        2035,
        2074
      ],
      "op": "POP",
      "path": "15"
    },
    "936": {
      "fn": "WorkLock.refund",
      "offset": [
        2035,
        2074
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "939": {
      "fn": "WorkLock.refund",
      "offset": [
        2035,
        2074
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "972": {
      "fn": "WorkLock.refund",
      "offset": [
        2035,
        2074
      ],
      "op": "DUP2",
      "path": "15"
    },
    "973": {
      "fn": "WorkLock.refund",
      "offset": [
        2035,
        2074
      ],
      "op": "JUMP",
      "path": "15"
    },
    "974": {
      "offset": [
        2412,
        2446
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "975": {
      "fn": "WorkLock.refund",
      "offset": [
        2412,
        2446
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "976": {
      "fn": "WorkLock.refund",
      "offset": [
        2412,
        2446
      ],
      "op": "DUP1",
      "path": "15"
    },
    "977": {
      "fn": "WorkLock.refund",
      "offset": [
        2412,
        2446
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "978": {
      "fn": "WorkLock.refund",
      "offset": [
        2412,
        2446
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3DA"
    },
    "981": {
      "fn": "WorkLock.refund",
      "offset": [
        2412,
        2446
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "982": {
      "fn": "WorkLock.refund",
      "offset": [
        2412,
        2446
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "984": {
      "fn": "WorkLock.refund",
      "offset": [
        2412,
        2446
      ],
      "op": "DUP1",
      "path": "15"
    },
    "985": {
      "fn": "WorkLock.refund",
      "offset": [
        2412,
        2446
      ],
      "op": "REVERT",
      "path": "15"
    },
    "986": {
      "fn": "WorkLock.refund",
      "offset": [
        2412,
        2446
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "987": {
      "fn": "WorkLock.refund",
      "offset": [
        2412,
        2446
      ],
      "op": "POP",
      "path": "15"
    },
    "988": {
      "fn": "WorkLock.refund",
      "offset": [
        2412,
        2446
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "991": {
      "fn": "WorkLock.refund",
      "offset": [
        2412,
        2446
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "993": {
      "fn": "WorkLock.refund",
      "offset": [
        2412,
        2446
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "994": {
      "fn": "WorkLock.refund",
      "offset": [
        2412,
        2446
      ],
      "op": "DUP2",
      "path": "15"
    },
    "995": {
      "fn": "WorkLock.refund",
      "offset": [
        2412,
        2446
      ],
      "op": "JUMP",
      "path": "15"
    },
    "996": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10249,
        11275
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "997": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10249,
        11275
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "998": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10249,
        11275
      ],
      "op": "DUP1",
      "path": "15"
    },
    "999": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10249,
        11275
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1000": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10249,
        11275
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3F0"
    },
    "1003": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10249,
        11275
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1004": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10249,
        11275
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1006": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10249,
        11275
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1007": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10249,
        11275
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1008": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10249,
        11275
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1009": {
      "op": "POP"
    },
    "1010": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10249,
        11275
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "1013": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10249,
        11275
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3FF"
    },
    "1016": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10249,
        11275
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1017": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10249,
        11275
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1019": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10249,
        11275
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29FA"
    },
    "1022": {
      "fn": "WorkLock.workToETH",
      "jump": "i",
      "offset": [
        10249,
        11275
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1023": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10249,
        11275
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1024": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10249,
        11275
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1063"
    },
    "1027": {
      "fn": "WorkLock.workToETH",
      "jump": "i",
      "offset": [
        10249,
        11275
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1028": {
      "offset": [
        2205,
        2254
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1029": {
      "fn": "WorkLock.workToETH",
      "offset": [
        2205,
        2254
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1030": {
      "fn": "WorkLock.workToETH",
      "offset": [
        2205,
        2254
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1031": {
      "fn": "WorkLock.workToETH",
      "offset": [
        2205,
        2254
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1032": {
      "fn": "WorkLock.workToETH",
      "offset": [
        2205,
        2254
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x410"
    },
    "1035": {
      "fn": "WorkLock.workToETH",
      "offset": [
        2205,
        2254
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1036": {
      "fn": "WorkLock.workToETH",
      "offset": [
        2205,
        2254
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1038": {
      "fn": "WorkLock.workToETH",
      "offset": [
        2205,
        2254
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1039": {
      "fn": "WorkLock.workToETH",
      "offset": [
        2205,
        2254
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1040": {
      "fn": "WorkLock.workToETH",
      "offset": [
        2205,
        2254
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1041": {
      "fn": "WorkLock.workToETH",
      "offset": [
        2205,
        2254
      ],
      "op": "POP",
      "path": "15"
    },
    "1042": {
      "fn": "WorkLock.workToETH",
      "offset": [
        2205,
        2254
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "1045": {
      "fn": "WorkLock.workToETH",
      "offset": [
        2205,
        2254
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "1078": {
      "fn": "WorkLock.workToETH",
      "offset": [
        2205,
        2254
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1079": {
      "fn": "WorkLock.workToETH",
      "offset": [
        2205,
        2254
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1080": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1081": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "CALLVALUE",
      "path": "34"
    },
    "1082": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1083": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "1084": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x444"
    },
    "1087": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1088": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1090": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1091": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "REVERT",
      "path": "34"
    },
    "1092": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1093": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "POP",
      "path": "34"
    },
    "1094": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x27A"
    },
    "1097": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x11B3"
    },
    "1100": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1101": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1102": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1103": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1104": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1105": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x459"
    },
    "1108": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1109": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1111": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1112": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1113": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1114": {
      "op": "POP"
    },
    "1115": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "1118": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x468"
    },
    "1121": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1122": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1124": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29C4"
    },
    "1127": {
      "fn": "WorkLock.getAvailableRefund",
      "jump": "i",
      "offset": [
        21059,
        21750
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1128": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1129": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1214"
    },
    "1132": {
      "fn": "WorkLock.getAvailableRefund",
      "jump": "i",
      "offset": [
        21059,
        21750
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1133": {
      "offset": [
        2316,
        2342
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1134": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2316,
        2342
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1135": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2316,
        2342
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1136": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2316,
        2342
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1137": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2316,
        2342
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x479"
    },
    "1140": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2316,
        2342
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1141": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2316,
        2342
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1143": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2316,
        2342
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1144": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2316,
        2342
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1145": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2316,
        2342
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1146": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2316,
        2342
      ],
      "op": "POP",
      "path": "15"
    },
    "1147": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2316,
        2342
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "1150": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2316,
        2342
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1152": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2316,
        2342
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1153": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2316,
        2342
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1154": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2316,
        2342
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1155": {
      "offset": [
        2348,
        2375
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1156": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2348,
        2375
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1157": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2348,
        2375
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1158": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2348,
        2375
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1159": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2348,
        2375
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F"
    },
    "1162": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2348,
        2375
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1163": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2348,
        2375
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1165": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2348,
        2375
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1166": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2348,
        2375
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1167": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2348,
        2375
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1168": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2348,
        2375
      ],
      "op": "POP",
      "path": "15"
    },
    "1169": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2348,
        2375
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "1172": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2348,
        2375
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "1174": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2348,
        2375
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1175": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2348,
        2375
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1176": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        2348,
        2375
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1177": {
      "offset": [
        1417,
        1460
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1178": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        1417,
        1460
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1179": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        1417,
        1460
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1180": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        1417,
        1460
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1181": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        1417,
        1460
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A5"
    },
    "1184": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        1417,
        1460
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1185": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        1417,
        1460
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1187": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        1417,
        1460
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1188": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        1417,
        1460
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1189": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        1417,
        1460
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1190": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        1417,
        1460
      ],
      "op": "POP",
      "path": "15"
    },
    "1191": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        1417,
        1460
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AE"
    },
    "1194": {
      "offset": [
        1457,
        1460
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "1196": {
      "offset": [
        1417,
        1460
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1197": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        1417,
        1460
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1198": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        1417,
        1460
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1199": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        1417,
        1460
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1201": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        1417,
        1460
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1202": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "1205": {
      "op": "SWAP1"
    },
    "1206": {
      "op": "SWAP2"
    },
    "1207": {
      "op": "AND"
    },
    "1208": {
      "op": "DUP2"
    },
    "1209": {
      "op": "MSTORE"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1212": {
      "op": "ADD"
    },
    "1213": {
      "offset": [
        1417,
        1460
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x249"
    },
    "1216": {
      "op": "JUMP"
    },
    "1217": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18001,
        18298
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1218": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18001,
        18298
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1219": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18001,
        18298
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1220": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18001,
        18298
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1221": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18001,
        18298
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4CD"
    },
    "1224": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18001,
        18298
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1225": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18001,
        18298
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1227": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18001,
        18298
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1228": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18001,
        18298
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1229": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18001,
        18298
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1230": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18001,
        18298
      ],
      "op": "POP",
      "path": "15"
    },
    "1231": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18001,
        18298
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27A"
    },
    "1234": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18001,
        18298
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x131E"
    },
    "1237": {
      "fn": "WorkLock.withdrawCompensation",
      "jump": "i",
      "offset": [
        18001,
        18298
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1238": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20045,
        20216
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1239": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20045,
        20216
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1240": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20045,
        20216
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1241": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20045,
        20216
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1242": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20045,
        20216
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4E2"
    },
    "1245": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20045,
        20216
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1246": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20045,
        20216
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1248": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20045,
        20216
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1249": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20045,
        20216
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1250": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20045,
        20216
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1251": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20045,
        20216
      ],
      "op": "POP",
      "path": "15"
    },
    "1252": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20045,
        20216
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4EB"
    },
    "1255": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20045,
        20216
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13C7"
    },
    "1258": {
      "fn": "WorkLock.isClaimingAvailable",
      "jump": "i",
      "offset": [
        20045,
        20216
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1259": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20045,
        20216
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1260": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20045,
        20216
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1262": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20045,
        20216
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1263": {
      "op": "SWAP1"
    },
    "1264": {
      "op": "ISZERO"
    },
    "1265": {
      "op": "ISZERO"
    },
    "1266": {
      "op": "DUP2"
    },
    "1267": {
      "op": "MSTORE"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1270": {
      "op": "ADD"
    },
    "1271": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20045,
        20216
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x249"
    },
    "1274": {
      "op": "JUMP"
    },
    "1275": {
      "offset": [
        2381,
        2406
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1276": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2381,
        2406
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1277": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2381,
        2406
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1278": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2381,
        2406
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1279": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2381,
        2406
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x507"
    },
    "1282": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2381,
        2406
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1283": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2381,
        2406
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1285": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2381,
        2406
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1286": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2381,
        2406
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1287": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2381,
        2406
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1288": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2381,
        2406
      ],
      "op": "POP",
      "path": "15"
    },
    "1289": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2381,
        2406
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "1292": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2381,
        2406
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "1294": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2381,
        2406
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1295": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2381,
        2406
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1296": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2381,
        2406
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1297": {
      "offset": [
        2260,
        2309
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1298": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2260,
        2309
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1299": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2260,
        2309
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1300": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2260,
        2309
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1301": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2260,
        2309
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x51D"
    },
    "1304": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2260,
        2309
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1305": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2260,
        2309
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1307": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2260,
        2309
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1308": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2260,
        2309
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1309": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2260,
        2309
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1310": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2260,
        2309
      ],
      "op": "POP",
      "path": "15"
    },
    "1311": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2260,
        2309
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "1314": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2260,
        2309
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "1347": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2260,
        2309
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1348": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        2260,
        2309
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1349": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1350": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "CALLVALUE",
      "path": "34"
    },
    "1351": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1352": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "1353": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x551"
    },
    "1356": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1357": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1359": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1360": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "REVERT",
      "path": "34"
    },
    "1361": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1362": {
      "op": "POP"
    },
    "1363": {
      "fn": "Ownable.owner",
      "offset": [
        731,
        738
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1365": {
      "fn": "Ownable.owner",
      "offset": [
        757,
        763
      ],
      "op": "SLOAD",
      "path": "34",
      "statement": 1
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1372": {
      "op": "SHL"
    },
    "1373": {
      "op": "SUB"
    },
    "1374": {
      "fn": "Ownable.owner",
      "offset": [
        757,
        763
      ],
      "op": "AND",
      "path": "34"
    },
    "1375": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1376": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "1378": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1385": {
      "op": "SHL"
    },
    "1386": {
      "op": "SUB"
    },
    "1387": {
      "op": "SWAP1"
    },
    "1388": {
      "op": "SWAP2"
    },
    "1389": {
      "op": "AND"
    },
    "1390": {
      "op": "DUP2"
    },
    "1391": {
      "op": "MSTORE"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1394": {
      "op": "ADD"
    },
    "1395": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x249"
    },
    "1398": {
      "op": "JUMP"
    },
    "1399": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1400": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "CALLVALUE",
      "path": "34"
    },
    "1401": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1402": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "1403": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x583"
    },
    "1406": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1407": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1409": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1410": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "REVERT",
      "path": "34"
    },
    "1411": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1412": {
      "op": "POP"
    },
    "1413": {
      "fn": "Ownable.isOwner",
      "offset": [
        1053,
        1057
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1415": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "SLOAD",
      "path": "34",
      "statement": 2
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1422": {
      "op": "SHL"
    },
    "1423": {
      "op": "SUB"
    },
    "1424": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "AND",
      "path": "34"
    },
    "1425": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "34"
    },
    "1426": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1096
      ],
      "op": "EQ",
      "path": "34"
    },
    "1427": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x4EB"
    },
    "1430": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1431": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12915,
        13901
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1432": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12915,
        13901
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1433": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12915,
        13901
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1434": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12915,
        13901
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1435": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12915,
        13901
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5A3"
    },
    "1438": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12915,
        13901
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1439": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12915,
        13901
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1441": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12915,
        13901
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1442": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12915,
        13901
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1443": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12915,
        13901
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1444": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12915,
        13901
      ],
      "op": "POP",
      "path": "15"
    },
    "1445": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12915,
        13901
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27A"
    },
    "1448": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12915,
        13901
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13E3"
    },
    "1451": {
      "fn": "WorkLock.cancelBid",
      "jump": "i",
      "offset": [
        12915,
        13901
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1452": {
      "offset": [
        2453,
        2482
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1453": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        2453,
        2482
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1454": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        2453,
        2482
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1455": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        2453,
        2482
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1456": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        2453,
        2482
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5B8"
    },
    "1459": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        2453,
        2482
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1460": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        2453,
        2482
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1462": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        2453,
        2482
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1463": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        2453,
        2482
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1464": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        2453,
        2482
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1465": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        2453,
        2482
      ],
      "op": "POP",
      "path": "15"
    },
    "1466": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        2453,
        2482
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "1469": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        2453,
        2482
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1471": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        2453,
        2482
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1472": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        2453,
        2482
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1473": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        2453,
        2482
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1474": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1475": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1476": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1477": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1478": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5CE"
    },
    "1481": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1482": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1484": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1485": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1486": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1487": {
      "op": "POP"
    },
    "1488": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "1491": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5DD"
    },
    "1494": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1495": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1497": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29E1"
    },
    "1500": {
      "fn": "WorkLock.ethToTokens",
      "jump": "i",
      "offset": [
        6124,
        6686
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1501": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1502": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16BD"
    },
    "1505": {
      "fn": "WorkLock.ethToTokens",
      "jump": "i",
      "offset": [
        6124,
        6686
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1506": {
      "offset": [
        2687,
        2719
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1507": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        2687,
        2719
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1508": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        2687,
        2719
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1509": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        2687,
        2719
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1510": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        2687,
        2719
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5EE"
    },
    "1513": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        2687,
        2719
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1514": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        2687,
        2719
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1516": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        2687,
        2719
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1517": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        2687,
        2719
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1518": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        2687,
        2719
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1519": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        2687,
        2719
      ],
      "op": "POP",
      "path": "15"
    },
    "1520": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        2687,
        2719
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "1523": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        2687,
        2719
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "1525": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        2687,
        2719
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1526": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        2687,
        2719
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1527": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        2687,
        2719
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1528": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18727,
        19981
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1529": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18727,
        19981
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1530": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18727,
        19981
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1531": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18727,
        19981
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1532": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18727,
        19981
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x604"
    },
    "1535": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18727,
        19981
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1536": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18727,
        19981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1538": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18727,
        19981
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1539": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18727,
        19981
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1540": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18727,
        19981
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1541": {
      "op": "POP"
    },
    "1542": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18727,
        19981
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "1545": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18727,
        19981
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x613"
    },
    "1548": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18727,
        19981
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1549": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18727,
        19981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1551": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18727,
        19981
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29E1"
    },
    "1554": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "jump": "i",
      "offset": [
        18727,
        19981
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1555": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18727,
        19981
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1556": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18727,
        19981
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17BF"
    },
    "1559": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "jump": "i",
      "offset": [
        18727,
        19981
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1560": {
      "offset": [
        2124,
        2162
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1561": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2124,
        2162
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1562": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2124,
        2162
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1563": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2124,
        2162
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1564": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2124,
        2162
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x624"
    },
    "1567": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2124,
        2162
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1568": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2124,
        2162
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1570": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2124,
        2162
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1571": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2124,
        2162
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1572": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2124,
        2162
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1573": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2124,
        2162
      ],
      "op": "POP",
      "path": "15"
    },
    "1574": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2124,
        2162
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AE"
    },
    "1577": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2124,
        2162
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "1610": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2124,
        2162
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1611": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2124,
        2162
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1612": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1613": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1614": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1615": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1616": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x658"
    },
    "1619": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1620": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1622": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1623": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1624": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1625": {
      "op": "POP"
    },
    "1626": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27A"
    },
    "1629": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x667"
    },
    "1632": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1633": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1635": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A1C"
    },
    "1638": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        14763,
        17925
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1639": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1640": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A7D"
    },
    "1643": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        14763,
        17925
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1644": {
      "offset": [
        2592,
        2616
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1645": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1646": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1647": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1648": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x678"
    },
    "1651": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1652": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1654": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1655": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1656": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1657": {
      "op": "POP"
    },
    "1658": {
      "offset": [
        2592,
        2616
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x55F"
    },
    "1661": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x687"
    },
    "1664": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1665": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1667": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29E1"
    },
    "1670": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        2592,
        2616
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1671": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1672": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x212B"
    },
    "1675": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        2592,
        2616
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1676": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5662,
        5955
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1677": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5662,
        5955
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1678": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5662,
        5955
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1679": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5662,
        5955
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1680": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5662,
        5955
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x698"
    },
    "1683": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5662,
        5955
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1684": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5662,
        5955
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1686": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5662,
        5955
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1687": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5662,
        5955
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1688": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5662,
        5955
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1689": {
      "op": "POP"
    },
    "1690": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5662,
        5955
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27A"
    },
    "1693": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5662,
        5955
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6A7"
    },
    "1696": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5662,
        5955
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1697": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5662,
        5955
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1699": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5662,
        5955
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29E1"
    },
    "1702": {
      "fn": "WorkLock.tokenDeposit",
      "jump": "i",
      "offset": [
        5662,
        5955
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1703": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5662,
        5955
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1704": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5662,
        5955
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2155"
    },
    "1707": {
      "fn": "WorkLock.tokenDeposit",
      "jump": "i",
      "offset": [
        5662,
        5955
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1708": {
      "offset": [
        1567,
        1605
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1709": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        1567,
        1605
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1710": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        1567,
        1605
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1711": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        1567,
        1605
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1712": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        1567,
        1605
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6B8"
    },
    "1715": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        1567,
        1605
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1716": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        1567,
        1605
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1718": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        1567,
        1605
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1719": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        1567,
        1605
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1720": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        1567,
        1605
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1721": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        1567,
        1605
      ],
      "op": "POP",
      "path": "15"
    },
    "1722": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        1567,
        1605
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x55F"
    },
    "1725": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        1567,
        1605
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "1758": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        1567,
        1605
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1759": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        1567,
        1605
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1760": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1761": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "CALLVALUE",
      "path": "34"
    },
    "1762": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1763": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "1764": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6EC"
    },
    "1767": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1768": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1770": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1771": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "REVERT",
      "path": "34"
    },
    "1772": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1773": {
      "op": "POP"
    },
    "1774": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x27A"
    },
    "1777": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6FB"
    },
    "1780": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "CALLDATASIZE",
      "path": "34"
    },
    "1781": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x4"
    },
    "1783": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x29C4"
    },
    "1786": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1787": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1788": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x223B"
    },
    "1791": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1792": {
      "offset": [
        1525,
        1561
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1793": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1525,
        1561
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1794": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1525,
        1561
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1795": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1525,
        1561
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1796": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1525,
        1561
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x70C"
    },
    "1799": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1525,
        1561
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1800": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1525,
        1561
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1802": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1525,
        1561
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1803": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1525,
        1561
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1804": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1525,
        1561
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1805": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1525,
        1561
      ],
      "op": "POP",
      "path": "15"
    },
    "1806": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1525,
        1561
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x55F"
    },
    "1809": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1525,
        1561
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "1842": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1525,
        1561
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1843": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1525,
        1561
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1844": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14020,
        14172
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1845": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14020,
        14172
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1846": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14020,
        14172
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1847": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14020,
        14172
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1848": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14020,
        14172
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x740"
    },
    "1851": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14020,
        14172
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1852": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14020,
        14172
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1854": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14020,
        14172
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1855": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14020,
        14172
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1856": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14020,
        14172
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1857": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14020,
        14172
      ],
      "op": "POP",
      "path": "15"
    },
    "1858": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14020,
        14172
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27A"
    },
    "1861": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14020,
        14172
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x225E"
    },
    "1864": {
      "fn": "WorkLock.shutdown",
      "jump": "i",
      "offset": [
        14020,
        14172
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1865": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1872": {
      "op": "SHL"
    },
    "1873": {
      "op": "SUB"
    },
    "1874": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11453,
        11470
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1875": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11453,
        11470
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1876": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11453,
        11470
      ],
      "op": "AND",
      "path": "15"
    },
    "1877": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11410,
        11417
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1879": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11453,
        11470
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1880": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11453,
        11470
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1881": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11453,
        11470
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1882": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11453,
        11461
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "1884": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11453,
        11470
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1886": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11453,
        11470
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1887": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11453,
        11470
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1889": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11453,
        11470
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1890": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11453,
        11470
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1891": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11453,
        11470
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1892": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11541,
        11559
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1894": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11541,
        11559
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1895": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11541,
        11559
      ],
      "op": "ADD",
      "path": "15"
    },
    "1896": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11541,
        11559
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1897": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1898": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1899": {
      "op": "PUSH4",
      "value": "0xD094ADBF"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1906": {
      "op": "SHL"
    },
    "1907": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1908": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1909": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1911": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1912": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "ADD",
      "path": "15"
    },
    "1913": {
      "op": "SWAP5"
    },
    "1914": {
      "op": "SWAP1"
    },
    "1915": {
      "op": "SWAP5"
    },
    "1916": {
      "op": "MSTORE"
    },
    "1917": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11410,
        11417
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1918": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11410,
        11417
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1919": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11453,
        11470
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1920": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11453,
        11470
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1921": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11410,
        11417
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1922": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11410,
        11417
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1923": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11560
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7FC"
    },
    "1926": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11560
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1927": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11541,
        11559
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1928": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11510
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "1961": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11527
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1962": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11527
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1963": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11527
      ],
      "op": "AND",
      "path": "15"
    },
    "1964": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11527
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1965": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11527
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xD094ADBF"
    },
    "1970": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11527
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1973": {
      "op": "ADD"
    },
    "1974": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1976": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1978": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1979": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1980": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1981": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "SUB",
      "path": "15"
    },
    "1982": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1983": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1984": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "GAS",
      "path": "15"
    },
    "1985": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "1986": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1987": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1988": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1989": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7D2"
    },
    "1992": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1993": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "1994": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1996": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1997": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "1998": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "1999": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2001": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2002": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2003": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "POP",
      "path": "15"
    },
    "2004": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "POP",
      "path": "15"
    },
    "2005": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "POP",
      "path": "15"
    },
    "2006": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "POP",
      "path": "15"
    },
    "2007": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2009": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2010": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2011": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "2013": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "NOT",
      "path": "15"
    },
    "2014": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "2016": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2017": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "ADD",
      "path": "15"
    },
    "2018": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "AND",
      "path": "15"
    },
    "2019": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2020": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "ADD",
      "path": "15"
    },
    "2021": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2022": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2024": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2025": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "POP",
      "path": "15"
    },
    "2026": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2027": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "ADD",
      "path": "15"
    },
    "2028": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2029": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7F6"
    },
    "2032": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2033": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2034": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A91"
    },
    "2037": {
      "fn": "WorkLock.getRemainingWork",
      "jump": "i",
      "offset": [
        11504,
        11536
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2038": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11536
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2039": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11540
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2040": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11540
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22DE"
    },
    "2043": {
      "fn": "WorkLock.getRemainingWork",
      "jump": "i",
      "offset": [
        11504,
        11560
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2044": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11504,
        11560
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2045": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11480,
        11560
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2046": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11480,
        11560
      ],
      "op": "POP",
      "path": "15"
    },
    "2047": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11570,
        11591
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2049": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11594,
        11622
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x80D"
    },
    "2052": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11604,
        11608
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2053": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11604,
        11621
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2055": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11604,
        11621
      ],
      "op": "ADD",
      "path": "15"
    },
    "2056": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11604,
        11621
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2057": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11594,
        11603
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x834"
    },
    "2060": {
      "fn": "WorkLock.getRemainingWork",
      "jump": "i",
      "offset": [
        11594,
        11622
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2061": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11594,
        11622
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2062": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11570,
        11622
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2063": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11570,
        11622
      ],
      "op": "POP",
      "path": "15"
    },
    "2064": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11653,
        11666
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2065": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11636,
        11649
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2066": {
      "branch": 133,
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11636,
        11666
      ],
      "op": "GT",
      "path": "15"
    },
    "2067": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11632,
        11701
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x821"
    },
    "2070": {
      "branch": 133,
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11632,
        11701
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2071": {
      "op": "POP"
    },
    "2072": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11689,
        11690
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 3,
      "value": "0x0"
    },
    "2074": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11689,
        11690
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "2075": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2076": {
      "op": "POP"
    },
    "2077": {
      "op": "POP"
    },
    "2078": {
      "op": "POP"
    },
    "2079": {
      "op": "POP"
    },
    "2080": {
      "fn": "WorkLock.getRemainingWork",
      "jump": "o",
      "offset": [
        11344,
        11753
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2081": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11632,
        11701
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2082": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11717,
        11746
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 4,
      "value": "0x82B"
    },
    "2085": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11733,
        11746
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2086": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11717,
        11730
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2087": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11717,
        11746
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "2090": {
      "fn": "WorkLock.getRemainingWork",
      "jump": "i",
      "offset": [
        11717,
        11746
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2091": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11717,
        11746
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2092": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11710,
        11746
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "2093": {
      "fn": "WorkLock.getRemainingWork",
      "offset": [
        11344,
        11753
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "2094": {
      "op": "POP"
    },
    "2095": {
      "op": "POP"
    },
    "2096": {
      "op": "POP"
    },
    "2097": {
      "op": "POP"
    },
    "2098": {
      "op": "POP"
    },
    "2099": {
      "fn": "WorkLock.getRemainingWork",
      "jump": "o",
      "offset": [
        11344,
        11753
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2100": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9591,
        9708
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2101": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9651,
        9658
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2103": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9677,
        9701
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 5,
      "value": "0x841"
    },
    "2106": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9687,
        9697
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2107": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9699,
        9700
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2109": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9677,
        9686
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22F1"
    },
    "2112": {
      "fn": "WorkLock.ethToWork",
      "jump": "i",
      "offset": [
        9677,
        9701
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2113": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9677,
        9701
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2114": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9670,
        9701
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2115": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9591,
        9708
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2116": {
      "op": "POP"
    },
    "2117": {
      "op": "POP"
    },
    "2118": {
      "fn": "WorkLock.ethToWork",
      "jump": "o",
      "offset": [
        9591,
        9708
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2119": {
      "fn": "WorkLock.bid",
      "offset": [
        11984,
        12844
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2120": {
      "fn": "WorkLock.bid",
      "offset": [
        12053,
        12065
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 6,
      "value": "0x2"
    },
    "2122": {
      "fn": "WorkLock.bid",
      "offset": [
        12053,
        12065
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2123": {
      "fn": "WorkLock.bid",
      "offset": [
        12034,
        12049
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "2124": {
      "fn": "WorkLock.bid",
      "offset": [
        12034,
        12065
      ],
      "op": "LT",
      "path": "15"
    },
    "2125": {
      "branch": 134,
      "fn": "WorkLock.bid",
      "offset": [
        12034,
        12065
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2126": {
      "fn": "WorkLock.bid",
      "offset": [
        12026,
        12093
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x89E"
    },
    "2129": {
      "branch": 134,
      "fn": "WorkLock.bid",
      "offset": [
        12026,
        12093
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2130": {
      "fn": "WorkLock.bid",
      "offset": [
        12026,
        12093
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2132": {
      "fn": "WorkLock.bid",
      "offset": [
        12026,
        12093
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2133": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2139": {
      "op": "SHL"
    },
    "2140": {
      "fn": "WorkLock.bid",
      "offset": [
        12026,
        12093
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2141": {
      "fn": "WorkLock.bid",
      "offset": [
        12026,
        12093
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2144": {
      "fn": "WorkLock.bid",
      "offset": [
        12026,
        12093
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2146": {
      "fn": "WorkLock.bid",
      "offset": [
        12026,
        12093
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2147": {
      "fn": "WorkLock.bid",
      "offset": [
        12026,
        12093
      ],
      "op": "ADD",
      "path": "15"
    },
    "2148": {
      "op": "MSTORE"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2153": {
      "op": "DUP3"
    },
    "2154": {
      "op": "ADD"
    },
    "2155": {
      "op": "MSTORE"
    },
    "2156": {
      "op": "PUSH32",
      "value": "0x42696464696E67206973206E6F74206F70656E20796574000000000000000000"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2191": {
      "op": "DUP3"
    },
    "2192": {
      "op": "ADD"
    },
    "2193": {
      "op": "MSTORE"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2196": {
      "op": "ADD"
    },
    "2197": {
      "fn": "WorkLock.bid",
      "offset": [
        12026,
        12093
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2198": {
      "fn": "WorkLock.bid",
      "offset": [
        12026,
        12093
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2200": {
      "fn": "WorkLock.bid",
      "offset": [
        12026,
        12093
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2201": {
      "fn": "WorkLock.bid",
      "offset": [
        12026,
        12093
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2202": {
      "fn": "WorkLock.bid",
      "offset": [
        12026,
        12093
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2203": {
      "fn": "WorkLock.bid",
      "offset": [
        12026,
        12093
      ],
      "op": "SUB",
      "path": "15"
    },
    "2204": {
      "fn": "WorkLock.bid",
      "offset": [
        12026,
        12093
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2205": {
      "fn": "WorkLock.bid",
      "offset": [
        12026,
        12093
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "15"
    },
    "2206": {
      "fn": "WorkLock.bid",
      "offset": [
        12026,
        12093
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2207": {
      "fn": "WorkLock.bid",
      "offset": [
        12129,
        12139
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 7,
      "value": "0x3"
    },
    "2209": {
      "fn": "WorkLock.bid",
      "offset": [
        12129,
        12139
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2210": {
      "fn": "WorkLock.bid",
      "offset": [
        12111,
        12126
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "2211": {
      "branch": 135,
      "fn": "WorkLock.bid",
      "offset": [
        12111,
        12139
      ],
      "op": "LT",
      "path": "15"
    },
    "2212": {
      "fn": "WorkLock.bid",
      "offset": [
        12103,
        12171
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8EF"
    },
    "2215": {
      "branch": 135,
      "fn": "WorkLock.bid",
      "offset": [
        12103,
        12171
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2216": {
      "fn": "WorkLock.bid",
      "offset": [
        12103,
        12171
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2218": {
      "fn": "WorkLock.bid",
      "offset": [
        12103,
        12171
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2219": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2225": {
      "op": "SHL"
    },
    "2226": {
      "fn": "WorkLock.bid",
      "offset": [
        12103,
        12171
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2227": {
      "fn": "WorkLock.bid",
      "offset": [
        12103,
        12171
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2230": {
      "fn": "WorkLock.bid",
      "offset": [
        12103,
        12171
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2232": {
      "fn": "WorkLock.bid",
      "offset": [
        12103,
        12171
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2233": {
      "fn": "WorkLock.bid",
      "offset": [
        12103,
        12171
      ],
      "op": "ADD",
      "path": "15"
    },
    "2234": {
      "op": "MSTORE"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2239": {
      "op": "DUP3"
    },
    "2240": {
      "op": "ADD"
    },
    "2241": {
      "op": "MSTORE"
    },
    "2242": {
      "op": "PUSH32",
      "value": "0x42696464696E6720697320616C72656164792066696E69736865640000000000"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2277": {
      "op": "DUP3"
    },
    "2278": {
      "op": "ADD"
    },
    "2279": {
      "op": "MSTORE"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2282": {
      "op": "ADD"
    },
    "2283": {
      "fn": "WorkLock.bid",
      "offset": [
        12103,
        12171
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "2286": {
      "op": "JUMP"
    },
    "2287": {
      "fn": "WorkLock.bid",
      "offset": [
        12103,
        12171
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2288": {
      "fn": "WorkLock.bid",
      "offset": [
        12214,
        12224
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2289": {
      "fn": "WorkLock.bid",
      "offset": [
        12181,
        12202
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2291": {
      "fn": "WorkLock.bid",
      "offset": [
        12205,
        12225
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2292": {
      "fn": "WorkLock.bid",
      "offset": [
        12205,
        12225
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2293": {
      "fn": "WorkLock.bid",
      "offset": [
        12205,
        12225
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2294": {
      "fn": "WorkLock.bid",
      "offset": [
        12205,
        12213
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "2296": {
      "fn": "WorkLock.bid",
      "offset": [
        12205,
        12225
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2298": {
      "fn": "WorkLock.bid",
      "offset": [
        12205,
        12225
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2299": {
      "fn": "WorkLock.bid",
      "offset": [
        12205,
        12225
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2301": {
      "fn": "WorkLock.bid",
      "offset": [
        12205,
        12225
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2302": {
      "fn": "WorkLock.bid",
      "offset": [
        12205,
        12225
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2303": {
      "fn": "WorkLock.bid",
      "offset": [
        12261,
        12278
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2304": {
      "fn": "WorkLock.bid",
      "offset": [
        12261,
        12278
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2305": {
      "fn": "WorkLock.bid",
      "offset": [
        12257,
        12734
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAA7"
    },
    "2308": {
      "fn": "WorkLock.bid",
      "offset": [
        12257,
        12734
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2309": {
      "fn": "WorkLock.bid",
      "offset": [
        12320,
        12333
      ],
      "op": "PUSH32",
      "path": "15",
      "statement": 8,
      "value": "0x0"
    },
    "2342": {
      "fn": "WorkLock.bid",
      "offset": [
        12307,
        12316
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2343": {
      "fn": "WorkLock.bid",
      "offset": [
        12307,
        12333
      ],
      "op": "LT",
      "path": "15"
    },
    "2344": {
      "branch": 136,
      "fn": "WorkLock.bid",
      "offset": [
        12307,
        12333
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2345": {
      "fn": "WorkLock.bid",
      "offset": [
        12299,
        12366
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x974"
    },
    "2348": {
      "branch": 136,
      "fn": "WorkLock.bid",
      "offset": [
        12299,
        12366
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2349": {
      "fn": "WorkLock.bid",
      "offset": [
        12299,
        12366
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2351": {
      "fn": "WorkLock.bid",
      "offset": [
        12299,
        12366
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2352": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2358": {
      "op": "SHL"
    },
    "2359": {
      "fn": "WorkLock.bid",
      "offset": [
        12299,
        12366
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2360": {
      "fn": "WorkLock.bid",
      "offset": [
        12299,
        12366
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2363": {
      "fn": "WorkLock.bid",
      "offset": [
        12299,
        12366
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2365": {
      "fn": "WorkLock.bid",
      "offset": [
        12299,
        12366
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2366": {
      "fn": "WorkLock.bid",
      "offset": [
        12299,
        12366
      ],
      "op": "ADD",
      "path": "15"
    },
    "2367": {
      "op": "MSTORE"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2372": {
      "op": "DUP3"
    },
    "2373": {
      "op": "ADD"
    },
    "2374": {
      "op": "MSTORE"
    },
    "2375": {
      "op": "PUSH32",
      "value": "0x426964206D757374206265206174206C65617374206D696E696D756D00000000"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2410": {
      "op": "DUP3"
    },
    "2411": {
      "op": "ADD"
    },
    "2412": {
      "op": "MSTORE"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2415": {
      "op": "ADD"
    },
    "2416": {
      "fn": "WorkLock.bid",
      "offset": [
        12299,
        12366
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "2419": {
      "op": "JUMP"
    },
    "2420": {
      "fn": "WorkLock.bid",
      "offset": [
        12299,
        12366
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2421": {
      "fn": "WorkLock.bid",
      "offset": [
        12419,
        12443
      ],
      "op": "PUSH32",
      "path": "15",
      "statement": 9,
      "value": "0x0"
    },
    "2454": {
      "fn": "WorkLock.bid",
      "offset": [
        12405,
        12416
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2456": {
      "fn": "WorkLock.bid",
      "offset": [
        12405,
        12416
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2457": {
      "fn": "WorkLock.bid",
      "offset": [
        12405,
        12443
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9A2"
    },
    "2460": {
      "fn": "WorkLock.bid",
      "offset": [
        12405,
        12443
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2461": {
      "fn": "WorkLock.bid",
      "offset": [
        12405,
        12443
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2462": {
      "fn": "WorkLock.bid",
      "offset": [
        12405,
        12443
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AD7"
    },
    "2465": {
      "fn": "WorkLock.bid",
      "jump": "i",
      "offset": [
        12405,
        12443
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2466": {
      "fn": "WorkLock.bid",
      "offset": [
        12405,
        12443
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2467": {
      "fn": "WorkLock.bid",
      "offset": [
        12388,
        12395
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "2469": {
      "fn": "WorkLock.bid",
      "offset": [
        12388,
        12402
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2470": {
      "branch": 137,
      "fn": "WorkLock.bid",
      "offset": [
        12388,
        12443
      ],
      "op": "LT",
      "path": "15"
    },
    "2471": {
      "fn": "WorkLock.bid",
      "offset": [
        12380,
        12482
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9FD"
    },
    "2474": {
      "branch": 137,
      "fn": "WorkLock.bid",
      "offset": [
        12380,
        12482
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2475": {
      "fn": "WorkLock.bid",
      "offset": [
        12380,
        12482
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2477": {
      "fn": "WorkLock.bid",
      "offset": [
        12380,
        12482
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2478": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2484": {
      "op": "SHL"
    },
    "2485": {
      "fn": "WorkLock.bid",
      "offset": [
        12380,
        12482
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2486": {
      "fn": "WorkLock.bid",
      "offset": [
        12380,
        12482
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2487": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2489": {
      "fn": "WorkLock.bid",
      "offset": [
        12380,
        12482
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2491": {
      "fn": "WorkLock.bid",
      "offset": [
        12380,
        12482
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2492": {
      "fn": "WorkLock.bid",
      "offset": [
        12380,
        12482
      ],
      "op": "ADD",
      "path": "15"
    },
    "2493": {
      "op": "MSTORE"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2498": {
      "op": "DUP3"
    },
    "2499": {
      "op": "ADD"
    },
    "2500": {
      "op": "MSTORE"
    },
    "2501": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F75676820746F6B656E7320666F72206D6F7265206269646465"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2536": {
      "op": "DUP3"
    },
    "2537": {
      "op": "ADD"
    },
    "2538": {
      "op": "MSTORE"
    },
    "2539": {
      "op": "PUSH2",
      "value": "0x7273"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2544": {
      "op": "SHL"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2547": {
      "op": "DUP3"
    },
    "2548": {
      "op": "ADD"
    },
    "2549": {
      "op": "MSTORE"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2552": {
      "op": "ADD"
    },
    "2553": {
      "fn": "WorkLock.bid",
      "offset": [
        12380,
        12482
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "2556": {
      "op": "JUMP"
    },
    "2557": {
      "fn": "WorkLock.bid",
      "offset": [
        12380,
        12482
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2558": {
      "fn": "WorkLock.bid",
      "offset": [
        12517,
        12524
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 10,
      "value": "0x8"
    },
    "2560": {
      "fn": "WorkLock.bid",
      "offset": [
        12517,
        12531
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2561": {
      "fn": "WorkLock.bid",
      "offset": [
        12517,
        12531
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2562": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12506
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "2564": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12506
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2565": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12506
      ],
      "op": "ADD",
      "path": "15"
    },
    "2566": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12532
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2567": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12532
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2574": {
      "op": "SHL"
    },
    "2575": {
      "op": "SUB"
    },
    "2576": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12532
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2577": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12532
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2578": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12532
      ],
      "op": "AND",
      "path": "15"
    },
    "2579": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12532
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "2582": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12532
      ],
      "op": "MUL",
      "path": "15"
    },
    "2583": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "2590": {
      "op": "SHL"
    },
    "2591": {
      "op": "SUB"
    },
    "2592": {
      "op": "NOT"
    },
    "2593": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12532
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2594": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12532
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2595": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12532
      ],
      "op": "AND",
      "path": "15"
    },
    "2596": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12532
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2597": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12532
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2598": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12532
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2599": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12532
      ],
      "op": "OR",
      "path": "15"
    },
    "2600": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12532
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2601": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12532
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2602": {
      "fn": "WorkLock.bid",
      "offset": [
        12546,
        12570
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 11
    },
    "2603": {
      "fn": "WorkLock.bid",
      "offset": [
        12546,
        12570
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2604": {
      "fn": "WorkLock.bid",
      "offset": [
        12496,
        12506
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2606": {
      "fn": "WorkLock.bid",
      "offset": [
        12546,
        12570
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2607": {
      "fn": "WorkLock.bid",
      "offset": [
        12546,
        12570
      ],
      "op": "ADD",
      "path": "15"
    },
    "2608": {
      "fn": "WorkLock.bid",
      "offset": [
        12546,
        12570
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2609": {
      "fn": "WorkLock.bid",
      "offset": [
        12546,
        12570
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2612": {
      "fn": "WorkLock.bid",
      "offset": [
        12546,
        12570
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2613": {
      "fn": "WorkLock.bid",
      "offset": [
        12546,
        12570
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2614": {
      "fn": "WorkLock.bid",
      "offset": [
        12546,
        12570
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2615": {
      "fn": "WorkLock.bid",
      "offset": [
        12546,
        12570
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2616": {
      "fn": "WorkLock.bid",
      "offset": [
        12546,
        12570
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "2649": {
      "fn": "WorkLock.bid",
      "offset": [
        12546,
        12570
      ],
      "op": "ADD",
      "path": "15"
    },
    "2650": {
      "fn": "WorkLock.bid",
      "offset": [
        12546,
        12570
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2651": {
      "fn": "WorkLock.bid",
      "offset": [
        12546,
        12570
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2658": {
      "op": "SHL"
    },
    "2659": {
      "op": "SUB"
    },
    "2660": {
      "op": "NOT"
    },
    "2661": {
      "fn": "WorkLock.bid",
      "offset": [
        12546,
        12570
      ],
      "op": "AND",
      "path": "15"
    },
    "2662": {
      "fn": "WorkLock.bid",
      "offset": [
        12559,
        12569
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2663": {
      "fn": "WorkLock.bid",
      "offset": [
        12546,
        12570
      ],
      "op": "OR",
      "path": "15"
    },
    "2664": {
      "fn": "WorkLock.bid",
      "offset": [
        12546,
        12570
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2665": {
      "fn": "WorkLock.bid",
      "offset": [
        12546,
        12570
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2666": {
      "fn": "WorkLock.bid",
      "offset": [
        12601,
        12646
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 12,
      "value": "0xA9F"
    },
    "2669": {
      "fn": "WorkLock.bid",
      "offset": [
        12620,
        12645
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA96"
    },
    "2672": {
      "fn": "WorkLock.bid",
      "offset": [
        12632,
        12645
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "2705": {
      "fn": "WorkLock.bid",
      "offset": [
        12620,
        12629
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2706": {
      "fn": "WorkLock.bid",
      "offset": [
        12620,
        12645
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "2709": {
      "fn": "WorkLock.bid",
      "jump": "i",
      "offset": [
        12620,
        12645
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2710": {
      "fn": "WorkLock.bid",
      "offset": [
        12620,
        12645
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2711": {
      "fn": "WorkLock.bid",
      "offset": [
        12601,
        12615
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "2713": {
      "fn": "WorkLock.bid",
      "offset": [
        12601,
        12615
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2714": {
      "fn": "WorkLock.bid",
      "offset": [
        12601,
        12615
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2715": {
      "fn": "WorkLock.bid",
      "offset": [
        12601,
        12619
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2470"
    },
    "2718": {
      "fn": "WorkLock.bid",
      "jump": "i",
      "offset": [
        12601,
        12646
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2719": {
      "fn": "WorkLock.bid",
      "offset": [
        12601,
        12646
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2720": {
      "fn": "WorkLock.bid",
      "offset": [
        12584,
        12598
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "2722": {
      "fn": "WorkLock.bid",
      "offset": [
        12584,
        12646
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2723": {
      "fn": "WorkLock.bid",
      "offset": [
        12257,
        12734
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAB8"
    },
    "2726": {
      "fn": "WorkLock.bid",
      "offset": [
        12257,
        12734
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2727": {
      "fn": "WorkLock.bid",
      "offset": [
        12257,
        12734
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2728": {
      "fn": "WorkLock.bid",
      "offset": [
        12694,
        12708
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 13,
      "value": "0x5"
    },
    "2730": {
      "fn": "WorkLock.bid",
      "offset": [
        12694,
        12708
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2731": {
      "fn": "WorkLock.bid",
      "offset": [
        12694,
        12723
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAB4"
    },
    "2734": {
      "fn": "WorkLock.bid",
      "offset": [
        12694,
        12723
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2735": {
      "fn": "WorkLock.bid",
      "offset": [
        12713,
        12722
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2736": {
      "fn": "WorkLock.bid",
      "offset": [
        12694,
        12712
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2470"
    },
    "2739": {
      "fn": "WorkLock.bid",
      "jump": "i",
      "offset": [
        12694,
        12723
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2740": {
      "fn": "WorkLock.bid",
      "offset": [
        12694,
        12723
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2741": {
      "fn": "WorkLock.bid",
      "offset": [
        12677,
        12691
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "2743": {
      "fn": "WorkLock.bid",
      "offset": [
        12677,
        12723
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2744": {
      "fn": "WorkLock.bid",
      "offset": [
        12257,
        12734
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2745": {
      "fn": "WorkLock.bid",
      "offset": [
        12764,
        12781
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 14
    },
    "2746": {
      "fn": "WorkLock.bid",
      "offset": [
        12764,
        12781
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2747": {
      "fn": "WorkLock.bid",
      "offset": [
        12764,
        12796
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAC4"
    },
    "2750": {
      "fn": "WorkLock.bid",
      "offset": [
        12764,
        12796
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2751": {
      "fn": "WorkLock.bid",
      "offset": [
        12786,
        12795
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2752": {
      "fn": "WorkLock.bid",
      "offset": [
        12764,
        12785
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2470"
    },
    "2755": {
      "fn": "WorkLock.bid",
      "jump": "i",
      "offset": [
        12764,
        12796
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2756": {
      "fn": "WorkLock.bid",
      "offset": [
        12764,
        12796
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2757": {
      "fn": "WorkLock.bid",
      "offset": [
        12744,
        12796
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2758": {
      "fn": "WorkLock.bid",
      "offset": [
        12744,
        12796
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2759": {
      "fn": "WorkLock.bid",
      "offset": [
        12811,
        12837
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 15,
      "value": "0x40"
    },
    "2761": {
      "fn": "WorkLock.bid",
      "offset": [
        12811,
        12837
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2762": {
      "fn": "WorkLock.bid",
      "offset": [
        12827,
        12836
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2763": {
      "op": "DUP2"
    },
    "2764": {
      "op": "MSTORE"
    },
    "2765": {
      "fn": "WorkLock.bid",
      "offset": [
        12815,
        12825
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2766": {
      "fn": "WorkLock.bid",
      "offset": [
        12815,
        12825
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2767": {
      "fn": "WorkLock.bid",
      "offset": [
        12811,
        12837
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xE684A55F31B79ECA403DF938249029212A5925EC6BE8012E099B45BC1019E5D2"
    },
    "2800": {
      "fn": "WorkLock.bid",
      "offset": [
        12811,
        12837
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2803": {
      "op": "ADD"
    },
    "2804": {
      "fn": "WorkLock.bid",
      "offset": [
        12811,
        12837
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2805": {
      "fn": "WorkLock.bid",
      "offset": [
        12811,
        12837
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2807": {
      "fn": "WorkLock.bid",
      "offset": [
        12811,
        12837
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2808": {
      "fn": "WorkLock.bid",
      "offset": [
        12811,
        12837
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2809": {
      "fn": "WorkLock.bid",
      "offset": [
        12811,
        12837
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2810": {
      "fn": "WorkLock.bid",
      "offset": [
        12811,
        12837
      ],
      "op": "SUB",
      "path": "15"
    },
    "2811": {
      "fn": "WorkLock.bid",
      "offset": [
        12811,
        12837
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2812": {
      "fn": "WorkLock.bid",
      "offset": [
        12811,
        12837
      ],
      "op": "LOG2",
      "path": "15"
    },
    "2813": {
      "fn": "WorkLock.bid",
      "offset": [
        12016,
        12844
      ],
      "op": "POP",
      "path": "15"
    },
    "2814": {
      "fn": "WorkLock.bid",
      "jump": "o",
      "offset": [
        11984,
        12844
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2815": {
      "fn": "WorkLock.claim",
      "offset": [
        20335,
        20992
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2816": {
      "fn": "WorkLock.claim",
      "offset": [
        20370,
        20391
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2818": {
      "fn": "WorkLock.claim",
      "offset": [
        20411,
        20432
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 16,
      "value": "0xB09"
    },
    "2821": {
      "fn": "WorkLock.claim",
      "offset": [
        20411,
        20430
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13C7"
    },
    "2824": {
      "fn": "WorkLock.claim",
      "jump": "i",
      "offset": [
        20411,
        20432
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2825": {
      "branch": 138,
      "fn": "WorkLock.claim",
      "offset": [
        20411,
        20432
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2826": {
      "fn": "WorkLock.claim",
      "offset": [
        20403,
        20470
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB5F"
    },
    "2829": {
      "branch": 138,
      "fn": "WorkLock.claim",
      "offset": [
        20403,
        20470
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2830": {
      "fn": "WorkLock.claim",
      "offset": [
        20403,
        20470
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2832": {
      "fn": "WorkLock.claim",
      "offset": [
        20403,
        20470
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2833": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2839": {
      "op": "SHL"
    },
    "2840": {
      "fn": "WorkLock.claim",
      "offset": [
        20403,
        20470
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2841": {
      "fn": "WorkLock.claim",
      "offset": [
        20403,
        20470
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2844": {
      "fn": "WorkLock.claim",
      "offset": [
        20403,
        20470
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2846": {
      "fn": "WorkLock.claim",
      "offset": [
        20403,
        20470
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2847": {
      "fn": "WorkLock.claim",
      "offset": [
        20403,
        20470
      ],
      "op": "ADD",
      "path": "15"
    },
    "2848": {
      "op": "MSTORE"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2853": {
      "op": "DUP3"
    },
    "2854": {
      "op": "ADD"
    },
    "2855": {
      "op": "MSTORE"
    },
    "2856": {
      "op": "PUSH32",
      "value": "0x436C61696D696E6720686173206E6F74206265656E20656E61626C6564207965"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2891": {
      "op": "DUP3"
    },
    "2892": {
      "op": "ADD"
    },
    "2893": {
      "op": "MSTORE"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "2898": {
      "op": "SHL"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2901": {
      "op": "DUP3"
    },
    "2902": {
      "op": "ADD"
    },
    "2903": {
      "op": "MSTORE"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2906": {
      "op": "ADD"
    },
    "2907": {
      "fn": "WorkLock.claim",
      "offset": [
        20403,
        20470
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "2910": {
      "op": "JUMP"
    },
    "2911": {
      "fn": "WorkLock.claim",
      "offset": [
        20403,
        20470
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2912": {
      "fn": "WorkLock.claim",
      "offset": [
        20513,
        20523
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2913": {
      "fn": "WorkLock.claim",
      "offset": [
        20480,
        20501
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2915": {
      "fn": "WorkLock.claim",
      "offset": [
        20504,
        20524
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2916": {
      "fn": "WorkLock.claim",
      "offset": [
        20504,
        20524
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2917": {
      "fn": "WorkLock.claim",
      "offset": [
        20504,
        20524
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2918": {
      "fn": "WorkLock.claim",
      "offset": [
        20504,
        20512
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "2920": {
      "fn": "WorkLock.claim",
      "offset": [
        20504,
        20524
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2922": {
      "fn": "WorkLock.claim",
      "offset": [
        20504,
        20524
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2923": {
      "fn": "WorkLock.claim",
      "offset": [
        20504,
        20524
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2925": {
      "fn": "WorkLock.claim",
      "offset": [
        20504,
        20524
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2926": {
      "fn": "WorkLock.claim",
      "offset": [
        20504,
        20524
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2927": {
      "fn": "WorkLock.claim",
      "offset": [
        20543,
        20555
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 17,
      "value": "0x2"
    },
    "2929": {
      "fn": "WorkLock.claim",
      "offset": [
        20543,
        20555
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2930": {
      "fn": "WorkLock.claim",
      "offset": [
        20543,
        20555
      ],
      "op": "ADD",
      "path": "15"
    },
    "2931": {
      "fn": "WorkLock.claim",
      "offset": [
        20543,
        20555
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2932": {
      "fn": "WorkLock.claim",
      "offset": [
        20543,
        20555
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2934": {
      "fn": "WorkLock.claim",
      "offset": [
        20543,
        20555
      ],
      "op": "AND",
      "path": "15"
    },
    "2935": {
      "branch": 139,
      "fn": "WorkLock.claim",
      "offset": [
        20542,
        20555
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2936": {
      "fn": "WorkLock.claim",
      "offset": [
        20534,
        20586
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBC3"
    },
    "2939": {
      "branch": 139,
      "fn": "WorkLock.claim",
      "offset": [
        20534,
        20586
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2940": {
      "fn": "WorkLock.claim",
      "offset": [
        20534,
        20586
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2942": {
      "fn": "WorkLock.claim",
      "offset": [
        20534,
        20586
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2943": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2949": {
      "op": "SHL"
    },
    "2950": {
      "fn": "WorkLock.claim",
      "offset": [
        20534,
        20586
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2951": {
      "fn": "WorkLock.claim",
      "offset": [
        20534,
        20586
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2954": {
      "fn": "WorkLock.claim",
      "offset": [
        20534,
        20586
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2956": {
      "fn": "WorkLock.claim",
      "offset": [
        20534,
        20586
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2957": {
      "fn": "WorkLock.claim",
      "offset": [
        20534,
        20586
      ],
      "op": "ADD",
      "path": "15"
    },
    "2958": {
      "op": "MSTORE"
    },
    "2959": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2963": {
      "op": "DUP3"
    },
    "2964": {
      "op": "ADD"
    },
    "2965": {
      "op": "MSTORE"
    },
    "2966": {
      "op": "PUSH32",
      "value": "0x546F6B656E732061726520616C726561647920636C61696D6564000000000000"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3001": {
      "op": "DUP3"
    },
    "3002": {
      "op": "ADD"
    },
    "3003": {
      "op": "MSTORE"
    },
    "3004": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3006": {
      "op": "ADD"
    },
    "3007": {
      "fn": "WorkLock.claim",
      "offset": [
        20534,
        20586
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "3010": {
      "op": "JUMP"
    },
    "3011": {
      "fn": "WorkLock.claim",
      "offset": [
        20534,
        20586
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3012": {
      "fn": "WorkLock.claim",
      "offset": [
        20624,
        20641
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 18
    },
    "3013": {
      "fn": "WorkLock.claim",
      "offset": [
        20624,
        20641
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3014": {
      "fn": "WorkLock.claim",
      "offset": [
        20612,
        20642
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBCE"
    },
    "3017": {
      "fn": "WorkLock.claim",
      "offset": [
        20612,
        20642
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3018": {
      "fn": "WorkLock.claim",
      "offset": [
        20612,
        20623
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16BD"
    },
    "3021": {
      "fn": "WorkLock.claim",
      "jump": "i",
      "offset": [
        20612,
        20642
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3022": {
      "fn": "WorkLock.claim",
      "offset": [
        20612,
        20642
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3023": {
      "fn": "WorkLock.claim",
      "offset": [
        20596,
        20642
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3024": {
      "fn": "WorkLock.claim",
      "offset": [
        20596,
        20642
      ],
      "op": "POP",
      "path": "15"
    },
    "3025": {
      "fn": "WorkLock.claim",
      "offset": [
        20676,
        20677
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 19,
      "value": "0x0"
    },
    "3027": {
      "fn": "WorkLock.claim",
      "offset": [
        20660,
        20673
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3028": {
      "branch": 140,
      "fn": "WorkLock.claim",
      "offset": [
        20660,
        20677
      ],
      "op": "GT",
      "path": "15"
    },
    "3029": {
      "fn": "WorkLock.claim",
      "offset": [
        20652,
        20698
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC13"
    },
    "3032": {
      "branch": 140,
      "fn": "WorkLock.claim",
      "offset": [
        20652,
        20698
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3033": {
      "fn": "WorkLock.claim",
      "offset": [
        20652,
        20698
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3035": {
      "fn": "WorkLock.claim",
      "offset": [
        20652,
        20698
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3036": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3042": {
      "op": "SHL"
    },
    "3043": {
      "fn": "WorkLock.claim",
      "offset": [
        20652,
        20698
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3044": {
      "fn": "WorkLock.claim",
      "offset": [
        20652,
        20698
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3047": {
      "fn": "WorkLock.claim",
      "offset": [
        20652,
        20698
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3049": {
      "fn": "WorkLock.claim",
      "offset": [
        20652,
        20698
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3050": {
      "fn": "WorkLock.claim",
      "offset": [
        20652,
        20698
      ],
      "op": "ADD",
      "path": "15"
    },
    "3051": {
      "op": "MSTORE"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3054": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3056": {
      "op": "DUP3"
    },
    "3057": {
      "op": "ADD"
    },
    "3058": {
      "op": "MSTORE"
    },
    "3059": {
      "op": "PUSH16",
      "value": "0x4E6F7468696E6720746F20636C61696D"
    },
    "3076": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3078": {
      "op": "SHL"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3081": {
      "op": "DUP3"
    },
    "3082": {
      "op": "ADD"
    },
    "3083": {
      "op": "MSTORE"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3086": {
      "op": "ADD"
    },
    "3087": {
      "fn": "WorkLock.claim",
      "offset": [
        20652,
        20698
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "3090": {
      "op": "JUMP"
    },
    "3091": {
      "fn": "WorkLock.claim",
      "offset": [
        20652,
        20698
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3092": {
      "fn": "WorkLock.claim",
      "offset": [
        20709,
        20721
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 20,
      "value": "0x2"
    },
    "3094": {
      "fn": "WorkLock.claim",
      "offset": [
        20709,
        20721
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3095": {
      "fn": "WorkLock.claim",
      "offset": [
        20709,
        20721
      ],
      "op": "ADD",
      "path": "15"
    },
    "3096": {
      "fn": "WorkLock.claim",
      "offset": [
        20709,
        20728
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3097": {
      "fn": "WorkLock.claim",
      "offset": [
        20709,
        20728
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3100": {
      "op": "NOT"
    },
    "3101": {
      "fn": "WorkLock.claim",
      "offset": [
        20709,
        20728
      ],
      "op": "AND",
      "path": "15"
    },
    "3102": {
      "fn": "WorkLock.claim",
      "offset": [
        20724,
        20728
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3104": {
      "fn": "WorkLock.claim",
      "offset": [
        20709,
        20728
      ],
      "op": "OR",
      "path": "15"
    },
    "3105": {
      "fn": "WorkLock.claim",
      "offset": [
        20709,
        20728
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3106": {
      "fn": "WorkLock.claim",
      "offset": [
        20709,
        20728
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3107": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 21,
      "value": "0x40"
    },
    "3109": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3110": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "3115": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3117": {
      "op": "SHL"
    },
    "3118": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3119": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3126": {
      "op": "SHL"
    },
    "3127": {
      "op": "SUB"
    },
    "3128": {
      "fn": "WorkLock.claim",
      "offset": [
        20760,
        20766
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "3161": {
      "op": "DUP2"
    },
    "3162": {
      "op": "AND"
    },
    "3163": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3165": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3166": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "ADD",
      "path": "15"
    },
    "3167": {
      "op": "MSTORE"
    },
    "3168": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3170": {
      "op": "DUP3"
    },
    "3171": {
      "op": "ADD"
    },
    "3172": {
      "op": "DUP5"
    },
    "3173": {
      "op": "SWAP1"
    },
    "3174": {
      "op": "MSTORE"
    },
    "3175": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20743
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "3208": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20751
      ],
      "op": "AND",
      "path": "15"
    },
    "3209": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20751
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3210": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20751
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x95EA7B3"
    },
    "3215": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20751
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3218": {
      "op": "ADD"
    },
    "3219": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3221": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3223": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3224": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3225": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3226": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "SUB",
      "path": "15"
    },
    "3227": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3228": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3230": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3231": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "GAS",
      "path": "15"
    },
    "3232": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "CALL",
      "path": "15"
    },
    "3233": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3234": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3235": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3236": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCB1"
    },
    "3239": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3240": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3241": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3243": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3244": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "3245": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3246": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3248": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3249": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3250": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "POP",
      "path": "15"
    },
    "3251": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "POP",
      "path": "15"
    },
    "3252": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "POP",
      "path": "15"
    },
    "3253": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "POP",
      "path": "15"
    },
    "3254": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3256": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3257": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3258": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "3260": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "NOT",
      "path": "15"
    },
    "3261": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "3263": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3264": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "ADD",
      "path": "15"
    },
    "3265": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "AND",
      "path": "15"
    },
    "3266": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3267": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "ADD",
      "path": "15"
    },
    "3268": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3269": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3271": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3272": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "POP",
      "path": "15"
    },
    "3273": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3274": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "ADD",
      "path": "15"
    },
    "3275": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3276": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCD5"
    },
    "3279": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3280": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3281": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AF9"
    },
    "3284": {
      "fn": "WorkLock.claim",
      "jump": "i",
      "offset": [
        20738,
        20783
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3285": {
      "fn": "WorkLock.claim",
      "offset": [
        20738,
        20783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3286": {
      "op": "POP"
    },
    "3287": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 22,
      "value": "0x40"
    },
    "3289": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3290": {
      "op": "PUSH4",
      "value": "0xB8F81E1"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3297": {
      "op": "SHL"
    },
    "3298": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3299": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3300": {
      "fn": "WorkLock.claim",
      "offset": [
        20820,
        20830
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3301": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3303": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3304": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "ADD",
      "path": "15"
    },
    "3305": {
      "op": "MSTORE"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3308": {
      "op": "DUP2"
    },
    "3309": {
      "op": "ADD"
    },
    "3310": {
      "op": "DUP4"
    },
    "3311": {
      "op": "SWAP1"
    },
    "3312": {
      "op": "MSTORE"
    },
    "3313": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "3316": {
      "fn": "WorkLock.claim",
      "offset": [
        20847,
        20861
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "3349": {
      "op": "AND"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3352": {
      "op": "DUP3"
    },
    "3353": {
      "op": "ADD"
    },
    "3354": {
      "op": "MSTORE"
    },
    "3355": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20799
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "3388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3394": {
      "op": "SHL"
    },
    "3395": {
      "op": "SUB"
    },
    "3396": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20819
      ],
      "op": "AND",
      "path": "15"
    },
    "3397": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20819
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3398": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20819
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x171F03C2"
    },
    "3403": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20819
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3406": {
      "op": "ADD"
    },
    "3407": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3409": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3411": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3412": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3413": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3414": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "SUB",
      "path": "15"
    },
    "3415": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3416": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3418": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3419": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3420": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "3421": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3422": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3423": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3424": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD68"
    },
    "3427": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3428": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3430": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3431": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3432": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3433": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "POP",
      "path": "15"
    },
    "3434": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "GAS",
      "path": "15"
    },
    "3435": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "CALL",
      "path": "15"
    },
    "3436": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3437": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3438": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3439": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD7C"
    },
    "3442": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3443": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3444": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3446": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3447": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "3448": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3449": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3451": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3452": {
      "fn": "WorkLock.claim",
      "offset": [
        20793,
        20862
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3453": {
      "op": "POP"
    },
    "3454": {
      "op": "POP"
    },
    "3455": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 23,
      "value": "0x40"
    },
    "3457": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3458": {
      "op": "PUSH4",
      "value": "0x12796B75"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3465": {
      "op": "SHL"
    },
    "3466": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3467": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3468": {
      "fn": "WorkLock.claim",
      "offset": [
        20919,
        20929
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3469": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3471": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3472": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "ADD",
      "path": "15"
    },
    "3473": {
      "op": "MSTORE"
    },
    "3474": {
      "fn": "WorkLock.claim",
      "offset": [
        20931,
        20935
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3478": {
      "op": "DUP3"
    },
    "3479": {
      "op": "ADD"
    },
    "3480": {
      "op": "MSTORE"
    },
    "3481": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20899
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3520": {
      "op": "SHL"
    },
    "3521": {
      "op": "SUB"
    },
    "3522": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20918
      ],
      "op": "AND",
      "path": "15"
    },
    "3523": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20918
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3524": {
      "op": "POP"
    },
    "3525": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20918
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x49E5ADD4"
    },
    "3530": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20918
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3531": {
      "op": "POP"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3534": {
      "op": "ADD"
    },
    "3535": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3537": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3539": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3540": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3541": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3542": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "SUB",
      "path": "15"
    },
    "3543": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3544": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3546": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3547": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "GAS",
      "path": "15"
    },
    "3548": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "CALL",
      "path": "15"
    },
    "3549": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3550": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3551": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3552": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDED"
    },
    "3555": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3556": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3557": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3559": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3560": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "3561": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3562": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3564": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3565": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3566": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "POP",
      "path": "15"
    },
    "3567": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "POP",
      "path": "15"
    },
    "3568": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "POP",
      "path": "15"
    },
    "3569": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "POP",
      "path": "15"
    },
    "3570": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3572": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3573": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3574": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "3576": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "NOT",
      "path": "15"
    },
    "3577": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "3579": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3580": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "ADD",
      "path": "15"
    },
    "3581": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "AND",
      "path": "15"
    },
    "3582": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3583": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "ADD",
      "path": "15"
    },
    "3584": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3585": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3587": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3588": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "POP",
      "path": "15"
    },
    "3589": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3590": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "ADD",
      "path": "15"
    },
    "3591": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3592": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE11"
    },
    "3595": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3596": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3597": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A91"
    },
    "3600": {
      "fn": "WorkLock.claim",
      "jump": "i",
      "offset": [
        20893,
        20936
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3601": {
      "fn": "WorkLock.claim",
      "offset": [
        20893,
        20936
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3602": {
      "fn": "WorkLock.claim",
      "offset": [
        20872,
        20890
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3604": {
      "fn": "WorkLock.claim",
      "offset": [
        20872,
        20890
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3605": {
      "fn": "WorkLock.claim",
      "offset": [
        20872,
        20890
      ],
      "op": "ADD",
      "path": "15"
    },
    "3606": {
      "fn": "WorkLock.claim",
      "offset": [
        20872,
        20936
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3607": {
      "fn": "WorkLock.claim",
      "offset": [
        20951,
        20985
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 24,
      "value": "0x40"
    },
    "3609": {
      "fn": "WorkLock.claim",
      "offset": [
        20951,
        20985
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3610": {
      "op": "DUP3"
    },
    "3611": {
      "op": "DUP2"
    },
    "3612": {
      "op": "MSTORE"
    },
    "3613": {
      "fn": "WorkLock.claim",
      "offset": [
        20959,
        20969
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3614": {
      "fn": "WorkLock.claim",
      "offset": [
        20959,
        20969
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3615": {
      "fn": "WorkLock.claim",
      "offset": [
        20951,
        20985
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A"
    },
    "3648": {
      "fn": "WorkLock.claim",
      "offset": [
        20951,
        20985
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3651": {
      "op": "ADD"
    },
    "3652": {
      "fn": "WorkLock.claim",
      "offset": [
        20951,
        20985
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3654": {
      "fn": "WorkLock.claim",
      "offset": [
        20951,
        20985
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3655": {
      "fn": "WorkLock.claim",
      "offset": [
        20951,
        20985
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3656": {
      "fn": "WorkLock.claim",
      "offset": [
        20951,
        20985
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3657": {
      "fn": "WorkLock.claim",
      "offset": [
        20951,
        20985
      ],
      "op": "SUB",
      "path": "15"
    },
    "3658": {
      "fn": "WorkLock.claim",
      "offset": [
        20951,
        20985
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3659": {
      "fn": "WorkLock.claim",
      "offset": [
        20951,
        20985
      ],
      "op": "LOG2",
      "path": "15"
    },
    "3660": {
      "fn": "WorkLock.claim",
      "offset": [
        20393,
        20992
      ],
      "op": "POP",
      "path": "15"
    },
    "3661": {
      "fn": "WorkLock.claim",
      "offset": [
        20335,
        20992
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3662": {
      "fn": "WorkLock.claim",
      "jump": "o",
      "offset": [
        20335,
        20992
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3663": {
      "fn": "WorkLock.refund",
      "offset": [
        21819,
        22665
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3664": {
      "fn": "WorkLock.refund",
      "offset": [
        21917,
        21927
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3665": {
      "fn": "WorkLock.refund",
      "offset": [
        21855,
        21872
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3667": {
      "fn": "WorkLock.refund",
      "offset": [
        21908,
        21928
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3668": {
      "fn": "WorkLock.refund",
      "offset": [
        21908,
        21928
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3669": {
      "fn": "WorkLock.refund",
      "offset": [
        21908,
        21928
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3670": {
      "fn": "WorkLock.refund",
      "offset": [
        21908,
        21916
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "3672": {
      "fn": "WorkLock.refund",
      "offset": [
        21908,
        21928
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3674": {
      "fn": "WorkLock.refund",
      "offset": [
        21908,
        21928
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3675": {
      "fn": "WorkLock.refund",
      "offset": [
        21908,
        21928
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3677": {
      "fn": "WorkLock.refund",
      "offset": [
        21908,
        21928
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3678": {
      "fn": "WorkLock.refund",
      "offset": [
        21908,
        21928
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3679": {
      "fn": "WorkLock.refund",
      "offset": [
        21946,
        21958
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 25,
      "value": "0x2"
    },
    "3681": {
      "fn": "WorkLock.refund",
      "offset": [
        21946,
        21958
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3682": {
      "fn": "WorkLock.refund",
      "offset": [
        21946,
        21958
      ],
      "op": "ADD",
      "path": "15"
    },
    "3683": {
      "fn": "WorkLock.refund",
      "offset": [
        21946,
        21958
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3684": {
      "fn": "WorkLock.refund",
      "offset": [
        21946,
        21958
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "3686": {
      "branch": 141,
      "fn": "WorkLock.refund",
      "offset": [
        21946,
        21958
      ],
      "op": "AND",
      "path": "15"
    },
    "3687": {
      "fn": "WorkLock.refund",
      "offset": [
        21938,
        21999
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEBE"
    },
    "3690": {
      "branch": 141,
      "fn": "WorkLock.refund",
      "offset": [
        21938,
        21999
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3691": {
      "fn": "WorkLock.refund",
      "offset": [
        21938,
        21999
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3693": {
      "fn": "WorkLock.refund",
      "offset": [
        21938,
        21999
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3694": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3700": {
      "op": "SHL"
    },
    "3701": {
      "fn": "WorkLock.refund",
      "offset": [
        21938,
        21999
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3702": {
      "fn": "WorkLock.refund",
      "offset": [
        21938,
        21999
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3705": {
      "fn": "WorkLock.refund",
      "offset": [
        21938,
        21999
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3707": {
      "fn": "WorkLock.refund",
      "offset": [
        21938,
        21999
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3708": {
      "fn": "WorkLock.refund",
      "offset": [
        21938,
        21999
      ],
      "op": "ADD",
      "path": "15"
    },
    "3709": {
      "op": "MSTORE"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3712": {
      "op": "DUP1"
    },
    "3713": {
      "op": "DUP3"
    },
    "3714": {
      "op": "ADD"
    },
    "3715": {
      "op": "MSTORE"
    },
    "3716": {
      "op": "PUSH32",
      "value": "0x546F6B656E73206D75737420626520636C61696D6564206265666F7265207265"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3751": {
      "op": "DUP3"
    },
    "3752": {
      "op": "ADD"
    },
    "3753": {
      "op": "MSTORE"
    },
    "3754": {
      "op": "PUSH4",
      "value": "0x199D5B99"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3761": {
      "op": "SHL"
    },
    "3762": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3764": {
      "op": "DUP3"
    },
    "3765": {
      "op": "ADD"
    },
    "3766": {
      "op": "MSTORE"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3769": {
      "op": "ADD"
    },
    "3770": {
      "fn": "WorkLock.refund",
      "offset": [
        21938,
        21999
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "3773": {
      "op": "JUMP"
    },
    "3774": {
      "fn": "WorkLock.refund",
      "offset": [
        21938,
        21999
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3775": {
      "fn": "WorkLock.refund",
      "offset": [
        22021,
        22051
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 26,
      "value": "0xEC7"
    },
    "3778": {
      "fn": "WorkLock.refund",
      "offset": [
        22040,
        22050
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3779": {
      "fn": "WorkLock.refund",
      "offset": [
        22021,
        22039
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1214"
    },
    "3782": {
      "fn": "WorkLock.refund",
      "jump": "i",
      "offset": [
        22021,
        22051
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3783": {
      "fn": "WorkLock.refund",
      "offset": [
        22021,
        22051
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3784": {
      "fn": "WorkLock.refund",
      "offset": [
        22009,
        22051
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3785": {
      "fn": "WorkLock.refund",
      "offset": [
        22009,
        22051
      ],
      "op": "POP",
      "path": "15"
    },
    "3786": {
      "fn": "WorkLock.refund",
      "offset": [
        22081,
        22082
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 27,
      "value": "0x0"
    },
    "3788": {
      "fn": "WorkLock.refund",
      "offset": [
        22069,
        22078
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3789": {
      "branch": 142,
      "fn": "WorkLock.refund",
      "offset": [
        22069,
        22082
      ],
      "op": "GT",
      "path": "15"
    },
    "3790": {
      "fn": "WorkLock.refund",
      "offset": [
        22061,
        22152
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF49"
    },
    "3793": {
      "branch": 142,
      "fn": "WorkLock.refund",
      "offset": [
        22061,
        22152
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3794": {
      "fn": "WorkLock.refund",
      "offset": [
        22061,
        22152
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3796": {
      "fn": "WorkLock.refund",
      "offset": [
        22061,
        22152
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3797": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3803": {
      "op": "SHL"
    },
    "3804": {
      "fn": "WorkLock.refund",
      "offset": [
        22061,
        22152
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3805": {
      "fn": "WorkLock.refund",
      "offset": [
        22061,
        22152
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3808": {
      "fn": "WorkLock.refund",
      "offset": [
        22061,
        22152
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3810": {
      "fn": "WorkLock.refund",
      "offset": [
        22061,
        22152
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3811": {
      "fn": "WorkLock.refund",
      "offset": [
        22061,
        22152
      ],
      "op": "ADD",
      "path": "15"
    },
    "3812": {
      "op": "MSTORE"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3817": {
      "op": "DUP3"
    },
    "3818": {
      "op": "ADD"
    },
    "3819": {
      "op": "MSTORE"
    },
    "3820": {
      "op": "PUSH32",
      "value": "0x4E6F7468696E6720746F20726566756E643A207468657265206973206E6F2045"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3855": {
      "op": "DUP3"
    },
    "3856": {
      "op": "ADD"
    },
    "3857": {
      "op": "MSTORE"
    },
    "3858": {
      "op": "PUSH32",
      "value": "0x544820746F20726566756E64206F72206E6F20636F6D706C6574656420776F72"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3893": {
      "op": "DUP3"
    },
    "3894": {
      "op": "ADD"
    },
    "3895": {
      "op": "MSTORE"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0x6B"
    },
    "3898": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3900": {
      "op": "SHL"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3903": {
      "op": "DUP3"
    },
    "3904": {
      "op": "ADD"
    },
    "3905": {
      "op": "MSTORE"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3908": {
      "op": "ADD"
    },
    "3909": {
      "fn": "WorkLock.refund",
      "offset": [
        22061,
        22152
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "3912": {
      "op": "JUMP"
    },
    "3913": {
      "fn": "WorkLock.refund",
      "offset": [
        22061,
        22152
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3914": {
      "fn": "WorkLock.refund",
      "offset": [
        22180,
        22197
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3915": {
      "fn": "WorkLock.refund",
      "offset": [
        22180,
        22197
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3916": {
      "fn": "WorkLock.refund",
      "offset": [
        22167,
        22197
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3917": {
      "branch": 143,
      "fn": "WorkLock.refund",
      "offset": [
        22167,
        22197
      ],
      "op": "EQ",
      "path": "15"
    },
    "3918": {
      "fn": "WorkLock.refund",
      "offset": [
        22163,
        22268
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3919": {
      "fn": "WorkLock.refund",
      "offset": [
        22163,
        22268
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFE5"
    },
    "3922": {
      "branch": 143,
      "fn": "WorkLock.refund",
      "offset": [
        22163,
        22268
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3923": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 28,
      "value": "0x40"
    },
    "3925": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3926": {
      "op": "PUSH4",
      "value": "0x12796B75"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3933": {
      "op": "SHL"
    },
    "3934": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3935": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3936": {
      "fn": "WorkLock.refund",
      "offset": [
        22239,
        22249
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3937": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3939": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3940": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "ADD",
      "path": "15"
    },
    "3941": {
      "op": "MSTORE"
    },
    "3942": {
      "fn": "WorkLock.refund",
      "offset": [
        22251,
        22256
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3944": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3946": {
      "op": "DUP3"
    },
    "3947": {
      "op": "ADD"
    },
    "3948": {
      "op": "MSTORE"
    },
    "3949": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22219
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3988": {
      "op": "SHL"
    },
    "3989": {
      "op": "SUB"
    },
    "3990": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22238
      ],
      "op": "AND",
      "path": "15"
    },
    "3991": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22238
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3992": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22238
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x49E5ADD4"
    },
    "3997": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22238
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4000": {
      "op": "ADD"
    },
    "4001": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4003": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4005": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4006": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4007": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4008": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "SUB",
      "path": "15"
    },
    "4009": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4010": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4012": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4013": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "GAS",
      "path": "15"
    },
    "4014": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "CALL",
      "path": "15"
    },
    "4015": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4016": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4017": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4018": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFBF"
    },
    "4021": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4022": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4023": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4025": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4026": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "4027": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4028": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4030": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4031": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4032": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "POP",
      "path": "15"
    },
    "4033": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "POP",
      "path": "15"
    },
    "4034": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "POP",
      "path": "15"
    },
    "4035": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "POP",
      "path": "15"
    },
    "4036": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4038": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4039": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4040": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "4042": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "NOT",
      "path": "15"
    },
    "4043": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "4045": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4046": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "ADD",
      "path": "15"
    },
    "4047": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "AND",
      "path": "15"
    },
    "4048": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4049": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "ADD",
      "path": "15"
    },
    "4050": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4051": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4053": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4054": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "POP",
      "path": "15"
    },
    "4055": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4056": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "ADD",
      "path": "15"
    },
    "4057": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4058": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFE3"
    },
    "4061": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4062": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4063": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A91"
    },
    "4066": {
      "fn": "WorkLock.refund",
      "jump": "i",
      "offset": [
        22213,
        22257
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4067": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4068": {
      "fn": "WorkLock.refund",
      "offset": [
        22213,
        22257
      ],
      "op": "POP",
      "path": "15"
    },
    "4069": {
      "fn": "WorkLock.refund",
      "offset": [
        22163,
        22268
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4070": {
      "fn": "WorkLock.refund",
      "offset": [
        22297,
        22314
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 29
    },
    "4071": {
      "fn": "WorkLock.refund",
      "offset": [
        22297,
        22314
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4072": {
      "fn": "WorkLock.refund",
      "offset": [
        22297,
        22329
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFF1"
    },
    "4075": {
      "fn": "WorkLock.refund",
      "offset": [
        22297,
        22329
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4076": {
      "fn": "WorkLock.refund",
      "offset": [
        22319,
        22328
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4077": {
      "fn": "WorkLock.refund",
      "offset": [
        22297,
        22318
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22DE"
    },
    "4080": {
      "fn": "WorkLock.refund",
      "jump": "i",
      "offset": [
        22297,
        22329
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4081": {
      "fn": "WorkLock.refund",
      "offset": [
        22297,
        22329
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4082": {
      "fn": "WorkLock.refund",
      "offset": [
        22277,
        22329
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4083": {
      "fn": "WorkLock.refund",
      "offset": [
        22277,
        22329
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4084": {
      "fn": "WorkLock.refund",
      "offset": [
        22277,
        22329
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4085": {
      "fn": "WorkLock.refund",
      "offset": [
        22277,
        22294
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4087": {
      "fn": "WorkLock.refund",
      "offset": [
        22277,
        22294
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4088": {
      "fn": "WorkLock.refund",
      "offset": [
        22441,
        22480
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1002"
    },
    "4091": {
      "fn": "WorkLock.refund",
      "offset": [
        22441,
        22480
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4092": {
      "fn": "WorkLock.refund",
      "offset": [
        22451,
        22460
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4093": {
      "fn": "WorkLock.refund",
      "offset": [
        22451,
        22460
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4094": {
      "fn": "WorkLock.refund",
      "offset": [
        22441,
        22450
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22F1"
    },
    "4097": {
      "fn": "WorkLock.refund",
      "jump": "i",
      "offset": [
        22441,
        22480
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4098": {
      "fn": "WorkLock.refund",
      "offset": [
        22441,
        22480
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4099": {
      "fn": "WorkLock.refund",
      "offset": [
        22512,
        22530
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 30,
      "value": "0x1"
    },
    "4101": {
      "fn": "WorkLock.refund",
      "offset": [
        22512,
        22530
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4102": {
      "fn": "WorkLock.refund",
      "offset": [
        22512,
        22530
      ],
      "op": "ADD",
      "path": "15"
    },
    "4103": {
      "fn": "WorkLock.refund",
      "offset": [
        22512,
        22530
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4104": {
      "fn": "WorkLock.refund",
      "offset": [
        22417,
        22480
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4105": {
      "fn": "WorkLock.refund",
      "offset": [
        22417,
        22480
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4106": {
      "op": "POP"
    },
    "4107": {
      "fn": "WorkLock.refund",
      "offset": [
        22512,
        22549
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1014"
    },
    "4110": {
      "fn": "WorkLock.refund",
      "offset": [
        22512,
        22549
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4111": {
      "fn": "WorkLock.refund",
      "offset": [
        22417,
        22480
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4112": {
      "fn": "WorkLock.refund",
      "offset": [
        22512,
        22534
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2470"
    },
    "4115": {
      "fn": "WorkLock.refund",
      "jump": "i",
      "offset": [
        22512,
        22549
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4116": {
      "fn": "WorkLock.refund",
      "offset": [
        22512,
        22549
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4117": {
      "fn": "WorkLock.refund",
      "offset": [
        22491,
        22509
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4119": {
      "fn": "WorkLock.refund",
      "offset": [
        22491,
        22509
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4120": {
      "fn": "WorkLock.refund",
      "offset": [
        22491,
        22509
      ],
      "op": "ADD",
      "path": "15"
    },
    "4121": {
      "fn": "WorkLock.refund",
      "offset": [
        22491,
        22549
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4122": {
      "fn": "WorkLock.refund",
      "offset": [
        22564,
        22608
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 31,
      "value": "0x40"
    },
    "4124": {
      "fn": "WorkLock.refund",
      "offset": [
        22564,
        22608
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4125": {
      "fn": "WorkLock.refund",
      "offset": [
        22564,
        22608
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4126": {
      "op": "DUP5"
    },
    "4127": {
      "op": "DUP2"
    },
    "4128": {
      "op": "MSTORE"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4131": {
      "op": "DUP2"
    },
    "4132": {
      "op": "ADD"
    },
    "4133": {
      "op": "DUP4"
    },
    "4134": {
      "op": "SWAP1"
    },
    "4135": {
      "op": "MSTORE"
    },
    "4136": {
      "fn": "WorkLock.refund",
      "offset": [
        22571,
        22581
      ],
      "op": "CALLER",
      "path": "15"
    },
    "4137": {
      "fn": "WorkLock.refund",
      "offset": [
        22571,
        22581
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4138": {
      "fn": "WorkLock.refund",
      "offset": [
        22564,
        22608
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x73F04AF9DCC582A923EC15D3EEA990FE34ADABFFF2879E28D44572E01A54ABB6"
    },
    "4171": {
      "fn": "WorkLock.refund",
      "offset": [
        22564,
        22608
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4172": {
      "op": "ADD"
    },
    "4173": {
      "fn": "WorkLock.refund",
      "offset": [
        22564,
        22608
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4175": {
      "fn": "WorkLock.refund",
      "offset": [
        22564,
        22608
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4176": {
      "fn": "WorkLock.refund",
      "offset": [
        22564,
        22608
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4177": {
      "fn": "WorkLock.refund",
      "offset": [
        22564,
        22608
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4178": {
      "fn": "WorkLock.refund",
      "offset": [
        22564,
        22608
      ],
      "op": "SUB",
      "path": "15"
    },
    "4179": {
      "fn": "WorkLock.refund",
      "offset": [
        22564,
        22608
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4180": {
      "fn": "WorkLock.refund",
      "offset": [
        22564,
        22608
      ],
      "op": "LOG2",
      "path": "15"
    },
    "4181": {
      "fn": "WorkLock.refund",
      "offset": [
        22618,
        22658
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 32,
      "value": "0x105E"
    },
    "4184": {
      "fn": "WorkLock.refund",
      "offset": [
        22626,
        22636
      ],
      "op": "CALLER",
      "path": "15"
    },
    "4185": {
      "fn": "WorkLock.refund",
      "offset": [
        22648,
        22657
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4186": {
      "fn": "WorkLock.refund",
      "offset": [
        22618,
        22647
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x247C"
    },
    "4189": {
      "fn": "WorkLock.refund",
      "jump": "i",
      "offset": [
        22618,
        22658
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4190": {
      "fn": "WorkLock.refund",
      "offset": [
        22618,
        22658
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4191": {
      "fn": "WorkLock.refund",
      "offset": [
        21874,
        22665
      ],
      "op": "POP",
      "path": "15"
    },
    "4192": {
      "fn": "WorkLock.refund",
      "offset": [
        21874,
        22665
      ],
      "op": "POP",
      "path": "15"
    },
    "4193": {
      "fn": "WorkLock.refund",
      "offset": [
        21819,
        22665
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4194": {
      "fn": "WorkLock.refund",
      "jump": "o",
      "offset": [
        21819,
        22665
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4195": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10249,
        11275
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4196": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10379,
        10386
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "4198": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10379,
        10393
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4199": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10336,
        10343
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4201": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10336,
        10343
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4202": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10336,
        10343
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4203": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10336,
        10343
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4204": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10379,
        10409
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1096"
    },
    "4207": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10379,
        10409
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4208": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10396,
        10409
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "4241": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10396,
        10409
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4242": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10379,
        10409
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B1B"
    },
    "4245": {
      "fn": "WorkLock.workToETH",
      "jump": "i",
      "offset": [
        10379,
        10409
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4246": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10379,
        10409
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4247": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10355,
        10409
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4248": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10355,
        10409
      ],
      "op": "POP",
      "path": "15"
    },
    "4249": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10496,
        10510
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "4251": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10496,
        10510
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4252": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10514,
        10515
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4254": {
      "branch": 144,
      "fn": "WorkLock.workToETH",
      "offset": [
        10496,
        10515
      ],
      "op": "EQ",
      "path": "15"
    },
    "4255": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10492,
        10602
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4256": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10492,
        10602
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10B8"
    },
    "4259": {
      "branch": 144,
      "fn": "WorkLock.workToETH",
      "offset": [
        10492,
        10602
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4260": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10538,
        10591
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 33,
      "value": "0x10B0"
    },
    "4263": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10548,
        10562
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4264": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10564,
        10577
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4265": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10579,
        10590
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4267": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10579,
        10590
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4268": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10538,
        10547
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x259A"
    },
    "4271": {
      "fn": "WorkLock.workToETH",
      "jump": "i",
      "offset": [
        10538,
        10591
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4272": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10538,
        10591
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4273": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10531,
        10591
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4274": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10531,
        10591
      ],
      "op": "POP",
      "path": "15"
    },
    "4275": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10531,
        10591
      ],
      "op": "POP",
      "path": "15"
    },
    "4276": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10531,
        10591
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x841"
    },
    "4279": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10531,
        10591
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4280": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10492,
        10602
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4281": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10612,
        10629
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4283": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10643,
        10659
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4284": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10673,
        10696
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4286": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10716,
        10740
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "4319": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10699,
        10706
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "4321": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10699,
        10713
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4322": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10699,
        10713
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4323": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10699,
        10713
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4324": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10699,
        10713
      ],
      "op": "POP",
      "path": "15"
    },
    "4325": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10699,
        10740
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10EE"
    },
    "4328": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10699,
        10740
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4329": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10699,
        10740
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4330": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10699,
        10740
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B1B"
    },
    "4333": {
      "fn": "WorkLock.workToETH",
      "jump": "i",
      "offset": [
        10699,
        10740
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4334": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10699,
        10740
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4335": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10673,
        10740
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4336": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10673,
        10740
      ],
      "op": "POP",
      "path": "15"
    },
    "4337": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10771,
        10784
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "4370": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10755,
        10768
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4371": {
      "branch": 145,
      "fn": "WorkLock.workToETH",
      "offset": [
        10755,
        10784
      ],
      "op": "GT",
      "path": "15"
    },
    "4372": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10751,
        11146
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4373": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10751,
        11146
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1187"
    },
    "4376": {
      "branch": 145,
      "fn": "WorkLock.workToETH",
      "offset": [
        10751,
        11146
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4377": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10811,
        10840
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 34,
      "value": "0x1142"
    },
    "4380": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10827,
        10840
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "4413": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10811,
        10824
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4414": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10811,
        10840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "4417": {
      "fn": "WorkLock.workToETH",
      "jump": "i",
      "offset": [
        10811,
        10840
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4418": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10811,
        10840
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4419": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10800,
        10840
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4420": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10800,
        10840
      ],
      "op": "POP",
      "path": "15"
    },
    "4421": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10854,
        10878
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4423": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10895,
        10910
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4424": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10881,
        10892
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4426": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10881,
        10892
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4427": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10881,
        10910
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1154"
    },
    "4430": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10881,
        10910
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4431": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10881,
        10910
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4432": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10881,
        10910
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "4435": {
      "fn": "WorkLock.workToETH",
      "jump": "i",
      "offset": [
        10881,
        10910
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4436": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10881,
        10910
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4437": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10854,
        10910
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4438": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10854,
        10910
      ],
      "op": "POP",
      "path": "15"
    },
    "4439": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10936,
        10989
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 35,
      "value": "0x1163"
    },
    "4442": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10946,
        10954
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4443": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10956,
        10972
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4444": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10974,
        10988
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "4446": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10974,
        10988
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4447": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10936,
        10945
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25DE"
    },
    "4450": {
      "fn": "WorkLock.workToETH",
      "jump": "i",
      "offset": [
        10936,
        10989
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4451": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10936,
        10989
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4452": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10924,
        10989
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "4453": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10924,
        10989
      ],
      "op": "POP",
      "path": "15"
    },
    "4454": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11026,
        11035
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4455": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11008,
        11022
      ],
      "op": "DUP9",
      "path": "15"
    },
    "4456": {
      "branch": 146,
      "fn": "WorkLock.workToETH",
      "offset": [
        11008,
        11035
      ],
      "op": "GT",
      "path": "15"
    },
    "4457": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11004,
        11136
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1185"
    },
    "4460": {
      "branch": 146,
      "fn": "WorkLock.workToETH",
      "offset": [
        11004,
        11136
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4461": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11062,
        11121
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 36,
      "value": "0x1179"
    },
    "4464": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11072,
        11086
      ],
      "op": "DUP9",
      "path": "15"
    },
    "4465": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11088,
        11102
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "4467": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11088,
        11102
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4468": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11104,
        11120
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4469": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11062,
        11071
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x259A"
    },
    "4472": {
      "fn": "WorkLock.workToETH",
      "jump": "i",
      "offset": [
        11062,
        11121
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4473": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11062,
        11121
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4474": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11055,
        11121
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "4475": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11055,
        11121
      ],
      "op": "POP",
      "path": "15"
    },
    "4476": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11055,
        11121
      ],
      "op": "POP",
      "path": "15"
    },
    "4477": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11055,
        11121
      ],
      "op": "POP",
      "path": "15"
    },
    "4478": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11055,
        11121
      ],
      "op": "POP",
      "path": "15"
    },
    "4479": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11055,
        11121
      ],
      "op": "POP",
      "path": "15"
    },
    "4480": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11055,
        11121
      ],
      "op": "POP",
      "path": "15"
    },
    "4481": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11055,
        11121
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x841"
    },
    "4484": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11055,
        11121
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4485": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11004,
        11136
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4486": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10786,
        11146
      ],
      "op": "POP",
      "path": "15"
    },
    "4487": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10751,
        11146
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4488": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11156,
        11183
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 37,
      "value": "0x1191"
    },
    "4491": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11174,
        11183
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4492": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11156,
        11183
      ],
      "op": "DUP9",
      "path": "15"
    },
    "4493": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11156,
        11183
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "4496": {
      "fn": "WorkLock.workToETH",
      "jump": "i",
      "offset": [
        11156,
        11183
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4497": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11156,
        11183
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4498": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11156,
        11183
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "4499": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11156,
        11183
      ],
      "op": "POP",
      "path": "15"
    },
    "4500": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11211,
        11268
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 38,
      "value": "0x119E"
    },
    "4503": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11221,
        11235
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4504": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11237,
        11250
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4505": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11252,
        11267
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4506": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11211,
        11220
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x259A"
    },
    "4509": {
      "fn": "WorkLock.workToETH",
      "jump": "i",
      "offset": [
        11211,
        11268
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4510": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11211,
        11268
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4511": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11200,
        11268
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11A8"
    },
    "4514": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11200,
        11268
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4515": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11200,
        11208
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4516": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11200,
        11268
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B3A"
    },
    "4519": {
      "fn": "WorkLock.workToETH",
      "jump": "i",
      "offset": [
        11200,
        11268
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4520": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11200,
        11268
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4521": {
      "fn": "WorkLock.workToETH",
      "offset": [
        11193,
        11268
      ],
      "op": "SWAP8",
      "path": "15"
    },
    "4522": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10249,
        11275
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "4523": {
      "op": "POP"
    },
    "4524": {
      "op": "POP"
    },
    "4525": {
      "op": "POP"
    },
    "4526": {
      "op": "POP"
    },
    "4527": {
      "op": "POP"
    },
    "4528": {
      "op": "POP"
    },
    "4529": {
      "op": "POP"
    },
    "4530": {
      "fn": "WorkLock.workToETH",
      "jump": "o",
      "offset": [
        10249,
        11275
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4531": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "4532": {
      "fn": "Ownable.isOwner",
      "offset": [
        1053,
        1057
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "4534": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4541": {
      "op": "SHL"
    },
    "4542": {
      "op": "SUB"
    },
    "4543": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "AND",
      "path": "34"
    },
    "4544": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "34"
    },
    "4545": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1096
      ],
      "op": "EQ",
      "path": "34"
    },
    "4546": {
      "offset": [
        889,
        907
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x11CA"
    },
    "4549": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "4550": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "4552": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "DUP1",
      "path": "34"
    },
    "4553": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "REVERT",
      "path": "34"
    },
    "4554": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "4555": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1479,
        1480
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 39,
      "value": "0x0"
    },
    "4557": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "DUP1",
      "path": "34"
    },
    "4558": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "4559": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "4561": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "4562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4568": {
      "op": "SHL"
    },
    "4569": {
      "op": "SUB"
    },
    "4570": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "4571": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "4572": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "AND",
      "path": "34"
    },
    "4573": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "4574": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "PUSH32",
      "path": "34",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4607": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "4608": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1479,
        1480
      ],
      "op": "DUP4",
      "path": "34"
    },
    "4609": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1479,
        1480
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "4610": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "LOG3",
      "path": "34"
    },
    "4611": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1509,
        1510
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 40,
      "value": "0x0"
    },
    "4613": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "DUP1",
      "path": "34"
    },
    "4614": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4621": {
      "op": "SHL"
    },
    "4622": {
      "op": "SUB"
    },
    "4623": {
      "op": "NOT"
    },
    "4624": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "AND",
      "path": "34"
    },
    "4625": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "4626": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "SSTORE",
      "path": "34"
    },
    "4627": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMP",
      "path": "34"
    },
    "4628": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4635": {
      "op": "SHL"
    },
    "4636": {
      "op": "SUB"
    },
    "4637": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21168,
        21185
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4638": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21168,
        21185
      ],
      "op": "AND",
      "path": "15"
    },
    "4639": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21125,
        21132
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4641": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21168,
        21185
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4642": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21168,
        21185
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4643": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21168,
        21185
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4644": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21168,
        21176
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "4646": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21168,
        21185
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4648": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21168,
        21185
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4649": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21168,
        21185
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4651": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21168,
        21185
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4652": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21168,
        21185
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4653": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21228,
        21245
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4654": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21228,
        21245
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4655": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21224,
        21285
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x123B"
    },
    "4658": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21224,
        21285
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4659": {
      "op": "POP"
    },
    "4660": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21273,
        21274
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 41,
      "value": "0x0"
    },
    "4662": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21273,
        21274
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4663": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4664": {
      "op": "POP"
    },
    "4665": {
      "op": "POP"
    },
    "4666": {
      "fn": "WorkLock.getAvailableRefund",
      "jump": "o",
      "offset": [
        21059,
        21750
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4667": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21224,
        21285
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4668": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4670": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4671": {
      "op": "PUSH4",
      "value": "0xD094ADBF"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4678": {
      "op": "SHL"
    },
    "4679": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4680": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4687": {
      "op": "SHL"
    },
    "4688": {
      "op": "SUB"
    },
    "4689": {
      "op": "DUP5"
    },
    "4690": {
      "op": "DUP2"
    },
    "4691": {
      "op": "AND"
    },
    "4692": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4694": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4695": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "ADD",
      "path": "15"
    },
    "4696": {
      "op": "MSTORE"
    },
    "4697": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21295,
        21314
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4699": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21295,
        21314
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4700": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21323
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "4733": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21340
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4734": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21340
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4735": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21340
      ],
      "op": "AND",
      "path": "15"
    },
    "4736": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21340
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4737": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21340
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xD094ADBF"
    },
    "4742": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21340
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4743": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4745": {
      "op": "ADD"
    },
    "4746": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4748": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4750": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4751": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4752": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4753": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "SUB",
      "path": "15"
    },
    "4754": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4755": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4756": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "GAS",
      "path": "15"
    },
    "4757": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "4758": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4759": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4760": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4761": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12A6"
    },
    "4764": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4765": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4766": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4768": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4769": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "4770": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4771": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4773": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4774": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4775": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "POP",
      "path": "15"
    },
    "4776": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "POP",
      "path": "15"
    },
    "4777": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "POP",
      "path": "15"
    },
    "4778": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "POP",
      "path": "15"
    },
    "4779": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4781": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4782": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4783": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "4785": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "NOT",
      "path": "15"
    },
    "4786": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "4788": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4789": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "ADD",
      "path": "15"
    },
    "4790": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "AND",
      "path": "15"
    },
    "4791": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4792": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "ADD",
      "path": "15"
    },
    "4793": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4794": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4796": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4797": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "POP",
      "path": "15"
    },
    "4798": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4799": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "ADD",
      "path": "15"
    },
    "4800": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4801": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12CA"
    },
    "4804": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4805": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4806": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A91"
    },
    "4809": {
      "fn": "WorkLock.getAvailableRefund",
      "jump": "i",
      "offset": [
        21317,
        21349
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4810": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21317,
        21349
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4811": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21295,
        21349
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4812": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21295,
        21349
      ],
      "op": "POP",
      "path": "15"
    },
    "4813": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21359,
        21380
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4815": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21383,
        21418
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12E5"
    },
    "4818": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21399,
        21403
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4819": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21399,
        21417
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4821": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21399,
        21417
      ],
      "op": "ADD",
      "path": "15"
    },
    "4822": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21399,
        21417
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4823": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21383,
        21394
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4824": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21383,
        21398
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22DE"
    },
    "4827": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21383,
        21398
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4828": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21383,
        21418
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4829": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21383,
        21418
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4830": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21383,
        21418
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "4835": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21383,
        21418
      ],
      "op": "AND",
      "path": "15"
    },
    "4836": {
      "fn": "WorkLock.getAvailableRefund",
      "jump": "i",
      "offset": [
        21383,
        21418
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4837": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21383,
        21418
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4838": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21359,
        21418
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4839": {
      "op": "POP"
    },
    "4840": {
      "branch": 147,
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21493,
        21511
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4841": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21489,
        21546
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12F7"
    },
    "4844": {
      "branch": 147,
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21489,
        21546
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4845": {
      "op": "POP"
    },
    "4846": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21534,
        21535
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 42,
      "value": "0x0"
    },
    "4848": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21534,
        21535
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "4849": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21059,
        21750
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "4850": {
      "op": "POP"
    },
    "4851": {
      "op": "POP"
    },
    "4852": {
      "op": "POP"
    },
    "4853": {
      "op": "POP"
    },
    "4854": {
      "fn": "WorkLock.getAvailableRefund",
      "jump": "o",
      "offset": [
        21059,
        21750
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4855": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21489,
        21546
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4856": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21556,
        21573
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4858": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21576,
        21619
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1307"
    },
    "4861": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21586,
        21599
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4862": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21601,
        21605
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4863": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21601,
        21618
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4865": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21601,
        21618
      ],
      "op": "ADD",
      "path": "15"
    },
    "4866": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21601,
        21618
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4867": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21576,
        21585
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1063"
    },
    "4870": {
      "fn": "WorkLock.getAvailableRefund",
      "jump": "i",
      "offset": [
        21576,
        21619
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4871": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21576,
        21619
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4872": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21645,
        21662
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4873": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21645,
        21662
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4874": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21556,
        21619
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4875": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21556,
        21619
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4876": {
      "op": "POP"
    },
    "4877": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21633,
        21662
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4878": {
      "branch": 148,
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21633,
        21662
      ],
      "op": "GT",
      "path": "15"
    },
    "4879": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21629,
        21718
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4880": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21629,
        21718
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x82B"
    },
    "4883": {
      "branch": 148,
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21629,
        21718
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4884": {
      "op": "POP"
    },
    "4885": {
      "op": "POP"
    },
    "4886": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21690,
        21707
      ],
      "op": "SWAP1",
      "path": "15",
      "statement": 43
    },
    "4887": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21690,
        21707
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4888": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21690,
        21707
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "4889": {
      "fn": "WorkLock.getAvailableRefund",
      "offset": [
        21734,
        21743
      ],
      "op": "SWAP3",
      "path": "15",
      "statement": 44
    },
    "4890": {
      "op": "POP"
    },
    "4891": {
      "op": "POP"
    },
    "4892": {
      "op": "POP"
    },
    "4893": {
      "fn": "WorkLock.getAvailableRefund",
      "jump": "o",
      "offset": [
        21059,
        21750
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4894": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18001,
        18298
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4895": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18082,
        18092
      ],
      "op": "CALLER",
      "path": "15"
    },
    "4896": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18052,
        18066
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4898": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18069,
        18093
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4899": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18069,
        18093
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4900": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18069,
        18093
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4901": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18069,
        18081
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "4903": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18069,
        18093
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4905": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18069,
        18093
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4906": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18069,
        18093
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4908": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18069,
        18093
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4909": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18069,
        18093
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4910": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18069,
        18093
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4911": {
      "branch": 149,
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18111,
        18121
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 45
    },
    "4912": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18103,
        18150
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x137B"
    },
    "4915": {
      "branch": 149,
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18103,
        18150
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4916": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18103,
        18150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4918": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18103,
        18150
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4919": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4925": {
      "op": "SHL"
    },
    "4926": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18103,
        18150
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4927": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18103,
        18150
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4930": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18103,
        18150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4932": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18103,
        18150
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4933": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18103,
        18150
      ],
      "op": "ADD",
      "path": "15"
    },
    "4934": {
      "op": "MSTORE"
    },
    "4935": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "4937": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4939": {
      "op": "DUP3"
    },
    "4940": {
      "op": "ADD"
    },
    "4941": {
      "op": "MSTORE"
    },
    "4942": {
      "op": "PUSH32",
      "value": "0x5468657265206973206E6F20636F6D70656E736174696F6E0000000000000000"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4977": {
      "op": "DUP3"
    },
    "4978": {
      "op": "ADD"
    },
    "4979": {
      "op": "MSTORE"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4982": {
      "op": "ADD"
    },
    "4983": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18103,
        18150
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "4986": {
      "op": "JUMP"
    },
    "4987": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18103,
        18150
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4988": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18173,
        18183
      ],
      "op": "CALLER",
      "path": "15",
      "statement": 46
    },
    "4989": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18187,
        18188
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4991": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18160,
        18184
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4992": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18160,
        18184
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4993": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18160,
        18184
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4994": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18160,
        18172
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "4996": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18160,
        18184
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4998": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18160,
        18184
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4999": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18160,
        18184
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5001": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18160,
        18184
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5002": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18160,
        18184
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "5003": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18160,
        18188
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5004": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18198,
        18235
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 47,
      "value": "0x1395"
    },
    "5007": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18198,
        18235
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5008": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18228,
        18234
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5009": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18198,
        18227
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x247C"
    },
    "5012": {
      "fn": "WorkLock.withdrawCompensation",
      "jump": "i",
      "offset": [
        18198,
        18235
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5013": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18198,
        18235
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5014": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18250,
        18291
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 48,
      "value": "0x40"
    },
    "5016": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18250,
        18291
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5017": {
      "op": "DUP2"
    },
    "5018": {
      "op": "DUP2"
    },
    "5019": {
      "op": "MSTORE"
    },
    "5020": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18272,
        18282
      ],
      "op": "CALLER",
      "path": "15"
    },
    "5021": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18272,
        18282
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5022": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18250,
        18291
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x1480B15E3EAB83A9B923578FFE330E3DCE94536007EC9C0B48A5DFBDE8C49181"
    },
    "5055": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18250,
        18291
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5056": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5058": {
      "op": "ADD"
    },
    "5059": {
      "fn": "WorkLock.withdrawCompensation",
      "offset": [
        18250,
        18291
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAF4"
    },
    "5062": {
      "op": "JUMP"
    },
    "5063": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20045,
        20216
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5064": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20097,
        20101
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5066": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20139,
        20158
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 49,
      "value": "0x4"
    },
    "5068": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20139,
        20158
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5069": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20120,
        20135
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "5070": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20120,
        20158
      ],
      "op": "LT",
      "path": "15"
    },
    "5071": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20120,
        20158
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5072": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20120,
        20209
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5073": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20120,
        20209
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5074": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20120,
        20209
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13DE"
    },
    "5077": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20120,
        20209
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5078": {
      "op": "POP"
    },
    "5079": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20195,
        20202
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "5081": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20195,
        20209
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5082": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20174,
        20191
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "5084": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20174,
        20191
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5085": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20174,
        20209
      ],
      "op": "EQ",
      "path": "15"
    },
    "5086": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20120,
        20209
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5087": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20113,
        20209
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5088": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20113,
        20209
      ],
      "op": "POP",
      "path": "15"
    },
    "5089": {
      "fn": "WorkLock.isClaimingAvailable",
      "offset": [
        20045,
        20216
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5090": {
      "fn": "WorkLock.isClaimingAvailable",
      "jump": "o",
      "offset": [
        20045,
        20216
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5091": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12915,
        13901
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5092": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12981,
        13000
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 50,
      "value": "0x4"
    },
    "5094": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12981,
        13000
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5095": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12963,
        12978
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "5096": {
      "branch": 150,
      "fn": "WorkLock.cancelBid",
      "offset": [
        12963,
        13000
      ],
      "op": "LT",
      "path": "15"
    },
    "5097": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12955,
        13069
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1451"
    },
    "5100": {
      "branch": 150,
      "fn": "WorkLock.cancelBid",
      "offset": [
        12955,
        13069
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5101": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12955,
        13069
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5103": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12955,
        13069
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5104": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5108": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5110": {
      "op": "SHL"
    },
    "5111": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12955,
        13069
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5112": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12955,
        13069
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5115": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12955,
        13069
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5117": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12955,
        13069
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5118": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12955,
        13069
      ],
      "op": "ADD",
      "path": "15"
    },
    "5119": {
      "op": "MSTORE"
    },
    "5120": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "5122": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5124": {
      "op": "DUP3"
    },
    "5125": {
      "op": "ADD"
    },
    "5126": {
      "op": "MSTORE"
    },
    "5127": {
      "op": "PUSH32",
      "value": "0x43616E63656C6C6174696F6E20616C6C6F776564206F6E6C7920647572696E67"
    },
    "5160": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5162": {
      "op": "DUP3"
    },
    "5163": {
      "op": "ADD"
    },
    "5164": {
      "op": "MSTORE"
    },
    "5165": {
      "op": "PUSH20",
      "value": "0x2063616E63656C6C6174696F6E2077696E646F77"
    },
    "5186": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5188": {
      "op": "SHL"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5191": {
      "op": "DUP3"
    },
    "5192": {
      "op": "ADD"
    },
    "5193": {
      "op": "MSTORE"
    },
    "5194": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5196": {
      "op": "ADD"
    },
    "5197": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12955,
        13069
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "5200": {
      "op": "JUMP"
    },
    "5201": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12955,
        13069
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5202": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13112,
        13122
      ],
      "op": "CALLER",
      "path": "15"
    },
    "5203": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13079,
        13100
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5205": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13103,
        13123
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5206": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13103,
        13123
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5207": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13103,
        13123
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5208": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13103,
        13111
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "5210": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13103,
        13123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5212": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13103,
        13123
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5213": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13103,
        13123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5215": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13103,
        13123
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5216": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13103,
        13123
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "5217": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13141,
        13158
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 51
    },
    "5218": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13141,
        13158
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5219": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13133,
        13183
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14A1"
    },
    "5222": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13133,
        13183
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5223": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13133,
        13183
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5225": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13133,
        13183
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5226": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5230": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5232": {
      "op": "SHL"
    },
    "5233": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13133,
        13183
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5234": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13133,
        13183
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5237": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13133,
        13183
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5239": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13133,
        13183
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5240": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13133,
        13183
      ],
      "op": "ADD",
      "path": "15"
    },
    "5241": {
      "op": "MSTORE"
    },
    "5242": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5246": {
      "op": "DUP3"
    },
    "5247": {
      "op": "ADD"
    },
    "5248": {
      "op": "MSTORE"
    },
    "5249": {
      "op": "PUSH16",
      "value": "0x139BC8189A59081D1BC818D85B98D95B"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "5268": {
      "op": "SHL"
    },
    "5269": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5271": {
      "op": "DUP3"
    },
    "5272": {
      "op": "ADD"
    },
    "5273": {
      "op": "MSTORE"
    },
    "5274": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5276": {
      "op": "ADD"
    },
    "5277": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13133,
        13183
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "5280": {
      "op": "JUMP"
    },
    "5281": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13133,
        13183
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5282": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13202,
        13214
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 52,
      "value": "0x2"
    },
    "5284": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13202,
        13214
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5285": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13202,
        13214
      ],
      "op": "ADD",
      "path": "15"
    },
    "5286": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13202,
        13214
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5287": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13202,
        13214
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "5289": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13202,
        13214
      ],
      "op": "AND",
      "path": "15"
    },
    "5290": {
      "branch": 151,
      "fn": "WorkLock.cancelBid",
      "offset": [
        13201,
        13214
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5291": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13193,
        13245
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14F6"
    },
    "5294": {
      "branch": 151,
      "fn": "WorkLock.cancelBid",
      "offset": [
        13193,
        13245
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5295": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13193,
        13245
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5297": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13193,
        13245
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5298": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5302": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5304": {
      "op": "SHL"
    },
    "5305": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13193,
        13245
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5306": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13193,
        13245
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5309": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13193,
        13245
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5311": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13193,
        13245
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5312": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13193,
        13245
      ],
      "op": "ADD",
      "path": "15"
    },
    "5313": {
      "op": "MSTORE"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "5316": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5318": {
      "op": "DUP3"
    },
    "5319": {
      "op": "ADD"
    },
    "5320": {
      "op": "MSTORE"
    },
    "5321": {
      "op": "PUSH32",
      "value": "0x546F6B656E732061726520616C726561647920636C61696D6564000000000000"
    },
    "5354": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5356": {
      "op": "DUP3"
    },
    "5357": {
      "op": "ADD"
    },
    "5358": {
      "op": "MSTORE"
    },
    "5359": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5361": {
      "op": "ADD"
    },
    "5362": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13193,
        13245
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "5365": {
      "op": "JUMP"
    },
    "5366": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13193,
        13245
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5367": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13275,
        13292
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5368": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13275,
        13292
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5369": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13255,
        13272
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5371": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13302,
        13323
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 53
    },
    "5372": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13302,
        13323
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5373": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13302,
        13323
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5374": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13428,
        13435
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "5376": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13428,
        13442
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5377": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13428,
        13446
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x150C"
    },
    "5380": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13428,
        13446
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5383": {
      "op": "SWAP1"
    },
    "5384": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13428,
        13446
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "5387": {
      "fn": "WorkLock.cancelBid",
      "jump": "i",
      "offset": [
        13428,
        13446
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5388": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13428,
        13446
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5389": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13460,
        13470
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "5391": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13460,
        13470
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5392": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13460,
        13470
      ],
      "op": "ADD",
      "path": "15"
    },
    "5393": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13460,
        13470
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5394": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13408,
        13446
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5395": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13408,
        13446
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5396": {
      "op": "POP"
    },
    "5397": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13460,
        13470
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "5400": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13460,
        13470
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5401": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13460,
        13470
      ],
      "op": "DIV",
      "path": "15"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5408": {
      "op": "SHL"
    },
    "5409": {
      "op": "SUB"
    },
    "5410": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13460,
        13470
      ],
      "op": "AND",
      "path": "15"
    },
    "5411": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13460,
        13483
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5412": {
      "branch": 152,
      "fn": "WorkLock.cancelBid",
      "offset": [
        13460,
        13483
      ],
      "op": "EQ",
      "path": "15"
    },
    "5413": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13456,
        13648
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15E4"
    },
    "5416": {
      "branch": 152,
      "fn": "WorkLock.cancelBid",
      "offset": [
        13456,
        13648
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5417": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13499,
        13517
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5419": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "5421": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13528,
        13537
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5422": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5423": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5424": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5425": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "LT",
      "path": "15"
    },
    "5426": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x153D"
    },
    "5429": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5430": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x153D"
    },
    "5433": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B52"
    },
    "5436": {
      "fn": "WorkLock.cancelBid",
      "jump": "i",
      "offset": [
        13520,
        13538
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5437": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5438": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5440": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5441": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5442": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5443": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5445": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5446": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5447": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "5448": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "ADD",
      "path": "15"
    },
    "5449": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5450": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13560,
        13570
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 54,
      "value": "0x2"
    },
    "5452": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13560,
        13570
      ],
      "op": "DUP6",
      "path": "15"
    },
    "5453": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13560,
        13570
      ],
      "op": "ADD",
      "path": "15"
    },
    "5454": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13560,
        13570
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5455": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13559
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "5457": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5458": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5465": {
      "op": "SHL"
    },
    "5466": {
      "op": "SUB"
    },
    "5467": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5468": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "5469": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "AND",
      "path": "15"
    },
    "5470": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "5471": {
      "op": "POP"
    },
    "5472": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5473": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5474": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13559
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5475": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13559
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5476": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13520,
        13538
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "5479": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13560,
        13570
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5480": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13560,
        13570
      ],
      "op": "DIV",
      "path": "15"
    },
    "5481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5485": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5487": {
      "op": "SHL"
    },
    "5488": {
      "op": "SUB"
    },
    "5489": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13560,
        13570
      ],
      "op": "AND",
      "path": "15"
    },
    "5490": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13560,
        13570
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5491": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5492": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "LT",
      "path": "15"
    },
    "5493": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1580"
    },
    "5496": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5497": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1580"
    },
    "5500": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B52"
    },
    "5503": {
      "fn": "WorkLock.cancelBid",
      "jump": "i",
      "offset": [
        13552,
        13571
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5504": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5505": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5507": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5508": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5509": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5510": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5512": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5513": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5514": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "5515": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5516": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5517": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5518": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13571
      ],
      "op": "ADD",
      "path": "15"
    },
    "5519": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13584
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5520": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13584
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5527": {
      "op": "SHL"
    },
    "5528": {
      "op": "SUB"
    },
    "5529": {
      "op": "NOT"
    },
    "5530": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13584
      ],
      "op": "AND",
      "path": "15"
    },
    "5531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5537": {
      "op": "SHL"
    },
    "5538": {
      "op": "SUB"
    },
    "5539": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13584
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "5540": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13584
      ],
      "op": "DUP6",
      "path": "15"
    },
    "5541": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13584
      ],
      "op": "AND",
      "path": "15"
    },
    "5542": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13584
      ],
      "op": "OR",
      "path": "15"
    },
    "5543": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13584
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5544": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13584
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5545": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13627,
        13637
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 55,
      "value": "0x2"
    },
    "5547": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13627,
        13637
      ],
      "op": "DUP8",
      "path": "15"
    },
    "5548": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13627,
        13637
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5549": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13627,
        13637
      ],
      "op": "ADD",
      "path": "15"
    },
    "5550": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13627,
        13637
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5551": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13618
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "5552": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13618
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5553": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13618
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "5554": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13618
      ],
      "op": "AND",
      "path": "15"
    },
    "5555": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13618
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5556": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13618
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5557": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13606
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "5559": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13618
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5560": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13618
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5561": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13618
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5563": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13618
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5564": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13618
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "5565": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13624
      ],
      "op": "ADD",
      "path": "15"
    },
    "5566": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13637
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5567": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13637
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5568": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "5571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5573": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "5575": {
      "op": "SHL"
    },
    "5576": {
      "op": "SUB"
    },
    "5577": {
      "op": "NOT"
    },
    "5578": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13637
      ],
      "op": "AND",
      "path": "15"
    },
    "5579": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13552,
        13584
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "5582": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13627,
        13637
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5583": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13627,
        13637
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5584": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13627,
        13637
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5585": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13627,
        13637
      ],
      "op": "DIV",
      "path": "15"
    },
    "5586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5590": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5592": {
      "op": "SHL"
    },
    "5593": {
      "op": "SUB"
    },
    "5594": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13627,
        13637
      ],
      "op": "AND",
      "path": "15"
    },
    "5595": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13637
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5596": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13637
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5597": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13637
      ],
      "op": "MUL",
      "path": "15"
    },
    "5598": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13637
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5599": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13637
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5600": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13637
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5601": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13637
      ],
      "op": "OR",
      "path": "15"
    },
    "5602": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13637
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5603": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13598,
        13637
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5604": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13456,
        13648
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5605": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13664
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 56,
      "value": "0x8"
    },
    "5607": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5608": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5609": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5610": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15F5"
    },
    "5613": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5614": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15F5"
    },
    "5617": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B68"
    },
    "5620": {
      "fn": "WorkLock.cancelBid",
      "jump": "i",
      "offset": [
        13657,
        13670
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5621": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5622": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5624": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5625": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5626": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5627": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5629": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5630": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "5631": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5632": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "ADD",
      "path": "15"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5635": {
      "op": "NOT"
    },
    "5636": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5637": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5638": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "ADD",
      "path": "15"
    },
    "5639": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5640": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5647": {
      "op": "SHL"
    },
    "5648": {
      "op": "SUB"
    },
    "5649": {
      "op": "NOT"
    },
    "5650": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "AND",
      "path": "15"
    },
    "5651": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5652": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5653": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "ADD",
      "path": "15"
    },
    "5654": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5655": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13657,
        13670
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5656": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13697,
        13710
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "5689": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13685,
        13710
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5690": {
      "branch": 153,
      "fn": "WorkLock.cancelBid",
      "offset": [
        13685,
        13710
      ],
      "op": "GT",
      "path": "15"
    },
    "5691": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13681,
        13799
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5692": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13681,
        13799
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1679"
    },
    "5695": {
      "branch": 153,
      "fn": "WorkLock.cancelBid",
      "offset": [
        13681,
        13799
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5696": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13743,
        13788
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 57,
      "value": "0x1675"
    },
    "5699": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13762,
        13787
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x166C"
    },
    "5702": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13774,
        13787
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "5735": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13762,
        13771
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5736": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13762,
        13787
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "5739": {
      "fn": "WorkLock.cancelBid",
      "jump": "i",
      "offset": [
        13762,
        13787
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5740": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13762,
        13787
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5741": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13743,
        13757
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "5743": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13743,
        13757
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5744": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13743,
        13757
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5745": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13743,
        13761
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22DE"
    },
    "5748": {
      "fn": "WorkLock.cancelBid",
      "jump": "i",
      "offset": [
        13743,
        13788
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5749": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13743,
        13788
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5750": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13726,
        13740
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "5752": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13726,
        13788
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5753": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13681,
        13799
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5754": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13808,
        13848
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 58,
      "value": "0x1683"
    },
    "5757": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13816,
        13826
      ],
      "op": "CALLER",
      "path": "15"
    },
    "5758": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13838,
        13847
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5759": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13808,
        13837
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x247C"
    },
    "5762": {
      "fn": "WorkLock.cancelBid",
      "jump": "i",
      "offset": [
        13808,
        13848
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5763": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13808,
        13848
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5764": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13863,
        13894
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 59,
      "value": "0x40"
    },
    "5766": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13863,
        13894
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5767": {
      "op": "DUP3"
    },
    "5768": {
      "op": "DUP2"
    },
    "5769": {
      "op": "MSTORE"
    },
    "5770": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13872,
        13882
      ],
      "op": "CALLER",
      "path": "15"
    },
    "5771": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13872,
        13882
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5772": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13863,
        13894
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xF3A6EF5718C05D9183AF076F5753197B68B04552A763C34796637D6134BDD0F2"
    },
    "5805": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13863,
        13894
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5808": {
      "op": "ADD"
    },
    "5809": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13863,
        13894
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5811": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13863,
        13894
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5812": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13863,
        13894
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5813": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13863,
        13894
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5814": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13863,
        13894
      ],
      "op": "SUB",
      "path": "15"
    },
    "5815": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13863,
        13894
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5816": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        13863,
        13894
      ],
      "op": "LOG2",
      "path": "15"
    },
    "5817": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12945,
        13901
      ],
      "op": "POP",
      "path": "15"
    },
    "5818": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12945,
        13901
      ],
      "op": "POP",
      "path": "15"
    },
    "5819": {
      "fn": "WorkLock.cancelBid",
      "offset": [
        12945,
        13901
      ],
      "op": "POP",
      "path": "15"
    },
    "5820": {
      "fn": "WorkLock.cancelBid",
      "jump": "o",
      "offset": [
        12915,
        13901
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5821": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5822": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6186,
        6193
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5824": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6222,
        6235
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "5857": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6209,
        6219
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5858": {
      "branch": 154,
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6209,
        6235
      ],
      "op": "LT",
      "path": "15"
    },
    "5859": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6205,
        6270
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5860": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6205,
        6270
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16EF"
    },
    "5863": {
      "branch": 154,
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6205,
        6270
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5864": {
      "op": "POP"
    },
    "5865": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6258,
        6259
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 60,
      "value": "0x0"
    },
    "5867": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6258,
        6259
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5868": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5869": {
      "op": "POP"
    },
    "5870": {
      "fn": "WorkLock.ethToTokens",
      "jump": "o",
      "offset": [
        6124,
        6686
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5871": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6205,
        6270
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5872": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6357,
        6371
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "5874": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6357,
        6371
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5875": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6353,
        6438
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1706"
    },
    "5878": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6353,
        6438
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5879": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6413,
        6420
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 61,
      "value": "0x8"
    },
    "5881": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6413,
        6427
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5882": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6399,
        6410
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "5884": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6399,
        6410
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5885": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6399,
        6427
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x841"
    },
    "5888": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6399,
        6427
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5889": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6413,
        6427
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5890": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6399,
        6427
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AD7"
    },
    "5893": {
      "fn": "WorkLock.ethToTokens",
      "jump": "i",
      "offset": [
        6399,
        6427
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5894": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6353,
        6438
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5895": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6448,
        6464
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5897": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6467,
        6493
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1732"
    },
    "5900": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6480,
        6493
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "5933": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6467,
        6477
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5934": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6467,
        6493
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "5937": {
      "fn": "WorkLock.ethToTokens",
      "jump": "i",
      "offset": [
        6467,
        6493
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5938": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6467,
        6493
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5939": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6544,
        6551
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "5941": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6544,
        6558
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5942": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6448,
        6493
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5943": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6448,
        6493
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5944": {
      "op": "POP"
    },
    "5945": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6503,
        6527
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5947": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6503,
        6527
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5948": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6544,
        6585
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1766"
    },
    "5951": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6544,
        6585
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5952": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6561,
        6585
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "5985": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6561,
        6585
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5986": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6544,
        6585
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B1B"
    },
    "5989": {
      "fn": "WorkLock.ethToTokens",
      "jump": "i",
      "offset": [
        6544,
        6585
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5990": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6544,
        6585
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5991": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6530,
        6541
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "5993": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6530,
        6541
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5994": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6530,
        6585
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1773"
    },
    "5997": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6530,
        6585
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5998": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6530,
        6585
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5999": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6530,
        6585
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "6002": {
      "fn": "WorkLock.ethToTokens",
      "jump": "i",
      "offset": [
        6530,
        6585
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6003": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6530,
        6585
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6004": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6664,
        6678
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 62,
      "value": "0x5"
    },
    "6006": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6664,
        6678
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6007": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6503,
        6585
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6008": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6503,
        6585
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6009": {
      "op": "POP"
    },
    "6010": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6629,
        6679
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x178D"
    },
    "6013": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6629,
        6679
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6014": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6629,
        6659
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1787"
    },
    "6017": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6629,
        6637
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6018": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6503,
        6585
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6019": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6629,
        6641
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2618"
    },
    "6022": {
      "fn": "WorkLock.ethToTokens",
      "jump": "i",
      "offset": [
        6629,
        6659
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6023": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6629,
        6659
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6024": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6629,
        6663
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6025": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6629,
        6663
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2624"
    },
    "6028": {
      "fn": "WorkLock.ethToTokens",
      "jump": "i",
      "offset": [
        6629,
        6679
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6029": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6629,
        6679
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6030": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6602,
        6679
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17B7"
    },
    "6033": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6602,
        6679
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6034": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6602,
        6626
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "6067": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6602,
        6679
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B3A"
    },
    "6070": {
      "fn": "WorkLock.ethToTokens",
      "jump": "i",
      "offset": [
        6602,
        6679
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6071": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6602,
        6679
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6072": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6595,
        6679
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "6073": {
      "fn": "WorkLock.ethToTokens",
      "offset": [
        6124,
        6686
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "6074": {
      "op": "POP"
    },
    "6075": {
      "op": "POP"
    },
    "6076": {
      "op": "POP"
    },
    "6077": {
      "op": "POP"
    },
    "6078": {
      "fn": "WorkLock.ethToTokens",
      "jump": "o",
      "offset": [
        6124,
        6686
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6079": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18727,
        19981
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6080": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18828,
        18835
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6082": {
      "offset": [
        2875,
        2894
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6084": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2875,
        2894
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6085": {
      "offset": [
        2856,
        2871
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "6086": {
      "offset": [
        2856,
        2894
      ],
      "op": "LT",
      "path": "15"
    },
    "6087": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2856,
        2894
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6088": {
      "offset": [
        2848,
        2963
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17E3"
    },
    "6091": {
      "offset": [
        2848,
        2963
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6092": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2848,
        2963
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6094": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2848,
        2963
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6095": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6099": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6101": {
      "op": "SHL"
    },
    "6102": {
      "offset": [
        2848,
        2963
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6103": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2848,
        2963
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6104": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2848,
        2963
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6106": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2848,
        2963
      ],
      "op": "ADD",
      "path": "15"
    },
    "6107": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2848,
        2963
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "6110": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2848,
        2963
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6111": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2848,
        2963
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B7E"
    },
    "6114": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "jump": "i",
      "offset": [
        2848,
        2963
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6115": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        2848,
        2963
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6116": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18876,
        18883
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 63,
      "value": "0x8"
    },
    "6118": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18876,
        18890
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6119": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18855,
        18872
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "6121": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18855,
        18872
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6122": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18855,
        18890
      ],
      "op": "EQ",
      "path": "15"
    },
    "6123": {
      "branch": 155,
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18855,
        18890
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6124": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18847,
        18928
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1807"
    },
    "6127": {
      "branch": 155,
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18847,
        18928
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6128": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18847,
        18928
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6130": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18847,
        18928
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6131": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6135": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6137": {
      "op": "SHL"
    },
    "6138": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18847,
        18928
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6139": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18847,
        18928
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6140": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18847,
        18928
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6142": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18847,
        18928
      ],
      "op": "ADD",
      "path": "15"
    },
    "6143": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18847,
        18928
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "6146": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18847,
        18928
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6147": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18847,
        18928
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BD2"
    },
    "6150": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "jump": "i",
      "offset": [
        18847,
        18928
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6151": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18847,
        18928
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6152": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19023,
        19040
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "6154": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19023,
        19040
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6155": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19054,
        19068
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "6157": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19054,
        19068
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6158": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19050,
        19223
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x188A"
    },
    "6161": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19050,
        19223
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6162": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19111,
        19118
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 64,
      "value": "0x8"
    },
    "6164": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19111,
        19125
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6165": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19097,
        19108
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "6167": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19097,
        19108
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6168": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19129,
        19153
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "6201": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19129,
        19153
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6202": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19097,
        19125
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1842"
    },
    "6205": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19097,
        19125
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6206": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19097,
        19125
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AD7"
    },
    "6209": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "jump": "i",
      "offset": [
        19097,
        19125
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6210": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19097,
        19125
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6211": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19097,
        19153
      ],
      "op": "GT",
      "path": "15"
    },
    "6212": {
      "branch": 156,
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19097,
        19153
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6213": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19089,
        19176
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1885"
    },
    "6216": {
      "branch": 156,
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19089,
        19176
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6217": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19089,
        19176
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6219": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19089,
        19176
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6220": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6224": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6226": {
      "op": "SHL"
    },
    "6227": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19089,
        19176
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6228": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19089,
        19176
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6231": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19089,
        19176
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6233": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19089,
        19176
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6234": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19089,
        19176
      ],
      "op": "ADD",
      "path": "15"
    },
    "6235": {
      "op": "MSTORE"
    },
    "6236": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6238": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6240": {
      "op": "DUP3"
    },
    "6241": {
      "op": "ADD"
    },
    "6242": {
      "op": "MSTORE"
    },
    "6243": {
      "op": "PUSH18",
      "value": "0x4E6F7420656E6F7567682062696464657273"
    },
    "6262": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6264": {
      "op": "SHL"
    },
    "6265": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6267": {
      "op": "DUP3"
    },
    "6268": {
      "op": "ADD"
    },
    "6269": {
      "op": "MSTORE"
    },
    "6270": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6272": {
      "op": "ADD"
    },
    "6273": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19089,
        19176
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "6276": {
      "op": "JUMP"
    },
    "6277": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19089,
        19176
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6278": {
      "op": "POP"
    },
    "6279": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19198,
        19205
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 65,
      "value": "0x8"
    },
    "6281": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19198,
        19212
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6282": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19050,
        19223
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6283": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19233,
        19255
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6285": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19258,
        19309
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18D6"
    },
    "6288": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19285,
        19309
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "6321": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19258,
        19282
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "6354": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19258,
        19309
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "6357": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "jump": "i",
      "offset": [
        19258,
        19309
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6358": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19258,
        19309
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6359": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19360,
        19367
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "6361": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19360,
        19374
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6362": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19233,
        19309
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6363": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19233,
        19309
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6364": {
      "op": "POP"
    },
    "6365": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19319,
        19343
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6367": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19319,
        19343
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6368": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19360,
        19401
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x190A"
    },
    "6371": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19360,
        19401
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6372": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19377,
        19401
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "6405": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19377,
        19401
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6406": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19360,
        19401
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B1B"
    },
    "6409": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "jump": "i",
      "offset": [
        19360,
        19401
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6410": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19360,
        19401
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6411": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19346,
        19357
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "6413": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19346,
        19357
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6414": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19346,
        19401
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1917"
    },
    "6417": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19346,
        19401
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6418": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19346,
        19401
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6419": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19346,
        19401
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "6422": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "jump": "i",
      "offset": [
        19346,
        19401
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6423": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19346,
        19401
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6424": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19319,
        19401
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6425": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19319,
        19401
      ],
      "op": "POP",
      "path": "15"
    },
    "6426": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19411,
        19437
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6428": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19456,
        19512
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1934"
    },
    "6431": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19495,
        19511
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6432": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19456,
        19490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1787"
    },
    "6435": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19475,
        19489
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "6437": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19475,
        19489
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6438": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19456,
        19470
      ],
      "op": "DUP7",
      "path": "15"
    },
    "6439": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19456,
        19474
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2618"
    },
    "6442": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19456,
        19474
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6443": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19456,
        19490
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6444": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19456,
        19490
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6445": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19456,
        19490
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "6450": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19456,
        19490
      ],
      "op": "AND",
      "path": "15"
    },
    "6451": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "jump": "i",
      "offset": [
        19456,
        19490
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6452": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19456,
        19512
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6453": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19440,
        19512
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x195E"
    },
    "6456": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19440,
        19512
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6457": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19440,
        19453
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "6490": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19440,
        19512
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B3A"
    },
    "6493": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "jump": "i",
      "offset": [
        19440,
        19512
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6494": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19440,
        19512
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6495": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19411,
        19512
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6496": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19411,
        19512
      ],
      "op": "POP",
      "path": "15"
    },
    "6497": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19524,
        19778
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6498": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19539,
        19546
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "6500": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19539,
        19553
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6501": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19531,
        19553
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6502": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19531,
        19553
      ],
      "op": "LT",
      "path": "15"
    },
    "6503": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19531,
        19584
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6504": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19531,
        19584
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6505": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19531,
        19584
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1971"
    },
    "6508": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19531,
        19584
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6509": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19531,
        19584
      ],
      "op": "POP",
      "path": "15"
    },
    "6510": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19569,
        19584
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6511": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19557,
        19566
      ],
      "op": "GAS",
      "path": "15"
    },
    "6512": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19557,
        19584
      ],
      "op": "GT",
      "path": "15"
    },
    "6513": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19531,
        19584
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6514": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19524,
        19778
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6515": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19524,
        19778
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A23"
    },
    "6518": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19524,
        19778
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6519": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19600,
        19614
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6521": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19624
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "6523": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19625,
        19630
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6524": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6525": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6526": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6527": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "LT",
      "path": "15"
    },
    "6528": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x198B"
    },
    "6531": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6532": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x198B"
    },
    "6535": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B52"
    },
    "6538": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "jump": "i",
      "offset": [
        19617,
        19631
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6539": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6540": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6542": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6543": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6544": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6545": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6547": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6548": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6549": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6550": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6551": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6552": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "ADD",
      "path": "15"
    },
    "6553": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6560": {
      "op": "SHL"
    },
    "6561": {
      "op": "SUB"
    },
    "6562": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "AND",
      "path": "15"
    },
    "6563": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19653,
        19669
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 66
    },
    "6564": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19653,
        19669
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6565": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19653,
        19669
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6566": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19653,
        19661
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "6568": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19653,
        19669
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6569": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19653,
        19669
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6570": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19653,
        19669
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6571": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19653,
        19669
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6573": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19653,
        19669
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6574": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19653,
        19669
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6575": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19653,
        19669
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6576": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19653,
        19682
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6577": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6578": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19617,
        19631
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6579": {
      "op": "POP"
    },
    "6580": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19653,
        19704
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6581": {
      "op": "LT"
    },
    "6582": {
      "branch": 157,
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19653,
        19704
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6583": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19645,
        19746
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A10"
    },
    "6586": {
      "branch": 157,
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19645,
        19746
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6587": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19645,
        19746
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6589": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19645,
        19746
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6590": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6594": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6596": {
      "op": "SHL"
    },
    "6597": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19645,
        19746
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6598": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19645,
        19746
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6599": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6601": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19645,
        19746
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6603": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19645,
        19746
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6604": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19645,
        19746
      ],
      "op": "ADD",
      "path": "15"
    },
    "6605": {
      "op": "MSTORE"
    },
    "6606": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6610": {
      "op": "DUP3"
    },
    "6611": {
      "op": "ADD"
    },
    "6612": {
      "op": "MSTORE"
    },
    "6613": {
      "op": "PUSH32",
      "value": "0x4269642069732067726561746572207468616E206D617820616C6C6F7761626C"
    },
    "6646": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6648": {
      "op": "DUP3"
    },
    "6649": {
      "op": "ADD"
    },
    "6650": {
      "op": "MSTORE"
    },
    "6651": {
      "op": "PUSH5",
      "value": "0x1948189A59"
    },
    "6657": {
      "op": "PUSH1",
      "value": "0xDA"
    },
    "6659": {
      "op": "SHL"
    },
    "6660": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6662": {
      "op": "DUP3"
    },
    "6663": {
      "op": "ADD"
    },
    "6664": {
      "op": "MSTORE"
    },
    "6665": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6667": {
      "op": "ADD"
    },
    "6668": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19645,
        19746
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "6671": {
      "op": "JUMP"
    },
    "6672": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19645,
        19746
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6673": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19760,
        19767
      ],
      "op": "DUP5",
      "path": "15",
      "statement": 67
    },
    "6674": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19760,
        19767
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A1A"
    },
    "6677": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19760,
        19767
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6678": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19760,
        19767
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C13"
    },
    "6681": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "jump": "i",
      "offset": [
        19760,
        19767
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6682": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19760,
        19767
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6683": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19760,
        19767
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "6684": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19760,
        19767
      ],
      "op": "POP",
      "path": "15"
    },
    "6685": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19760,
        19767
      ],
      "op": "POP",
      "path": "15"
    },
    "6686": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19586,
        19778
      ],
      "op": "POP",
      "path": "15"
    },
    "6687": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19524,
        19778
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1961"
    },
    "6690": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19524,
        19778
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6691": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19524,
        19778
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6692": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19801,
        19818
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "6694": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19801,
        19818
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6695": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19792,
        19797
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6696": {
      "branch": 158,
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19792,
        19818
      ],
      "op": "EQ",
      "path": "15"
    },
    "6697": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19788,
        19941
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A70"
    },
    "6700": {
      "branch": 158,
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19788,
        19941
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6701": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19866,
        19883
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 68,
      "value": "0x9"
    },
    "6703": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19866,
        19883
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6704": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19839,
        19891
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6706": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19839,
        19891
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6707": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19839,
        19891
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6708": {
      "op": "SWAP2"
    },
    "6709": {
      "op": "DUP3"
    },
    "6710": {
      "op": "MSTORE"
    },
    "6711": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6713": {
      "op": "DUP3"
    },
    "6714": {
      "op": "ADD"
    },
    "6715": {
      "op": "DUP7"
    },
    "6716": {
      "op": "SWAP1"
    },
    "6717": {
      "op": "MSTORE"
    },
    "6718": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19854,
        19864
      ],
      "op": "CALLER",
      "path": "15"
    },
    "6719": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19854,
        19864
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6720": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19839,
        19891
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x97D5AD02B58968C48057BB16E90B9468EC753E30169BF00692B7BA02B47B090E"
    },
    "6753": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19839,
        19891
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6754": {
      "op": "ADD"
    },
    "6755": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19839,
        19891
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6757": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19839,
        19891
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6758": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19839,
        19891
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6759": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19839,
        19891
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6760": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19839,
        19891
      ],
      "op": "SUB",
      "path": "15"
    },
    "6761": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19839,
        19891
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6762": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19839,
        19891
      ],
      "op": "LOG2",
      "path": "15"
    },
    "6763": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19905,
        19922
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 69,
      "value": "0x9"
    },
    "6765": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19905,
        19930
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6766": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19905,
        19930
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6767": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19905,
        19930
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "6768": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19788,
        19941
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6769": {
      "op": "POP"
    },
    "6770": {
      "op": "POP"
    },
    "6771": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19957,
        19974
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 70,
      "value": "0x9"
    },
    "6773": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19957,
        19974
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6774": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        19957,
        19974
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "6775": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "offset": [
        18727,
        19981
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "6776": {
      "op": "POP"
    },
    "6777": {
      "op": "POP"
    },
    "6778": {
      "op": "POP"
    },
    "6779": {
      "op": "POP"
    },
    "6780": {
      "fn": "WorkLock.verifyBiddingCorrectness",
      "jump": "o",
      "offset": [
        18727,
        19981
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6781": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6782": {
      "offset": [
        2875,
        2894
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6784": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2875,
        2894
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6785": {
      "offset": [
        2856,
        2871
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "6786": {
      "offset": [
        2856,
        2894
      ],
      "op": "LT",
      "path": "15"
    },
    "6787": {
      "branch": 159,
      "fn": "WorkLock.forceRefund",
      "offset": [
        2856,
        2894
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6788": {
      "offset": [
        2848,
        2963
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A9F"
    },
    "6791": {
      "branch": 159,
      "offset": [
        2848,
        2963
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6792": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2848,
        2963
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6794": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2848,
        2963
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6795": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6799": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6801": {
      "op": "SHL"
    },
    "6802": {
      "offset": [
        2848,
        2963
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6803": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2848,
        2963
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6804": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2848,
        2963
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6806": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2848,
        2963
      ],
      "op": "ADD",
      "path": "15"
    },
    "6807": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2848,
        2963
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "6810": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2848,
        2963
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6811": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2848,
        2963
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B7E"
    },
    "6814": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        2848,
        2963
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6815": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2848,
        2963
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6816": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14902,
        14909
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 71,
      "value": "0x8"
    },
    "6818": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14902,
        14916
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6819": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14881,
        14898
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "6821": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14881,
        14898
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6822": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14881,
        14916
      ],
      "op": "EQ",
      "path": "15"
    },
    "6823": {
      "branch": 160,
      "fn": "WorkLock.forceRefund",
      "offset": [
        14881,
        14916
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6824": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14873,
        14954
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AC3"
    },
    "6827": {
      "branch": 160,
      "fn": "WorkLock.forceRefund",
      "offset": [
        14873,
        14954
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6828": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14873,
        14954
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6830": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14873,
        14954
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6831": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6835": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6837": {
      "op": "SHL"
    },
    "6838": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14873,
        14954
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6839": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14873,
        14954
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6840": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14873,
        14954
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6842": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14873,
        14954
      ],
      "op": "ADD",
      "path": "15"
    },
    "6843": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14873,
        14954
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "6846": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14873,
        14954
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6847": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14873,
        14954
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BD2"
    },
    "6850": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        14873,
        14954
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6851": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14873,
        14954
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6852": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14982,
        14999
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6853": {
      "branch": 161,
      "fn": "WorkLock.forceRefund",
      "offset": [
        15024,
        15034
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 72
    },
    "6854": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15016,
        15079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B22"
    },
    "6857": {
      "branch": 161,
      "fn": "WorkLock.forceRefund",
      "offset": [
        15016,
        15079
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6858": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15016,
        15079
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6860": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15016,
        15079
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6861": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6865": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6867": {
      "op": "SHL"
    },
    "6868": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15016,
        15079
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6869": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15016,
        15079
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6870": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6872": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15016,
        15079
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6874": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15016,
        15079
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6875": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15016,
        15079
      ],
      "op": "ADD",
      "path": "15"
    },
    "6876": {
      "op": "MSTORE"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "6879": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6881": {
      "op": "DUP3"
    },
    "6882": {
      "op": "ADD"
    },
    "6883": {
      "op": "MSTORE"
    },
    "6884": {
      "op": "PUSH32",
      "value": "0x4D757374206265206174206C65617374206F6E652062696464657220666F7220"
    },
    "6917": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6919": {
      "op": "DUP3"
    },
    "6920": {
      "op": "ADD"
    },
    "6921": {
      "op": "MSTORE"
    },
    "6922": {
      "op": "PUSH8",
      "value": "0x18481C99599D5B99"
    },
    "6931": {
      "op": "PUSH1",
      "value": "0xC2"
    },
    "6933": {
      "op": "SHL"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6936": {
      "op": "DUP3"
    },
    "6937": {
      "op": "ADD"
    },
    "6938": {
      "op": "MSTORE"
    },
    "6939": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6941": {
      "op": "ADD"
    },
    "6942": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15016,
        15079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "6945": {
      "op": "JUMP"
    },
    "6946": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15016,
        15079
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6947": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15119,
        15130
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "6949": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15119,
        15130
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6950": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15090,
        15116
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6952": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15090,
        15116
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6953": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15119,
        15164
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B52"
    },
    "6956": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15119,
        15164
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6957": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15139,
        15163
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "6990": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15119,
        15138
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2630"
    },
    "6993": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        15119,
        15164
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6994": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15119,
        15164
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6995": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15178,
        15185
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "6997": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15178,
        15192
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6998": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15090,
        15164
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6999": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15090,
        15164
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7000": {
      "op": "POP"
    },
    "7001": {
      "branch": 162,
      "fn": "WorkLock.forceRefund",
      "offset": [
        15178,
        15213
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7002": {
      "op": "GT"
    },
    "7003": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15174,
        15278
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7004": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15174,
        15278
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B6D"
    },
    "7007": {
      "branch": 162,
      "fn": "WorkLock.forceRefund",
      "offset": [
        15174,
        15278
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7008": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15229,
        15247
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 73,
      "value": "0x1B67"
    },
    "7011": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15229,
        15245
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2653"
    },
    "7014": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        15229,
        15247
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7015": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15229,
        15247
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7016": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15261,
        15268
      ],
      "op": "POP",
      "path": "15",
      "statement": 74
    },
    "7017": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15261,
        15268
      ],
      "op": "POP",
      "path": "15"
    },
    "7018": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "POP",
      "path": "15"
    },
    "7019": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "POP",
      "path": "15"
    },
    "7020": {
      "fn": "WorkLock.forceRefund",
      "jump": "o",
      "offset": [
        14763,
        17925
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7021": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15174,
        15278
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7022": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15288,
        15310
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7024": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15330
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7025": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15330
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7026": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15331,
        15332
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7028": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7029": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7030": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "LT",
      "path": "15"
    },
    "7031": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B82"
    },
    "7034": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7035": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B82"
    },
    "7038": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B52"
    },
    "7041": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        15313,
        15333
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7042": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7043": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7044": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "POP",
      "path": "15"
    },
    "7045": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7047": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "MUL",
      "path": "15"
    },
    "7048": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "ADD",
      "path": "15"
    },
    "7049": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7051": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7052": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "ADD",
      "path": "15"
    },
    "7053": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7054": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B97"
    },
    "7057": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7058": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7059": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29C4"
    },
    "7062": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        15313,
        15333
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7063": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15313,
        15333
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7070": {
      "op": "SHL"
    },
    "7071": {
      "op": "SUB"
    },
    "7072": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15360,
        15384
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7073": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15360,
        15384
      ],
      "op": "AND",
      "path": "15"
    },
    "7074": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15343,
        15357
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7076": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15360,
        15384
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7077": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15360,
        15384
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7078": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15360,
        15384
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7079": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15360,
        15368
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "7081": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15360,
        15384
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7083": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15360,
        15384
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7084": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15360,
        15384
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7086": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15360,
        15384
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7087": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15360,
        15384
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "7088": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15360,
        15397
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7089": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15288,
        15333
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7090": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15288,
        15333
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7091": {
      "op": "POP"
    },
    "7092": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15360,
        15397
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7093": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15498,
        15499
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "7095": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15481,
        15978
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7096": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15505,
        15511
      ],
      "op": "DUP6",
      "path": "15"
    },
    "7097": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15501,
        15502
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7098": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15501,
        15511
      ],
      "op": "LT",
      "path": "15"
    },
    "7099": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15481,
        15978
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7100": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15481,
        15978
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CA7"
    },
    "7103": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15481,
        15978
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7104": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15532,
        15546
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7106": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15566
      ],
      "op": "DUP9",
      "path": "15"
    },
    "7107": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15566
      ],
      "op": "DUP9",
      "path": "15"
    },
    "7108": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15567,
        15568
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7109": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7110": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7111": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "LT",
      "path": "15"
    },
    "7112": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BD3"
    },
    "7115": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7116": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BD3"
    },
    "7119": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B52"
    },
    "7122": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        15549,
        15569
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7123": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7124": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7125": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "POP",
      "path": "15"
    },
    "7126": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7128": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "MUL",
      "path": "15"
    },
    "7129": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "ADD",
      "path": "15"
    },
    "7130": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7132": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7133": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "ADD",
      "path": "15"
    },
    "7134": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7135": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BE8"
    },
    "7138": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7139": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7140": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29C4"
    },
    "7143": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        15549,
        15569
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7144": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15549,
        15569
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7151": {
      "op": "SHL"
    },
    "7152": {
      "op": "SUB"
    },
    "7153": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15606,
        15622
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7154": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15606,
        15622
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7155": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15606,
        15622
      ],
      "op": "AND",
      "path": "15"
    },
    "7156": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15583,
        15603
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7158": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15606,
        15622
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7159": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15606,
        15622
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7160": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15606,
        15622
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7161": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15606,
        15614
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "7163": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15606,
        15622
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7165": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15606,
        15622
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7166": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15606,
        15622
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7168": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15606,
        15622
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7169": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15606,
        15622
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "7170": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15606,
        15635
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7171": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15532,
        15569
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7172": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15532,
        15569
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "7173": {
      "op": "POP"
    },
    "7174": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15657,
        15680
      ],
      "op": "SWAP1",
      "path": "15",
      "statement": 75
    },
    "7175": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15657,
        15680
      ],
      "op": "DUP8",
      "path": "15"
    },
    "7176": {
      "branch": 163,
      "fn": "WorkLock.forceRefund",
      "offset": [
        15657,
        15680
      ],
      "op": "AND",
      "path": "15"
    },
    "7177": {
      "op": "LT"
    },
    "7178": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15657,
        15700
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7179": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15657,
        15700
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7180": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15657,
        15700
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C15"
    },
    "7183": {
      "branch": 163,
      "fn": "WorkLock.forceRefund",
      "offset": [
        15657,
        15700
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7184": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15657,
        15700
      ],
      "op": "POP",
      "path": "15"
    },
    "7185": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15699,
        15700
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7187": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15684,
        15696
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7188": {
      "branch": 164,
      "fn": "WorkLock.forceRefund",
      "offset": [
        15684,
        15700
      ],
      "op": "GT",
      "path": "15"
    },
    "7189": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15657,
        15700
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7190": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15649,
        15749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C76"
    },
    "7193": {
      "branch": 164,
      "fn": "WorkLock.forceRefund",
      "offset": [
        15649,
        15749
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7194": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15649,
        15749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7196": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15649,
        15749
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7197": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7201": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7203": {
      "op": "SHL"
    },
    "7204": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15649,
        15749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7205": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15649,
        15749
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7208": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15649,
        15749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7210": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15649,
        15749
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7211": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15649,
        15749
      ],
      "op": "ADD",
      "path": "15"
    },
    "7212": {
      "op": "MSTORE"
    },
    "7213": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "7215": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7217": {
      "op": "DUP3"
    },
    "7218": {
      "op": "ADD"
    },
    "7219": {
      "op": "MSTORE"
    },
    "7220": {
      "op": "PUSH32",
      "value": "0x416464726573736573206D75737420626520616E206172726179206F6620756E"
    },
    "7253": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7255": {
      "op": "DUP3"
    },
    "7256": {
      "op": "ADD"
    },
    "7257": {
      "op": "MSTORE"
    },
    "7258": {
      "op": "PUSH12",
      "value": "0x697175652062696464657273"
    },
    "7271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7273": {
      "op": "SHL"
    },
    "7274": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7276": {
      "op": "DUP3"
    },
    "7277": {
      "op": "ADD"
    },
    "7278": {
      "op": "MSTORE"
    },
    "7279": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7281": {
      "op": "ADD"
    },
    "7282": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15649,
        15749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "7285": {
      "op": "JUMP"
    },
    "7286": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15649,
        15749
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7287": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15776,
        15788
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7288": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15767,
        15773
      ],
      "op": "DUP6",
      "path": "15"
    },
    "7289": {
      "branch": 165,
      "fn": "WorkLock.forceRefund",
      "offset": [
        15767,
        15788
      ],
      "op": "GT",
      "path": "15"
    },
    "7290": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15763,
        15931
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7291": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15763,
        15931
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C86"
    },
    "7294": {
      "branch": 165,
      "fn": "WorkLock.forceRefund",
      "offset": [
        15763,
        15931
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7295": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15817,
        15829
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 76
    },
    "7296": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15808,
        15829
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "7297": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15808,
        15829
      ],
      "op": "POP",
      "path": "15"
    },
    "7298": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15763,
        15931
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C92"
    },
    "7301": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15763,
        15931
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7302": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15763,
        15931
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7303": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15863,
        15875
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7304": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15854,
        15860
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7305": {
      "branch": 166,
      "fn": "WorkLock.forceRefund",
      "offset": [
        15854,
        15875
      ],
      "op": "LT",
      "path": "15"
    },
    "7306": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15850,
        15931
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7307": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15850,
        15931
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C92"
    },
    "7310": {
      "branch": 166,
      "fn": "WorkLock.forceRefund",
      "offset": [
        15850,
        15931
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7311": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15904,
        15916
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 77
    },
    "7312": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15895,
        15916
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "7313": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15895,
        15916
      ],
      "op": "POP",
      "path": "15"
    },
    "7314": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15850,
        15931
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7315": {
      "op": "POP"
    },
    "7316": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15961,
        15967
      ],
      "op": "SWAP4",
      "path": "15",
      "statement": 78
    },
    "7317": {
      "op": "POP"
    },
    "7318": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15513,
        15516
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 79
    },
    "7319": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15513,
        15516
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C9F"
    },
    "7322": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15513,
        15516
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7323": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15513,
        15516
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C13"
    },
    "7326": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        15513,
        15516
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7327": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15513,
        15516
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7328": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15513,
        15516
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7329": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15513,
        15516
      ],
      "op": "POP",
      "path": "15"
    },
    "7330": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15513,
        15516
      ],
      "op": "POP",
      "path": "15"
    },
    "7331": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15481,
        15978
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BB7"
    },
    "7334": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15481,
        15978
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7335": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15481,
        15978
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7336": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15481,
        15978
      ],
      "op": "POP",
      "path": "15"
    },
    "7337": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15988,
        16012
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7339": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16029,
        16035
      ],
      "op": "DUP6",
      "path": "15"
    },
    "7340": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "PUSH8",
      "path": "15",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7349": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7350": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "GT",
      "path": "15"
    },
    "7351": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7352": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CC3"
    },
    "7355": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7356": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CC3"
    },
    "7359": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C2E"
    },
    "7362": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        16015,
        16036
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7363": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7364": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7366": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7367": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7368": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7369": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7370": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7371": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7372": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7374": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "MUL",
      "path": "15"
    },
    "7375": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7377": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "ADD",
      "path": "15"
    },
    "7378": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7379": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "ADD",
      "path": "15"
    },
    "7380": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7382": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7383": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7384": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7385": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CEC"
    },
    "7388": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7389": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7390": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7392": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "ADD",
      "path": "15"
    },
    "7393": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7395": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7396": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "MUL",
      "path": "15"
    },
    "7397": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7398": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "7399": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7400": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "7401": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "ADD",
      "path": "15"
    },
    "7402": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7403": {
      "op": "POP"
    },
    "7404": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7405": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16015,
        16036
      ],
      "op": "POP",
      "path": "15"
    },
    "7406": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15988,
        16036
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7407": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        15988,
        16036
      ],
      "op": "POP",
      "path": "15"
    },
    "7408": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16107,
        16113
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7409": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16097,
        16103
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7410": {
      "branch": 167,
      "fn": "WorkLock.forceRefund",
      "offset": [
        16097,
        16113
      ],
      "op": "EQ",
      "path": "15"
    },
    "7411": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16093,
        16531
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DC6"
    },
    "7414": {
      "branch": 167,
      "fn": "WorkLock.forceRefund",
      "offset": [
        16093,
        16531
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7415": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16134,
        16143
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7417": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16129,
        16521
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7418": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16153,
        16159
      ],
      "op": "DUP7",
      "path": "15"
    },
    "7419": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16149,
        16150
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7420": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16149,
        16159
      ],
      "op": "LT",
      "path": "15"
    },
    "7421": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16129,
        16521
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7422": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16129,
        16521
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DC4"
    },
    "7425": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16129,
        16521
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7426": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16184,
        16198
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7428": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16218
      ],
      "op": "DUP10",
      "path": "15"
    },
    "7429": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16218
      ],
      "op": "DUP10",
      "path": "15"
    },
    "7430": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16219,
        16220
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7431": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7432": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7433": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "LT",
      "path": "15"
    },
    "7434": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D15"
    },
    "7437": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7438": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D15"
    },
    "7441": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B52"
    },
    "7444": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        16201,
        16221
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7445": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7446": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7447": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "POP",
      "path": "15"
    },
    "7448": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7450": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "MUL",
      "path": "15"
    },
    "7451": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "ADD",
      "path": "15"
    },
    "7452": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7454": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7455": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "ADD",
      "path": "15"
    },
    "7456": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7457": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D2A"
    },
    "7460": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7461": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7462": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29C4"
    },
    "7465": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        16201,
        16221
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7466": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16201,
        16221
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7473": {
      "op": "SHL"
    },
    "7474": {
      "op": "SUB"
    },
    "7475": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16263,
        16279
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7476": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16263,
        16279
      ],
      "op": "AND",
      "path": "15"
    },
    "7477": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16239,
        16260
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7479": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16263,
        16279
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7480": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16263,
        16279
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7481": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16263,
        16279
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7482": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16263,
        16271
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "7484": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16263,
        16279
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7486": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16263,
        16279
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7487": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16263,
        16279
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7489": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16263,
        16279
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7490": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16263,
        16279
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "7491": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16301,
        16318
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7492": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16301,
        16318
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7493": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16184,
        16221
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7494": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16184,
        16221
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7495": {
      "op": "POP"
    },
    "7496": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16263,
        16279
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7497": {
      "branch": 168,
      "fn": "WorkLock.forceRefund",
      "offset": [
        16301,
        16327
      ],
      "op": "DUP7",
      "path": "15"
    },
    "7498": {
      "op": "LT"
    },
    "7499": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16297,
        16507
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7500": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16297,
        16507
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DAF"
    },
    "7503": {
      "branch": 168,
      "fn": "WorkLock.forceRefund",
      "offset": [
        16297,
        16507
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7504": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16364,
        16381
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 80
    },
    "7505": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16364,
        16381
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7506": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16364,
        16390
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D5C"
    },
    "7509": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16364,
        16390
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7510": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16384,
        16390
      ],
      "op": "DUP8",
      "path": "15"
    },
    "7511": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16384,
        16390
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7512": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16364,
        16390
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "7515": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        16364,
        16390
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7516": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16364,
        16390
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7517": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16358
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7518": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16359,
        16360
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7519": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16361
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7520": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16361
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7521": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16361
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7522": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16361
      ],
      "op": "LT",
      "path": "15"
    },
    "7523": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16361
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D6E"
    },
    "7526": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16361
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7527": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16361
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D6E"
    },
    "7530": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16361
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B52"
    },
    "7533": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        16351,
        16361
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7534": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16361
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7535": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16361
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7537": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16361
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7538": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16361
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7539": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16361
      ],
      "op": "MUL",
      "path": "15"
    },
    "7540": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16361
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7541": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16361
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7542": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16361
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7543": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16361
      ],
      "op": "ADD",
      "path": "15"
    },
    "7544": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16361
      ],
      "op": "ADD",
      "path": "15"
    },
    "7545": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16351,
        16390
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7546": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16412,
        16438
      ],
      "op": "DUP6",
      "path": "15",
      "statement": 81
    },
    "7547": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16412,
        16438
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7548": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16412,
        16438
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "7549": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16478,
        16488
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 82
    },
    "7550": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16478,
        16488
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7551": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16478,
        16485
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7552": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16478,
        16485
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7553": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16486,
        16487
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7554": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16486,
        16487
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7555": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16478,
        16488
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7556": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16478,
        16488
      ],
      "op": "LT",
      "path": "15"
    },
    "7557": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16478,
        16488
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D90"
    },
    "7560": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16478,
        16488
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7561": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16478,
        16488
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D90"
    },
    "7564": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16478,
        16488
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B52"
    },
    "7567": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        16478,
        16488
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7568": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16478,
        16488
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7569": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16478,
        16488
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7571": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16478,
        16488
      ],
      "op": "MUL",
      "path": "15"
    },
    "7572": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16478,
        16488
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7574": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16478,
        16488
      ],
      "op": "ADD",
      "path": "15"
    },
    "7575": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16478,
        16488
      ],
      "op": "ADD",
      "path": "15"
    },
    "7576": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16478,
        16488
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7577": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16460,
        16474
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "7579": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16460,
        16474
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7581": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16460,
        16488
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7582": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16460,
        16488
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7583": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16460,
        16488
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7584": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16460,
        16488
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DA9"
    },
    "7587": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16460,
        16488
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7588": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16460,
        16488
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7589": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16460,
        16488
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "7592": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        16460,
        16488
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7593": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16460,
        16488
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7594": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16460,
        16488
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7595": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16460,
        16488
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7596": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16460,
        16488
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "7597": {
      "op": "POP"
    },
    "7598": {
      "op": "POP"
    },
    "7599": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16297,
        16507
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7600": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16166,
        16521
      ],
      "op": "POP",
      "path": "15"
    },
    "7601": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16166,
        16521
      ],
      "op": "POP",
      "path": "15"
    },
    "7602": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16161,
        16164
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 83
    },
    "7603": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16161,
        16164
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7604": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16161,
        16164
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DBC"
    },
    "7607": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16161,
        16164
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7608": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16161,
        16164
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C13"
    },
    "7611": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        16161,
        16164
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7612": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16161,
        16164
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7613": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16161,
        16164
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7614": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16161,
        16164
      ],
      "op": "POP",
      "path": "15"
    },
    "7615": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16161,
        16164
      ],
      "op": "POP",
      "path": "15"
    },
    "7616": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16129,
        16521
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CF9"
    },
    "7619": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16129,
        16521
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7620": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16129,
        16521
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7621": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16129,
        16521
      ],
      "op": "POP",
      "path": "15"
    },
    "7622": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16093,
        16531
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7623": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16571,
        16595
      ],
      "op": "PUSH32",
      "path": "15",
      "statement": 84,
      "value": "0x0"
    },
    "7656": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16549,
        16568
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DF0"
    },
    "7659": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16561,
        16567
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7660": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16549,
        16560
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16BD"
    },
    "7663": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        16549,
        16568
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7664": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16549,
        16568
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7665": {
      "branch": 169,
      "fn": "WorkLock.forceRefund",
      "offset": [
        16549,
        16595
      ],
      "op": "GT",
      "path": "15"
    },
    "7666": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16541,
        16653
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E4F"
    },
    "7669": {
      "branch": 169,
      "fn": "WorkLock.forceRefund",
      "offset": [
        16541,
        16653
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7670": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16541,
        16653
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7672": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16541,
        16653
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7673": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7677": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7679": {
      "op": "SHL"
    },
    "7680": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16541,
        16653
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7681": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16541,
        16653
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7682": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7684": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16541,
        16653
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7686": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16541,
        16653
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7687": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16541,
        16653
      ],
      "op": "ADD",
      "path": "15"
    },
    "7688": {
      "op": "MSTORE"
    },
    "7689": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "7691": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7693": {
      "op": "DUP3"
    },
    "7694": {
      "op": "ADD"
    },
    "7695": {
      "op": "MSTORE"
    },
    "7696": {
      "op": "PUSH32",
      "value": "0x4174206C65617374206F6E65206F6620626964646572732068617320616C6C6F"
    },
    "7729": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7731": {
      "op": "DUP3"
    },
    "7732": {
      "op": "ADD"
    },
    "7733": {
      "op": "MSTORE"
    },
    "7734": {
      "op": "PUSH9",
      "value": "0x1DD8589B1948189A59"
    },
    "7744": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "7746": {
      "op": "SHL"
    },
    "7747": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7749": {
      "op": "DUP3"
    },
    "7750": {
      "op": "ADD"
    },
    "7751": {
      "op": "MSTORE"
    },
    "7752": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7754": {
      "op": "ADD"
    },
    "7755": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16541,
        16653
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "7758": {
      "op": "JUMP"
    },
    "7759": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16541,
        16653
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7760": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16826,
        16848
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7762": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16851,
        16902
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E9B"
    },
    "7765": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16878,
        16902
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "7798": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16851,
        16875
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "7831": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16851,
        16902
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "7834": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        16851,
        16902
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7835": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16851,
        16902
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7836": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16826,
        16902
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7837": {
      "op": "POP"
    },
    "7838": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16912,
        16931
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7840": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16934,
        16956
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EC9"
    },
    "7843": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16943,
        16956
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "7876": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16934,
        16940
      ],
      "op": "DUP7",
      "path": "15"
    },
    "7877": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16934,
        16956
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "7880": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        16934,
        16956
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7881": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16934,
        16956
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7882": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17007,
        17014
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "7884": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17007,
        17021
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7885": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16912,
        16956
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7886": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16912,
        16956
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7887": {
      "op": "POP"
    },
    "7888": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16966,
        16990
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7890": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16966,
        16990
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7891": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17007,
        17048
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EFD"
    },
    "7894": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17007,
        17048
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7895": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17024,
        17048
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "7928": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17024,
        17048
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7929": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17007,
        17048
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B1B"
    },
    "7932": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17007,
        17048
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7933": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17007,
        17048
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7934": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16993,
        17004
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "7936": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16993,
        17004
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7937": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16993,
        17048
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F0A"
    },
    "7940": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16993,
        17048
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7941": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16993,
        17048
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7942": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16993,
        17048
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "7945": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        16993,
        17048
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7946": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16993,
        17048
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7947": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        16966,
        17048
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7948": {
      "op": "POP"
    },
    "7949": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17058,
        17075
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7951": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17078,
        17272
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F4D"
    },
    "7954": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17245,
        17271
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F1B"
    },
    "7957": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17245,
        17259
      ],
      "op": "DUP6",
      "path": "15"
    },
    "7958": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17264,
        17270
      ],
      "op": "DUP13",
      "path": "15"
    },
    "7959": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17245,
        17263
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2618"
    },
    "7962": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17245,
        17271
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7963": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17245,
        17271
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7964": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17226,
        17271
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F25"
    },
    "7967": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17226,
        17271
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7968": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17226,
        17242
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7969": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17226,
        17271
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "7972": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17226,
        17271
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7973": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17226,
        17271
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7974": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17078,
        17184
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F47"
    },
    "7977": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17149,
        17183
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F3D"
    },
    "7980": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17168,
        17182
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "7982": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17168,
        17182
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7983": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17149,
        17163
      ],
      "op": "DUP9",
      "path": "15"
    },
    "7984": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17149,
        17167
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2618"
    },
    "7987": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17149,
        17167
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7988": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17149,
        17183
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7989": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17149,
        17183
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7990": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17149,
        17183
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "7995": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17149,
        17183
      ],
      "op": "AND",
      "path": "15"
    },
    "7996": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17149,
        17183
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7997": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17149,
        17183
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7998": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17078,
        17111
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7F6"
    },
    "8001": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17078,
        17089
      ],
      "op": "DUP8",
      "path": "15"
    },
    "8002": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17094,
        17110
      ],
      "op": "DUP8",
      "path": "15"
    },
    "8003": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17078,
        17093
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2618"
    },
    "8006": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17078,
        17111
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8007": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17078,
        17184
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8008": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17078,
        17225
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8009": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17078,
        17225
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2630"
    },
    "8012": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17078,
        17272
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8013": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17078,
        17272
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8014": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17058,
        17272
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8015": {
      "op": "POP"
    },
    "8016": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17282,
        17299
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8018": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17302,
        17323
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F5B"
    },
    "8021": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17302,
        17308
      ],
      "op": "DUP9",
      "path": "15"
    },
    "8022": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17058,
        17272
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8023": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17302,
        17312
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22DE"
    },
    "8026": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17302,
        17323
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8027": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17302,
        17323
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8028": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17282,
        17323
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8029": {
      "op": "POP"
    },
    "8030": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17351,
        17369
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 85,
      "value": "0x1F67"
    },
    "8033": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17360,
        17369
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8034": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17351,
        17357
      ],
      "op": "DUP13",
      "path": "15"
    },
    "8035": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17351,
        17369
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B1B"
    },
    "8038": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17351,
        17369
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8039": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17351,
        17369
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8040": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17333,
        17347
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "8042": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17333,
        17347
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8044": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17333,
        17369
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8045": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17333,
        17369
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8046": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17333,
        17369
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8047": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17333,
        17369
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F78"
    },
    "8050": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17333,
        17369
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8051": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17333,
        17369
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8052": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17333,
        17369
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "8055": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17333,
        17369
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8056": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17333,
        17369
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8057": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17333,
        17369
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8058": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17333,
        17369
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8059": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17333,
        17369
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "8060": {
      "op": "POP"
    },
    "8061": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17384,
        17393
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8063": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17384,
        17393
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8064": {
      "op": "POP"
    },
    "8065": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17379,
        17612
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8066": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17403,
        17409
      ],
      "op": "DUP12",
      "path": "15"
    },
    "8067": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17399,
        17400
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8068": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17399,
        17409
      ],
      "op": "LT",
      "path": "15"
    },
    "8069": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17379,
        17612
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8070": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17379,
        17612
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2011"
    },
    "8073": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17379,
        17612
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8074": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17430,
        17444
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8076": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17464
      ],
      "op": "DUP15",
      "path": "15"
    },
    "8077": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17464
      ],
      "op": "DUP15",
      "path": "15"
    },
    "8078": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17465,
        17466
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8079": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8080": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8081": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "LT",
      "path": "15"
    },
    "8082": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F9D"
    },
    "8085": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8086": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F9D"
    },
    "8089": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B52"
    },
    "8092": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17447,
        17467
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8093": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8094": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8095": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "POP",
      "path": "15"
    },
    "8096": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8098": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "MUL",
      "path": "15"
    },
    "8099": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "ADD",
      "path": "15"
    },
    "8100": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8102": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8103": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "ADD",
      "path": "15"
    },
    "8104": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8105": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FB2"
    },
    "8108": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8109": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8110": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29C4"
    },
    "8113": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17447,
        17467
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8114": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17447,
        17467
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8121": {
      "op": "SHL"
    },
    "8122": {
      "op": "SUB"
    },
    "8123": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17505,
        17521
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8124": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17505,
        17521
      ],
      "op": "AND",
      "path": "15"
    },
    "8125": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17481,
        17502
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8127": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17505,
        17521
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8128": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17505,
        17521
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8129": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17505,
        17521
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8130": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17505,
        17513
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "8132": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17505,
        17521
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8134": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17505,
        17521
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8135": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17505,
        17521
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8137": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17505,
        17521
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8138": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17505,
        17521
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "8139": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17545
      ],
      "op": "DUP10",
      "path": "15",
      "statement": 86
    },
    "8140": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17545
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8141": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17430,
        17467
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8142": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17430,
        17467
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8143": {
      "op": "POP"
    },
    "8144": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17505,
        17521
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8145": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17549,
        17558
      ],
      "op": "DUP6",
      "path": "15"
    },
    "8146": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17549,
        17558
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8147": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17542
      ],
      "op": "DUP11",
      "path": "15"
    },
    "8148": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17542
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8149": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17543,
        17544
      ],
      "op": "DUP6",
      "path": "15"
    },
    "8150": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17543,
        17544
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8151": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17545
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8152": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17545
      ],
      "op": "LT",
      "path": "15"
    },
    "8153": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17545
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FE4"
    },
    "8156": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17545
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8157": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17545
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FE4"
    },
    "8160": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17545
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B52"
    },
    "8163": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17535,
        17545
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8164": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17545
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8165": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17545
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8167": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17545
      ],
      "op": "MUL",
      "path": "15"
    },
    "8168": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17545
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8170": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17545
      ],
      "op": "ADD",
      "path": "15"
    },
    "8171": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17545
      ],
      "op": "ADD",
      "path": "15"
    },
    "8172": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17558
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8173": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17558
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8174": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17558
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8175": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17558
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FF8"
    },
    "8178": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17558
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8179": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17558
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8180": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17558
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B3A"
    },
    "8183": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17535,
        17558
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8184": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17558
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8185": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17558
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8186": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17535,
        17558
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8187": {
      "op": "POP"
    },
    "8188": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17572,
        17601
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 87
    },
    "8189": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17572,
        17601
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8190": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17572,
        17601
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "8191": {
      "op": "POP"
    },
    "8192": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17411,
        17414
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 88
    },
    "8193": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17411,
        17414
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2009"
    },
    "8196": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17411,
        17414
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8197": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17411,
        17414
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C13"
    },
    "8200": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17411,
        17414
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8201": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17411,
        17414
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8202": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17411,
        17414
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8203": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17411,
        17414
      ],
      "op": "POP",
      "path": "15"
    },
    "8204": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17411,
        17414
      ],
      "op": "POP",
      "path": "15"
    },
    "8205": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17379,
        17612
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F81"
    },
    "8208": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17379,
        17612
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8209": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17379,
        17612
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8210": {
      "op": "POP"
    },
    "8211": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17672,
        17673
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 89,
      "value": "0x0"
    },
    "8213": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17652,
        17669
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "8215": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17652,
        17673
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8216": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17652,
        17673
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8217": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17652,
        17673
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "8218": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17709,
        17918
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8219": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17733,
        17739
      ],
      "op": "DUP12",
      "path": "15"
    },
    "8220": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17729,
        17730
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8221": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17729,
        17739
      ],
      "op": "LT",
      "path": "15"
    },
    "8222": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17709,
        17918
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8223": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17709,
        17918
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x211B"
    },
    "8226": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17709,
        17918
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8227": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17760,
        17774
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8229": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17794
      ],
      "op": "DUP15",
      "path": "15"
    },
    "8230": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17794
      ],
      "op": "DUP15",
      "path": "15"
    },
    "8231": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17795,
        17796
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8232": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8233": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8234": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "LT",
      "path": "15"
    },
    "8235": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2036"
    },
    "8238": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8239": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2036"
    },
    "8242": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B52"
    },
    "8245": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17777,
        17797
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8246": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8247": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8248": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "POP",
      "path": "15"
    },
    "8249": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8251": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "MUL",
      "path": "15"
    },
    "8252": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "ADD",
      "path": "15"
    },
    "8253": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8255": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8256": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "ADD",
      "path": "15"
    },
    "8257": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8258": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x204B"
    },
    "8261": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8262": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8263": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29C4"
    },
    "8266": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17777,
        17797
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8267": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17777,
        17797
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8268": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17760,
        17797
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8269": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17760,
        17797
      ],
      "op": "POP",
      "path": "15"
    },
    "8270": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17835,
        17842
      ],
      "op": "DUP8",
      "path": "15",
      "statement": 90
    },
    "8271": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17843,
        17844
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8272": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17835,
        17845
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8273": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17835,
        17845
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8274": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17835,
        17845
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8275": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17835,
        17845
      ],
      "op": "LT",
      "path": "15"
    },
    "8276": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17835,
        17845
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x205F"
    },
    "8279": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17835,
        17845
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8280": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17835,
        17845
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x205F"
    },
    "8283": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17835,
        17845
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B52"
    },
    "8286": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17835,
        17845
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8287": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17835,
        17845
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8288": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17835,
        17845
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8290": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17835,
        17845
      ],
      "op": "MUL",
      "path": "15"
    },
    "8291": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17835,
        17845
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8293": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17835,
        17845
      ],
      "op": "ADD",
      "path": "15"
    },
    "8294": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17835,
        17845
      ],
      "op": "ADD",
      "path": "15"
    },
    "8295": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17835,
        17845
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8296": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17823
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "8298": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17831
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8300": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17824,
        17830
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8307": {
      "op": "SHL"
    },
    "8308": {
      "op": "SUB"
    },
    "8309": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17831
      ],
      "op": "AND",
      "path": "15"
    },
    "8310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8316": {
      "op": "SHL"
    },
    "8317": {
      "op": "SUB"
    },
    "8318": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17831
      ],
      "op": "AND",
      "path": "15"
    },
    "8319": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17831
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8320": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17831
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8321": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17831
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8323": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17831
      ],
      "op": "ADD",
      "path": "15"
    },
    "8324": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17831
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8325": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17831
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8326": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17831
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8327": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17831
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8329": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17831
      ],
      "op": "ADD",
      "path": "15"
    },
    "8330": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17831
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8332": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17831
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "8333": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17831
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8335": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17845
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8336": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17845
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8337": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17845
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8338": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17845
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x209B"
    },
    "8341": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17845
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8342": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17845
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8343": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17845
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B3A"
    },
    "8346": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17811,
        17845
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8347": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17845
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8348": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17845
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8349": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17845
      ],
      "op": "POP",
      "path": "15"
    },
    "8350": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17845
      ],
      "op": "POP",
      "path": "15"
    },
    "8351": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17845
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8352": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17845
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8353": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17845
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "8354": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17811,
        17845
      ],
      "op": "POP",
      "path": "15"
    },
    "8355": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17888,
        17894
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 91
    },
    "8356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8362": {
      "op": "SHL"
    },
    "8363": {
      "op": "SUB"
    },
    "8364": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17864,
        17907
      ],
      "op": "AND",
      "path": "15"
    },
    "8365": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17876,
        17886
      ],
      "op": "CALLER",
      "path": "15"
    },
    "8366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8372": {
      "op": "SHL"
    },
    "8373": {
      "op": "SUB"
    },
    "8374": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17864,
        17907
      ],
      "op": "AND",
      "path": "15"
    },
    "8375": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17864,
        17907
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x2887B6DA4C721C91735AADA87DDC427D4EF240EF9B54E759EF10C0792B409373"
    },
    "8408": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17896,
        17903
      ],
      "op": "DUP11",
      "path": "15"
    },
    "8409": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17904,
        17905
      ],
      "op": "DUP6",
      "path": "15"
    },
    "8410": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17896,
        17906
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8411": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17896,
        17906
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8412": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17896,
        17906
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8413": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17896,
        17906
      ],
      "op": "LT",
      "path": "15"
    },
    "8414": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17896,
        17906
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20E9"
    },
    "8417": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17896,
        17906
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8418": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17896,
        17906
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20E9"
    },
    "8421": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17896,
        17906
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B52"
    },
    "8424": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17896,
        17906
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8425": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17896,
        17906
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8426": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17896,
        17906
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8428": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17896,
        17906
      ],
      "op": "MUL",
      "path": "15"
    },
    "8429": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17896,
        17906
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8431": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17896,
        17906
      ],
      "op": "ADD",
      "path": "15"
    },
    "8432": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17896,
        17906
      ],
      "op": "ADD",
      "path": "15"
    },
    "8433": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17896,
        17906
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8434": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17864,
        17907
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8436": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17864,
        17907
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8437": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17864,
        17907
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2100"
    },
    "8440": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17864,
        17907
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8441": {
      "op": "DUP2"
    },
    "8442": {
      "op": "MSTORE"
    },
    "8443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8445": {
      "op": "ADD"
    },
    "8446": {
      "op": "SWAP1"
    },
    "8447": {
      "op": "JUMP"
    },
    "8448": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17864,
        17907
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8449": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17864,
        17907
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8451": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17864,
        17907
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8452": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17864,
        17907
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8453": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17864,
        17907
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8454": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17864,
        17907
      ],
      "op": "SUB",
      "path": "15"
    },
    "8455": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17864,
        17907
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8456": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17864,
        17907
      ],
      "op": "LOG3",
      "path": "15"
    },
    "8457": {
      "op": "POP"
    },
    "8458": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17741,
        17744
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 92
    },
    "8459": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17741,
        17744
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2113"
    },
    "8462": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17741,
        17744
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8463": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17741,
        17744
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C13"
    },
    "8466": {
      "fn": "WorkLock.forceRefund",
      "jump": "i",
      "offset": [
        17741,
        17744
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8467": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17741,
        17744
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8468": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17741,
        17744
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8469": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17741,
        17744
      ],
      "op": "POP",
      "path": "15"
    },
    "8470": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17741,
        17744
      ],
      "op": "POP",
      "path": "15"
    },
    "8471": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17709,
        17918
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x201A"
    },
    "8474": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17709,
        17918
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8475": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17709,
        17918
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8476": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        17709,
        17918
      ],
      "op": "POP",
      "path": "15"
    },
    "8477": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14863,
        17925
      ],
      "op": "POP",
      "path": "15"
    },
    "8478": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14863,
        17925
      ],
      "op": "POP",
      "path": "15"
    },
    "8479": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14863,
        17925
      ],
      "op": "POP",
      "path": "15"
    },
    "8480": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14863,
        17925
      ],
      "op": "POP",
      "path": "15"
    },
    "8481": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14863,
        17925
      ],
      "op": "POP",
      "path": "15"
    },
    "8482": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14863,
        17925
      ],
      "op": "POP",
      "path": "15"
    },
    "8483": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14863,
        17925
      ],
      "op": "POP",
      "path": "15"
    },
    "8484": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14863,
        17925
      ],
      "op": "POP",
      "path": "15"
    },
    "8485": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14863,
        17925
      ],
      "op": "POP",
      "path": "15"
    },
    "8486": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14863,
        17925
      ],
      "op": "POP",
      "path": "15"
    },
    "8487": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14863,
        17925
      ],
      "op": "POP",
      "path": "15"
    },
    "8488": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "POP",
      "path": "15"
    },
    "8489": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        14763,
        17925
      ],
      "op": "POP",
      "path": "15"
    },
    "8490": {
      "fn": "WorkLock.forceRefund",
      "jump": "o",
      "offset": [
        14763,
        17925
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8491": {
      "offset": [
        2592,
        2616
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8492": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "8494": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8495": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8496": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8497": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8498": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "LT",
      "path": "15"
    },
    "8499": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x213B"
    },
    "8502": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8503": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8505": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8506": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "REVERT",
      "path": "15"
    },
    "8507": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8508": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8510": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8511": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8512": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8513": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8515": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8516": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8517": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "8518": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "ADD",
      "path": "15"
    },
    "8519": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8524": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8526": {
      "op": "SHL"
    },
    "8527": {
      "op": "SUB"
    },
    "8528": {
      "offset": [
        2592,
        2616
      ],
      "op": "AND",
      "path": "15"
    },
    "8529": {
      "fn": "WorkLock.forceRefund",
      "offset": [
        2592,
        2616
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8530": {
      "op": "POP"
    },
    "8531": {
      "offset": [
        2592,
        2616
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8532": {
      "fn": "WorkLock.forceRefund",
      "jump": "o",
      "offset": [
        2592,
        2616
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8533": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5662,
        5955
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8534": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5745,
        5755
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 93,
      "value": "0x3"
    },
    "8536": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5745,
        5755
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8537": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5727,
        5742
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "8538": {
      "branch": 170,
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5727,
        5755
      ],
      "op": "LT",
      "path": "15"
    },
    "8539": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5719,
        5806
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21BD"
    },
    "8542": {
      "branch": 170,
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5719,
        5806
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8543": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5719,
        5806
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8545": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5719,
        5806
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8546": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8550": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8552": {
      "op": "SHL"
    },
    "8553": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5719,
        5806
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8554": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5719,
        5806
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8557": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5719,
        5806
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8559": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5719,
        5806
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8560": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5719,
        5806
      ],
      "op": "ADD",
      "path": "15"
    },
    "8561": {
      "op": "MSTORE"
    },
    "8562": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "8564": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8566": {
      "op": "DUP3"
    },
    "8567": {
      "op": "ADD"
    },
    "8568": {
      "op": "MSTORE"
    },
    "8569": {
      "op": "PUSH32",
      "value": "0x43616E2774206465706F736974206D6F726520746F6B656E7320616674657220"
    },
    "8602": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8604": {
      "op": "DUP3"
    },
    "8605": {
      "op": "ADD"
    },
    "8606": {
      "op": "MSTORE"
    },
    "8607": {
      "op": "PUSH14",
      "value": "0x656E64206F662062696464696E67"
    },
    "8622": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "8624": {
      "op": "SHL"
    },
    "8625": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8627": {
      "op": "DUP3"
    },
    "8628": {
      "op": "ADD"
    },
    "8629": {
      "op": "MSTORE"
    },
    "8630": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8632": {
      "op": "ADD"
    },
    "8633": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5719,
        5806
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "8636": {
      "op": "JUMP"
    },
    "8637": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5719,
        5806
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8638": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5816,
        5873
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 94,
      "value": "0x21F2"
    },
    "8641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8647": {
      "op": "SHL"
    },
    "8648": {
      "op": "SUB"
    },
    "8649": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5816,
        5821
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "8682": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5816,
        5838
      ],
      "op": "AND",
      "path": "15"
    },
    "8683": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5839,
        5849
      ],
      "op": "CALLER",
      "path": "15"
    },
    "8684": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5859,
        5863
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "8685": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5866,
        5872
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8686": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5816,
        5838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x26D9"
    },
    "8689": {
      "fn": "WorkLock.tokenDeposit",
      "jump": "i",
      "offset": [
        5816,
        5873
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8690": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5816,
        5873
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8691": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5898,
        5904
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 95
    },
    "8692": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5883,
        5894
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8694": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5883,
        5894
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8696": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5883,
        5904
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8697": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5883,
        5904
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8698": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5883,
        5904
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8699": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5883,
        5904
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2204"
    },
    "8702": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5883,
        5904
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8703": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5883,
        5904
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8704": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5883,
        5904
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B3A"
    },
    "8707": {
      "fn": "WorkLock.tokenDeposit",
      "jump": "i",
      "offset": [
        5883,
        5904
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8708": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5883,
        5904
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8709": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5883,
        5904
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8710": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5883,
        5904
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8711": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5883,
        5904
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "8712": {
      "op": "POP"
    },
    "8713": {
      "op": "POP"
    },
    "8714": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5919,
        5948
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 96,
      "value": "0x40"
    },
    "8716": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5919,
        5948
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8717": {
      "op": "DUP2"
    },
    "8718": {
      "op": "DUP2"
    },
    "8719": {
      "op": "MSTORE"
    },
    "8720": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5929,
        5939
      ],
      "op": "CALLER",
      "path": "15"
    },
    "8721": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5929,
        5939
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8722": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5919,
        5948
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4"
    },
    "8755": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5919,
        5948
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8758": {
      "op": "ADD"
    },
    "8759": {
      "fn": "WorkLock.tokenDeposit",
      "offset": [
        5919,
        5948
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAF4"
    },
    "8762": {
      "op": "JUMP"
    },
    "8763": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "8764": {
      "fn": "Ownable.isOwner",
      "offset": [
        1053,
        1057
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "8766": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "8767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8771": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8773": {
      "op": "SHL"
    },
    "8774": {
      "op": "SUB"
    },
    "8775": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "AND",
      "path": "34"
    },
    "8776": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "34"
    },
    "8777": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1096
      ],
      "op": "EQ",
      "path": "34"
    },
    "8778": {
      "offset": [
        889,
        907
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x2252"
    },
    "8781": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "8782": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "8784": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "DUP1",
      "path": "34"
    },
    "8785": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "REVERT",
      "path": "34"
    },
    "8786": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "8787": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1769,
        1797
      ],
      "op": "PUSH2",
      "path": "34",
      "statement": 97,
      "value": "0x225B"
    },
    "8790": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1788,
        1796
      ],
      "op": "DUP2",
      "path": "34"
    },
    "8791": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1769,
        1787
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x2744"
    },
    "8794": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1769,
        1797
      ],
      "op": "JUMP",
      "path": "34"
    },
    "8795": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1769,
        1797
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "8796": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "POP",
      "path": "34"
    },
    "8797": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMP",
      "path": "34"
    },
    "8798": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14020,
        14172
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8799": {
      "fn": "Ownable.isOwner",
      "offset": [
        1053,
        1057
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "8801": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "8802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8808": {
      "op": "SHL"
    },
    "8809": {
      "op": "SUB"
    },
    "8810": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "AND",
      "path": "34"
    },
    "8811": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "34"
    },
    "8812": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1096
      ],
      "op": "EQ",
      "path": "34"
    },
    "8813": {
      "offset": [
        889,
        907
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x2275"
    },
    "8816": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "8817": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "8819": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "DUP1",
      "path": "34"
    },
    "8820": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "REVERT",
      "path": "34"
    },
    "8821": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "8822": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14078,
        14099
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 98,
      "value": "0x227D"
    },
    "8825": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14078,
        14097
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13C7"
    },
    "8828": {
      "fn": "WorkLock.shutdown",
      "jump": "i",
      "offset": [
        14078,
        14099
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8829": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14078,
        14099
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8830": {
      "branch": 171,
      "fn": "WorkLock.shutdown",
      "offset": [
        14077,
        14099
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8831": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14069,
        14137
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22D4"
    },
    "8834": {
      "branch": 171,
      "fn": "WorkLock.shutdown",
      "offset": [
        14069,
        14137
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8835": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14069,
        14137
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8837": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14069,
        14137
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8838": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8842": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8844": {
      "op": "SHL"
    },
    "8845": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14069,
        14137
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8846": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14069,
        14137
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8847": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8849": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14069,
        14137
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8851": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14069,
        14137
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8852": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14069,
        14137
      ],
      "op": "ADD",
      "path": "15"
    },
    "8853": {
      "op": "MSTORE"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "8856": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8858": {
      "op": "DUP3"
    },
    "8859": {
      "op": "ADD"
    },
    "8860": {
      "op": "MSTORE"
    },
    "8861": {
      "op": "PUSH32",
      "value": "0x436C61696D696E672068617320616C7265616479206265656E20656E61626C65"
    },
    "8894": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8896": {
      "op": "DUP3"
    },
    "8897": {
      "op": "ADD"
    },
    "8898": {
      "op": "MSTORE"
    },
    "8899": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "8901": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "8903": {
      "op": "SHL"
    },
    "8904": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8906": {
      "op": "DUP3"
    },
    "8907": {
      "op": "ADD"
    },
    "8908": {
      "op": "MSTORE"
    },
    "8909": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8911": {
      "op": "ADD"
    },
    "8912": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14069,
        14137
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "8915": {
      "op": "JUMP"
    },
    "8916": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14069,
        14137
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8917": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14147,
        14165
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 99,
      "value": "0x22DC"
    },
    "8920": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14147,
        14163
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2653"
    },
    "8923": {
      "fn": "WorkLock.shutdown",
      "jump": "i",
      "offset": [
        14147,
        14165
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8924": {
      "fn": "WorkLock.shutdown",
      "offset": [
        14147,
        14165
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8925": {
      "fn": "WorkLock.shutdown",
      "jump": "o",
      "offset": [
        14020,
        14172
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8926": {
      "fn": "SafeMath.sub",
      "offset": [
        3108,
        3204
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "8927": {
      "fn": "SafeMath.sub",
      "offset": [
        3166,
        3173
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "8929": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "33",
      "statement": 100,
      "value": "0x22EA"
    },
    "8932": {
      "fn": "SafeMath.sub",
      "offset": [
        3196,
        3197
      ],
      "op": "DUP3",
      "path": "33"
    },
    "8933": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3193
      ],
      "op": "DUP5",
      "path": "33"
    },
    "8934": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2AC0"
    },
    "8937": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3192,
        3197
      ],
      "op": "JUMP",
      "path": "33"
    },
    "8938": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "8939": {
      "fn": "SafeMath.sub",
      "offset": [
        3185,
        3197
      ],
      "op": "SWAP4",
      "path": "33"
    },
    "8940": {
      "fn": "SafeMath.sub",
      "offset": [
        3108,
        3204
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "8941": {
      "op": "POP"
    },
    "8942": {
      "op": "POP"
    },
    "8943": {
      "op": "POP"
    },
    "8944": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3108,
        3204
      ],
      "op": "JUMP",
      "path": "33"
    },
    "8945": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7488,
        9414
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8946": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7626,
        7633
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "8948": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7626,
        7640
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8949": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7582,
        7589
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8951": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7582,
        7589
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8952": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7582,
        7589
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8953": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7582,
        7589
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8954": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7626,
        7656
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2324"
    },
    "8957": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7626,
        7656
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8958": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7643,
        7656
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "8991": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7643,
        7656
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8992": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7626,
        7656
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B1B"
    },
    "8995": {
      "fn": "WorkLock.ethToWork",
      "jump": "i",
      "offset": [
        7626,
        7656
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8996": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7626,
        7656
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8997": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7602,
        7656
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8998": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7602,
        7656
      ],
      "op": "POP",
      "path": "15"
    },
    "8999": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7743,
        7757
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "9001": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7743,
        7757
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9002": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7761,
        7762
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9004": {
      "branch": 172,
      "fn": "WorkLock.ethToWork",
      "offset": [
        7743,
        7762
      ],
      "op": "EQ",
      "path": "15"
    },
    "9005": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7739,
        7848
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9006": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7739,
        7848
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x233E"
    },
    "9009": {
      "branch": 172,
      "fn": "WorkLock.ethToWork",
      "offset": [
        7739,
        7848
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9010": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7785,
        7837
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 101,
      "value": "0x10B0"
    },
    "9013": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7795,
        7808
      ],
      "op": "DUP5",
      "path": "15"
    },
    "9014": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7810,
        7821
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "9016": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7810,
        7821
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9017": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7823,
        7836
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9018": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7785,
        7794
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25DE"
    },
    "9021": {
      "fn": "WorkLock.ethToWork",
      "jump": "i",
      "offset": [
        7785,
        7837
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9022": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7739,
        7848
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9023": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7858,
        7873
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9025": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7858,
        7873
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9026": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8196,
        8209
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "9059": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8157,
        8192
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x236C"
    },
    "9062": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8173,
        8192
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9063": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8157,
        8170
      ],
      "op": "DUP9",
      "path": "15"
    },
    "9064": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8157,
        8192
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B3A"
    },
    "9067": {
      "fn": "WorkLock.ethToWork",
      "jump": "i",
      "offset": [
        8157,
        8192
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9068": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8157,
        8192
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9069": {
      "branch": 173,
      "fn": "WorkLock.ethToWork",
      "offset": [
        8157,
        8209
      ],
      "op": "GT",
      "path": "15"
    },
    "9070": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8153,
        8990
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2379"
    },
    "9073": {
      "branch": 173,
      "fn": "WorkLock.ethToWork",
      "offset": [
        8153,
        8990
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9074": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8235,
        8248
      ],
      "op": "DUP6",
      "path": "15",
      "statement": 102
    },
    "9075": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8225,
        8248
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9076": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8225,
        8248
      ],
      "op": "POP",
      "path": "15"
    },
    "9077": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8153,
        8990
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23EB"
    },
    "9080": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8153,
        8990
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9081": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8153,
        8990
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9082": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8535,
        8548
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "9115": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8512,
        8531
      ],
      "op": "DUP6",
      "path": "15"
    },
    "9116": {
      "branch": 174,
      "fn": "WorkLock.ethToWork",
      "offset": [
        8512,
        8548
      ],
      "op": "LT",
      "path": "15"
    },
    "9117": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8508,
        8990
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23A7"
    },
    "9120": {
      "branch": 174,
      "fn": "WorkLock.ethToWork",
      "offset": [
        8508,
        8990
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9121": {
      "op": "POP"
    },
    "9122": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8575,
        8588
      ],
      "op": "DUP5",
      "path": "15",
      "statement": 103
    },
    "9123": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8508,
        8990
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23EB"
    },
    "9126": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8508,
        8990
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9127": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8508,
        8990
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9128": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8918,
        8931
      ],
      "op": "PUSH32",
      "path": "15",
      "statement": 104,
      "value": "0x0"
    },
    "9161": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8880,
        8915
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23D2"
    },
    "9164": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8896,
        8915
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9165": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8880,
        8893
      ],
      "op": "DUP9",
      "path": "15"
    },
    "9166": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8880,
        8915
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B3A"
    },
    "9169": {
      "fn": "WorkLock.ethToWork",
      "jump": "i",
      "offset": [
        8880,
        8915
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9170": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8880,
        8915
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9171": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8880,
        8931
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23DC"
    },
    "9174": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8880,
        8931
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9175": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8880,
        8931
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9176": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8880,
        8931
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "9179": {
      "fn": "WorkLock.ethToWork",
      "jump": "i",
      "offset": [
        8880,
        8931
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9180": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8880,
        8931
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9181": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8869,
        8931
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9182": {
      "op": "POP"
    },
    "9183": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8955,
        8979
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 105,
      "value": "0x23E8"
    },
    "9186": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8869,
        8931
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9187": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8955,
        8968
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9188": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8955,
        8979
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "9191": {
      "fn": "WorkLock.ethToWork",
      "jump": "i",
      "offset": [
        8955,
        8979
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9192": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8955,
        8979
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9193": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8945,
        8979
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9194": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8945,
        8979
      ],
      "op": "POP",
      "path": "15"
    },
    "9195": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        8508,
        8990
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9196": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9026,
        9033
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "9198": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9026,
        9040
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9199": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9000,
        9023
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9201": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9000,
        9023
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9202": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9026,
        9067
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x241C"
    },
    "9205": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9026,
        9067
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9206": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9043,
        9067
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "9239": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9043,
        9067
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9240": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9026,
        9067
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B1B"
    },
    "9243": {
      "fn": "WorkLock.ethToWork",
      "jump": "i",
      "offset": [
        9026,
        9067
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9244": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9026,
        9067
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9245": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9000,
        9067
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9246": {
      "op": "POP"
    },
    "9247": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9077,
        9089
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9249": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9107,
        9118
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9250": {
      "branch": 175,
      "fn": "WorkLock.ethToWork",
      "offset": [
        9107,
        9118
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9251": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9103,
        9202
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2434"
    },
    "9254": {
      "branch": 175,
      "fn": "WorkLock.ethToWork",
      "offset": [
        9103,
        9202
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9255": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9141,
        9191
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 106,
      "value": "0x2431"
    },
    "9258": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9151,
        9158
      ],
      "op": "DUP5",
      "path": "15"
    },
    "9259": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9160,
        9175
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9260": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9177,
        9190
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9261": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9141,
        9150
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25DE"
    },
    "9264": {
      "fn": "WorkLock.ethToWork",
      "jump": "i",
      "offset": [
        9141,
        9191
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9265": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9141,
        9191
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9266": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9134,
        9191
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9267": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9134,
        9191
      ],
      "op": "POP",
      "path": "15"
    },
    "9268": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9103,
        9202
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9269": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9216,
        9228
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9270": {
      "branch": 176,
      "fn": "WorkLock.ethToWork",
      "offset": [
        9216,
        9228
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9271": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9212,
        9386
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11A8"
    },
    "9274": {
      "branch": 176,
      "fn": "WorkLock.ethToWork",
      "offset": [
        9212,
        9386
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9275": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9244,
        9268
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9277": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9285,
        9300
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9278": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9271,
        9282
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "9280": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9271,
        9282
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9281": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9271,
        9300
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x244A"
    },
    "9284": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9271,
        9300
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9285": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9271,
        9300
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9286": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9271,
        9300
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AC0"
    },
    "9289": {
      "fn": "WorkLock.ethToWork",
      "jump": "i",
      "offset": [
        9271,
        9300
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9290": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9271,
        9300
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9291": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9244,
        9300
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9292": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9244,
        9300
      ],
      "op": "POP",
      "path": "15"
    },
    "9293": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9322,
        9375
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 107,
      "value": "0x2459"
    },
    "9296": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9332,
        9340
      ],
      "op": "DUP5",
      "path": "15"
    },
    "9297": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9342,
        9358
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9298": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9360,
        9374
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "9300": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9360,
        9374
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9301": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9322,
        9331
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25DE"
    },
    "9304": {
      "fn": "WorkLock.ethToWork",
      "jump": "i",
      "offset": [
        9322,
        9375
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9305": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9322,
        9375
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9306": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9314,
        9375
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2463"
    },
    "9309": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9314,
        9375
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9310": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9314,
        9375
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9311": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9314,
        9375
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B3A"
    },
    "9314": {
      "fn": "WorkLock.ethToWork",
      "jump": "i",
      "offset": [
        9314,
        9375
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9315": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9314,
        9375
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9316": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9314,
        9375
      ],
      "op": "SWAP10",
      "path": "15"
    },
    "9317": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        9403,
        9407
      ],
      "op": "SWAP9",
      "path": "15",
      "statement": 108
    },
    "9318": {
      "op": "POP"
    },
    "9319": {
      "op": "POP"
    },
    "9320": {
      "op": "POP"
    },
    "9321": {
      "op": "POP"
    },
    "9322": {
      "op": "POP"
    },
    "9323": {
      "op": "POP"
    },
    "9324": {
      "op": "POP"
    },
    "9325": {
      "op": "POP"
    },
    "9326": {
      "op": "POP"
    },
    "9327": {
      "fn": "WorkLock.ethToWork",
      "jump": "o",
      "offset": [
        7488,
        9414
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9328": {
      "fn": "SafeMath.add",
      "offset": [
        2741,
        2837
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "9329": {
      "fn": "SafeMath.add",
      "offset": [
        2799,
        2806
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "9331": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "33",
      "statement": 109,
      "value": "0x22EA"
    },
    "9334": {
      "fn": "SafeMath.add",
      "offset": [
        2829,
        2830
      ],
      "op": "DUP3",
      "path": "33"
    },
    "9335": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2826
      ],
      "op": "DUP5",
      "path": "33"
    },
    "9336": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2B3A"
    },
    "9339": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2825,
        2830
      ],
      "op": "JUMP",
      "path": "33"
    },
    "9340": {
      "fn": "Address.sendValue",
      "offset": [
        2065,
        2377
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "9341": {
      "fn": "Address.sendValue",
      "offset": [
        2179,
        2185
      ],
      "op": "DUP1",
      "path": "40",
      "statement": 110
    },
    "9342": {
      "fn": "Address.sendValue",
      "offset": [
        2154,
        2175
      ],
      "op": "SELFBALANCE",
      "path": "40"
    },
    "9343": {
      "fn": "Address.sendValue",
      "offset": [
        2154,
        2185
      ],
      "op": "LT",
      "path": "40"
    },
    "9344": {
      "branch": 177,
      "fn": "Address.sendValue",
      "offset": [
        2154,
        2185
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "9345": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x24CC"
    },
    "9348": {
      "branch": 177,
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "9349": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "9351": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "9352": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9356": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9358": {
      "op": "SHL"
    },
    "9359": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "DUP2",
      "path": "40"
    },
    "9360": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "9361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9363": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "9365": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "DUP3",
      "path": "40"
    },
    "9366": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "ADD",
      "path": "40"
    },
    "9367": {
      "op": "MSTORE"
    },
    "9368": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "9370": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9372": {
      "op": "DUP3"
    },
    "9373": {
      "op": "ADD"
    },
    "9374": {
      "op": "MSTORE"
    },
    "9375": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E6365000000"
    },
    "9408": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9410": {
      "op": "DUP3"
    },
    "9411": {
      "op": "ADD"
    },
    "9412": {
      "op": "MSTORE"
    },
    "9413": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9415": {
      "op": "ADD"
    },
    "9416": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x895"
    },
    "9419": {
      "op": "JUMP"
    },
    "9420": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "9421": {
      "fn": "Address.sendValue",
      "offset": [
        2231,
        2243
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "9423": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2258
      ],
      "op": "DUP3",
      "path": "40"
    },
    "9424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9430": {
      "op": "SHL"
    },
    "9431": {
      "op": "SUB"
    },
    "9432": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2263
      ],
      "op": "AND",
      "path": "40"
    },
    "9433": {
      "fn": "Address.sendValue",
      "offset": [
        2271,
        2277
      ],
      "op": "DUP3",
      "path": "40"
    },
    "9434": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "9436": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "9437": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "9439": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "9441": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "9442": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP1",
      "path": "40"
    },
    "9443": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP4",
      "path": "40"
    },
    "9444": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "SUB",
      "path": "40"
    },
    "9445": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP2",
      "path": "40"
    },
    "9446": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP6",
      "path": "40"
    },
    "9447": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP8",
      "path": "40"
    },
    "9448": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "GAS",
      "path": "40"
    },
    "9449": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "CALL",
      "path": "40"
    },
    "9450": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "9451": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "9452": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "9453": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "9454": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "9455": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP1",
      "path": "40"
    },
    "9456": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "9458": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP2",
      "path": "40"
    },
    "9459": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "EQ",
      "path": "40"
    },
    "9460": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2519"
    },
    "9463": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "9464": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "9466": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "9467": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "9468": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "9469": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1F"
    },
    "9471": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "NOT",
      "path": "40"
    },
    "9472": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x3F"
    },
    "9474": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "9475": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "ADD",
      "path": "40"
    },
    "9476": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "AND",
      "path": "40"
    },
    "9477": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP3",
      "path": "40"
    },
    "9478": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "ADD",
      "path": "40"
    },
    "9479": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "9481": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "9482": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "9483": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP3",
      "path": "40"
    },
    "9484": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "9485": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "9486": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "9488": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "9490": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP5",
      "path": "40"
    },
    "9491": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "ADD",
      "path": "40"
    },
    "9492": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "RETURNDATACOPY",
      "path": "40"
    },
    "9493": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x251E"
    },
    "9496": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "JUMP",
      "path": "40"
    },
    "9497": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "9498": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "9500": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "9501": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "9502": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "9503": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "9504": {
      "fn": "Address.sendValue",
      "offset": [
        2230,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "9505": {
      "fn": "Address.sendValue",
      "offset": [
        2230,
        2282
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "9506": {
      "fn": "Address.sendValue",
      "offset": [
        2230,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "9507": {
      "branch": 178,
      "fn": "Address.sendValue",
      "offset": [
        2300,
        2307
      ],
      "op": "DUP1",
      "path": "40",
      "statement": 111
    },
    "9508": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2595"
    },
    "9511": {
      "branch": 178,
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "9512": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "9514": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "9515": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9519": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9521": {
      "op": "SHL"
    },
    "9522": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "DUP2",
      "path": "40"
    },
    "9523": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "9524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9526": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "9528": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "DUP3",
      "path": "40"
    },
    "9529": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "ADD",
      "path": "40"
    },
    "9530": {
      "op": "MSTORE"
    },
    "9531": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "9533": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9535": {
      "op": "DUP3"
    },
    "9536": {
      "op": "ADD"
    },
    "9537": {
      "op": "MSTORE"
    },
    "9538": {
      "op": "PUSH32",
      "value": "0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072"
    },
    "9571": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9573": {
      "op": "DUP3"
    },
    "9574": {
      "op": "ADD"
    },
    "9575": {
      "op": "MSTORE"
    },
    "9576": {
      "op": "PUSH32",
      "value": "0x6563697069656E74206D61792068617665207265766572746564000000000000"
    },
    "9609": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9611": {
      "op": "DUP3"
    },
    "9612": {
      "op": "ADD"
    },
    "9613": {
      "op": "MSTORE"
    },
    "9614": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9616": {
      "op": "ADD"
    },
    "9617": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x895"
    },
    "9620": {
      "op": "JUMP"
    },
    "9621": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "9622": {
      "fn": "Address.sendValue",
      "offset": [
        2136,
        2377
      ],
      "op": "POP",
      "path": "40"
    },
    "9623": {
      "fn": "Address.sendValue",
      "offset": [
        2065,
        2377
      ],
      "op": "POP",
      "path": "40"
    },
    "9624": {
      "fn": "Address.sendValue",
      "offset": [
        2065,
        2377
      ],
      "op": "POP",
      "path": "40"
    },
    "9625": {
      "fn": "Address.sendValue",
      "jump": "o",
      "offset": [
        2065,
        2377
      ],
      "op": "JUMP",
      "path": "40"
    },
    "9626": {
      "fn": "WorkLock.workToETH",
      "offset": [
        9827,
        10068
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9627": {
      "fn": "WorkLock.workToETH",
      "offset": [
        9943,
        9950
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9629": {
      "fn": "WorkLock.workToETH",
      "offset": [
        9973,
        10061
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 112,
      "value": "0x17B7"
    },
    "9632": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10028,
        10060
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25AA"
    },
    "9635": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10028,
        10040
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9636": {
      "offset": [
        1457,
        1460
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "9638": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10028,
        10044
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2618"
    },
    "9641": {
      "fn": "WorkLock.workToETH",
      "jump": "i",
      "offset": [
        10028,
        10060
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9642": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10028,
        10060
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9643": {
      "fn": "WorkLock.workToETH",
      "offset": [
        9973,
        10023
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1787"
    },
    "9646": {
      "fn": "WorkLock.workToETH",
      "offset": [
        10008,
        10022
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "9679": {
      "fn": "WorkLock.workToETH",
      "offset": [
        9973,
        10003
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25D8"
    },
    "9682": {
      "fn": "WorkLock.workToETH",
      "offset": [
        9973,
        9987
      ],
      "op": "DUP9",
      "path": "15"
    },
    "9683": {
      "fn": "WorkLock.workToETH",
      "offset": [
        9992,
        10002
      ],
      "op": "DUP9",
      "path": "15"
    },
    "9684": {
      "fn": "WorkLock.workToETH",
      "offset": [
        9973,
        9991
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2618"
    },
    "9687": {
      "fn": "WorkLock.workToETH",
      "jump": "i",
      "offset": [
        9973,
        10003
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9688": {
      "fn": "WorkLock.workToETH",
      "offset": [
        9973,
        10003
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9689": {
      "fn": "WorkLock.workToETH",
      "offset": [
        9973,
        10007
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9690": {
      "fn": "WorkLock.workToETH",
      "offset": [
        9973,
        10007
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2618"
    },
    "9693": {
      "fn": "WorkLock.workToETH",
      "jump": "i",
      "offset": [
        9973,
        10023
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9694": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        6801,
        7038
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9695": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        6913,
        6920
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9697": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        6943,
        7031
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 113,
      "value": "0x17B7"
    },
    "9700": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7000,
        7030
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x260D"
    },
    "9703": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7000,
        7010
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9704": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7015,
        7029
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "9737": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7000,
        7014
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2618"
    },
    "9740": {
      "fn": "WorkLock.ethToWork",
      "jump": "i",
      "offset": [
        7000,
        7030
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9741": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        7000,
        7030
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9742": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        6943,
        6991
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F47"
    },
    "9745": {
      "offset": [
        1457,
        1460
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "9747": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        6943,
        6971
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25D8"
    },
    "9750": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        6943,
        6953
      ],
      "op": "DUP9",
      "path": "15"
    },
    "9751": {
      "fn": "WorkLock.ethToWork",
      "offset": [
        6958,
        6970
      ],
      "op": "DUP9",
      "path": "15"
    },
    "9752": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "9753": {
      "fn": "SafeMath.mul",
      "offset": [
        3509,
        3516
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "9755": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "33",
      "statement": 114,
      "value": "0x22EA"
    },
    "9758": {
      "fn": "SafeMath.mul",
      "offset": [
        3539,
        3540
      ],
      "op": "DUP3",
      "path": "33"
    },
    "9759": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3536
      ],
      "op": "DUP5",
      "path": "33"
    },
    "9760": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2B1B"
    },
    "9763": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMP",
      "path": "33"
    },
    "9764": {
      "fn": "SafeMath.div",
      "offset": [
        3836,
        3932
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "9765": {
      "fn": "SafeMath.div",
      "offset": [
        3894,
        3901
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "9767": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "33",
      "statement": 115,
      "value": "0x22EA"
    },
    "9770": {
      "fn": "SafeMath.div",
      "offset": [
        3924,
        3925
      ],
      "op": "DUP3",
      "path": "33"
    },
    "9771": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3921
      ],
      "op": "DUP5",
      "path": "33"
    },
    "9772": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2AD7"
    },
    "9775": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3920,
        3925
      ],
      "op": "JUMP",
      "path": "33"
    },
    "9776": {
      "fn": "AdditionalMath.divCeil",
      "offset": [
        490,
        603
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9777": {
      "fn": "AdditionalMath.divCeil",
      "offset": [
        552,
        559
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "9779": {
      "fn": "AdditionalMath.divCeil",
      "offset": [
        595,
        596
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 116
    },
    "9780": {
      "fn": "AdditionalMath.divCeil",
      "offset": [
        590,
        591
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "9782": {
      "fn": "AdditionalMath.divCeil",
      "offset": [
        579,
        587
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x263F"
    },
    "9785": {
      "fn": "AdditionalMath.divCeil",
      "offset": [
        579,
        580
      ],
      "op": "DUP6",
      "path": "19"
    },
    "9786": {
      "fn": "AdditionalMath.divCeil",
      "offset": [
        595,
        596
      ],
      "op": "DUP4",
      "path": "19"
    },
    "9787": {
      "fn": "AdditionalMath.divCeil",
      "offset": [
        579,
        584
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2470"
    },
    "9790": {
      "fn": "AdditionalMath.divCeil",
      "jump": "i",
      "offset": [
        579,
        587
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9791": {
      "fn": "AdditionalMath.divCeil",
      "offset": [
        579,
        587
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9792": {
      "fn": "AdditionalMath.divCeil",
      "offset": [
        579,
        591
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2649"
    },
    "9795": {
      "fn": "AdditionalMath.divCeil",
      "offset": [
        579,
        591
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9796": {
      "fn": "AdditionalMath.divCeil",
      "offset": [
        579,
        591
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9797": {
      "fn": "AdditionalMath.divCeil",
      "offset": [
        579,
        591
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2AC0"
    },
    "9800": {
      "fn": "AdditionalMath.divCeil",
      "jump": "i",
      "offset": [
        579,
        591
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9801": {
      "fn": "AdditionalMath.divCeil",
      "offset": [
        579,
        591
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "9802": {
      "fn": "AdditionalMath.divCeil",
      "offset": [
        578,
        596
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x22EA"
    },
    "9805": {
      "fn": "AdditionalMath.divCeil",
      "offset": [
        578,
        596
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "9806": {
      "fn": "AdditionalMath.divCeil",
      "offset": [
        578,
        596
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "9807": {
      "fn": "AdditionalMath.divCeil",
      "offset": [
        578,
        596
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2AD7"
    },
    "9810": {
      "fn": "AdditionalMath.divCeil",
      "jump": "i",
      "offset": [
        578,
        596
      ],
      "op": "JUMP",
      "path": "19"
    },
    "9811": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14291,
        14553
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9812": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14353,
        14354
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 117,
      "value": "0x0"
    },
    "9814": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14338,
        14350
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "9816": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14338,
        14354
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9817": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14338,
        14354
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9818": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14338,
        14354
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9819": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14364,
        14374
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 118,
      "value": "0x3"
    },
    "9821": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14364,
        14378
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9822": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9824": {
      "op": "NOT"
    },
    "9825": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14388,
        14407
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 119,
      "value": "0x4"
    },
    "9827": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14388,
        14427
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9828": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14471,
        14511
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 120,
      "value": "0x26AC"
    },
    "9831": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14490,
        14497
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2678"
    },
    "9834": {
      "fn": "Ownable.owner",
      "offset": [
        731,
        738
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "9836": {
      "fn": "Ownable.owner",
      "offset": [
        757,
        763
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "9837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9843": {
      "op": "SHL"
    },
    "9844": {
      "op": "SUB"
    },
    "9845": {
      "fn": "Ownable.owner",
      "offset": [
        757,
        763
      ],
      "op": "AND",
      "path": "34"
    },
    "9846": {
      "fn": "Ownable.owner",
      "offset": [
        757,
        763
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "9847": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "JUMP",
      "path": "34"
    },
    "9848": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14490,
        14497
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9849": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14499,
        14510
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "9851": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14499,
        14510
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9858": {
      "op": "SHL"
    },
    "9859": {
      "op": "SUB"
    },
    "9860": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14471,
        14476
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x0"
    },
    "9893": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14471,
        14489
      ],
      "op": "AND",
      "path": "15"
    },
    "9894": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14471,
        14489
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9895": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14471,
        14511
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9896": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14471,
        14489
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27B2"
    },
    "9899": {
      "fn": "WorkLock.internalShutdown",
      "jump": "i",
      "offset": [
        14471,
        14511
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9900": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14471,
        14511
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9901": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14526,
        14546
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 121,
      "value": "0x40"
    },
    "9903": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14526,
        14546
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9904": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14535,
        14545
      ],
      "op": "CALLER",
      "path": "15"
    },
    "9905": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14535,
        14545
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9906": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14526,
        14546
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x28B4C24CB1012C094CD2F59F98E89D791973295F8FDA6EAA118022D6D318960A"
    },
    "9939": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14526,
        14546
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9940": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14526,
        14546
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9942": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14526,
        14546
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9943": {
      "fn": "WorkLock.internalShutdown",
      "offset": [
        14526,
        14546
      ],
      "op": "LOG2",
      "path": "15"
    },
    "9944": {
      "fn": "WorkLock.internalShutdown",
      "jump": "o",
      "offset": [
        14291,
        14553
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9945": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        908,
        1149
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "9946": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 122,
      "value": "0x40"
    },
    "9948": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "9949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9955": {
      "op": "SHL"
    },
    "9956": {
      "op": "SUB"
    },
    "9957": {
      "op": "DUP1"
    },
    "9958": {
      "op": "DUP6"
    },
    "9959": {
      "op": "AND"
    },
    "9960": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x24"
    },
    "9962": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "DUP4",
      "path": "39"
    },
    "9963": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "ADD",
      "path": "39"
    },
    "9964": {
      "op": "MSTORE"
    },
    "9965": {
      "op": "DUP4"
    },
    "9966": {
      "op": "AND"
    },
    "9967": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9969": {
      "op": "DUP3"
    },
    "9970": {
      "op": "ADD"
    },
    "9971": {
      "op": "MSTORE"
    },
    "9972": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9974": {
      "op": "DUP2"
    },
    "9975": {
      "op": "ADD"
    },
    "9976": {
      "op": "DUP3"
    },
    "9977": {
      "op": "SWAP1"
    },
    "9978": {
      "op": "MSTORE"
    },
    "9979": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1046,
        1142
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1B67"
    },
    "9982": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1046,
        1142
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "9983": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1066,
        1071
      ],
      "op": "DUP6",
      "path": "39"
    },
    "9984": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1066,
        1071
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "9985": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "9990": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9992": {
      "op": "SHL"
    },
    "9993": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1096,
        1123
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "9994": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9996": {
      "op": "ADD"
    },
    "9997": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "9998": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "10000": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "DUP1",
      "path": "39"
    },
    "10001": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "10002": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10004": {
      "op": "NOT"
    },
    "10005": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "DUP2",
      "path": "39"
    },
    "10006": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "DUP5",
      "path": "39"
    },
    "10007": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "SUB",
      "path": "39"
    },
    "10008": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "ADD",
      "path": "39"
    },
    "10009": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "DUP2",
      "path": "39"
    },
    "10010": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "10011": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "10012": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "10013": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "10014": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "10016": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "DUP2",
      "path": "39"
    },
    "10017": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "ADD",
      "path": "39"
    },
    "10018": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "DUP1",
      "path": "39"
    },
    "10019": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "10020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10024": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10026": {
      "op": "SHL"
    },
    "10027": {
      "op": "SUB"
    },
    "10028": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "AND",
      "path": "39"
    },
    "10029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10033": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10035": {
      "op": "SHL"
    },
    "10036": {
      "op": "SUB"
    },
    "10037": {
      "op": "NOT"
    },
    "10038": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "10039": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "SWAP4",
      "path": "39"
    },
    "10040": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "AND",
      "path": "39"
    },
    "10041": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "10042": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "10043": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "10044": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "OR",
      "path": "39"
    },
    "10045": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "10046": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "10047": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "10048": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1046,
        1065
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x27E2"
    },
    "10051": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1046,
        1142
      ],
      "op": "JUMP",
      "path": "39"
    },
    "10052": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1948,
        2131
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "10053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10059": {
      "op": "SHL"
    },
    "10060": {
      "op": "SUB"
    },
    "10061": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2021,
        2043
      ],
      "op": "DUP2",
      "path": "34",
      "statement": 123
    },
    "10062": {
      "branch": 181,
      "fn": "Ownable._transferOwnership",
      "offset": [
        2021,
        2043
      ],
      "op": "AND",
      "path": "34"
    },
    "10063": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x2757"
    },
    "10066": {
      "branch": 181,
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "10067": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "10069": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "DUP1",
      "path": "34"
    },
    "10070": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "REVERT",
      "path": "34"
    },
    "10071": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "10072": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 124,
      "value": "0x0"
    },
    "10074": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "DUP1",
      "path": "34"
    },
    "10075": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "10076": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "10078": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "10079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10085": {
      "op": "SHL"
    },
    "10086": {
      "op": "SUB"
    },
    "10087": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "DUP1",
      "path": "34"
    },
    "10088": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "DUP6",
      "path": "34"
    },
    "10089": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "AND",
      "path": "34"
    },
    "10090": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "SWAP4",
      "path": "34"
    },
    "10091": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "10092": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "AND",
      "path": "34"
    },
    "10093": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "10094": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "PUSH32",
      "path": "34",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "10127": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "10128": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "LOG3",
      "path": "34"
    },
    "10129": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2113
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 125,
      "value": "0x0"
    },
    "10131": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "DUP1",
      "path": "34"
    },
    "10132": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "10133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10139": {
      "op": "SHL"
    },
    "10140": {
      "op": "SUB"
    },
    "10141": {
      "op": "NOT"
    },
    "10142": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "AND",
      "path": "34"
    },
    "10143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10149": {
      "op": "SHL"
    },
    "10150": {
      "op": "SUB"
    },
    "10151": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "10152": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10153": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "10154": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "AND",
      "path": "34"
    },
    "10155": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "10156": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10157": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "10158": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "OR",
      "path": "34"
    },
    "10159": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10160": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SSTORE",
      "path": "34"
    },
    "10161": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        1948,
        2131
      ],
      "op": "JUMP",
      "path": "34"
    },
    "10162": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        697,
        902
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "10163": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 126,
      "value": "0x40"
    },
    "10165": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "10166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10172": {
      "op": "SHL"
    },
    "10173": {
      "op": "SUB"
    },
    "10174": {
      "op": "DUP4"
    },
    "10175": {
      "op": "AND"
    },
    "10176": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x24"
    },
    "10178": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "DUP3",
      "path": "39"
    },
    "10179": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "ADD",
      "path": "39"
    },
    "10180": {
      "op": "MSTORE"
    },
    "10181": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10183": {
      "op": "DUP2"
    },
    "10184": {
      "op": "ADD"
    },
    "10185": {
      "op": "DUP3"
    },
    "10186": {
      "op": "SWAP1"
    },
    "10187": {
      "op": "MSTORE"
    },
    "10188": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        809,
        895
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2595"
    },
    "10191": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        809,
        895
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "10192": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        829,
        834
      ],
      "op": "DUP5",
      "path": "39"
    },
    "10193": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        829,
        834
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "10194": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "10199": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10201": {
      "op": "SHL"
    },
    "10202": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        859,
        882
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "10203": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10205": {
      "op": "ADD"
    },
    "10206": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x270D"
    },
    "10209": {
      "op": "JUMP"
    },
    "10210": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3203,
        3909
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "10211": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3622,
        3645
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "10213": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2837"
    },
    "10216": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3676,
        3680
      ],
      "op": "DUP3",
      "path": "39"
    },
    "10217": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "10219": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "10220": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "DUP1",
      "path": "39"
    },
    "10221": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "10223": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "ADD",
      "path": "39"
    },
    "10224": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "10226": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "10227": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "DUP1",
      "path": "39"
    },
    "10228": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "10230": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "DUP2",
      "path": "39"
    },
    "10231": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "10232": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "10234": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "ADD",
      "path": "39"
    },
    "10235": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "PUSH32",
      "path": "39",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "10268": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "DUP2",
      "path": "39"
    },
    "10269": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "10270": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "POP",
      "path": "39"
    },
    "10271": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3656,
        3661
      ],
      "op": "DUP6",
      "path": "39"
    },
    "10272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10278": {
      "op": "SHL"
    },
    "10279": {
      "op": "SUB"
    },
    "10280": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3675
      ],
      "op": "AND",
      "path": "39"
    },
    "10281": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3675
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x28B4"
    },
    "10284": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3675
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "10285": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "10286": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "10287": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "10288": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xFFFFFFFF"
    },
    "10293": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "AND",
      "path": "39"
    },
    "10294": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3648,
        3717
      ],
      "op": "JUMP",
      "path": "39"
    },
    "10295": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "10296": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3748
      ],
      "op": "DUP1",
      "path": "39"
    },
    "10297": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3748
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "10298": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3622,
        3717
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "10299": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3622,
        3717
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "10300": {
      "op": "POP"
    },
    "10301": {
      "branch": 182,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3752
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "10302": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3903
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2595"
    },
    "10305": {
      "branch": 182,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3903
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "10306": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3826,
        3836
      ],
      "op": "DUP1",
      "path": "39",
      "statement": 127
    },
    "10307": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "DUP1",
      "path": "39"
    },
    "10308": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "10310": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "ADD",
      "path": "39"
    },
    "10311": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "10312": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "10313": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "DUP2",
      "path": "39"
    },
    "10314": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "ADD",
      "path": "39"
    },
    "10315": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "10316": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2855"
    },
    "10319": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "10320": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "10321": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2AF9"
    },
    "10324": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3815,
        3845
      ],
      "op": "JUMP",
      "path": "39"
    },
    "10325": {
      "branch": 183,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "10326": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2595"
    },
    "10329": {
      "branch": 183,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "10330": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "10332": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "10333": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10337": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10339": {
      "op": "SHL"
    },
    "10340": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "DUP2",
      "path": "39"
    },
    "10341": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "10342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10344": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "10346": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "DUP3",
      "path": "39"
    },
    "10347": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "ADD",
      "path": "39"
    },
    "10348": {
      "op": "MSTORE"
    },
    "10349": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "10351": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10353": {
      "op": "DUP3"
    },
    "10354": {
      "op": "ADD"
    },
    "10355": {
      "op": "MSTORE"
    },
    "10356": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "10389": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10391": {
      "op": "DUP3"
    },
    "10392": {
      "op": "ADD"
    },
    "10393": {
      "op": "MSTORE"
    },
    "10394": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "10405": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "10407": {
      "op": "SHL"
    },
    "10408": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10410": {
      "op": "DUP3"
    },
    "10411": {
      "op": "ADD"
    },
    "10412": {
      "op": "MSTORE"
    },
    "10413": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10415": {
      "op": "ADD"
    },
    "10416": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x895"
    },
    "10419": {
      "op": "JUMP"
    },
    "10420": {
      "fn": "Address.functionCall",
      "offset": [
        3514,
        3737
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "10421": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3659
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "10423": {
      "fn": "Address.functionCall",
      "offset": [
        3678,
        3730
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 128,
      "value": "0x17B7"
    },
    "10426": {
      "fn": "Address.functionCall",
      "offset": [
        3700,
        3706
      ],
      "op": "DUP5",
      "path": "40"
    },
    "10427": {
      "fn": "Address.functionCall",
      "offset": [
        3708,
        3712
      ],
      "op": "DUP5",
      "path": "40"
    },
    "10428": {
      "fn": "Address.functionCall",
      "offset": [
        3714,
        3715
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "10430": {
      "fn": "Address.functionCall",
      "offset": [
        3717,
        3729
      ],
      "op": "DUP6",
      "path": "40"
    },
    "10431": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3659
      ],
      "op": "DUP6",
      "path": "40"
    },
    "10432": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "DUP5",
      "path": "40"
    },
    "10433": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "40"
    },
    "10434": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 129,
      "value": "0x290D"
    },
    "10437": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "10438": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "10440": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "10441": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10445": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10447": {
      "op": "SHL"
    },
    "10448": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "DUP2",
      "path": "40"
    },
    "10449": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "10450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10452": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "10454": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "DUP3",
      "path": "40"
    },
    "10455": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "ADD",
      "path": "40"
    },
    "10456": {
      "op": "MSTORE"
    },
    "10457": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "10459": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10461": {
      "op": "DUP3"
    },
    "10462": {
      "op": "ADD"
    },
    "10463": {
      "op": "MSTORE"
    },
    "10464": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "10497": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10499": {
      "op": "DUP3"
    },
    "10500": {
      "op": "ADD"
    },
    "10501": {
      "op": "MSTORE"
    },
    "10502": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10504": {
      "op": "ADD"
    },
    "10505": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x895"
    },
    "10508": {
      "op": "JUMP"
    },
    "10509": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "10510": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4953,
        4965
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "10512": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4990
      ],
      "op": "DUP1",
      "path": "40"
    },
    "10513": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5000
      ],
      "op": "DUP7",
      "path": "40"
    },
    "10514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10520": {
      "op": "SHL"
    },
    "10521": {
      "op": "SUB"
    },
    "10522": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5005
      ],
      "op": "AND",
      "path": "40"
    },
    "10523": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5013,
        5018
      ],
      "op": "DUP6",
      "path": "40"
    },
    "10524": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5020,
        5024
      ],
      "op": "DUP8",
      "path": "40"
    },
    "10525": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "10527": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "10528": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2929"
    },
    "10531": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "10532": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "10533": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2C70"
    },
    "10536": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMP",
      "path": "40"
    },
    "10537": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "10538": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "10540": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "10542": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "10543": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP1",
      "path": "40"
    },
    "10544": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP4",
      "path": "40"
    },
    "10545": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SUB",
      "path": "40"
    },
    "10546": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP2",
      "path": "40"
    },
    "10547": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP6",
      "path": "40"
    },
    "10548": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP8",
      "path": "40"
    },
    "10549": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "GAS",
      "path": "40"
    },
    "10550": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "CALL",
      "path": "40"
    },
    "10551": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "10552": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "40"
    },
    "10553": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "40"
    },
    "10554": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "40"
    },
    "10555": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "10556": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP1",
      "path": "40"
    },
    "10557": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "10559": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP2",
      "path": "40"
    },
    "10560": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "EQ",
      "path": "40"
    },
    "10561": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2966"
    },
    "10564": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "10565": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "10567": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "10568": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "10569": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "40"
    },
    "10570": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1F"
    },
    "10572": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "NOT",
      "path": "40"
    },
    "10573": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x3F"
    },
    "10575": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "10576": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "ADD",
      "path": "40"
    },
    "10577": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "AND",
      "path": "40"
    },
    "10578": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP3",
      "path": "40"
    },
    "10579": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "ADD",
      "path": "40"
    },
    "10580": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "10582": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "10583": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "10584": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP3",
      "path": "40"
    },
    "10585": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "10586": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "10587": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "10589": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "10591": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP5",
      "path": "40"
    },
    "10592": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "ADD",
      "path": "40"
    },
    "10593": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATACOPY",
      "path": "40"
    },
    "10594": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x296B"
    },
    "10597": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMP",
      "path": "40"
    },
    "10598": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "10599": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "10601": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "10602": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "40"
    },
    "10603": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "10604": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "40"
    },
    "10605": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4952,
        5025
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "10606": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4952,
        5025
      ],
      "op": "POP",
      "path": "40"
    },
    "10607": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4952,
        5025
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "10608": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4952,
        5025
      ],
      "op": "POP",
      "path": "40"
    },
    "10609": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5093
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 130,
      "value": "0x11A8"
    },
    "10612": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5059,
        5066
      ],
      "op": "DUP3",
      "path": "40"
    },
    "10613": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5068,
        5078
      ],
      "op": "DUP3",
      "path": "40"
    },
    "10614": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5080,
        5092
      ],
      "op": "DUP7",
      "path": "40"
    },
    "10615": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7360,
        7372
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "10617": {
      "branch": 179,
      "fn": "Address.verifyCallResult",
      "offset": [
        7388,
        7395
      ],
      "op": "DUP4",
      "path": "40"
    },
    "10618": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7384,
        7900
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "10619": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7384,
        7900
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2985"
    },
    "10622": {
      "branch": 179,
      "fn": "Address.verifyCallResult",
      "offset": [
        7384,
        7900
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "10623": {
      "op": "POP"
    },
    "10624": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7418,
        7428
      ],
      "op": "DUP2",
      "path": "40",
      "statement": 131
    },
    "10625": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7411,
        7428
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x22EA"
    },
    "10628": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7411,
        7428
      ],
      "op": "JUMP",
      "path": "40"
    },
    "10629": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7384,
        7900
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "10630": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7529,
        7546
      ],
      "op": "DUP3",
      "path": "40"
    },
    "10631": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7529,
        7546
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "10632": {
      "branch": 180,
      "fn": "Address.verifyCallResult",
      "offset": [
        7529,
        7550
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "10633": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7525,
        7890
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2995"
    },
    "10636": {
      "branch": 180,
      "fn": "Address.verifyCallResult",
      "offset": [
        7525,
        7890
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "10637": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7723,
        7733
      ],
      "op": "DUP3",
      "path": "40"
    },
    "10638": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7717,
        7734
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "10639": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7783,
        7798
      ],
      "op": "DUP1",
      "path": "40"
    },
    "10640": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7770,
        7780
      ],
      "op": "DUP5",
      "path": "40"
    },
    "10641": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7766,
        7768
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "10643": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7762,
        7781
      ],
      "op": "ADD",
      "path": "40"
    },
    "10644": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7755,
        7799
      ],
      "op": "REVERT",
      "path": "40"
    },
    "10645": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7525,
        7890
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "10646": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7862,
        7874
      ],
      "op": "DUP2",
      "path": "40",
      "statement": 132
    },
    "10647": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "10649": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "10650": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10654": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10656": {
      "op": "SHL"
    },
    "10657": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "DUP2",
      "path": "40"
    },
    "10658": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "10659": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "10661": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "ADD",
      "path": "40"
    },
    "10662": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x895"
    },
    "10665": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "10666": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "10667": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2C8C"
    },
    "10670": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        7855,
        7875
      ],
      "op": "JUMP",
      "path": "40"
    },
    "10671": {
      "op": "JUMPDEST"
    },
    "10672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10678": {
      "op": "SHL"
    },
    "10679": {
      "op": "SUB"
    },
    "10680": {
      "op": "DUP2"
    },
    "10681": {
      "op": "AND"
    },
    "10682": {
      "op": "DUP2"
    },
    "10683": {
      "op": "EQ"
    },
    "10684": {
      "op": "PUSH2",
      "value": "0x225B"
    },
    "10687": {
      "op": "JUMPI"
    },
    "10688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10690": {
      "op": "DUP1"
    },
    "10691": {
      "op": "REVERT"
    },
    "10692": {
      "op": "JUMPDEST"
    },
    "10693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10697": {
      "op": "DUP3"
    },
    "10698": {
      "op": "DUP5"
    },
    "10699": {
      "op": "SUB"
    },
    "10700": {
      "op": "SLT"
    },
    "10701": {
      "op": "ISZERO"
    },
    "10702": {
      "op": "PUSH2",
      "value": "0x29D6"
    },
    "10705": {
      "op": "JUMPI"
    },
    "10706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10708": {
      "op": "DUP1"
    },
    "10709": {
      "op": "REVERT"
    },
    "10710": {
      "op": "JUMPDEST"
    },
    "10711": {
      "op": "DUP2"
    },
    "10712": {
      "op": "CALLDATALOAD"
    },
    "10713": {
      "op": "PUSH2",
      "value": "0x22EA"
    },
    "10716": {
      "op": "DUP2"
    },
    "10717": {
      "op": "PUSH2",
      "value": "0x29AF"
    },
    "10720": {
      "jump": "i",
      "op": "JUMP"
    },
    "10721": {
      "op": "JUMPDEST"
    },
    "10722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10726": {
      "op": "DUP3"
    },
    "10727": {
      "op": "DUP5"
    },
    "10728": {
      "op": "SUB"
    },
    "10729": {
      "op": "SLT"
    },
    "10730": {
      "op": "ISZERO"
    },
    "10731": {
      "op": "PUSH2",
      "value": "0x29F3"
    },
    "10734": {
      "op": "JUMPI"
    },
    "10735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10737": {
      "op": "DUP1"
    },
    "10738": {
      "op": "REVERT"
    },
    "10739": {
      "op": "JUMPDEST"
    },
    "10740": {
      "op": "POP"
    },
    "10741": {
      "op": "CALLDATALOAD"
    },
    "10742": {
      "op": "SWAP2"
    },
    "10743": {
      "op": "SWAP1"
    },
    "10744": {
      "op": "POP"
    },
    "10745": {
      "jump": "o",
      "op": "JUMP"
    },
    "10746": {
      "op": "JUMPDEST"
    },
    "10747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10749": {
      "op": "DUP1"
    },
    "10750": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10752": {
      "op": "DUP4"
    },
    "10753": {
      "op": "DUP6"
    },
    "10754": {
      "op": "SUB"
    },
    "10755": {
      "op": "SLT"
    },
    "10756": {
      "op": "ISZERO"
    },
    "10757": {
      "op": "PUSH2",
      "value": "0x2A0D"
    },
    "10760": {
      "op": "JUMPI"
    },
    "10761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10763": {
      "op": "DUP1"
    },
    "10764": {
      "op": "REVERT"
    },
    "10765": {
      "op": "JUMPDEST"
    },
    "10766": {
      "op": "POP"
    },
    "10767": {
      "op": "POP"
    },
    "10768": {
      "op": "DUP1"
    },
    "10769": {
      "op": "CALLDATALOAD"
    },
    "10770": {
      "op": "SWAP3"
    },
    "10771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10773": {
      "op": "SWAP1"
    },
    "10774": {
      "op": "SWAP2"
    },
    "10775": {
      "op": "ADD"
    },
    "10776": {
      "op": "CALLDATALOAD"
    },
    "10777": {
      "op": "SWAP2"
    },
    "10778": {
      "op": "POP"
    },
    "10779": {
      "jump": "o",
      "op": "JUMP"
    },
    "10780": {
      "op": "JUMPDEST"
    },
    "10781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10783": {
      "op": "DUP1"
    },
    "10784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10786": {
      "op": "DUP4"
    },
    "10787": {
      "op": "DUP6"
    },
    "10788": {
      "op": "SUB"
    },
    "10789": {
      "op": "SLT"
    },
    "10790": {
      "op": "ISZERO"
    },
    "10791": {
      "op": "PUSH2",
      "value": "0x2A2F"
    },
    "10794": {
      "op": "JUMPI"
    },
    "10795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10797": {
      "op": "DUP1"
    },
    "10798": {
      "op": "REVERT"
    },
    "10799": {
      "op": "JUMPDEST"
    },
    "10800": {
      "op": "DUP3"
    },
    "10801": {
      "op": "CALLDATALOAD"
    },
    "10802": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10811": {
      "op": "DUP1"
    },
    "10812": {
      "op": "DUP3"
    },
    "10813": {
      "op": "GT"
    },
    "10814": {
      "op": "ISZERO"
    },
    "10815": {
      "op": "PUSH2",
      "value": "0x2A47"
    },
    "10818": {
      "op": "JUMPI"
    },
    "10819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10821": {
      "op": "DUP1"
    },
    "10822": {
      "op": "REVERT"
    },
    "10823": {
      "op": "JUMPDEST"
    },
    "10824": {
      "op": "DUP2"
    },
    "10825": {
      "op": "DUP6"
    },
    "10826": {
      "op": "ADD"
    },
    "10827": {
      "op": "SWAP2"
    },
    "10828": {
      "op": "POP"
    },
    "10829": {
      "op": "DUP6"
    },
    "10830": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10832": {
      "op": "DUP4"
    },
    "10833": {
      "op": "ADD"
    },
    "10834": {
      "op": "SLT"
    },
    "10835": {
      "op": "PUSH2",
      "value": "0x2A5B"
    },
    "10838": {
      "op": "JUMPI"
    },
    "10839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10841": {
      "op": "DUP1"
    },
    "10842": {
      "op": "REVERT"
    },
    "10843": {
      "op": "JUMPDEST"
    },
    "10844": {
      "op": "DUP2"
    },
    "10845": {
      "op": "CALLDATALOAD"
    },
    "10846": {
      "op": "DUP2"
    },
    "10847": {
      "op": "DUP2"
    },
    "10848": {
      "op": "GT"
    },
    "10849": {
      "op": "ISZERO"
    },
    "10850": {
      "op": "PUSH2",
      "value": "0x2A6A"
    },
    "10853": {
      "op": "JUMPI"
    },
    "10854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10856": {
      "op": "DUP1"
    },
    "10857": {
      "op": "REVERT"
    },
    "10858": {
      "op": "JUMPDEST"
    },
    "10859": {
      "op": "DUP7"
    },
    "10860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10862": {
      "op": "DUP3"
    },
    "10863": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10865": {
      "op": "SHL"
    },
    "10866": {
      "op": "DUP6"
    },
    "10867": {
      "op": "ADD"
    },
    "10868": {
      "op": "ADD"
    },
    "10869": {
      "op": "GT"
    },
    "10870": {
      "op": "ISZERO"
    },
    "10871": {
      "op": "PUSH2",
      "value": "0x2A7F"
    },
    "10874": {
      "op": "JUMPI"
    },
    "10875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10877": {
      "op": "DUP1"
    },
    "10878": {
      "op": "REVERT"
    },
    "10879": {
      "op": "JUMPDEST"
    },
    "10880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10882": {
      "op": "SWAP3"
    },
    "10883": {
      "op": "SWAP1"
    },
    "10884": {
      "op": "SWAP3"
    },
    "10885": {
      "op": "ADD"
    },
    "10886": {
      "op": "SWAP7"
    },
    "10887": {
      "op": "SWAP2"
    },
    "10888": {
      "op": "SWAP6"
    },
    "10889": {
      "op": "POP"
    },
    "10890": {
      "op": "SWAP1"
    },
    "10891": {
      "op": "SWAP4"
    },
    "10892": {
      "op": "POP"
    },
    "10893": {
      "op": "POP"
    },
    "10894": {
      "op": "POP"
    },
    "10895": {
      "op": "POP"
    },
    "10896": {
      "jump": "o",
      "op": "JUMP"
    },
    "10897": {
      "op": "JUMPDEST"
    },
    "10898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10902": {
      "op": "DUP3"
    },
    "10903": {
      "op": "DUP5"
    },
    "10904": {
      "op": "SUB"
    },
    "10905": {
      "op": "SLT"
    },
    "10906": {
      "op": "ISZERO"
    },
    "10907": {
      "op": "PUSH2",
      "value": "0x2AA3"
    },
    "10910": {
      "op": "JUMPI"
    },
    "10911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10913": {
      "op": "DUP1"
    },
    "10914": {
      "op": "REVERT"
    },
    "10915": {
      "op": "JUMPDEST"
    },
    "10916": {
      "op": "POP"
    },
    "10917": {
      "op": "MLOAD"
    },
    "10918": {
      "op": "SWAP2"
    },
    "10919": {
      "op": "SWAP1"
    },
    "10920": {
      "op": "POP"
    },
    "10921": {
      "jump": "o",
      "op": "JUMP"
    },
    "10922": {
      "op": "JUMPDEST"
    },
    "10923": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10928": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10930": {
      "op": "SHL"
    },
    "10931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10933": {
      "op": "MSTORE"
    },
    "10934": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10936": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10938": {
      "op": "MSTORE"
    },
    "10939": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10943": {
      "op": "REVERT"
    },
    "10944": {
      "op": "JUMPDEST"
    },
    "10945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10947": {
      "op": "DUP3"
    },
    "10948": {
      "op": "DUP3"
    },
    "10949": {
      "op": "LT"
    },
    "10950": {
      "op": "ISZERO"
    },
    "10951": {
      "op": "PUSH2",
      "value": "0x2AD2"
    },
    "10954": {
      "op": "JUMPI"
    },
    "10955": {
      "op": "PUSH2",
      "value": "0x2AD2"
    },
    "10958": {
      "op": "PUSH2",
      "value": "0x2AAA"
    },
    "10961": {
      "jump": "i",
      "op": "JUMP"
    },
    "10962": {
      "op": "JUMPDEST"
    },
    "10963": {
      "op": "POP"
    },
    "10964": {
      "op": "SUB"
    },
    "10965": {
      "op": "SWAP1"
    },
    "10966": {
      "jump": "o",
      "op": "JUMP"
    },
    "10967": {
      "op": "JUMPDEST"
    },
    "10968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10970": {
      "op": "DUP3"
    },
    "10971": {
      "op": "PUSH2",
      "value": "0x2AF4"
    },
    "10974": {
      "op": "JUMPI"
    },
    "10975": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10980": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10982": {
      "op": "SHL"
    },
    "10983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10985": {
      "op": "MSTORE"
    },
    "10986": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "10988": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10990": {
      "op": "MSTORE"
    },
    "10991": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10995": {
      "op": "REVERT"
    },
    "10996": {
      "op": "JUMPDEST"
    },
    "10997": {
      "op": "POP"
    },
    "10998": {
      "op": "DIV"
    },
    "10999": {
      "op": "SWAP1"
    },
    "11000": {
      "jump": "o",
      "op": "JUMP"
    },
    "11001": {
      "op": "JUMPDEST"
    },
    "11002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11004": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11006": {
      "op": "DUP3"
    },
    "11007": {
      "op": "DUP5"
    },
    "11008": {
      "op": "SUB"
    },
    "11009": {
      "op": "SLT"
    },
    "11010": {
      "op": "ISZERO"
    },
    "11011": {
      "op": "PUSH2",
      "value": "0x2B0B"
    },
    "11014": {
      "op": "JUMPI"
    },
    "11015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11017": {
      "op": "DUP1"
    },
    "11018": {
      "op": "REVERT"
    },
    "11019": {
      "op": "JUMPDEST"
    },
    "11020": {
      "op": "DUP2"
    },
    "11021": {
      "op": "MLOAD"
    },
    "11022": {
      "op": "DUP1"
    },
    "11023": {
      "op": "ISZERO"
    },
    "11024": {
      "op": "ISZERO"
    },
    "11025": {
      "op": "DUP2"
    },
    "11026": {
      "op": "EQ"
    },
    "11027": {
      "op": "PUSH2",
      "value": "0x22EA"
    },
    "11030": {
      "op": "JUMPI"
    },
    "11031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11033": {
      "op": "DUP1"
    },
    "11034": {
      "op": "REVERT"
    },
    "11035": {
      "op": "JUMPDEST"
    },
    "11036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11038": {
      "op": "DUP2"
    },
    "11039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11041": {
      "op": "NOT"
    },
    "11042": {
      "op": "DIV"
    },
    "11043": {
      "op": "DUP4"
    },
    "11044": {
      "op": "GT"
    },
    "11045": {
      "op": "DUP3"
    },
    "11046": {
      "op": "ISZERO"
    },
    "11047": {
      "op": "ISZERO"
    },
    "11048": {
      "op": "AND"
    },
    "11049": {
      "op": "ISZERO"
    },
    "11050": {
      "op": "PUSH2",
      "value": "0x2B35"
    },
    "11053": {
      "op": "JUMPI"
    },
    "11054": {
      "op": "PUSH2",
      "value": "0x2B35"
    },
    "11057": {
      "op": "PUSH2",
      "value": "0x2AAA"
    },
    "11060": {
      "jump": "i",
      "op": "JUMP"
    },
    "11061": {
      "op": "JUMPDEST"
    },
    "11062": {
      "op": "POP"
    },
    "11063": {
      "op": "MUL"
    },
    "11064": {
      "op": "SWAP1"
    },
    "11065": {
      "jump": "o",
      "op": "JUMP"
    },
    "11066": {
      "op": "JUMPDEST"
    },
    "11067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11069": {
      "op": "DUP3"
    },
    "11070": {
      "op": "NOT"
    },
    "11071": {
      "op": "DUP3"
    },
    "11072": {
      "op": "GT"
    },
    "11073": {
      "op": "ISZERO"
    },
    "11074": {
      "op": "PUSH2",
      "value": "0x2B4D"
    },
    "11077": {
      "op": "JUMPI"
    },
    "11078": {
      "op": "PUSH2",
      "value": "0x2B4D"
    },
    "11081": {
      "op": "PUSH2",
      "value": "0x2AAA"
    },
    "11084": {
      "jump": "i",
      "op": "JUMP"
    },
    "11085": {
      "op": "JUMPDEST"
    },
    "11086": {
      "op": "POP"
    },
    "11087": {
      "op": "ADD"
    },
    "11088": {
      "op": "SWAP1"
    },
    "11089": {
      "jump": "o",
      "op": "JUMP"
    },
    "11090": {
      "op": "JUMPDEST"
    },
    "11091": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11096": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11098": {
      "op": "SHL"
    },
    "11099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11101": {
      "op": "MSTORE"
    },
    "11102": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11104": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11106": {
      "op": "MSTORE"
    },
    "11107": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11111": {
      "op": "REVERT"
    },
    "11112": {
      "op": "JUMPDEST"
    },
    "11113": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11118": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11120": {
      "op": "SHL"
    },
    "11121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11123": {
      "op": "MSTORE"
    },
    "11124": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "11126": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11128": {
      "op": "MSTORE"
    },
    "11129": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11133": {
      "op": "REVERT"
    },
    "11134": {
      "op": "JUMPDEST"
    },
    "11135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11137": {
      "op": "DUP1"
    },
    "11138": {
      "op": "DUP3"
    },
    "11139": {
      "op": "MSTORE"
    },
    "11140": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "11142": {
      "op": "SWAP1"
    },
    "11143": {
      "op": "DUP3"
    },
    "11144": {
      "op": "ADD"
    },
    "11145": {
      "op": "MSTORE"
    },
    "11146": {
      "op": "PUSH32",
      "value": "0x4F7065726174696F6E20697320616C6C6F776564207768656E2063616E63656C"
    },
    "11179": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11181": {
      "op": "DUP3"
    },
    "11182": {
      "op": "ADD"
    },
    "11183": {
      "op": "MSTORE"
    },
    "11184": {
      "op": "PUSH20",
      "value": "0x3630BA34B7B710383430B9B29034B99037BB32B9"
    },
    "11205": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "11207": {
      "op": "SHL"
    },
    "11208": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11210": {
      "op": "DUP3"
    },
    "11211": {
      "op": "ADD"
    },
    "11212": {
      "op": "MSTORE"
    },
    "11213": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11215": {
      "op": "ADD"
    },
    "11216": {
      "op": "SWAP1"
    },
    "11217": {
      "jump": "o",
      "op": "JUMP"
    },
    "11218": {
      "op": "JUMPDEST"
    },
    "11219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11221": {
      "op": "DUP1"
    },
    "11222": {
      "op": "DUP3"
    },
    "11223": {
      "op": "MSTORE"
    },
    "11224": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "11226": {
      "op": "SWAP1"
    },
    "11227": {
      "op": "DUP3"
    },
    "11228": {
      "op": "ADD"
    },
    "11229": {
      "op": "MSTORE"
    },
    "11230": {
      "op": "PUSH32",
      "value": "0x42696464657273206861766520616C7265616479206265656E20636865636B65"
    },
    "11263": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11265": {
      "op": "DUP3"
    },
    "11266": {
      "op": "ADD"
    },
    "11267": {
      "op": "MSTORE"
    },
    "11268": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "11270": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "11272": {
      "op": "SHL"
    },
    "11273": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11275": {
      "op": "DUP3"
    },
    "11276": {
      "op": "ADD"
    },
    "11277": {
      "op": "MSTORE"
    },
    "11278": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11280": {
      "op": "ADD"
    },
    "11281": {
      "op": "SWAP1"
    },
    "11282": {
      "jump": "o",
      "op": "JUMP"
    },
    "11283": {
      "op": "JUMPDEST"
    },
    "11284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11288": {
      "op": "NOT"
    },
    "11289": {
      "op": "DUP3"
    },
    "11290": {
      "op": "EQ"
    },
    "11291": {
      "op": "ISZERO"
    },
    "11292": {
      "op": "PUSH2",
      "value": "0x2C27"
    },
    "11295": {
      "op": "JUMPI"
    },
    "11296": {
      "op": "PUSH2",
      "value": "0x2C27"
    },
    "11299": {
      "op": "PUSH2",
      "value": "0x2AAA"
    },
    "11302": {
      "jump": "i",
      "op": "JUMP"
    },
    "11303": {
      "op": "JUMPDEST"
    },
    "11304": {
      "op": "POP"
    },
    "11305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11307": {
      "op": "ADD"
    },
    "11308": {
      "op": "SWAP1"
    },
    "11309": {
      "jump": "o",
      "op": "JUMP"
    },
    "11310": {
      "op": "JUMPDEST"
    },
    "11311": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11316": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11318": {
      "op": "SHL"
    },
    "11319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11321": {
      "op": "MSTORE"
    },
    "11322": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "11324": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11326": {
      "op": "MSTORE"
    },
    "11327": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11331": {
      "op": "REVERT"
    },
    "11332": {
      "op": "JUMPDEST"
    },
    "11333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11335": {
      "op": "JUMPDEST"
    },
    "11336": {
      "op": "DUP4"
    },
    "11337": {
      "op": "DUP2"
    },
    "11338": {
      "op": "LT"
    },
    "11339": {
      "op": "ISZERO"
    },
    "11340": {
      "op": "PUSH2",
      "value": "0x2C5F"
    },
    "11343": {
      "op": "JUMPI"
    },
    "11344": {
      "op": "DUP2"
    },
    "11345": {
      "op": "DUP2"
    },
    "11346": {
      "op": "ADD"
    },
    "11347": {
      "op": "MLOAD"
    },
    "11348": {
      "op": "DUP4"
    },
    "11349": {
      "op": "DUP3"
    },
    "11350": {
      "op": "ADD"
    },
    "11351": {
      "op": "MSTORE"
    },
    "11352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11354": {
      "op": "ADD"
    },
    "11355": {
      "op": "PUSH2",
      "value": "0x2C47"
    },
    "11358": {
      "op": "JUMP"
    },
    "11359": {
      "op": "JUMPDEST"
    },
    "11360": {
      "op": "DUP4"
    },
    "11361": {
      "op": "DUP2"
    },
    "11362": {
      "op": "GT"
    },
    "11363": {
      "op": "ISZERO"
    },
    "11364": {
      "op": "PUSH2",
      "value": "0x1B67"
    },
    "11367": {
      "op": "JUMPI"
    },
    "11368": {
      "op": "POP"
    },
    "11369": {
      "op": "POP"
    },
    "11370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11372": {
      "op": "SWAP2"
    },
    "11373": {
      "op": "ADD"
    },
    "11374": {
      "op": "MSTORE"
    },
    "11375": {
      "jump": "o",
      "op": "JUMP"
    },
    "11376": {
      "op": "JUMPDEST"
    },
    "11377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11379": {
      "op": "DUP3"
    },
    "11380": {
      "op": "MLOAD"
    },
    "11381": {
      "op": "PUSH2",
      "value": "0x2C82"
    },
    "11384": {
      "op": "DUP2"
    },
    "11385": {
      "op": "DUP5"
    },
    "11386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11388": {
      "op": "DUP8"
    },
    "11389": {
      "op": "ADD"
    },
    "11390": {
      "op": "PUSH2",
      "value": "0x2C44"
    },
    "11393": {
      "jump": "i",
      "op": "JUMP"
    },
    "11394": {
      "op": "JUMPDEST"
    },
    "11395": {
      "op": "SWAP2"
    },
    "11396": {
      "op": "SWAP1"
    },
    "11397": {
      "op": "SWAP2"
    },
    "11398": {
      "op": "ADD"
    },
    "11399": {
      "op": "SWAP3"
    },
    "11400": {
      "op": "SWAP2"
    },
    "11401": {
      "op": "POP"
    },
    "11402": {
      "op": "POP"
    },
    "11403": {
      "jump": "o",
      "op": "JUMP"
    },
    "11404": {
      "op": "JUMPDEST"
    },
    "11405": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11407": {
      "op": "DUP2"
    },
    "11408": {
      "op": "MSTORE"
    },
    "11409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11411": {
      "op": "DUP3"
    },
    "11412": {
      "op": "MLOAD"
    },
    "11413": {
      "op": "DUP1"
    },
    "11414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11416": {
      "op": "DUP5"
    },
    "11417": {
      "op": "ADD"
    },
    "11418": {
      "op": "MSTORE"
    },
    "11419": {
      "op": "PUSH2",
      "value": "0x2CAB"
    },
    "11422": {
      "op": "DUP2"
    },
    "11423": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11425": {
      "op": "DUP6"
    },
    "11426": {
      "op": "ADD"
    },
    "11427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11429": {
      "op": "DUP8"
    },
    "11430": {
      "op": "ADD"
    },
    "11431": {
      "op": "PUSH2",
      "value": "0x2C44"
    },
    "11434": {
      "jump": "i",
      "op": "JUMP"
    },
    "11435": {
      "op": "JUMPDEST"
    },
    "11436": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11438": {
      "op": "ADD"
    },
    "11439": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11441": {
      "op": "NOT"
    },
    "11442": {
      "op": "AND"
    },
    "11443": {
      "op": "SWAP2"
    },
    "11444": {
      "op": "SWAP1"
    },
    "11445": {
      "op": "SWAP2"
    },
    "11446": {
      "op": "ADD"
    },
    "11447": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11449": {
      "op": "ADD"
    },
    "11450": {
      "op": "SWAP3"
    },
    "11451": {
      "op": "SWAP2"
    },
    "11452": {
      "op": "POP"
    },
    "11453": {
      "op": "POP"
    },
    "11454": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "8b50b3f23cfc1599702ed1f3059c76a4019a7a09",
  "source": "// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.8.0; // TODO use 0.7.x version and revert changes ?\n\n\nimport \"../zeppelin/math/SafeMath.sol\";\nimport \"../zeppelin/token/ERC20/SafeERC20.sol\";\nimport \"../zeppelin/utils/Address.sol\";\nimport \"../zeppelin/ownership/Ownable.sol\";\nimport \"./NuCypherToken.sol\";\nimport \"./IStakingEscrow.sol\";\nimport \"./lib/AdditionalMath.sol\";\n\n\n/**\n* @notice The WorkLock distribution contract\n*/\ncontract WorkLock is Ownable {\n    using SafeERC20 for NuCypherToken;\n    using SafeMath for uint256;\n    using AdditionalMath for uint256;\n    using Address for address payable;\n    using Address for address;\n\n    event Deposited(address indexed sender, uint256 value);\n    event Bid(address indexed sender, uint256 depositedETH);\n    event Claimed(address indexed sender, uint256 claimedTokens);\n    event Refund(address indexed sender, uint256 refundETH, uint256 completedWork);\n    event Canceled(address indexed sender, uint256 value);\n    event BiddersChecked(address indexed sender, uint256 startIndex, uint256 endIndex);\n    event ForceRefund(address indexed sender, address indexed bidder, uint256 refundETH);\n    event CompensationWithdrawn(address indexed sender, uint256 value);\n    event Shutdown(address indexed sender);\n\n    struct WorkInfo {\n        uint256 depositedETH;\n        uint256 completedWork;\n        bool claimed;\n        uint128 index;\n    }\n\n    uint16 public constant SLOWING_REFUND = 100;\n    uint256 private constant MAX_ETH_SUPPLY = 2e10 ether;\n\n    NuCypherToken public immutable token;\n    IStakingEscrow public immutable escrow;\n\n    /*\n    * @dev WorkLock calculations:\n    * bid = minBid + bonusETHPart\n    * bonusTokenSupply = tokenSupply - bidders.length * minAllowableLockedTokens\n    * bonusDepositRate = bonusTokenSupply / bonusETHSupply\n    * claimedTokens = minAllowableLockedTokens + bonusETHPart * bonusDepositRate\n    * bonusRefundRate = bonusDepositRate * SLOWING_REFUND / boostingRefund\n    * refundETH = completedWork / refundRate\n    */\n    uint256 public immutable boostingRefund;\n    uint256 public immutable minAllowedBid;\n    uint16 public immutable stakingPeriods;\n    // copy from the escrow contract\n    uint256 public immutable maxAllowableLockedTokens;\n    uint256 public immutable minAllowableLockedTokens;\n\n    uint256 public tokenSupply;\n    uint256 public startBidDate;\n    uint256 public endBidDate;\n    uint256 public endCancellationDate;\n\n    uint256 public bonusETHSupply;\n    mapping(address => WorkInfo) public workInfo;\n    mapping(address => uint256) public compensation;\n\n    address[] public bidders;\n    // if value == bidders.length then WorkLock is fully checked\n    uint256 public nextBidderToCheck;\n\n    /**\n    * @dev Checks timestamp regarding cancellation window\n    */\n    modifier afterCancellationWindow()\n    {\n        require(block.timestamp >= endCancellationDate,\n            \"Operation is allowed when cancellation phase is over\");\n        _;\n    }\n\n    /**\n    * @param _token Token contract\n    * @param _escrow Escrow contract\n    * @param _startBidDate Timestamp when bidding starts\n    * @param _endBidDate Timestamp when bidding will end\n    * @param _endCancellationDate Timestamp when cancellation will ends\n    * @param _boostingRefund Coefficient to boost refund ETH\n    * @param _stakingPeriods Amount of periods during which tokens will be locked after claiming\n    * @param _minAllowedBid Minimum allowed ETH amount for bidding\n    */\n    constructor(\n        NuCypherToken _token,\n        IStakingEscrow _escrow,\n        uint256 _startBidDate,\n        uint256 _endBidDate,\n        uint256 _endCancellationDate,\n        uint256 _boostingRefund,\n        uint16 _stakingPeriods,\n        uint256 _minAllowedBid\n    ) {\n        uint256 totalSupply = _token.totalSupply();\n        require(totalSupply > 0 &&                              // token contract is deployed and accessible\n            _escrow.secondsPerPeriod() > 0 &&                   // escrow contract is deployed and accessible\n            _escrow.token() == _token &&                        // same token address for worklock and escrow\n            _endBidDate > _startBidDate &&                      // bidding period lasts some time\n            _endBidDate > block.timestamp &&                    // there is time to make a bid\n            _endCancellationDate >= _endBidDate &&              // cancellation window includes bidding\n            _minAllowedBid > 0 &&                               // min allowed bid was set\n            _boostingRefund > 0 &&                              // boosting coefficient was set\n            _stakingPeriods >= _escrow.minLockedPeriods());     // staking duration is consistent with escrow contract\n        // worst case for `ethToWork()` and `workToETH()`,\n        // when ethSupply == MAX_ETH_SUPPLY and tokenSupply == totalSupply\n        require(MAX_ETH_SUPPLY * totalSupply * SLOWING_REFUND / MAX_ETH_SUPPLY / totalSupply == SLOWING_REFUND &&\n            MAX_ETH_SUPPLY * totalSupply * _boostingRefund / MAX_ETH_SUPPLY / totalSupply == _boostingRefund);\n\n        token = _token;\n        escrow = _escrow;\n        startBidDate = _startBidDate;\n        endBidDate = _endBidDate;\n        endCancellationDate = _endCancellationDate;\n        boostingRefund = _boostingRefund;\n        stakingPeriods = _stakingPeriods;\n        minAllowedBid = _minAllowedBid;\n        maxAllowableLockedTokens = _escrow.maxAllowableLockedTokens();\n        minAllowableLockedTokens = _escrow.minAllowableLockedTokens();\n    }\n\n    /**\n    * @notice Deposit tokens to contract\n    * @param _value Amount of tokens to transfer\n    */\n    function tokenDeposit(uint256 _value) external {\n        require(block.timestamp < endBidDate, \"Can't deposit more tokens after end of bidding\");\n        token.safeTransferFrom(msg.sender, address(this), _value);\n        tokenSupply += _value;\n        emit Deposited(msg.sender, _value);\n    }\n\n    /**\n    * @notice Calculate amount of tokens that will be get for specified amount of ETH\n    * @dev This value will be fixed only after end of bidding\n    */\n    function ethToTokens(uint256 _ethAmount) public view returns (uint256) {\n        if (_ethAmount < minAllowedBid) {\n            return 0;\n        }\n\n        // when all participants bid with the same minimum amount of eth\n        if (bonusETHSupply == 0) {\n            return tokenSupply / bidders.length;\n        }\n\n        uint256 bonusETH = _ethAmount - minAllowedBid;\n        uint256 bonusTokenSupply = tokenSupply - bidders.length * minAllowableLockedTokens;\n        return minAllowableLockedTokens + bonusETH.mul(bonusTokenSupply).div(bonusETHSupply);\n    }\n\n    /**\n    * @notice Calculate amount of work that need to be done to refund specified amount of ETH\n    */\n    function ethToWork(uint256 _ethAmount, uint256 _tokenSupply, uint256 _ethSupply)\n        internal view returns (uint256)\n    {\n        return _ethAmount.mul(_tokenSupply).mul(SLOWING_REFUND).divCeil(_ethSupply.mul(boostingRefund));\n    }\n\n    /**\n    * @notice Calculate amount of work that need to be done to refund specified amount of ETH\n    * @dev This value will be fixed only after end of bidding\n    * @param _ethToReclaim Specified sum of ETH staker wishes to reclaim following completion of work\n    * @param _restOfDepositedETH Remaining ETH in staker's deposit once ethToReclaim sum has been subtracted\n    * @dev _ethToReclaim + _restOfDepositedETH = depositedETH\n    */\n    function ethToWork(uint256 _ethToReclaim, uint256 _restOfDepositedETH) internal view returns (uint256) {\n\n        uint256 baseETHSupply = bidders.length * minAllowedBid;\n        // when all participants bid with the same minimum amount of eth\n        if (bonusETHSupply == 0) {\n            return ethToWork(_ethToReclaim, tokenSupply, baseETHSupply);\n        }\n\n        uint256 baseETH = 0;\n        uint256 bonusETH = 0;\n\n        // If the staker's total remaining deposit (including the specified sum of ETH to reclaim)\n        // is lower than the minimum bid size,\n        // then only the base part is used to calculate the work required to reclaim ETH\n        if (_ethToReclaim + _restOfDepositedETH <= minAllowedBid) {\n            baseETH = _ethToReclaim;\n\n        // If the staker's remaining deposit (not including the specified sum of ETH to reclaim)\n        // is still greater than the minimum bid size,\n        // then only the bonus part is used to calculate the work required to reclaim ETH\n        } else if (_restOfDepositedETH >= minAllowedBid) {\n            bonusETH = _ethToReclaim;\n\n        // If the staker's remaining deposit (not including the specified sum of ETH to reclaim)\n        // is lower than the minimum bid size,\n        // then both the base and bonus parts must be used to calculate the work required to reclaim ETH\n        } else {\n            bonusETH = _ethToReclaim + _restOfDepositedETH - minAllowedBid;\n            baseETH = _ethToReclaim - bonusETH;\n        }\n\n        uint256 baseTokenSupply = bidders.length * minAllowableLockedTokens;\n        uint256 work = 0;\n        if (baseETH > 0) {\n            work = ethToWork(baseETH, baseTokenSupply, baseETHSupply);\n        }\n\n        if (bonusETH > 0) {\n            uint256 bonusTokenSupply = tokenSupply - baseTokenSupply;\n            work += ethToWork(bonusETH, bonusTokenSupply, bonusETHSupply);\n        }\n\n        return work;\n    }\n\n    /**\n    * @notice Calculate amount of work that need to be done to refund specified amount of ETH\n    * @dev This value will be fixed only after end of bidding\n    */\n    function ethToWork(uint256 _ethAmount) public view returns (uint256) {\n        return ethToWork(_ethAmount, 0);\n    }\n\n    /**\n    * @notice Calculate amount of ETH that will be refund for completing specified amount of work\n    */\n    function workToETH(uint256 _completedWork, uint256 _ethSupply, uint256 _tokenSupply)\n        internal view returns (uint256)\n    {\n        return _completedWork.mul(_ethSupply).mul(boostingRefund).div(_tokenSupply.mul(SLOWING_REFUND));\n    }\n\n    /**\n    * @notice Calculate amount of ETH that will be refund for completing specified amount of work\n    * @dev This value will be fixed only after end of bidding\n    */\n    function workToETH(uint256 _completedWork, uint256 _depositedETH) public view returns (uint256) {\n        uint256 baseETHSupply = bidders.length * minAllowedBid;\n        // when all participants bid with the same minimum amount of eth\n        if (bonusETHSupply == 0) {\n            return workToETH(_completedWork, baseETHSupply, tokenSupply);\n        }\n\n        uint256 bonusWork = 0;\n        uint256 bonusETH = 0;\n        uint256 baseTokenSupply = bidders.length * minAllowableLockedTokens;\n\n        if (_depositedETH > minAllowedBid) {\n            bonusETH = _depositedETH - minAllowedBid;\n            uint256 bonusTokenSupply = tokenSupply - baseTokenSupply;\n            bonusWork = ethToWork(bonusETH, bonusTokenSupply, bonusETHSupply);\n\n            if (_completedWork <= bonusWork) {\n                return workToETH(_completedWork, bonusETHSupply, bonusTokenSupply);\n            }\n        }\n\n        _completedWork -= bonusWork;\n        return bonusETH + workToETH(_completedWork, baseETHSupply, baseTokenSupply);\n    }\n\n    /**\n    * @notice Get remaining work to full refund\n    */\n    function getRemainingWork(address _bidder) external view returns (uint256) {\n        WorkInfo storage info = workInfo[_bidder];\n        uint256 completedWork = escrow.getCompletedWork(_bidder).sub(info.completedWork);\n        uint256 remainingWork = ethToWork(info.depositedETH);\n        if (remainingWork <= completedWork) {\n            return 0;\n        }\n        return remainingWork - completedWork;\n    }\n\n    /**\n    * @notice Get length of bidders array\n    */\n    function getBiddersLength() external view returns (uint256) {\n        return bidders.length;\n    }\n\n    /**\n    * @notice Bid for tokens by transferring ETH\n    */\n    function bid() external payable {\n        require(block.timestamp >= startBidDate, \"Bidding is not open yet\");\n        require(block.timestamp < endBidDate, \"Bidding is already finished\");\n        WorkInfo storage info = workInfo[msg.sender];\n\n        // first bid\n        if (info.depositedETH == 0) {\n            require(msg.value >= minAllowedBid, \"Bid must be at least minimum\");\n            require(bidders.length < tokenSupply / minAllowableLockedTokens, \"Not enough tokens for more bidders\");\n            info.index = uint128(bidders.length);\n            bidders.push(msg.sender);\n            bonusETHSupply = bonusETHSupply.add(msg.value - minAllowedBid);\n        } else {\n            bonusETHSupply = bonusETHSupply.add(msg.value);\n        }\n\n        info.depositedETH = info.depositedETH.add(msg.value);\n        emit Bid(msg.sender, msg.value);\n    }\n\n    /**\n    * @notice Cancel bid and refund deposited ETH\n    */\n    function cancelBid() external {\n        require(block.timestamp < endCancellationDate,\n            \"Cancellation allowed only during cancellation window\");\n        WorkInfo storage info = workInfo[msg.sender];\n        require(info.depositedETH > 0, \"No bid to cancel\");\n        require(!info.claimed, \"Tokens are already claimed\");\n        uint256 refundETH = info.depositedETH;\n        info.depositedETH = 0;\n\n        // remove from bidders array, move last bidder to the empty place\n        uint256 lastIndex = bidders.length - 1;\n        if (info.index != lastIndex) {\n            address lastBidder = bidders[lastIndex];\n            bidders[info.index] = lastBidder;\n            workInfo[lastBidder].index = info.index;\n        }\n        bidders.pop();\n\n        if (refundETH > minAllowedBid) {\n            bonusETHSupply = bonusETHSupply.sub(refundETH - minAllowedBid);\n        }\n        payable(msg.sender).sendValue(refundETH);\n        emit Canceled(msg.sender, refundETH);\n    }\n\n    /**\n    * @notice Cancels distribution, makes possible to retrieve all bids and owner gets all tokens\n    */\n    function shutdown() external onlyOwner {\n        require(!isClaimingAvailable(), \"Claiming has already been enabled\");\n        internalShutdown();\n    }\n\n    /**\n    * @notice Cancels distribution, makes possible to retrieve all bids and owner gets all tokens\n    */\n    function internalShutdown() internal {\n        startBidDate = 0;\n        endBidDate = 0;\n        endCancellationDate = type(uint256).max; // \"infinite\" cancellation window\n        token.safeTransfer(owner(), tokenSupply);\n        emit Shutdown(msg.sender);\n    }\n\n    /**\n    * @notice Make force refund to bidders who can get tokens more than maximum allowed\n    * @param _biddersForRefund Sorted list of unique bidders. Only bidders who must receive a refund\n    */\n    function forceRefund(address payable[] calldata _biddersForRefund) external afterCancellationWindow {\n        require(nextBidderToCheck != bidders.length, \"Bidders have already been checked\");\n\n        uint256 length = _biddersForRefund.length;\n        require(length > 0, \"Must be at least one bidder for a refund\");\n\n        uint256 minNumberOfBidders = tokenSupply.divCeil(maxAllowableLockedTokens);\n        if (bidders.length < minNumberOfBidders) {\n            internalShutdown();\n            return;\n        }\n\n        address previousBidder = _biddersForRefund[0];\n        uint256 minBid = workInfo[previousBidder].depositedETH;\n        uint256 maxBid = minBid;\n\n        // get minimum and maximum bids\n        for (uint256 i = 1; i < length; i++) {\n            address bidder = _biddersForRefund[i];\n            uint256 depositedETH = workInfo[bidder].depositedETH;\n            require(bidder > previousBidder && depositedETH > 0, \"Addresses must be an array of unique bidders\");\n            if (minBid > depositedETH) {\n                minBid = depositedETH;\n            } else if (maxBid < depositedETH) {\n                maxBid = depositedETH;\n            }\n            previousBidder = bidder;\n        }\n\n        uint256[] memory refunds = new uint256[](length);\n        // first step - align at a minimum bid\n        if (minBid != maxBid) {\n            for (uint256 i = 0; i < length; i++) {\n                address bidder = _biddersForRefund[i];\n                WorkInfo storage info = workInfo[bidder];\n                if (info.depositedETH > minBid) {\n                    refunds[i] = info.depositedETH - minBid;\n                    info.depositedETH = minBid;\n                    bonusETHSupply -= refunds[i];\n                }\n            }\n        }\n\n        require(ethToTokens(minBid) > maxAllowableLockedTokens,\n            \"At least one of bidders has allowable bid\");\n\n        // final bids adjustment (only for bonus part)\n        // (min_whale_bid * token_supply - max_stake * eth_supply) / (token_supply - max_stake * n_whales)\n        uint256 maxBonusTokens = maxAllowableLockedTokens - minAllowableLockedTokens;\n        uint256 minBonusETH = minBid - minAllowedBid;\n        uint256 bonusTokenSupply = tokenSupply - bidders.length * minAllowableLockedTokens;\n        uint256 refundETH = minBonusETH.mul(bonusTokenSupply)\n                                .sub(maxBonusTokens.mul(bonusETHSupply))\n                                .divCeil(bonusTokenSupply - maxBonusTokens.mul(length));\n        uint256 resultBid = minBid.sub(refundETH);\n        bonusETHSupply -= length * refundETH;\n        for (uint256 i = 0; i < length; i++) {\n            address bidder = _biddersForRefund[i];\n            WorkInfo storage info = workInfo[bidder];\n            refunds[i] += refundETH;\n            info.depositedETH = resultBid;\n        }\n\n        // reset verification\n        nextBidderToCheck = 0;\n\n        // save a refund\n        for (uint256 i = 0; i < length; i++) {\n            address bidder = _biddersForRefund[i];\n            compensation[bidder] += refunds[i];\n            emit ForceRefund(msg.sender, bidder, refunds[i]);\n        }\n\n    }\n\n    /**\n    * @notice Withdraw compensation after force refund\n    */\n    function withdrawCompensation() external {\n        uint256 refund = compensation[msg.sender];\n        require(refund > 0, \"There is no compensation\");\n        compensation[msg.sender] = 0;\n        payable(msg.sender).sendValue(refund);\n        emit CompensationWithdrawn(msg.sender, refund);\n    }\n\n    /**\n    * @notice Check that the claimed tokens are within `maxAllowableLockedTokens` for all participants,\n    * starting from the last point `nextBidderToCheck`\n    * @dev Method stops working when the remaining gas is less than `_gasToSaveState`\n    * and saves the state in `nextBidderToCheck`.\n    * If all bidders have been checked then `nextBidderToCheck` will be equal to the length of the bidders array\n    */\n    function verifyBiddingCorrectness(uint256 _gasToSaveState) external afterCancellationWindow returns (uint256) {\n        require(nextBidderToCheck != bidders.length, \"Bidders have already been checked\");\n\n        // all participants bid with the same minimum amount of eth\n        uint256 index = nextBidderToCheck;\n        if (bonusETHSupply == 0) {\n            require(tokenSupply / bidders.length <= maxAllowableLockedTokens, \"Not enough bidders\");\n            index = bidders.length;\n        }\n\n        uint256 maxBonusTokens = maxAllowableLockedTokens - minAllowableLockedTokens;\n        uint256 bonusTokenSupply = tokenSupply - bidders.length * minAllowableLockedTokens;\n        uint256 maxBidFromMaxStake = minAllowedBid + maxBonusTokens.mul(bonusETHSupply).div(bonusTokenSupply);\n\n\n        while (index < bidders.length && gasleft() > _gasToSaveState) {\n            address bidder = bidders[index];\n            require(workInfo[bidder].depositedETH <= maxBidFromMaxStake, \"Bid is greater than max allowable bid\");\n            index++;\n        }\n\n        if (index != nextBidderToCheck) {\n            emit BiddersChecked(msg.sender, nextBidderToCheck, index);\n            nextBidderToCheck = index;\n        }\n        return nextBidderToCheck;\n    }\n\n    /**\n    * @notice Checks if claiming available\n    */\n    function isClaimingAvailable() public view returns (bool) {\n        return block.timestamp >= endCancellationDate &&\n            nextBidderToCheck == bidders.length;\n    }\n\n    /**\n    * @notice Claimed tokens will be deposited and locked as stake in the StakingEscrow contract.\n    */\n    function claim() external returns (uint256 claimedTokens) {\n        require(isClaimingAvailable(), \"Claiming has not been enabled yet\");\n        WorkInfo storage info = workInfo[msg.sender];\n        require(!info.claimed, \"Tokens are already claimed\");\n        claimedTokens = ethToTokens(info.depositedETH);\n        require(claimedTokens > 0, \"Nothing to claim\");\n\n        info.claimed = true;\n        token.approve(address(escrow), claimedTokens);\n        escrow.depositFromWorkLock(msg.sender, claimedTokens, stakingPeriods);\n        info.completedWork = escrow.setWorkMeasurement(msg.sender, true);\n        emit Claimed(msg.sender, claimedTokens);\n    }\n\n    /**\n    * @notice Get available refund for bidder\n    */\n    function getAvailableRefund(address _bidder) public view returns (uint256) {\n        WorkInfo storage info = workInfo[_bidder];\n        // nothing to refund\n        if (info.depositedETH == 0) {\n            return 0;\n        }\n\n        uint256 currentWork = escrow.getCompletedWork(_bidder);\n        uint256 completedWork = currentWork.sub(info.completedWork);\n        // no work that has been completed since last refund\n        if (completedWork == 0) {\n            return 0;\n        }\n\n        uint256 refundETH = workToETH(completedWork, info.depositedETH);\n        if (refundETH > info.depositedETH) {\n            refundETH = info.depositedETH;\n        }\n        return refundETH;\n    }\n\n    /**\n    * @notice Refund ETH for the completed work\n    */\n    function refund() external returns (uint256 refundETH) {\n        WorkInfo storage info = workInfo[msg.sender];\n        require(info.claimed, \"Tokens must be claimed before refund\");\n        refundETH = getAvailableRefund(msg.sender);\n        require(refundETH > 0, \"Nothing to refund: there is no ETH to refund or no completed work\");\n\n        if (refundETH == info.depositedETH) {\n            escrow.setWorkMeasurement(msg.sender, false);\n        }\n        info.depositedETH = info.depositedETH.sub(refundETH);\n        // convert refund back to work to eliminate potential rounding errors\n        uint256 completedWork = ethToWork(refundETH, info.depositedETH);\n\n        info.completedWork = info.completedWork.add(completedWork);\n        emit Refund(msg.sender, refundETH, completedWork);\n        payable(msg.sender).sendValue(refundETH);\n    }\n}\n",
  "sourceMap": "442:22225:15:-:0;;;3485:2066;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;549:6:34;:19;;-1:-1:-1;;;;;;549:19:34;558:10;549:19;;;;;583:40;;558:10;;549:6;583:40;;549:6;;583:40;3770:19:15;3792:6;-1:-1:-1;;;;;3792:18:15;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3770:42;;3844:1;3830:11;:15;:135;;;;;3964:1;3935:7;-1:-1:-1;;;;;3935:24:15;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:30;;;3830:135;:240;;;;;4064:6;-1:-1:-1;;;;;4045:25:15;:7;-1:-1:-1;;;;;4045:13:15;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4045:25:15;;3830:240;:352;;;;;4169:13;4155:11;:27;3830:352;:452;;;;;4267:15;4253:11;:29;3830:452;:553;;;;;4372:11;4348:20;:35;;3830:553;:640;;;;;4469:1;4452:14;:18;3830:640;:732;;;;;4561:1;4543:15;:19;3830:732;:854;;;;;4658:7;-1:-1:-1;;;;;4658:24:15;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4639:45;;:15;:45;;;;3830:854;3822:863;;;;;;1457:3;4961:11;1508:10;1457:3;4896:28;4961:11;1508:10;4896:28;:::i;:::-;:45;;;;:::i;:::-;:62;;;;:::i;:::-;:76;;;;:::i;:::-;:94;:206;;;;-1:-1:-1;5087:15:15;5072:11;1508:10;5087:15;5006:28;5072:11;1508:10;5006:28;:::i;:::-;:46;;;;:::i;:::-;:63;;;;:::i;:::-;:77;;;;:::i;:::-;:96;4896:206;4888:215;;;;;;-1:-1:-1;;;;;5114:14:15;;;;;5138:16;;;;;;5164:12;:28;;;5202:10;:24;;;5236:19;:42;;;5288:32;;;;5330;;;;;5372:30;;;;5439:34;;;-1:-1:-1;;;5439:34:15;;;;:32;;:34;;;;-1:-1:-1;;5439:34:15;;;;;;;5138:16;5439:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5412:61;;;;;;5510:7;-1:-1:-1;;;;;5510:32:15;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5483:61;;-1:-1:-1;442:22225:15;;-1:-1:-1;;;;;;;;442:22225:15;14:146:41;-1:-1:-1;;;;;104:31:41;;94:42;;84:70;;150:1;147;140:12;84:70;14:146;:::o;165:163::-;243:13;;296:6;285:18;;275:29;;265:57;;318:1;315;308:12;265:57;165:163;;;:::o;333:851::-;508:6;516;524;532;540;548;556;564;617:3;605:9;596:7;592:23;588:33;585:53;;;634:1;631;624:12;585:53;666:9;660:16;685:46;725:5;685:46;:::i;:::-;800:2;785:18;;779:25;750:5;;-1:-1:-1;813:48:41;779:25;813:48;:::i;:::-;880:7;870:17;;;927:2;916:9;912:18;906:25;896:35;;971:2;960:9;956:18;950:25;940:35;;1015:3;1004:9;1000:19;994:26;984:36;;1060:3;1049:9;1045:19;1039:26;1029:36;;1084:49;1128:3;1117:9;1113:19;1084:49;:::i;:::-;1074:59;;1173:3;1162:9;1158:19;1152:26;1142:36;;333:851;;;;;;;;;;;:::o;1189:184::-;1259:6;1312:2;1300:9;1291:7;1287:23;1283:32;1280:52;;;1328:1;1325;1318:12;1280:52;-1:-1:-1;1351:16:41;;1189:184;-1:-1:-1;1189:184:41:o;1378:280::-;1447:6;1500:2;1488:9;1479:7;1475:23;1471:32;1468:52;;;1516:1;1513;1506:12;1468:52;1548:9;1542:16;1598:10;1591:5;1587:22;1580:5;1577:33;1567:61;;1624:1;1621;1614:12;1567:61;1647:5;1378:280;-1:-1:-1;;;1378:280:41:o;1663:287::-;1754:6;1807:2;1795:9;1786:7;1782:23;1778:32;1775:52;;;1823:1;1820;1813:12;1775:52;1855:9;1849:16;1874:46;1914:5;1874:46;:::i;1955:206::-;2024:6;2077:2;2065:9;2056:7;2052:23;2048:32;2045:52;;;2093:1;2090;2083:12;2045:52;2116:39;2145:9;2116:39;:::i;2166:265::-;2206:7;2272:1;2268;2264:6;2260:14;2257:1;2254:21;2249:1;2242:9;2235:17;2231:45;2228:168;;;2318:10;2313:3;2309:20;2306:1;2299:31;2353:4;2350:1;2343:15;2381:4;2378:1;2371:15;2228:168;-1:-1:-1;2416:9:41;;2166:265::o;2436:217::-;2476:1;2502;2492:132;;2546:10;2541:3;2537:20;2534:1;2527:31;2581:4;2578:1;2571:15;2609:4;2606:1;2599:15;2492:132;-1:-1:-1;2638:9:41;;2436:217::o;:::-;442:22225:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/contracts/WorkLock.sol",
  "type": "contract"
}