{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ETHWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositedTokens",
          "type": "uint256"
        }
      ],
      "name": "TokensDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositedTokens",
          "type": "uint256"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "workerOwner",
          "type": "address"
        }
      ],
      "name": "WorkerOwnerSet",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "BASIS_FRACTION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "delegators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "depositedTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdrawnReward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdrawnETH",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "depositTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "escrow",
      "outputs": [
        {
          "internalType": "contract IStakingEscrow",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegator",
          "type": "address"
        }
      ],
      "name": "getAvailableDelegatorETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegator",
          "type": "address"
        }
      ],
      "name": "getAvailableDelegatorReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAvailableReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAvailableWorkerReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCumulativeReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWorkerFraction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_workerFraction",
          "type": "uint256"
        },
        {
          "internalType": "contract StakingInterfaceRouter",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_workerOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract StakingInterfaceRouter",
          "name": "_router",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isDepositAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isFallbackAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isWithdrawAllAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "contract StakingInterfaceRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_workerOwner",
          "type": "address"
        }
      ],
      "name": "setWorkerOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract NuCypherToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDepositedTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalWithdrawnETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalWithdrawnReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawWorkerReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "workerOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "workerWithdrawnReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/contracts/IStakingEscrow.sol",
    "11": "contracts/contracts/NuCypherToken.sol",
    "12": "contracts/contracts/PolicyManager.sol",
    "15": "contracts/contracts/WorkLock.sol",
    "19": "contracts/contracts/lib/AdditionalMath.sol",
    "22": "contracts/contracts/lib/SignatureVerifier.sol",
    "26": "contracts/contracts/proxy/Upgradeable.sol",
    "27": "contracts/contracts/staking_contracts/AbstractStakingContract.sol",
    "28": "contracts/contracts/staking_contracts/PoolingStakingContractV2.sol",
    "29": "contracts/contracts/staking_contracts/StakingInterface.sol",
    "31": "contracts/threshold/IStaking.sol",
    "33": "contracts/zeppelin/math/SafeMath.sol",
    "34": "contracts/zeppelin/ownership/Ownable.sol",
    "35": "contracts/zeppelin/proxy/Initializable.sol",
    "36": "contracts/zeppelin/token/ERC20/ERC20.sol",
    "37": "contracts/zeppelin/token/ERC20/ERC20Detailed.sol",
    "38": "contracts/zeppelin/token/ERC20/IERC20.sol",
    "39": "contracts/zeppelin/token/ERC20/SafeERC20.sol",
    "40": "contracts/zeppelin/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/staking_contracts/PoolingStakingContractV2.sol",
    "exportedSymbols": {
      "AbstractStakingContract": [
        11085
      ],
      "AdditionalMath": [
        7462
      ],
      "Address": [
        14756
      ],
      "BaseStakingInterface": [
        12172
      ],
      "ERC20": [
        14103
      ],
      "ERC20Detailed": [
        14165
      ],
      "IERC20": [
        14235
      ],
      "IStaking": [
        13145
      ],
      "IStakingEscrow": [
        691
      ],
      "Initializable": [
        13712
      ],
      "InitializableStakingContract": [
        11147
      ],
      "Math": [
        13233
      ],
      "NuCypherToken": [
        751
      ],
      "Ownable": [
        13666
      ],
      "PolicyManager": [
        3682
      ],
      "PoolingStakingContractV2": [
        12020
      ],
      "RawStakingContract": [
        11027
      ],
      "SafeERC20": [
        14459
      ],
      "SafeMath": [
        13545
      ],
      "SignatureVerifier": [
        9074
      ],
      "StakingInterface": [
        12484
      ],
      "StakingInterfaceRouter": [
        10953
      ],
      "TokenRecipient": [
        765
      ],
      "Upgradeable": [
        10885
      ],
      "WorkLock": [
        7000
      ]
    },
    "id": 12021,
    "license": "AGPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11149,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "47:23:28"
      },
      {
        "absolutePath": "contracts/zeppelin/ownership/Ownable.sol",
        "file": "../../zeppelin/ownership/Ownable.sol",
        "id": 11150,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12021,
        "sourceUnit": 13667,
        "src": "72:46:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/staking_contracts/AbstractStakingContract.sol",
        "file": "./AbstractStakingContract.sol",
        "id": 11151,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12021,
        "sourceUnit": 11148,
        "src": "119:39:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11153,
              "name": "InitializableStakingContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11147,
              "src": "259:28:28"
            },
            "id": 11154,
            "nodeType": "InheritanceSpecifier",
            "src": "259:28:28"
          },
          {
            "baseName": {
              "id": 11155,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13666,
              "src": "289:7:28"
            },
            "id": 11156,
            "nodeType": "InheritanceSpecifier",
            "src": "289:7:28"
          }
        ],
        "canonicalName": "PoolingStakingContractV2",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11152,
          "nodeType": "StructuredDocumentation",
          "src": "160:61:28",
          "text": " @notice Contract acts as delegate for sub-stakers*"
        },
        "fullyImplemented": true,
        "id": 12020,
        "linearizedBaseContracts": [
          12020,
          13666,
          11147,
          11027,
          13712
        ],
        "name": "PoolingStakingContractV2",
        "nameLocation": "231:24:28",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11159,
            "libraryName": {
              "id": 11157,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14756,
              "src": "309:7:28"
            },
            "nodeType": "UsingForDirective",
            "src": "303:34:28",
            "typeName": {
              "id": 11158,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "321:15:28",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "id": 11163,
            "libraryName": {
              "id": 11160,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14459,
              "src": "348:9:28"
            },
            "nodeType": "UsingForDirective",
            "src": "342:34:28",
            "typeName": {
              "id": 11162,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11161,
                "name": "NuCypherToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 751,
                "src": "362:13:28"
              },
              "referencedDeclaration": 751,
              "src": "362:13:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NuCypherToken_$751",
                "typeString": "contract NuCypherToken"
              }
            }
          },
          {
            "anonymous": false,
            "id": 11171,
            "name": "TokensDeposited",
            "nameLocation": "388:15:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11165,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "429:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 11171,
                  "src": "413:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "413:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11167,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "453:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 11171,
                  "src": "445:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11169,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "depositedTokens",
                  "nameLocation": "476:15:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 11171,
                  "src": "468:23:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "403:94:28"
            },
            "src": "382:116:28"
          },
          {
            "anonymous": false,
            "id": 11179,
            "name": "TokensWithdrawn",
            "nameLocation": "509:15:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11173,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "550:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 11179,
                  "src": "534:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11175,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "574:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 11179,
                  "src": "566:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "566:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11177,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "depositedTokens",
                  "nameLocation": "597:15:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 11179,
                  "src": "589:23:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "524:94:28"
            },
            "src": "503:116:28"
          },
          {
            "anonymous": false,
            "id": 11185,
            "name": "ETHWithdrawn",
            "nameLocation": "630:12:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11181,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "659:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 11185,
                  "src": "643:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11183,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "675:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 11185,
                  "src": "667:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "667:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "642:39:28"
            },
            "src": "624:58:28"
          },
          {
            "anonymous": false,
            "id": 11191,
            "name": "WorkerOwnerSet",
            "nameLocation": "693:14:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11187,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "724:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 11191,
                  "src": "708:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11189,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "workerOwner",
                  "nameLocation": "748:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 11191,
                  "src": "732:27:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "732:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "707:53:28"
            },
            "src": "687:74:28"
          },
          {
            "canonicalName": "PoolingStakingContractV2.Delegator",
            "id": 11198,
            "members": [
              {
                "constant": false,
                "id": 11193,
                "mutability": "mutable",
                "name": "depositedTokens",
                "nameLocation": "802:15:28",
                "nodeType": "VariableDeclaration",
                "scope": 11198,
                "src": "794:23:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11192,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "794:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11195,
                "mutability": "mutable",
                "name": "withdrawnReward",
                "nameLocation": "835:15:28",
                "nodeType": "VariableDeclaration",
                "scope": 11198,
                "src": "827:23:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11194,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "827:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11197,
                "mutability": "mutable",
                "name": "withdrawnETH",
                "nameLocation": "868:12:28",
                "nodeType": "VariableDeclaration",
                "scope": 11198,
                "src": "860:20:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11196,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "860:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Delegator",
            "nameLocation": "774:9:28",
            "nodeType": "StructDefinition",
            "scope": 12020,
            "src": "767:120:28",
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 11199,
              "nodeType": "StructuredDocumentation",
              "src": "893:170:28",
              "text": " Defines base fraction and precision of worker fraction.\n E.g., for a value of 10000, a worker fraction of 100 represents 1% of reward (100/10000)"
            },
            "functionSelector": "44cbee0d",
            "id": 11202,
            "mutability": "constant",
            "name": "BASIS_FRACTION",
            "nameLocation": "1092:14:28",
            "nodeType": "VariableDeclaration",
            "scope": 12020,
            "src": "1068:46:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11200,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1068:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 11201,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1109:5:28",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e2fdcc17",
            "id": 11205,
            "mutability": "mutable",
            "name": "escrow",
            "nameLocation": "1143:6:28",
            "nodeType": "VariableDeclaration",
            "scope": 12020,
            "src": "1121:28:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStakingEscrow_$691",
              "typeString": "contract IStakingEscrow"
            },
            "typeName": {
              "id": 11204,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11203,
                "name": "IStakingEscrow",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 691,
                "src": "1121:14:28"
              },
              "referencedDeclaration": 691,
              "src": "1121:14:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                "typeString": "contract IStakingEscrow"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "595b1872",
            "id": 11207,
            "mutability": "mutable",
            "name": "workerOwner",
            "nameLocation": "1170:11:28",
            "nodeType": "VariableDeclaration",
            "scope": 12020,
            "src": "1155:26:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11206,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1155:7:28",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd012664",
            "id": 11209,
            "mutability": "mutable",
            "name": "totalDepositedTokens",
            "nameLocation": "1203:20:28",
            "nodeType": "VariableDeclaration",
            "scope": 12020,
            "src": "1188:35:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11208,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1188:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d42aa8a7",
            "id": 11211,
            "mutability": "mutable",
            "name": "totalWithdrawnReward",
            "nameLocation": "1244:20:28",
            "nodeType": "VariableDeclaration",
            "scope": 12020,
            "src": "1229:35:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11210,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1229:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8b713b2e",
            "id": 11213,
            "mutability": "mutable",
            "name": "totalWithdrawnETH",
            "nameLocation": "1285:17:28",
            "nodeType": "VariableDeclaration",
            "scope": 12020,
            "src": "1270:32:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11212,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1270:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11215,
            "mutability": "mutable",
            "name": "workerFraction",
            "nameLocation": "1317:14:28",
            "nodeType": "VariableDeclaration",
            "scope": 12020,
            "src": "1309:22:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11214,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1309:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "2dced887",
            "id": 11217,
            "mutability": "mutable",
            "name": "workerWithdrawnReward",
            "nameLocation": "1352:21:28",
            "nodeType": "VariableDeclaration",
            "scope": 12020,
            "src": "1337:36:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11216,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1337:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8d23fc61",
            "id": 11222,
            "mutability": "mutable",
            "name": "delegators",
            "nameLocation": "1417:10:28",
            "nodeType": "VariableDeclaration",
            "scope": 12020,
            "src": "1380:47:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Delegator_$11198_storage_$",
              "typeString": "mapping(address => struct PoolingStakingContractV2.Delegator)"
            },
            "typeName": {
              "id": 11221,
              "keyType": {
                "id": 11218,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1388:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1380:29:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Delegator_$11198_storage_$",
                "typeString": "mapping(address => struct PoolingStakingContractV2.Delegator)"
              },
              "valueType": {
                "id": 11220,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 11219,
                  "name": "Delegator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11198,
                  "src": "1399:9:28"
                },
                "referencedDeclaration": 11198,
                "src": "1399:9:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                  "typeString": "struct PoolingStakingContractV2.Delegator"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11281,
              "nodeType": "Block",
              "src": "2080:364:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 11245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 11241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11236,
                            "name": "_workerOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11230,
                            "src": "2098:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 11239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2122:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 11238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2114:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 11237,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2114:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2114:10:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2098:26:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11242,
                            "name": "_workerFraction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11225,
                            "src": "2128:15:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 11243,
                            "name": "BASIS_FRACTION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11202,
                            "src": "2147:14:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2128:33:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2098:63:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2090:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 11246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2090:72:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11247,
                  "nodeType": "ExpressionStatement",
                  "src": "2090:72:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11251,
                        "name": "_router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11228,
                        "src": "2212:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingInterfaceRouter_$10953",
                          "typeString": "contract StakingInterfaceRouter"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_StakingInterfaceRouter_$10953",
                          "typeString": "contract StakingInterfaceRouter"
                        }
                      ],
                      "expression": {
                        "id": 11248,
                        "name": "InitializableStakingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11147,
                        "src": "2172:28:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_InitializableStakingContract_$11147_$",
                          "typeString": "type(contract InitializableStakingContract)"
                        }
                      },
                      "id": 11250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11135,
                      "src": "2172:39:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_StakingInterfaceRouter_$10953_$returns$__$",
                        "typeString": "function (contract StakingInterfaceRouter)"
                      }
                    },
                    "id": 11252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2172:48:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11253,
                  "nodeType": "ExpressionStatement",
                  "src": "2172:48:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11255,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2249:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2249:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11254,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13665,
                      "src": "2230:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 11257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2230:30:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11258,
                  "nodeType": "ExpressionStatement",
                  "src": "2230:30:28"
                },
                {
                  "expression": {
                    "id": 11265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11259,
                      "name": "escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11205,
                      "src": "2270:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                        "typeString": "contract IStakingEscrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 11260,
                              "name": "_router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11228,
                              "src": "2279:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingInterfaceRouter_$10953",
                                "typeString": "contract StakingInterfaceRouter"
                              }
                            },
                            "id": 11261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "target",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10898,
                            "src": "2279:14:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_BaseStakingInterface_$12172_$",
                              "typeString": "function () view external returns (contract BaseStakingInterface)"
                            }
                          },
                          "id": 11262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2279:16:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BaseStakingInterface_$12172",
                            "typeString": "contract BaseStakingInterface"
                          }
                        },
                        "id": 11263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "escrow",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12037,
                        "src": "2279:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IStakingEscrow_$691_$",
                          "typeString": "function () view external returns (contract IStakingEscrow)"
                        }
                      },
                      "id": 11264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2279:25:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                        "typeString": "contract IStakingEscrow"
                      }
                    },
                    "src": "2270:34:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                      "typeString": "contract IStakingEscrow"
                    }
                  },
                  "id": 11266,
                  "nodeType": "ExpressionStatement",
                  "src": "2270:34:28"
                },
                {
                  "expression": {
                    "id": 11269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11267,
                      "name": "workerFraction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11215,
                      "src": "2314:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11268,
                      "name": "_workerFraction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11225,
                      "src": "2331:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2314:32:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11270,
                  "nodeType": "ExpressionStatement",
                  "src": "2314:32:28"
                },
                {
                  "expression": {
                    "id": 11273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11271,
                      "name": "workerOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11207,
                      "src": "2356:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11272,
                      "name": "_workerOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11230,
                      "src": "2370:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2356:26:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11274,
                  "nodeType": "ExpressionStatement",
                  "src": "2356:26:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11276,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2412:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2412:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11278,
                        "name": "_workerOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11230,
                        "src": "2424:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11275,
                      "name": "WorkerOwnerSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11191,
                      "src": "2397:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 11279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2397:40:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11280,
                  "nodeType": "EmitStatement",
                  "src": "2392:45:28"
                }
              ]
            },
            "documentation": {
              "id": 11223,
              "nodeType": "StructuredDocumentation",
              "src": "1434:491:28",
              "text": " @notice Initialize function for using with OpenZeppelin proxy\n @param _workerFraction Share of token reward that worker node owner will get.\n Use value up to BASIS_FRACTION (10000), if _workerFraction = BASIS_FRACTION -> means 100% reward as commission.\n For example, 100 worker fraction is 1% of reward\n @param _router StakingInterfaceRouter address\n @param _workerOwner Owner of worker node, only this address can withdraw worker commission"
            },
            "functionSelector": "b4988fd0",
            "id": 11282,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11233,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11232,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13711,
                  "src": "2068:11:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "2068:11:28"
              }
            ],
            "name": "initialize",
            "nameLocation": "1939:10:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11225,
                  "mutability": "mutable",
                  "name": "_workerFraction",
                  "nameLocation": "1967:15:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 11282,
                  "src": "1959:23:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1959:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11228,
                  "mutability": "mutable",
                  "name": "_router",
                  "nameLocation": "2015:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 11282,
                  "src": "1992:30:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StakingInterfaceRouter_$10953",
                    "typeString": "contract StakingInterfaceRouter"
                  },
                  "typeName": {
                    "id": 11227,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11226,
                      "name": "StakingInterfaceRouter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10953,
                      "src": "1992:22:28"
                    },
                    "referencedDeclaration": 10953,
                    "src": "1992:22:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingInterfaceRouter_$10953",
                      "typeString": "contract StakingInterfaceRouter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11230,
                  "mutability": "mutable",
                  "name": "_workerOwner",
                  "nameLocation": "2040:12:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 11282,
                  "src": "2032:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1949:109:28"
            },
            "returnParameters": {
              "id": 11234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2080:0:28"
            },
            "scope": 12020,
            "src": "1930:514:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11298,
              "nodeType": "Block",
              "src": "2565:131:28",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 11292,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2678:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PoolingStakingContractV2_$12020",
                                "typeString": "contract PoolingStakingContractV2"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PoolingStakingContractV2_$12020",
                                "typeString": "contract PoolingStakingContractV2"
                              }
                            ],
                            "id": 11291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2670:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11290,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2670:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2670:13:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 11288,
                          "name": "escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11205,
                          "src": "2650:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                            "typeString": "contract IStakingEscrow"
                          }
                        },
                        "id": 11289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAllTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 590,
                        "src": "2650:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 11294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2650:34:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2688:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2650:39:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11287,
                  "id": 11297,
                  "nodeType": "Return",
                  "src": "2643:46:28"
                }
              ]
            },
            "documentation": {
              "id": 11283,
              "nodeType": "StructuredDocumentation",
              "src": "2450:51:28",
              "text": " @notice withdrawAll() is allowed"
            },
            "functionSelector": "17a00261",
            "id": 11299,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isWithdrawAllAllowed",
            "nameLocation": "2515:20:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2535:2:28"
            },
            "returnParameters": {
              "id": 11287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11286,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11299,
                  "src": "2559:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11285,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2559:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2558:6:28"
            },
            "scope": 12020,
            "src": "2506:190:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11322,
              "nodeType": "Block",
              "src": "2809:240:28",
              "statements": [
                {
                  "assignments": [
                    11306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11306,
                      "mutability": "mutable",
                      "name": "freeTokens",
                      "nameLocation": "2875:10:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11322,
                      "src": "2867:18:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11305,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2867:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11314,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11311,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2912:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolingStakingContractV2_$12020",
                              "typeString": "contract PoolingStakingContractV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolingStakingContractV2_$12020",
                              "typeString": "contract PoolingStakingContractV2"
                            }
                          ],
                          "id": 11310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2904:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11309,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2904:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2904:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11307,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11096,
                        "src": "2888:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$751",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 11308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13754,
                      "src": "2888:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 11313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2888:30:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2867:51:28"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 11320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 11315,
                        "name": "isWithdrawAllAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11299,
                        "src": "2982:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 11316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2982:22:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11317,
                        "name": "freeTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11306,
                        "src": "3008:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 11318,
                        "name": "totalDepositedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11209,
                        "src": "3022:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3008:34:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2982:60:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11304,
                  "id": 11321,
                  "nodeType": "Return",
                  "src": "2975:67:28"
                }
              ]
            },
            "documentation": {
              "id": 11300,
              "nodeType": "StructuredDocumentation",
              "src": "2702:47:28",
              "text": " @notice deposit() is allowed"
            },
            "functionSelector": "4d444fac",
            "id": 11323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isDepositAllowed",
            "nameLocation": "2763:16:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2779:2:28"
            },
            "returnParameters": {
              "id": 11304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11303,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11323,
                  "src": "2803:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11302,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2803:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2802:6:28"
            },
            "scope": 12020,
            "src": "2754:295:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11341,
              "nodeType": "Block",
              "src": "3176:98:28",
              "statements": [
                {
                  "expression": {
                    "id": 11333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11331,
                      "name": "workerOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11207,
                      "src": "3186:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11332,
                      "name": "_workerOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11326,
                      "src": "3200:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3186:26:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11334,
                  "nodeType": "ExpressionStatement",
                  "src": "3186:26:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11336,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3242:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3242:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11338,
                        "name": "_workerOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11326,
                        "src": "3254:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11335,
                      "name": "WorkerOwnerSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11191,
                      "src": "3227:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 11339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3227:40:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11340,
                  "nodeType": "EmitStatement",
                  "src": "3222:45:28"
                }
              ]
            },
            "documentation": {
              "id": 11324,
              "nodeType": "StructuredDocumentation",
              "src": "3055:51:28",
              "text": " @notice Set worker owner address"
            },
            "functionSelector": "d330d85b",
            "id": 11342,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11329,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11328,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13593,
                  "src": "3166:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "3166:9:28"
              }
            ],
            "name": "setWorkerOwner",
            "nameLocation": "3120:14:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11326,
                  "mutability": "mutable",
                  "name": "_workerOwner",
                  "nameLocation": "3143:12:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 11342,
                  "src": "3135:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3135:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3134:22:28"
            },
            "returnParameters": {
              "id": 11330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3176:0:28"
            },
            "scope": 12020,
            "src": "3111:163:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11350,
              "nodeType": "Block",
              "src": "3490:38:28",
              "statements": [
                {
                  "expression": {
                    "id": 11348,
                    "name": "workerFraction",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11215,
                    "src": "3507:14:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11347,
                  "id": 11349,
                  "nodeType": "Return",
                  "src": "3500:21:28"
                }
              ]
            },
            "documentation": {
              "id": 11343,
              "nodeType": "StructuredDocumentation",
              "src": "3280:138:28",
              "text": " @notice Calculate worker's fraction depending on deposited tokens\n Override to implement dynamic worker fraction."
            },
            "functionSelector": "31843e25",
            "id": 11351,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWorkerFraction",
            "nameLocation": "3432:17:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3449:2:28"
            },
            "returnParameters": {
              "id": 11347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11346,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11351,
                  "src": "3481:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3481:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3480:9:28"
            },
            "scope": 12020,
            "src": "3423:105:28",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11408,
              "nodeType": "Block",
              "src": "3692:418:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11358,
                          "name": "isDepositAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11323,
                          "src": "3710:16:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 11359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3710:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f736974206d75737420626520656e61626c6564",
                        "id": 11360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3730:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1bd7a44cec6afdc149c8bb00f245a7fd530b7e4af74b6458e0d8d8ae467eb1d",
                          "typeString": "literal_string \"Deposit must be enabled\""
                        },
                        "value": "Deposit must be enabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1bd7a44cec6afdc149c8bb00f245a7fd530b7e4af74b6458e0d8d8ae467eb1d",
                          "typeString": "literal_string \"Deposit must be enabled\""
                        }
                      ],
                      "id": 11357,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3702:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3702:54:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11362,
                  "nodeType": "ExpressionStatement",
                  "src": "3702:54:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11364,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11354,
                          "src": "3774:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 11365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3783:1:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3774:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c7565206d757374206265206e6f7420656d707479",
                        "id": 11367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3786:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6b658e842793a826163d51e8050d0e0e49557a50b380010abb2781b248ad7a8",
                          "typeString": "literal_string \"Value must be not empty\""
                        },
                        "value": "Value must be not empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6b658e842793a826163d51e8050d0e0e49557a50b380010abb2781b248ad7a8",
                          "typeString": "literal_string \"Value must be not empty\""
                        }
                      ],
                      "id": 11363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3766:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3766:46:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11369,
                  "nodeType": "ExpressionStatement",
                  "src": "3766:46:28"
                },
                {
                  "expression": {
                    "id": 11372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11370,
                      "name": "totalDepositedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11209,
                      "src": "3822:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 11371,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11354,
                      "src": "3846:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3822:30:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11373,
                  "nodeType": "ExpressionStatement",
                  "src": "3822:30:28"
                },
                {
                  "assignments": [
                    11376
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11376,
                      "mutability": "mutable",
                      "name": "delegator",
                      "nameLocation": "3880:9:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11408,
                      "src": "3862:27:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                        "typeString": "struct PoolingStakingContractV2.Delegator"
                      },
                      "typeName": {
                        "id": 11375,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11374,
                          "name": "Delegator",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11198,
                          "src": "3862:9:28"
                        },
                        "referencedDeclaration": 11198,
                        "src": "3862:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                          "typeString": "struct PoolingStakingContractV2.Delegator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11381,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11377,
                      "name": "delegators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11222,
                      "src": "3892:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Delegator_$11198_storage_$",
                        "typeString": "mapping(address => struct PoolingStakingContractV2.Delegator storage ref)"
                      }
                    },
                    "id": 11380,
                    "indexExpression": {
                      "expression": {
                        "id": 11378,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3903:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 11379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3903:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3892:22:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Delegator_$11198_storage",
                      "typeString": "struct PoolingStakingContractV2.Delegator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3862:52:28"
                },
                {
                  "expression": {
                    "id": 11386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11382,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11376,
                        "src": "3924:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                          "typeString": "struct PoolingStakingContractV2.Delegator storage pointer"
                        }
                      },
                      "id": 11384,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "depositedTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11193,
                      "src": "3924:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 11385,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11354,
                      "src": "3953:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3924:35:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11387,
                  "nodeType": "ExpressionStatement",
                  "src": "3924:35:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11391,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3992:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3992:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11395,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4012:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolingStakingContractV2_$12020",
                              "typeString": "contract PoolingStakingContractV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolingStakingContractV2_$12020",
                              "typeString": "contract PoolingStakingContractV2"
                            }
                          ],
                          "id": 11394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4004:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11393,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4004:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4004:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11397,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11354,
                        "src": "4019:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11388,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11096,
                        "src": "3969:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$751",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 11390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14292,
                      "src": "3969:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$14235_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$14235_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 11398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3969:57:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11399,
                  "nodeType": "ExpressionStatement",
                  "src": "3969:57:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11401,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4057:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4057:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11403,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11354,
                        "src": "4069:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 11404,
                          "name": "delegator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11376,
                          "src": "4077:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                            "typeString": "struct PoolingStakingContractV2.Delegator storage pointer"
                          }
                        },
                        "id": 11405,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "depositedTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11193,
                        "src": "4077:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11400,
                      "name": "TokensDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11171,
                      "src": "4041:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 11406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4041:62:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11407,
                  "nodeType": "EmitStatement",
                  "src": "4036:67:28"
                }
              ]
            },
            "documentation": {
              "id": 11352,
              "nodeType": "StructuredDocumentation",
              "src": "3534:105:28",
              "text": " @notice Transfer tokens as delegator\n @param _value Amount of tokens to transfer"
            },
            "functionSelector": "dd49756e",
            "id": 11409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositTokens",
            "nameLocation": "3653:13:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11354,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "3675:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 11409,
                  "src": "3667:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3667:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3666:16:28"
            },
            "returnParameters": {
              "id": 11356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3692:0:28"
            },
            "scope": 12020,
            "src": "3644:466:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11452,
              "nodeType": "Block",
              "src": "4257:562:28",
              "statements": [
                {
                  "assignments": [
                    11416
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11416,
                      "mutability": "mutable",
                      "name": "stakedTokens",
                      "nameLocation": "4358:12:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11452,
                      "src": "4350:20:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11415,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4350:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11424,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11421,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4401:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolingStakingContractV2_$12020",
                              "typeString": "contract PoolingStakingContractV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolingStakingContractV2_$12020",
                              "typeString": "contract PoolingStakingContractV2"
                            }
                          ],
                          "id": 11420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4393:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11419,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4393:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4393:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11417,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11205,
                        "src": "4373:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                          "typeString": "contract IStakingEscrow"
                        }
                      },
                      "id": 11418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAllTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 590,
                      "src": "4373:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 11423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4373:34:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4350:57:28"
                },
                {
                  "assignments": [
                    11426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11426,
                      "mutability": "mutable",
                      "name": "freeTokens",
                      "nameLocation": "4473:10:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11452,
                      "src": "4465:18:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11425,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4465:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11434,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11431,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4510:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolingStakingContractV2_$12020",
                              "typeString": "contract PoolingStakingContractV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolingStakingContractV2_$12020",
                              "typeString": "contract PoolingStakingContractV2"
                            }
                          ],
                          "id": 11430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4502:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11429,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4502:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4502:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11427,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11096,
                        "src": "4486:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$751",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 11428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13754,
                      "src": "4486:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 11433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4486:30:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4465:51:28"
                },
                {
                  "assignments": [
                    11436
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11436,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "4589:6:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11452,
                      "src": "4581:14:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11435,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4581:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11442,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11437,
                        "name": "stakedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11416,
                        "src": "4598:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 11438,
                        "name": "freeTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11426,
                        "src": "4613:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4598:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 11440,
                      "name": "totalDepositedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11209,
                      "src": "4626:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4598:48:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4581:65:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11443,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11436,
                      "src": "4727:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 11444,
                      "name": "freeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11426,
                      "src": "4736:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4727:19:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11449,
                  "nodeType": "IfStatement",
                  "src": "4723:67:28",
                  "trueBody": {
                    "id": 11448,
                    "nodeType": "Block",
                    "src": "4748:42:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 11446,
                          "name": "freeTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11426,
                          "src": "4769:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 11414,
                        "id": 11447,
                        "nodeType": "Return",
                        "src": "4762:17:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 11450,
                    "name": "reward",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11436,
                    "src": "4806:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11414,
                  "id": 11451,
                  "nodeType": "Return",
                  "src": "4799:13:28"
                }
              ]
            },
            "documentation": {
              "id": 11410,
              "nodeType": "StructuredDocumentation",
              "src": "4116:76:28",
              "text": " @notice Get available reward for all delegators and owner"
            },
            "functionSelector": "e0974ea5",
            "id": 11453,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableReward",
            "nameLocation": "4206:18:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4224:2:28"
            },
            "returnParameters": {
              "id": 11414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11413,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11453,
                  "src": "4248:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4248:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4247:9:28"
            },
            "scope": 12020,
            "src": "4197:622:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11464,
              "nodeType": "Block",
              "src": "5033:67:28",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 11459,
                        "name": "getAvailableReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11453,
                        "src": "5050:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 11460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5050:20:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 11461,
                      "name": "totalWithdrawnReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11211,
                      "src": "5073:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5050:43:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11458,
                  "id": 11463,
                  "nodeType": "Return",
                  "src": "5043:50:28"
                }
              ]
            },
            "documentation": {
              "id": 11454,
              "nodeType": "StructuredDocumentation",
              "src": "4825:142:28",
              "text": " @notice Get cumulative reward.\n Available and withdrawn reward together to use in delegator/owner reward calculations"
            },
            "functionSelector": "dd934e89",
            "id": 11465,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCumulativeReward",
            "nameLocation": "4981:19:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5000:2:28"
            },
            "returnParameters": {
              "id": 11458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11457,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11465,
                  "src": "5024:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5024:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5023:9:28"
            },
            "scope": 12020,
            "src": "4972:128:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11513,
              "nodeType": "Block",
              "src": "5256:715:28",
              "statements": [
                {
                  "assignments": [
                    11472
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11472,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "5321:6:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11513,
                      "src": "5313:14:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11471,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5313:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11475,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11473,
                      "name": "getCumulativeReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11465,
                      "src": "5330:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 11474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5330:21:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5313:38:28"
                },
                {
                  "assignments": [
                    11477
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11477,
                      "mutability": "mutable",
                      "name": "maxAllowableReward",
                      "nameLocation": "5443:18:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11513,
                      "src": "5435:26:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11476,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5435:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11478,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5435:26:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11479,
                      "name": "totalDepositedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11209,
                      "src": "5497:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5521:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5497:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 11500,
                    "nodeType": "Block",
                    "src": "5715:52:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 11498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 11496,
                            "name": "maxAllowableReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11477,
                            "src": "5729:18:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 11497,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11472,
                            "src": "5750:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5729:27:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11499,
                        "nodeType": "ExpressionStatement",
                        "src": "5729:27:28"
                      }
                    ]
                  },
                  "id": 11501,
                  "nodeType": "IfStatement",
                  "src": "5493:274:28",
                  "trueBody": {
                    "id": 11495,
                    "nodeType": "Block",
                    "src": "5524:185:28",
                    "statements": [
                      {
                        "assignments": [
                          11483
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 11483,
                            "mutability": "mutable",
                            "name": "fraction",
                            "nameLocation": "5546:8:28",
                            "nodeType": "VariableDeclaration",
                            "scope": 11495,
                            "src": "5538:16:28",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 11482,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5538:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 11486,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11484,
                            "name": "getWorkerFraction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11351,
                            "src": "5557:17:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 11485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5557:19:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5538:38:28"
                      },
                      {
                        "expression": {
                          "id": 11493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 11487,
                            "name": "maxAllowableReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11477,
                            "src": "5590:18:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 11492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 11490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 11488,
                                "name": "reward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11472,
                                "src": "5611:6:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 11489,
                                "name": "fraction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11483,
                                "src": "5620:8:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5611:17:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 11491,
                              "name": "BASIS_FRACTION",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11202,
                              "src": "5631:14:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5611:34:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5590:55:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11494,
                        "nodeType": "ExpressionStatement",
                        "src": "5590:55:28"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11502,
                      "name": "maxAllowableReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11477,
                      "src": "5829:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 11503,
                      "name": "workerWithdrawnReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11217,
                      "src": "5850:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5829:42:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11510,
                  "nodeType": "IfStatement",
                  "src": "5825:122:28",
                  "trueBody": {
                    "id": 11509,
                    "nodeType": "Block",
                    "src": "5873:74:28",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11505,
                            "name": "maxAllowableReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11477,
                            "src": "5894:18:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 11506,
                            "name": "workerWithdrawnReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11217,
                            "src": "5915:21:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5894:42:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 11470,
                        "id": 11508,
                        "nodeType": "Return",
                        "src": "5887:49:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 11511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5963:1:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 11470,
                  "id": 11512,
                  "nodeType": "Return",
                  "src": "5956:8:28"
                }
              ]
            },
            "documentation": {
              "id": 11466,
              "nodeType": "StructuredDocumentation",
              "src": "5106:79:28",
              "text": " @notice Get available reward in tokens for worker node owner"
            },
            "functionSelector": "9212e643",
            "id": 11514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableWorkerReward",
            "nameLocation": "5199:24:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5223:2:28"
            },
            "returnParameters": {
              "id": 11470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11469,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11514,
                  "src": "5247:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5247:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5246:9:28"
            },
            "scope": 12020,
            "src": "5190:781:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11576,
              "nodeType": "Block",
              "src": "6140:813:28",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11522,
                      "name": "totalDepositedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11209,
                      "src": "6207:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6231:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6207:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11528,
                  "nodeType": "IfStatement",
                  "src": "6203:64:28",
                  "trueBody": {
                    "id": 11527,
                    "nodeType": "Block",
                    "src": "6234:33:28",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 11525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6255:1:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 11521,
                        "id": 11526,
                        "nodeType": "Return",
                        "src": "6248:8:28"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    11530
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11530,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "6332:6:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11576,
                      "src": "6324:14:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11529,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6324:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11533,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11531,
                      "name": "getCumulativeReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11465,
                      "src": "6341:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 11532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6341:21:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6324:38:28"
                },
                {
                  "assignments": [
                    11536
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11536,
                      "mutability": "mutable",
                      "name": "delegator",
                      "nameLocation": "6390:9:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11576,
                      "src": "6372:27:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                        "typeString": "struct PoolingStakingContractV2.Delegator"
                      },
                      "typeName": {
                        "id": 11535,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11534,
                          "name": "Delegator",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11198,
                          "src": "6372:9:28"
                        },
                        "referencedDeclaration": 11198,
                        "src": "6372:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                          "typeString": "struct PoolingStakingContractV2.Delegator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11540,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11537,
                      "name": "delegators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11222,
                      "src": "6402:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Delegator_$11198_storage_$",
                        "typeString": "mapping(address => struct PoolingStakingContractV2.Delegator storage ref)"
                      }
                    },
                    "id": 11539,
                    "indexExpression": {
                      "id": 11538,
                      "name": "_delegator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11517,
                      "src": "6413:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6402:22:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Delegator_$11198_storage",
                      "typeString": "struct PoolingStakingContractV2.Delegator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6372:52:28"
                },
                {
                  "assignments": [
                    11542
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11542,
                      "mutability": "mutable",
                      "name": "fraction",
                      "nameLocation": "6442:8:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11576,
                      "src": "6434:16:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11541,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6434:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11545,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11543,
                      "name": "getWorkerFraction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11351,
                      "src": "6453:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 11544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6453:19:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6434:38:28"
                },
                {
                  "assignments": [
                    11547
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11547,
                      "mutability": "mutable",
                      "name": "maxAllowableReward",
                      "nameLocation": "6601:18:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11576,
                      "src": "6593:26:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11546,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6593:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11562,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11548,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11530,
                          "src": "6622:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 11549,
                            "name": "delegator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11536,
                            "src": "6631:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                              "typeString": "struct PoolingStakingContractV2.Delegator storage pointer"
                            }
                          },
                          "id": 11550,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "depositedTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11193,
                          "src": "6631:25:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6622:34:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 11554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 11552,
                              "name": "BASIS_FRACTION",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11202,
                              "src": "6660:14:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 11553,
                              "name": "fraction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11542,
                              "src": "6677:8:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6660:25:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 11555,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6659:27:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6622:64:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11557,
                            "name": "totalDepositedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11209,
                            "src": "6702:20:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 11558,
                            "name": "BASIS_FRACTION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11202,
                            "src": "6725:14:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6702:37:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 11560,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6701:39:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6622:118:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6593:147:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11563,
                      "name": "maxAllowableReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11547,
                      "src": "6803:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 11564,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11536,
                        "src": "6824:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                          "typeString": "struct PoolingStakingContractV2.Delegator storage pointer"
                        }
                      },
                      "id": 11565,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawnReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11195,
                      "src": "6824:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6803:46:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11573,
                  "nodeType": "IfStatement",
                  "src": "6799:130:28",
                  "trueBody": {
                    "id": 11572,
                    "nodeType": "Block",
                    "src": "6851:78:28",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11567,
                            "name": "maxAllowableReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11547,
                            "src": "6872:18:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 11568,
                              "name": "delegator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11536,
                              "src": "6893:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                                "typeString": "struct PoolingStakingContractV2.Delegator storage pointer"
                              }
                            },
                            "id": 11569,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawnReward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11195,
                            "src": "6893:25:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6872:46:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 11521,
                        "id": 11571,
                        "nodeType": "Return",
                        "src": "6865:53:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 11574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6945:1:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 11521,
                  "id": 11575,
                  "nodeType": "Return",
                  "src": "6938:8:28"
                }
              ]
            },
            "documentation": {
              "id": 11515,
              "nodeType": "StructuredDocumentation",
              "src": "5977:71:28",
              "text": " @notice Get available reward in tokens for delegator"
            },
            "functionSelector": "83679e91",
            "id": 11577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableDelegatorReward",
            "nameLocation": "6062:27:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11517,
                  "mutability": "mutable",
                  "name": "_delegator",
                  "nameLocation": "6098:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 11577,
                  "src": "6090:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6090:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6089:20:28"
            },
            "returnParameters": {
              "id": 11521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11520,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11577,
                  "src": "6131:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6131:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6130:9:28"
            },
            "scope": 12020,
            "src": "6053:900:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11642,
              "nodeType": "Block",
              "src": "7078:597:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 11582,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7096:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7096:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 11584,
                          "name": "workerOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11207,
                          "src": "7110:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7096:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11581,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7088:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 11586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7088:34:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11587,
                  "nodeType": "ExpressionStatement",
                  "src": "7088:34:28"
                },
                {
                  "assignments": [
                    11589
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11589,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "7140:7:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11642,
                      "src": "7132:15:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11588,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7132:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11597,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11594,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7174:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolingStakingContractV2_$12020",
                              "typeString": "contract PoolingStakingContractV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolingStakingContractV2_$12020",
                              "typeString": "contract PoolingStakingContractV2"
                            }
                          ],
                          "id": 11593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7166:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11592,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7166:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7166:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11590,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11096,
                        "src": "7150:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$751",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 11591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13754,
                      "src": "7150:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 11596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7150:30:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7132:48:28"
                },
                {
                  "assignments": [
                    11599
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11599,
                      "mutability": "mutable",
                      "name": "availableReward",
                      "nameLocation": "7198:15:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11642,
                      "src": "7190:23:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11598,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7190:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11602,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11600,
                      "name": "getAvailableWorkerReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11514,
                      "src": "7216:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 11601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7216:26:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7190:52:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11603,
                      "name": "availableReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11599,
                      "src": "7257:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 11604,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11589,
                      "src": "7275:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7257:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11611,
                  "nodeType": "IfStatement",
                  "src": "7253:81:28",
                  "trueBody": {
                    "id": 11610,
                    "nodeType": "Block",
                    "src": "7284:50:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 11608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 11606,
                            "name": "availableReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11599,
                            "src": "7298:15:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 11607,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11589,
                            "src": "7316:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7298:25:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11609,
                        "nodeType": "ExpressionStatement",
                        "src": "7298:25:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11613,
                          "name": "availableReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11599,
                          "src": "7364:15:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 11614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7382:1:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7364:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f20617661696c61626c652072657761726420746f207769746864726177",
                        "id": 11616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7397:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a76bd3768e2e8c036237c630129c0cc58fa3aa1d1fb2cf0d619db2f365bbc162",
                          "typeString": "literal_string \"There is no available reward to withdraw\""
                        },
                        "value": "There is no available reward to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a76bd3768e2e8c036237c630129c0cc58fa3aa1d1fb2cf0d619db2f365bbc162",
                          "typeString": "literal_string \"There is no available reward to withdraw\""
                        }
                      ],
                      "id": 11612,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7343:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7343:106:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11618,
                  "nodeType": "ExpressionStatement",
                  "src": "7343:106:28"
                },
                {
                  "expression": {
                    "id": 11621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11619,
                      "name": "workerWithdrawnReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11217,
                      "src": "7459:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 11620,
                      "name": "availableReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11599,
                      "src": "7484:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7459:40:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11622,
                  "nodeType": "ExpressionStatement",
                  "src": "7459:40:28"
                },
                {
                  "expression": {
                    "id": 11625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11623,
                      "name": "totalWithdrawnReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11211,
                      "src": "7509:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 11624,
                      "name": "availableReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11599,
                      "src": "7533:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7509:39:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11626,
                  "nodeType": "ExpressionStatement",
                  "src": "7509:39:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11630,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7578:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7578:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11632,
                        "name": "availableReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11599,
                        "src": "7590:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11627,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11096,
                        "src": "7559:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$751",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 11629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14266,
                      "src": "7559:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$14235_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$14235_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 11633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7559:47:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11634,
                  "nodeType": "ExpressionStatement",
                  "src": "7559:47:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11636,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7637:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7637:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11638,
                        "name": "availableReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11599,
                        "src": "7649:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 11639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7666:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 11635,
                      "name": "TokensWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11179,
                      "src": "7621:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 11640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7621:47:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11641,
                  "nodeType": "EmitStatement",
                  "src": "7616:52:28"
                }
              ]
            },
            "documentation": {
              "id": 11578,
              "nodeType": "StructuredDocumentation",
              "src": "6959:73:28",
              "text": " @notice Withdraw reward in tokens to worker node owner"
            },
            "functionSelector": "f435d2e5",
            "id": 11643,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawWorkerReward",
            "nameLocation": "7046:20:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7066:2:28"
            },
            "returnParameters": {
              "id": 11580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7078:0:28"
            },
            "scope": 12020,
            "src": "7037:638:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10976
            ],
            "body": {
              "id": 11715,
              "nodeType": "Block",
              "src": "7847:588:28",
              "statements": [
                {
                  "assignments": [
                    11651
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11651,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "7865:7:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11715,
                      "src": "7857:15:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11650,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7857:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11659,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11656,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7899:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolingStakingContractV2_$12020",
                              "typeString": "contract PoolingStakingContractV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolingStakingContractV2_$12020",
                              "typeString": "contract PoolingStakingContractV2"
                            }
                          ],
                          "id": 11655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7891:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11654,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7891:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7891:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11652,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11096,
                        "src": "7875:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$751",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 11653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13754,
                      "src": "7875:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 11658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7875:30:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7857:48:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11661,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11646,
                          "src": "7923:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 11662,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11651,
                          "src": "7933:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7923:17:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e7320696e2074686520636f6e7472616374",
                        "id": 11664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7942:35:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_959505d6981f86f0c6cd07dec1d06d3184e540da7045476dc2b1bea329849d7c",
                          "typeString": "literal_string \"Not enough tokens in the contract\""
                        },
                        "value": "Not enough tokens in the contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_959505d6981f86f0c6cd07dec1d06d3184e540da7045476dc2b1bea329849d7c",
                          "typeString": "literal_string \"Not enough tokens in the contract\""
                        }
                      ],
                      "id": 11660,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7915:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7915:63:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11666,
                  "nodeType": "ExpressionStatement",
                  "src": "7915:63:28"
                },
                {
                  "assignments": [
                    11669
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11669,
                      "mutability": "mutable",
                      "name": "delegator",
                      "nameLocation": "8007:9:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11715,
                      "src": "7989:27:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                        "typeString": "struct PoolingStakingContractV2.Delegator"
                      },
                      "typeName": {
                        "id": 11668,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11667,
                          "name": "Delegator",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11198,
                          "src": "7989:9:28"
                        },
                        "referencedDeclaration": 11198,
                        "src": "7989:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                          "typeString": "struct PoolingStakingContractV2.Delegator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11674,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11670,
                      "name": "delegators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11222,
                      "src": "8019:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Delegator_$11198_storage_$",
                        "typeString": "mapping(address => struct PoolingStakingContractV2.Delegator storage ref)"
                      }
                    },
                    "id": 11673,
                    "indexExpression": {
                      "expression": {
                        "id": 11671,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8030:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 11672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8030:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8019:22:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Delegator_$11198_storage",
                      "typeString": "struct PoolingStakingContractV2.Delegator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7989:52:28"
                },
                {
                  "assignments": [
                    11676
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11676,
                      "mutability": "mutable",
                      "name": "availableReward",
                      "nameLocation": "8059:15:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11715,
                      "src": "8051:23:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11675,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8051:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11681,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11678,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8105:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8105:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11677,
                      "name": "getAvailableDelegatorReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11577,
                      "src": "8077:27:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 11680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8077:39:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8051:65:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11683,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11646,
                          "src": "8136:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 11684,
                          "name": "availableReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11676,
                          "src": "8146:15:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8136:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657175657374656420616d6f756e74206f6620746f6b656e7320657863656564656420616c6c6f77656420706f7274696f6e",
                        "id": 11686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8163:53:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74ff18440689c527a399b37f37f373ddc1818299b0a899dc2bdbd49559f31933",
                          "typeString": "literal_string \"Requested amount of tokens exceeded allowed portion\""
                        },
                        "value": "Requested amount of tokens exceeded allowed portion"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74ff18440689c527a399b37f37f373ddc1818299b0a899dc2bdbd49559f31933",
                          "typeString": "literal_string \"Requested amount of tokens exceeded allowed portion\""
                        }
                      ],
                      "id": 11682,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8127:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8127:90:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11688,
                  "nodeType": "ExpressionStatement",
                  "src": "8127:90:28"
                },
                {
                  "expression": {
                    "id": 11693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11689,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11669,
                        "src": "8227:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                          "typeString": "struct PoolingStakingContractV2.Delegator storage pointer"
                        }
                      },
                      "id": 11691,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawnReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11195,
                      "src": "8227:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 11692,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11646,
                      "src": "8256:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8227:35:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11694,
                  "nodeType": "ExpressionStatement",
                  "src": "8227:35:28"
                },
                {
                  "expression": {
                    "id": 11697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11695,
                      "name": "totalWithdrawnReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11211,
                      "src": "8272:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 11696,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11646,
                      "src": "8296:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8272:30:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11698,
                  "nodeType": "ExpressionStatement",
                  "src": "8272:30:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11702,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8332:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8332:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11704,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11646,
                        "src": "8344:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11699,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11096,
                        "src": "8313:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$751",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 11701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14266,
                      "src": "8313:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$14235_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$14235_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 11705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8313:38:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11706,
                  "nodeType": "ExpressionStatement",
                  "src": "8313:38:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11708,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8382:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8382:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11710,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11646,
                        "src": "8394:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 11711,
                          "name": "delegator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11669,
                          "src": "8402:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                            "typeString": "struct PoolingStakingContractV2.Delegator storage pointer"
                          }
                        },
                        "id": 11712,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "depositedTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11193,
                        "src": "8402:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11707,
                      "name": "TokensWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11179,
                      "src": "8366:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 11713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8366:62:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11714,
                  "nodeType": "EmitStatement",
                  "src": "8361:67:28"
                }
              ]
            },
            "documentation": {
              "id": 11644,
              "nodeType": "StructuredDocumentation",
              "src": "7681:105:28",
              "text": " @notice Withdraw reward to delegator\n @param _value Amount of tokens to withdraw"
            },
            "functionSelector": "315a095d",
            "id": 11716,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTokens",
            "nameLocation": "7800:14:28",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11648,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7838:8:28"
            },
            "parameters": {
              "id": 11647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11646,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "7823:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 11716,
                  "src": "7815:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7815:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7814:16:28"
            },
            "returnParameters": {
              "id": 11649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7847:0:28"
            },
            "scope": 12020,
            "src": "7791:644:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11896,
              "nodeType": "Block",
              "src": "8548:1900:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11721,
                          "name": "isWithdrawAllAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11299,
                          "src": "8566:20:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 11722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8566:22:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5769746864726177206465706f73697420616e6420726577617264206d75737420626520656e61626c6564",
                        "id": 11723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8590:45:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a21036dd08fd9e1c68dc90937336cbf4100e037fc1ec7b277428b900915ee77f",
                          "typeString": "literal_string \"Withdraw deposit and reward must be enabled\""
                        },
                        "value": "Withdraw deposit and reward must be enabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a21036dd08fd9e1c68dc90937336cbf4100e037fc1ec7b277428b900915ee77f",
                          "typeString": "literal_string \"Withdraw deposit and reward must be enabled\""
                        }
                      ],
                      "id": 11720,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8558:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8558:78:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11725,
                  "nodeType": "ExpressionStatement",
                  "src": "8558:78:28"
                },
                {
                  "assignments": [
                    11727
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11727,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "8654:7:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11896,
                      "src": "8646:15:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11726,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8646:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11735,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11732,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8688:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolingStakingContractV2_$12020",
                              "typeString": "contract PoolingStakingContractV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolingStakingContractV2_$12020",
                              "typeString": "contract PoolingStakingContractV2"
                            }
                          ],
                          "id": 11731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8680:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11730,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8680:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8680:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11728,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11096,
                        "src": "8664:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$751",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 11729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13754,
                      "src": "8664:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 11734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8664:30:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8646:48:28"
                },
                {
                  "assignments": [
                    11738
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11738,
                      "mutability": "mutable",
                      "name": "delegator",
                      "nameLocation": "8723:9:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11896,
                      "src": "8705:27:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                        "typeString": "struct PoolingStakingContractV2.Delegator"
                      },
                      "typeName": {
                        "id": 11737,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11736,
                          "name": "Delegator",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11198,
                          "src": "8705:9:28"
                        },
                        "referencedDeclaration": 11198,
                        "src": "8705:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                          "typeString": "struct PoolingStakingContractV2.Delegator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11743,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11739,
                      "name": "delegators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11222,
                      "src": "8735:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Delegator_$11198_storage_$",
                        "typeString": "mapping(address => struct PoolingStakingContractV2.Delegator storage ref)"
                      }
                    },
                    "id": 11742,
                    "indexExpression": {
                      "expression": {
                        "id": 11740,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8746:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 11741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8746:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8735:22:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Delegator_$11198_storage",
                      "typeString": "struct PoolingStakingContractV2.Delegator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8705:52:28"
                },
                {
                  "assignments": [
                    11745
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11745,
                      "mutability": "mutable",
                      "name": "availableReward",
                      "nameLocation": "8775:15:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11896,
                      "src": "8767:23:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11744,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8767:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11750,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11747,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8821:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8821:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11746,
                      "name": "getAvailableDelegatorReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11577,
                      "src": "8793:27:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 11749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8793:39:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8767:65:28"
                },
                {
                  "assignments": [
                    11752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11752,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "8850:5:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11896,
                      "src": "8842:13:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11751,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8842:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11757,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11753,
                      "name": "availableReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11745,
                      "src": "8858:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "expression": {
                        "id": 11754,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11738,
                        "src": "8876:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                          "typeString": "struct PoolingStakingContractV2.Delegator storage pointer"
                        }
                      },
                      "id": 11755,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositedTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11193,
                      "src": "8876:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8858:43:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8842:59:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11759,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11752,
                          "src": "8919:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 11760,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11727,
                          "src": "8928:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8919:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e7320696e2074686520636f6e7472616374",
                        "id": 11762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8937:35:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_959505d6981f86f0c6cd07dec1d06d3184e540da7045476dc2b1bea329849d7c",
                          "typeString": "literal_string \"Not enough tokens in the contract\""
                        },
                        "value": "Not enough tokens in the contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_959505d6981f86f0c6cd07dec1d06d3184e540da7045476dc2b1bea329849d7c",
                          "typeString": "literal_string \"Not enough tokens in the contract\""
                        }
                      ],
                      "id": 11758,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8911:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8911:62:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11764,
                  "nodeType": "ExpressionStatement",
                  "src": "8911:62:28"
                },
                {
                  "assignments": [
                    11766
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11766,
                      "mutability": "mutable",
                      "name": "availableWorkerReward",
                      "nameLocation": "9110:21:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11896,
                      "src": "9102:29:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11765,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9102:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11769,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11767,
                      "name": "getAvailableWorkerReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11514,
                      "src": "9134:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 11768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9134:26:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9102:58:28"
                },
                {
                  "assignments": [
                    11771
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11771,
                      "mutability": "mutable",
                      "name": "availableETH",
                      "nameLocation": "9232:12:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11896,
                      "src": "9224:20:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11770,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9224:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11776,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11773,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9272:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9272:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11772,
                      "name": "getAvailableDelegatorETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11952,
                      "src": "9247:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 11775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9247:36:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9224:59:28"
                },
                {
                  "assignments": [
                    11778
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11778,
                      "mutability": "mutable",
                      "name": "workerReward",
                      "nameLocation": "9365:12:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11896,
                      "src": "9357:20:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11777,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9357:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11785,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11779,
                        "name": "availableWorkerReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11766,
                        "src": "9380:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "expression": {
                          "id": 11780,
                          "name": "delegator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11738,
                          "src": "9404:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                            "typeString": "struct PoolingStakingContractV2.Delegator storage pointer"
                          }
                        },
                        "id": 11781,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "depositedTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11193,
                        "src": "9404:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9380:49:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 11783,
                      "name": "totalDepositedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11209,
                      "src": "9432:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9380:72:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9357:95:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11786,
                      "name": "workerReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11778,
                      "src": "9466:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9481:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9466:16:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11812,
                  "nodeType": "IfStatement",
                  "src": "9462:247:28",
                  "trueBody": {
                    "id": 11811,
                    "nodeType": "Block",
                    "src": "9484:225:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 11794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 11792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 11790,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11752,
                                  "src": "9506:5:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 11791,
                                  "name": "workerReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11778,
                                  "src": "9514:12:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9506:20:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 11793,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11727,
                                "src": "9530:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9506:31:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656e6f75676820746f6b656e7320696e2074686520636f6e7472616374",
                              "id": 11795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9539:35:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_959505d6981f86f0c6cd07dec1d06d3184e540da7045476dc2b1bea329849d7c",
                                "typeString": "literal_string \"Not enough tokens in the contract\""
                              },
                              "value": "Not enough tokens in the contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_959505d6981f86f0c6cd07dec1d06d3184e540da7045476dc2b1bea329849d7c",
                                "typeString": "literal_string \"Not enough tokens in the contract\""
                              }
                            ],
                            "id": 11789,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9498:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 11796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9498:77:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11797,
                        "nodeType": "ExpressionStatement",
                        "src": "9498:77:28"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 11801,
                              "name": "workerOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11207,
                              "src": "9608:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 11802,
                              "name": "workerReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11778,
                              "src": "9621:12:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 11798,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11096,
                              "src": "9589:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NuCypherToken_$751",
                                "typeString": "contract NuCypherToken"
                              }
                            },
                            "id": 11800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14266,
                            "src": "9589:18:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$14235_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$14235_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 11803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9589:45:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11804,
                        "nodeType": "ExpressionStatement",
                        "src": "9589:45:28"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 11806,
                              "name": "workerOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11207,
                              "src": "9669:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 11807,
                              "name": "workerReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11778,
                              "src": "9682:12:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 11808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9696:1:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11805,
                            "name": "TokensWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11179,
                            "src": "9653:15:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 11809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9653:45:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11810,
                        "nodeType": "EmitStatement",
                        "src": "9648:50:28"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    11814
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11814,
                      "mutability": "mutable",
                      "name": "withdrawnToDecrease",
                      "nameLocation": "9727:19:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11896,
                      "src": "9719:27:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11813,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9719:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11821,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11815,
                        "name": "workerWithdrawnReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11217,
                        "src": "9749:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "expression": {
                          "id": 11816,
                          "name": "delegator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11738,
                          "src": "9773:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                            "typeString": "struct PoolingStakingContractV2.Delegator storage pointer"
                          }
                        },
                        "id": 11817,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "depositedTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11193,
                        "src": "9773:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9749:49:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 11819,
                      "name": "totalDepositedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11209,
                      "src": "9801:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9749:72:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9719:102:28"
                },
                {
                  "expression": {
                    "id": 11824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11822,
                      "name": "workerWithdrawnReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11217,
                      "src": "9832:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 11823,
                      "name": "withdrawnToDecrease",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11814,
                      "src": "9857:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9832:44:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11825,
                  "nodeType": "ExpressionStatement",
                  "src": "9832:44:28"
                },
                {
                  "expression": {
                    "id": 11831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11826,
                      "name": "totalWithdrawnReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11211,
                      "src": "9886:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11827,
                        "name": "withdrawnToDecrease",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11814,
                        "src": "9910:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 11828,
                          "name": "delegator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11738,
                          "src": "9932:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                            "typeString": "struct PoolingStakingContractV2.Delegator storage pointer"
                          }
                        },
                        "id": 11829,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawnReward",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11195,
                        "src": "9932:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9910:47:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9886:71:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11832,
                  "nodeType": "ExpressionStatement",
                  "src": "9886:71:28"
                },
                {
                  "expression": {
                    "id": 11836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11833,
                      "name": "totalDepositedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11209,
                      "src": "9967:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "expression": {
                        "id": 11834,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11738,
                        "src": "9991:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                          "typeString": "struct PoolingStakingContractV2.Delegator storage pointer"
                        }
                      },
                      "id": 11835,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositedTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11193,
                      "src": "9991:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9967:49:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11837,
                  "nodeType": "ExpressionStatement",
                  "src": "9967:49:28"
                },
                {
                  "expression": {
                    "id": 11842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11838,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11738,
                        "src": "10027:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                          "typeString": "struct PoolingStakingContractV2.Delegator storage pointer"
                        }
                      },
                      "id": 11840,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawnReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11195,
                      "src": "10027:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 11841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10055:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10027:29:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11843,
                  "nodeType": "ExpressionStatement",
                  "src": "10027:29:28"
                },
                {
                  "expression": {
                    "id": 11848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11844,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11738,
                        "src": "10066:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                          "typeString": "struct PoolingStakingContractV2.Delegator storage pointer"
                        }
                      },
                      "id": 11846,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "depositedTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11193,
                      "src": "10066:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 11847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10094:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10066:29:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11849,
                  "nodeType": "ExpressionStatement",
                  "src": "10066:29:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11853,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10125:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10125:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11855,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11752,
                        "src": "10137:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11850,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11096,
                        "src": "10106:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NuCypherToken_$751",
                          "typeString": "contract NuCypherToken"
                        }
                      },
                      "id": 11852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14266,
                      "src": "10106:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$14235_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$14235_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 11856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10106:37:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11857,
                  "nodeType": "ExpressionStatement",
                  "src": "10106:37:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11859,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10174:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10174:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11861,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11752,
                        "src": "10186:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 11862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10193:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 11858,
                      "name": "TokensWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11179,
                      "src": "10158:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 11863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10158:37:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11864,
                  "nodeType": "EmitStatement",
                  "src": "10153:42:28"
                },
                {
                  "expression": {
                    "id": 11868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11865,
                      "name": "totalWithdrawnETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11213,
                      "src": "10206:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "expression": {
                        "id": 11866,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11738,
                        "src": "10227:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                          "typeString": "struct PoolingStakingContractV2.Delegator storage pointer"
                        }
                      },
                      "id": 11867,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawnETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11197,
                      "src": "10227:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10206:43:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11869,
                  "nodeType": "ExpressionStatement",
                  "src": "10206:43:28"
                },
                {
                  "expression": {
                    "id": 11874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11870,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11738,
                        "src": "10259:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                          "typeString": "struct PoolingStakingContractV2.Delegator storage pointer"
                        }
                      },
                      "id": 11872,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawnETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11197,
                      "src": "10259:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 11873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10284:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10259:26:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11875,
                  "nodeType": "ExpressionStatement",
                  "src": "10259:26:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11876,
                      "name": "availableETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11771,
                      "src": "10299:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10314:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10299:16:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11895,
                  "nodeType": "IfStatement",
                  "src": "10295:147:28",
                  "trueBody": {
                    "id": 11894,
                    "nodeType": "Block",
                    "src": "10317:125:28",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 11880,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10349:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 11881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10349:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 11882,
                              "name": "availableETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11771,
                              "src": "10361:12:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11879,
                            "name": "ETHWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11185,
                            "src": "10336:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 11883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10336:38:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11884,
                        "nodeType": "EmitStatement",
                        "src": "10331:43:28"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 11891,
                              "name": "availableETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11771,
                              "src": "10418:12:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 11887,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "10396:3:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 11888,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "10396:10:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 11886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10388:8:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 11885,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10388:8:28",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 11889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10388:19:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 11890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sendValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14513,
                            "src": "10388:29:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$",
                              "typeString": "function (address payable,uint256)"
                            }
                          },
                          "id": 11892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10388:43:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11893,
                        "nodeType": "ExpressionStatement",
                        "src": "10388:43:28"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 11717,
              "nodeType": "StructuredDocumentation",
              "src": "8441:72:28",
              "text": " @notice Withdraw reward, deposit and fee to delegator"
            },
            "functionSelector": "853828b6",
            "id": 11897,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nameLocation": "8527:11:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8538:2:28"
            },
            "returnParameters": {
              "id": 11719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8548:0:28"
            },
            "scope": 12020,
            "src": "8518:1930:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11951,
              "nodeType": "Block",
              "src": "10603:480:28",
              "statements": [
                {
                  "assignments": [
                    11907
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11907,
                      "mutability": "mutable",
                      "name": "delegator",
                      "nameLocation": "10631:9:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11951,
                      "src": "10613:27:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                        "typeString": "struct PoolingStakingContractV2.Delegator"
                      },
                      "typeName": {
                        "id": 11906,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11905,
                          "name": "Delegator",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11198,
                          "src": "10613:9:28"
                        },
                        "referencedDeclaration": 11198,
                        "src": "10613:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                          "typeString": "struct PoolingStakingContractV2.Delegator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11911,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11908,
                      "name": "delegators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11222,
                      "src": "10643:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Delegator_$11198_storage_$",
                        "typeString": "mapping(address => struct PoolingStakingContractV2.Delegator storage ref)"
                      }
                    },
                    "id": 11910,
                    "indexExpression": {
                      "id": 11909,
                      "name": "_delegator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11900,
                      "src": "10654:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10643:22:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Delegator_$11198_storage",
                      "typeString": "struct PoolingStakingContractV2.Delegator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10613:52:28"
                },
                {
                  "assignments": [
                    11913
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11913,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "10683:7:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11951,
                      "src": "10675:15:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11912,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10675:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11919,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 11916,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "10701:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PoolingStakingContractV2_$12020",
                            "typeString": "contract PoolingStakingContractV2"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PoolingStakingContractV2_$12020",
                            "typeString": "contract PoolingStakingContractV2"
                          }
                        ],
                        "id": 11915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10693:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11914,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10693:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10693:13:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 11918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "10693:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10675:39:28"
                },
                {
                  "expression": {
                    "id": 11922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11920,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11913,
                      "src": "10767:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 11921,
                      "name": "totalWithdrawnETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11213,
                      "src": "10778:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10767:28:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11923,
                  "nodeType": "ExpressionStatement",
                  "src": "10767:28:28"
                },
                {
                  "assignments": [
                    11925
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11925,
                      "mutability": "mutable",
                      "name": "maxAllowableETH",
                      "nameLocation": "10813:15:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11951,
                      "src": "10805:23:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11924,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10805:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11932,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11926,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11913,
                        "src": "10831:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "expression": {
                          "id": 11927,
                          "name": "delegator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11907,
                          "src": "10841:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                            "typeString": "struct PoolingStakingContractV2.Delegator storage pointer"
                          }
                        },
                        "id": 11928,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "depositedTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11193,
                        "src": "10841:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10831:35:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 11930,
                      "name": "totalDepositedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11209,
                      "src": "10869:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10831:58:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10805:84:28"
                },
                {
                  "assignments": [
                    11934
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11934,
                      "mutability": "mutable",
                      "name": "availableETH",
                      "nameLocation": "10908:12:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 11951,
                      "src": "10900:20:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11933,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10900:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11939,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11935,
                      "name": "maxAllowableETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11925,
                      "src": "10923:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 11936,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11907,
                        "src": "10941:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                          "typeString": "struct PoolingStakingContractV2.Delegator storage pointer"
                        }
                      },
                      "id": 11937,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawnETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11197,
                      "src": "10941:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10923:40:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10900:63:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11940,
                      "name": "availableETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11934,
                      "src": "10977:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 11941,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11913,
                      "src": "10992:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10977:22:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11948,
                  "nodeType": "IfStatement",
                  "src": "10973:75:28",
                  "trueBody": {
                    "id": 11947,
                    "nodeType": "Block",
                    "src": "11001:47:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 11945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 11943,
                            "name": "availableETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11934,
                            "src": "11015:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 11944,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11913,
                            "src": "11030:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11015:22:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11946,
                        "nodeType": "ExpressionStatement",
                        "src": "11015:22:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 11949,
                    "name": "availableETH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11934,
                    "src": "11064:12:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11904,
                  "id": 11950,
                  "nodeType": "Return",
                  "src": "11057:19:28"
                }
              ]
            },
            "documentation": {
              "id": 11898,
              "nodeType": "StructuredDocumentation",
              "src": "10454:60:28",
              "text": " @notice Get available ether for delegator"
            },
            "functionSelector": "84dbfc85",
            "id": 11952,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableDelegatorETH",
            "nameLocation": "10528:24:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11900,
                  "mutability": "mutable",
                  "name": "_delegator",
                  "nameLocation": "10561:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 11952,
                  "src": "10553:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11899,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10553:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10552:20:28"
            },
            "returnParameters": {
              "id": 11904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11903,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11952,
                  "src": "10594:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10594:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10593:9:28"
            },
            "scope": 12020,
            "src": "10519:564:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10980
            ],
            "body": {
              "id": 12004,
              "nodeType": "Block",
              "src": "11205:412:28",
              "statements": [
                {
                  "assignments": [
                    11959
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11959,
                      "mutability": "mutable",
                      "name": "delegator",
                      "nameLocation": "11233:9:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 12004,
                      "src": "11215:27:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                        "typeString": "struct PoolingStakingContractV2.Delegator"
                      },
                      "typeName": {
                        "id": 11958,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11957,
                          "name": "Delegator",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11198,
                          "src": "11215:9:28"
                        },
                        "referencedDeclaration": 11198,
                        "src": "11215:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                          "typeString": "struct PoolingStakingContractV2.Delegator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11964,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11960,
                      "name": "delegators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11222,
                      "src": "11245:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Delegator_$11198_storage_$",
                        "typeString": "mapping(address => struct PoolingStakingContractV2.Delegator storage ref)"
                      }
                    },
                    "id": 11963,
                    "indexExpression": {
                      "expression": {
                        "id": 11961,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "11256:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 11962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "11256:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11245:22:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Delegator_$11198_storage",
                      "typeString": "struct PoolingStakingContractV2.Delegator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11215:52:28"
                },
                {
                  "assignments": [
                    11966
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11966,
                      "mutability": "mutable",
                      "name": "availableETH",
                      "nameLocation": "11285:12:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 12004,
                      "src": "11277:20:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11965,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11277:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11971,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11968,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11325:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11325:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11967,
                      "name": "getAvailableDelegatorETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11952,
                      "src": "11300:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 11970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11300:36:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11277:59:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11973,
                          "name": "availableETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11966,
                          "src": "11354:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 11974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11369:1:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11354:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f20617661696c61626c652045544820746f207769746864726177",
                        "id": 11976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11372:39:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd61ceb5f588bc5c226527696375b47e2d0d4b55b19caaa84d7b7a68bd78bc9d",
                          "typeString": "literal_string \"There is no available ETH to withdraw\""
                        },
                        "value": "There is no available ETH to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd61ceb5f588bc5c226527696375b47e2d0d4b55b19caaa84d7b7a68bd78bc9d",
                          "typeString": "literal_string \"There is no available ETH to withdraw\""
                        }
                      ],
                      "id": 11972,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11346:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11346:66:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11978,
                  "nodeType": "ExpressionStatement",
                  "src": "11346:66:28"
                },
                {
                  "expression": {
                    "id": 11983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11979,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11959,
                        "src": "11422:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Delegator_$11198_storage_ptr",
                          "typeString": "struct PoolingStakingContractV2.Delegator storage pointer"
                        }
                      },
                      "id": 11981,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawnETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11197,
                      "src": "11422:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 11982,
                      "name": "availableETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11966,
                      "src": "11448:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11422:38:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11984,
                  "nodeType": "ExpressionStatement",
                  "src": "11422:38:28"
                },
                {
                  "expression": {
                    "id": 11987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11985,
                      "name": "totalWithdrawnETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11213,
                      "src": "11471:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 11986,
                      "name": "availableETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11966,
                      "src": "11492:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11471:33:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11988,
                  "nodeType": "ExpressionStatement",
                  "src": "11471:33:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11990,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11532:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11532:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11992,
                        "name": "availableETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11966,
                        "src": "11544:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11989,
                      "name": "ETHWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11185,
                      "src": "11519:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11519:38:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11994,
                  "nodeType": "EmitStatement",
                  "src": "11514:43:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12001,
                        "name": "availableETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11966,
                        "src": "11597:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 11997,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11575:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 11998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11575:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11567:8:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 11995,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11567:8:28",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11567:19:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 12000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14513,
                      "src": "11567:29:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 12002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11567:43:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12003,
                  "nodeType": "ExpressionStatement",
                  "src": "11567:43:28"
                }
              ]
            },
            "documentation": {
              "id": 11953,
              "nodeType": "StructuredDocumentation",
              "src": "11089:72:28",
              "text": " @notice Withdraw available amount of ETH to delegator"
            },
            "functionSelector": "e086e5ec",
            "id": 12005,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawETH",
            "nameLocation": "11175:11:28",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11955,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11196:8:28"
            },
            "parameters": {
              "id": 11954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11186:2:28"
            },
            "returnParameters": {
              "id": 11956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11205:0:28"
            },
            "scope": 12020,
            "src": "11166:451:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10970
            ],
            "body": {
              "id": 12018,
              "nodeType": "Block",
              "src": "11775:45:28",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 12012,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "11792:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "11792:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12014,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13583,
                        "src": "11806:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 12015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11806:7:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11792:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 12011,
                  "id": 12017,
                  "nodeType": "Return",
                  "src": "11785:28:28"
                }
              ]
            },
            "documentation": {
              "id": 12006,
              "nodeType": "StructuredDocumentation",
              "src": "11623:82:28",
              "text": " @notice Calling fallback function is allowed only for the owner"
            },
            "functionSelector": "bd4bd9ce",
            "id": 12019,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isFallbackAllowed",
            "nameLocation": "11719:17:28",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12008,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11746:8:28"
            },
            "parameters": {
              "id": 12007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11736:2:28"
            },
            "returnParameters": {
              "id": 12011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12010,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12019,
                  "src": "11769:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12009,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11769:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11768:6:28"
            },
            "scope": 12020,
            "src": "11710:110:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 12021,
        "src": "222:11600:28",
        "usedErrors": []
      }
    ],
    "src": "47:11776:28"
  },
  "bytecode": "608060405234801561001057600080fd5b50600280546001600160a01b031916339081179091556040516000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3611e65806100606000396000f3fe6080604052600436106101dc5760003560e01c80639212e64311610102578063e086e5ec11610095578063f435d2e511610064578063f435d2e514610630578063f887ea4014610645578063fc0c546a14610669578063fd01266414610689576101e3565b8063e086e5ec146105c6578063e0974ea5146105db578063e2fdcc17146105f0578063f2fde38b14610610576101e3565b8063d330d85b116100d1578063d330d85b1461055b578063d42aa8a71461057b578063dd49756e14610591578063dd934e89146105b1576101e3565b80639212e643146104f1578063b4988fd014610506578063bd4bd9ce14610526578063c4d66de81461053b576101e3565b8063715018a61161017a5780638b713b2e116101495780638b713b2e146104465780638d23fc611461045c5780638da5cb5b146104b35780638f32d59b146104d1576101e3565b8063715018a6146103dc57806383679e91146103f157806384dbfc8514610411578063853828b614610431576101e3565b806331843e25116101b657806331843e251461036457806344cbee0d146103795780634d444fac1461038f578063595b1872146103a4576101e3565b806317a00261146102f45780632dced8871461031e578063315a095d14610342576101e3565b366101e357005b6101eb61069f565b6101f457600080fd5b600080546201000090046001600160a01b03166001600160a01b031663d4b839926040518163ffffffff1660e01b8152600401602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190611b9f565b90506001600160a01b0381163b61027e57600080fd5b6000816001600160a01b031660003660405161029b929190611bbc565b600060405180830381855af49150503d80600081146102d6576040519150601f19603f3d011682016040523d82523d6000602084013e6102db565b606091505b5050905080156102ef573d6000803e3d6000f35b600080fd5b34801561030057600080fd5b506103096106cc565b60405190151581526020015b60405180910390f35b34801561032a57600080fd5b5061033460095481565b604051908152602001610315565b34801561034e57600080fd5b5061036261035d366004611bcc565b61073f565b005b34801561037057600080fd5b50600854610334565b34801561038557600080fd5b5061033461271081565b34801561039b57600080fd5b506103096108de565b3480156103b057600080fd5b506004546103c4906001600160a01b031681565b6040516001600160a01b039091168152602001610315565b3480156103e857600080fd5b5061036261096c565b3480156103fd57600080fd5b5061033461040c366004611be5565b6109cd565b34801561041d57600080fd5b5061033461042c366004611be5565b610a83565b34801561043d57600080fd5b50610362610af3565b34801561045257600080fd5b5061033460075481565b34801561046857600080fd5b50610498610477366004611be5565b600a6020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610315565b3480156104bf57600080fd5b506002546001600160a01b03166103c4565b3480156104dd57600080fd5b506002546001600160a01b03163314610309565b3480156104fd57600080fd5b50610334610e05565b34801561051257600080fd5b50610362610521366004611c02565b610e74565b34801561053257600080fd5b5061030961069f565b34801561054757600080fd5b50610362610556366004611be5565b611039565b34801561056757600080fd5b50610362610576366004611be5565b6111c7565b34801561058757600080fd5b5061033460065481565b34801561059d57600080fd5b506103626105ac366004611bcc565b61122a565b3480156105bd57600080fd5b5061033461136c565b3480156105d257600080fd5b50610362611388565b3480156105e757600080fd5b50610334611472565b3480156105fc57600080fd5b506003546103c4906001600160a01b031681565b34801561061c57600080fd5b5061036261062b366004611be5565b61158a565b34801561063c57600080fd5b506103626115ad565b34801561065157600080fd5b506000546201000090046001600160a01b03166103c4565b34801561067557600080fd5b506001546103c4906001600160a01b031681565b34801561069557600080fd5b5061033460055481565b60006106b36002546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b600354604051630bc5b6f360e11b81523060048201526000916001600160a01b03169063178b6de690602401602060405180830381865afa158015610715573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107399190611c44565b15919050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac9190611c44565b9050808211156107d75760405162461bcd60e51b81526004016107ce90611c5d565b60405180910390fd5b336000818152600a60205260408120916107f0906109cd565b90508084111561085e5760405162461bcd60e51b815260206004820152603360248201527f52657175657374656420616d6f756e74206f6620746f6b656e732065786365656044820152723232b21030b63637bbb2b2103837b93a34b7b760691b60648201526084016107ce565b838260010160008282546108729190611cb4565b92505081905550836006600082825461088b9190611cb4565b90915550506001546108a7906001600160a01b03163386611718565b81546040513391600080516020611e10833981519152916108d091888252602082015260400190565b60405180910390a250505050565b6001546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561092b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094f9190611c44565b90506109596106cc565b8015610966575060055481145b91505090565b6002546001600160a01b0316331461098357600080fd5b6002546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600280546001600160a01b0319169055565b6000600554600014156109e257506000919050565b60006109ec61136c565b6001600160a01b0384166000908152600a60205260408120919250610a1060085490565b90506000612710600554610a249190611ccc565b610a3083612710611ceb565b8454610a3c9087611ccc565b610a469190611ccc565b610a509190611d02565b90508260010154811115610a77576001830154610a6d9082611ceb565b9695505050505050565b50600095945050505050565b6001600160a01b0381166000908152600a602052604081206007544790610aaa9082611cb4565b6005548354919250600091610abf9084611ccc565b610ac99190611d02565b90506000836002015482610add9190611ceb565b905082811115610aea5750815b95945050505050565b610afb6106cc565b610b5b5760405162461bcd60e51b815260206004820152602b60248201527f5769746864726177206465706f73697420616e6420726577617264206d75737460448201526a08189948195b98589b195960aa1b60648201526084016107ce565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610ba4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc89190611c44565b336000818152600a6020526040812092935090610be4906109cd565b8254909150600090610bf69083611cb4565b905083811115610c185760405162461bcd60e51b81526004016107ce90611c5d565b6000610c22610e05565b90506000610c2f33610a83565b6005548654919250600091610c449085611ccc565b610c4e9190611d02565b90508015610cd35786610c618286611cb4565b1115610c7f5760405162461bcd60e51b81526004016107ce90611c5d565b600454600154610c9c916001600160a01b03918216911683611718565b60045460408051838152600060208201526001600160a01b0390921691600080516020611e10833981519152910160405180910390a25b600554865460095460009291610ce891611ccc565b610cf29190611d02565b90508060096000828254610d069190611ceb565b90915550506001870154610d1a9082611cb4565b60066000828254610d2b9190611ceb565b9091555050865460058054600090610d44908490611ceb565b90915550506000600180890182905590885554610d6b906001600160a01b03163387611718565b60408051868152600060208201523391600080516020611e10833981519152910160405180910390a2866002015460076000828254610daa9190611ceb565b9091555050600060028801558215610dfb5760405183815233907f94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c9060200160405180910390a2610dfb3384611780565b5050505050505050565b600080610e1061136c565b90506000600554600014610e4a576000610e2960085490565b9050612710610e388285611ccc565b610e429190611d02565b915050610e4d565b50805b600954811115610e6b57600954610e649082611ceb565b9250505090565b60009250505090565b600054610100900460ff1680610e8d575060005460ff16155b610ea95760405162461bcd60e51b81526004016107ce90611d24565b600054610100900460ff16158015610ecb576000805461ffff19166101011790555b6001600160a01b03821615801590610ee557506127108411155b610eee57600080fd5b610ef783611039565b610f0033611899565b826001600160a01b031663d4b839926040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f629190611b9f565b6001600160a01b031663e2fdcc176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc39190611b9f565b600380546001600160a01b039283166001600160a01b031991821617909155600886905560048054928516929091168217905560405133907f8e69c3a0200ac71eb0d842c26986baaa25a28aabfee91d144725df5b3190f4cb90600090a38015611033576000805461ff00191690555b50505050565b600054610100900460ff1680611052575060005460ff16155b61106e5760405162461bcd60e51b81526004016107ce90611d24565b600054610100900460ff16158015611090576000805461ffff19166101011790555b81600060026101000a8154816001600160a01b0302191690836001600160a01b031602179055506000826001600160a01b031663d4b839926040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111b9190611b9f565b6001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611158573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117c9190611b9f565b90506001600160a01b03811661119157600080fd5b600180546001600160a01b0319166001600160a01b039290921691909117905580156111c3576000805461ff00191690555b5050565b6002546001600160a01b031633146111de57600080fd5b600480546001600160a01b0319166001600160a01b03831690811790915560405133907f8e69c3a0200ac71eb0d842c26986baaa25a28aabfee91d144725df5b3190f4cb90600090a350565b6112326108de565b61127e5760405162461bcd60e51b815260206004820152601760248201527f4465706f736974206d75737420626520656e61626c656400000000000000000060448201526064016107ce565b600081116112ce5760405162461bcd60e51b815260206004820152601760248201527f56616c7565206d757374206265206e6f7420656d70747900000000000000000060448201526064016107ce565b80600560008282546112e09190611cb4565b9091555050336000908152600a60205260408120805490918391839190611308908490611cb4565b9091555050600154611325906001600160a01b0316333085611908565b805460405133917ffdfdcf596161b0e81e3161597d46888dcc88bd83b22dcfb341c76377ca3bbc9e9161136091868252602082015260400190565b60405180910390a25050565b6000600654611379611472565b6113839190611cb4565b905090565b336000818152600a60205260408120916113a190610a83565b9050600081116114015760405162461bcd60e51b815260206004820152602560248201527f5468657265206973206e6f20617661696c61626c652045544820746f20776974604482015264686472617760d81b60648201526084016107ce565b808260020160008282546114159190611cb4565b92505081905550806007600082825461142e9190611cb4565b909155505060405181815233907f94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c9060200160405180910390a26111c33382611780565b600354604051630bc5b6f360e11b815230600482015260009182916001600160a01b039091169063178b6de690602401602060405180830381865afa1580156114bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e39190611c44565b6001546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611531573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115559190611c44565b9050600060055482846115689190611cb4565b6115729190611ceb565b905081811115611583575092915050565b9392505050565b6002546001600160a01b031633146115a157600080fd5b6115aa81611899565b50565b6004546001600160a01b031633146115c457600080fd5b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561160d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116319190611c44565b9050600061163d610e05565b90508181111561164a5750805b600081116116ab5760405162461bcd60e51b815260206004820152602860248201527f5468657265206973206e6f20617661696c61626c652072657761726420746f20604482015267776974686472617760c01b60648201526084016107ce565b80600960008282546116bd9190611cb4565b9250508190555080600660008282546116d69190611cb4565b90915550506001546116f2906001600160a01b03163383611718565b60408051828152600060208201523391600080516020611e108339815191529101611360565b6040516001600160a01b03831660248201526044810182905261177b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611940565b505050565b804710156117d05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016107ce565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461181d576040519150601f19603f3d011682016040523d82523d6000602084013e611822565b606091505b505090508061177b5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016107ce565b6001600160a01b0381166118ac57600080fd5b6002546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600280546001600160a01b0319166001600160a01b0392909216919091179055565b6040516001600160a01b03808516602483015283166044820152606481018290526110339085906323b872dd60e01b90608401611744565b6000611995826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a129092919063ffffffff16565b80519091501561177b57808060200190518101906119b39190611d72565b61177b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107ce565b6060611a218484600085611a29565b949350505050565b606082471015611a8a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016107ce565b843b611ad85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107ce565b600080866001600160a01b03168587604051611af49190611dc0565b60006040518083038185875af1925050503d8060008114611b31576040519150601f19603f3d011682016040523d82523d6000602084013e611b36565b606091505b5091509150611b46828286611b51565b979650505050505050565b60608315611b60575081611583565b825115611b705782518084602001fd5b8160405162461bcd60e51b81526004016107ce9190611ddc565b6001600160a01b03811681146115aa57600080fd5b600060208284031215611bb157600080fd5b815161158381611b8a565b8183823760009101908152919050565b600060208284031215611bde57600080fd5b5035919050565b600060208284031215611bf757600080fd5b813561158381611b8a565b600080600060608486031215611c1757600080fd5b833592506020840135611c2981611b8a565b91506040840135611c3981611b8a565b809150509250925092565b600060208284031215611c5657600080fd5b5051919050565b60208082526021908201527f4e6f7420656e6f75676820746f6b656e7320696e2074686520636f6e747261636040820152601d60fa1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611cc757611cc7611c9e565b500190565b6000816000190483118215151615611ce657611ce6611c9e565b500290565b600082821015611cfd57611cfd611c9e565b500390565b600082611d1f57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600060208284031215611d8457600080fd5b8151801515811461158357600080fd5b60005b83811015611daf578181015183820152602001611d97565b838111156110335750506000910152565b60008251611dd2818460208701611d94565b9190910192915050565b6020815260008251806020840152611dfb816040850160208701611d94565b601f01601f1916919091016040019291505056feffe903c0abe6b2dbb2f3474ef43d7a3c1fca49e5a774453423ca8e1952aabffaa26469706673582212205110339267ec0e221913f3117af4bf92653ae9f7278c6eeadbdebe555c41463d64736f6c634300080a0033",
  "bytecodeSha1": "eea2a7e013625baa097b0d5269b8507b9cd60166",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "PoolingStakingContractV2",
  "coverageMap": {
    "branches": {
      "10": {},
      "11": {},
      "12": {},
      "15": {},
      "19": {},
      "22": {},
      "26": {},
      "27": {
        "InitializableStakingContract.initialize": {
          "122": [
            3896,
            3929,
            true
          ]
        },
        "RawStakingContract.<fallback>": {
          "120": [
            1748,
            1767,
            true
          ],
          "121": [
            1994,
            2005,
            false
          ]
        }
      },
      "28": {
        "PoolingStakingContractV2.depositTokens": {
          "106": [
            3710,
            3728,
            true
          ],
          "107": [
            3774,
            3784,
            true
          ]
        },
        "PoolingStakingContractV2.getAvailableDelegatorETH": {
          "96": [
            10977,
            10999,
            false
          ]
        },
        "PoolingStakingContractV2.getAvailableDelegatorReward": {
          "94": [
            6207,
            6232,
            false
          ],
          "95": [
            6803,
            6849,
            false
          ]
        },
        "PoolingStakingContractV2.getAvailableReward": {
          "109": [
            4727,
            4746,
            false
          ]
        },
        "PoolingStakingContractV2.getAvailableWorkerReward": {
          "102": [
            5497,
            5522,
            false
          ],
          "103": [
            5829,
            5871,
            false
          ]
        },
        "PoolingStakingContractV2.initialize": {
          "104": [
            2098,
            2124,
            false
          ],
          "105": [
            2128,
            2161,
            true
          ]
        },
        "PoolingStakingContractV2.withdrawAll": {
          "97": [
            8566,
            8588,
            true
          ],
          "98": [
            8919,
            8935,
            true
          ],
          "99": [
            9466,
            9482,
            false
          ],
          "100": [
            9506,
            9537,
            true
          ],
          "101": [
            10299,
            10315,
            false
          ]
        },
        "PoolingStakingContractV2.withdrawETH": {
          "108": [
            11354,
            11370,
            true
          ]
        },
        "PoolingStakingContractV2.withdrawTokens": {
          "92": [
            7923,
            7940,
            true
          ],
          "93": [
            8136,
            8161,
            true
          ]
        },
        "PoolingStakingContractV2.withdrawWorkerReward": {
          "110": [
            7096,
            7121,
            true
          ],
          "111": [
            7257,
            7282,
            false
          ],
          "112": [
            7364,
            7383,
            true
          ]
        }
      },
      "29": {},
      "31": {},
      "33": {},
      "34": {
        "Ownable._transferOwnership": {
          "123": [
            2021,
            2043,
            true
          ]
        }
      },
      "35": {
        "InitializableStakingContract.initialize": {
          "118": [
            2037,
            2050,
            true
          ],
          "119": [
            2055,
            2067,
            true
          ]
        }
      },
      "36": {},
      "37": {},
      "38": {},
      "39": {
        "SafeERC20._callOptionalReturn": {
          "124": [
            3731,
            3752,
            false
          ],
          "125": [
            3815,
            3845,
            true
          ]
        }
      },
      "40": {
        "Address.functionCallWithValue": {
          "115": [
            4798,
            4828,
            true
          ]
        },
        "Address.sendValue": {
          "113": [
            2154,
            2185,
            true
          ],
          "114": [
            2300,
            2307,
            true
          ]
        },
        "Address.verifyCallResult": {
          "116": [
            7388,
            7395,
            false
          ],
          "117": [
            7529,
            7550,
            false
          ]
        }
      }
    },
    "statements": {
      "10": {},
      "11": {},
      "12": {},
      "15": {},
      "19": {},
      "22": {},
      "26": {},
      "27": {
        "InitializableStakingContract.initialize": {
          "51": [
            3800,
            3817
          ],
          "52": [
            3888,
            3930
          ],
          "53": [
            3940,
            3958
          ]
        },
        "InitializableStakingContract.router": {
          "1": [
            4121,
            4135
          ]
        },
        "RawStakingContract.<fallback>": {
          "0": [
            1740,
            1768
          ],
          "2": [
            1831,
            1859
          ],
          "3": [
            2379,
            2387
          ]
        }
      },
      "28": {
        "PoolingStakingContractV2.depositTokens": {
          "56": [
            3702,
            3756
          ],
          "57": [
            3766,
            3812
          ],
          "58": [
            3822,
            3852
          ],
          "59": [
            3924,
            3959
          ],
          "60": [
            3969,
            4026
          ],
          "61": [
            4036,
            4103
          ]
        },
        "PoolingStakingContractV2.getAvailableDelegatorETH": {
          "21": [
            10767,
            10795
          ],
          "22": [
            11015,
            11037
          ],
          "23": [
            11057,
            11076
          ]
        },
        "PoolingStakingContractV2.getAvailableDelegatorReward": {
          "18": [
            6248,
            6256
          ],
          "19": [
            6865,
            6918
          ],
          "20": [
            6938,
            6946
          ]
        },
        "PoolingStakingContractV2.getAvailableReward": {
          "68": [
            4762,
            4779
          ],
          "69": [
            4799,
            4812
          ]
        },
        "PoolingStakingContractV2.getAvailableWorkerReward": {
          "40": [
            5590,
            5645
          ],
          "41": [
            5729,
            5756
          ],
          "42": [
            5887,
            5936
          ],
          "43": [
            5956,
            5964
          ]
        },
        "PoolingStakingContractV2.getCumulativeReward": {
          "62": [
            5043,
            5093
          ]
        },
        "PoolingStakingContractV2.getWorkerFraction": {
          "4": [
            3500,
            3521
          ]
        },
        "PoolingStakingContractV2.initialize": {
          "44": [
            2090,
            2162
          ],
          "45": [
            2172,
            2220
          ],
          "46": [
            2230,
            2260
          ],
          "47": [
            2270,
            2304
          ],
          "48": [
            2314,
            2346
          ],
          "49": [
            2356,
            2382
          ],
          "50": [
            2392,
            2437
          ]
        },
        "PoolingStakingContractV2.isDepositAllowed": {
          "15": [
            2975,
            3042
          ]
        },
        "PoolingStakingContractV2.isFallbackAllowed": {
          "7": [
            11785,
            11813
          ]
        },
        "PoolingStakingContractV2.isWithdrawAllAllowed": {
          "8": [
            2643,
            2689
          ]
        },
        "PoolingStakingContractV2.setWorkerOwner": {
          "54": [
            3186,
            3212
          ],
          "55": [
            3222,
            3267
          ]
        },
        "PoolingStakingContractV2.withdrawAll": {
          "24": [
            8558,
            8636
          ],
          "25": [
            8911,
            8973
          ],
          "26": [
            9498,
            9575
          ],
          "27": [
            9589,
            9634
          ],
          "28": [
            9648,
            9698
          ],
          "29": [
            9832,
            9876
          ],
          "30": [
            9886,
            9957
          ],
          "31": [
            9967,
            10016
          ],
          "32": [
            10027,
            10056
          ],
          "33": [
            10066,
            10095
          ],
          "34": [
            10106,
            10143
          ],
          "35": [
            10153,
            10195
          ],
          "36": [
            10206,
            10249
          ],
          "37": [
            10259,
            10285
          ],
          "38": [
            10331,
            10374
          ],
          "39": [
            10388,
            10431
          ]
        },
        "PoolingStakingContractV2.withdrawETH": {
          "63": [
            11346,
            11412
          ],
          "64": [
            11422,
            11460
          ],
          "65": [
            11471,
            11504
          ],
          "66": [
            11514,
            11557
          ],
          "67": [
            11567,
            11610
          ]
        },
        "PoolingStakingContractV2.withdrawTokens": {
          "9": [
            7915,
            7978
          ],
          "10": [
            8127,
            8217
          ],
          "11": [
            8227,
            8262
          ],
          "12": [
            8272,
            8302
          ],
          "13": [
            8313,
            8351
          ],
          "14": [
            8361,
            8428
          ]
        },
        "PoolingStakingContractV2.withdrawWorkerReward": {
          "71": [
            7088,
            7122
          ],
          "72": [
            7298,
            7323
          ],
          "73": [
            7343,
            7449
          ],
          "74": [
            7459,
            7499
          ],
          "75": [
            7509,
            7548
          ],
          "76": [
            7559,
            7606
          ],
          "77": [
            7616,
            7668
          ]
        }
      },
      "29": {},
      "31": {},
      "33": {},
      "34": {
        "Ownable._transferOwnership": {
          "81": [
            2013,
            2044
          ],
          "82": [
            2054,
            2097
          ],
          "83": [
            2107,
            2124
          ]
        },
        "Ownable.isOwner": {
          "6": [
            1069,
            1096
          ]
        },
        "Ownable.owner": {
          "5": [
            750,
            763
          ]
        },
        "Ownable.renounceOwnership": {
          "16": [
            1437,
            1482
          ],
          "17": [
            1492,
            1511
          ]
        },
        "Ownable.transferOwnership": {
          "70": [
            1769,
            1797
          ]
        }
      },
      "35": {},
      "36": {},
      "37": {},
      "38": {},
      "39": {
        "SafeERC20._callOptionalReturn": {
          "85": [
            3807,
            3892
          ]
        },
        "SafeERC20.safeTransfer": {
          "78": [
            809,
            895
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "84": [
            1046,
            1142
          ]
        }
      },
      "40": {
        "Address.functionCall": {
          "86": [
            3671,
            3730
          ]
        },
        "Address.functionCallWithValue": {
          "87": [
            4790,
            4871
          ],
          "88": [
            4881,
            4941
          ],
          "89": [
            5035,
            5093
          ]
        },
        "Address.sendValue": {
          "79": [
            2146,
            2219
          ],
          "80": [
            2292,
            2370
          ]
        },
        "Address.verifyCallResult": {
          "90": [
            7411,
            7428
          ],
          "91": [
            7855,
            7875
          ]
        }
      }
    }
  },
  "dependencies": [
    "AdditionalMath",
    "Address",
    "BaseStakingInterface",
    "ERC20",
    "ERC20Detailed",
    "IERC20",
    "IStaking",
    "IStakingEscrow",
    "Initializable",
    "InitializableStakingContract",
    "NuCypherToken",
    "Ownable",
    "PolicyManager",
    "RawStakingContract",
    "SafeERC20",
    "SafeMath",
    "SignatureVerifier",
    "StakingInterfaceRouter",
    "TokenRecipient",
    "Upgradeable",
    "WorkLock"
  ],
  "deployedBytecode": "6080604052600436106101dc5760003560e01c80639212e64311610102578063e086e5ec11610095578063f435d2e511610064578063f435d2e514610630578063f887ea4014610645578063fc0c546a14610669578063fd01266414610689576101e3565b8063e086e5ec146105c6578063e0974ea5146105db578063e2fdcc17146105f0578063f2fde38b14610610576101e3565b8063d330d85b116100d1578063d330d85b1461055b578063d42aa8a71461057b578063dd49756e14610591578063dd934e89146105b1576101e3565b80639212e643146104f1578063b4988fd014610506578063bd4bd9ce14610526578063c4d66de81461053b576101e3565b8063715018a61161017a5780638b713b2e116101495780638b713b2e146104465780638d23fc611461045c5780638da5cb5b146104b35780638f32d59b146104d1576101e3565b8063715018a6146103dc57806383679e91146103f157806384dbfc8514610411578063853828b614610431576101e3565b806331843e25116101b657806331843e251461036457806344cbee0d146103795780634d444fac1461038f578063595b1872146103a4576101e3565b806317a00261146102f45780632dced8871461031e578063315a095d14610342576101e3565b366101e357005b6101eb61069f565b6101f457600080fd5b600080546201000090046001600160a01b03166001600160a01b031663d4b839926040518163ffffffff1660e01b8152600401602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190611b9f565b90506001600160a01b0381163b61027e57600080fd5b6000816001600160a01b031660003660405161029b929190611bbc565b600060405180830381855af49150503d80600081146102d6576040519150601f19603f3d011682016040523d82523d6000602084013e6102db565b606091505b5050905080156102ef573d6000803e3d6000f35b600080fd5b34801561030057600080fd5b506103096106cc565b60405190151581526020015b60405180910390f35b34801561032a57600080fd5b5061033460095481565b604051908152602001610315565b34801561034e57600080fd5b5061036261035d366004611bcc565b61073f565b005b34801561037057600080fd5b50600854610334565b34801561038557600080fd5b5061033461271081565b34801561039b57600080fd5b506103096108de565b3480156103b057600080fd5b506004546103c4906001600160a01b031681565b6040516001600160a01b039091168152602001610315565b3480156103e857600080fd5b5061036261096c565b3480156103fd57600080fd5b5061033461040c366004611be5565b6109cd565b34801561041d57600080fd5b5061033461042c366004611be5565b610a83565b34801561043d57600080fd5b50610362610af3565b34801561045257600080fd5b5061033460075481565b34801561046857600080fd5b50610498610477366004611be5565b600a6020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610315565b3480156104bf57600080fd5b506002546001600160a01b03166103c4565b3480156104dd57600080fd5b506002546001600160a01b03163314610309565b3480156104fd57600080fd5b50610334610e05565b34801561051257600080fd5b50610362610521366004611c02565b610e74565b34801561053257600080fd5b5061030961069f565b34801561054757600080fd5b50610362610556366004611be5565b611039565b34801561056757600080fd5b50610362610576366004611be5565b6111c7565b34801561058757600080fd5b5061033460065481565b34801561059d57600080fd5b506103626105ac366004611bcc565b61122a565b3480156105bd57600080fd5b5061033461136c565b3480156105d257600080fd5b50610362611388565b3480156105e757600080fd5b50610334611472565b3480156105fc57600080fd5b506003546103c4906001600160a01b031681565b34801561061c57600080fd5b5061036261062b366004611be5565b61158a565b34801561063c57600080fd5b506103626115ad565b34801561065157600080fd5b506000546201000090046001600160a01b03166103c4565b34801561067557600080fd5b506001546103c4906001600160a01b031681565b34801561069557600080fd5b5061033460055481565b60006106b36002546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b600354604051630bc5b6f360e11b81523060048201526000916001600160a01b03169063178b6de690602401602060405180830381865afa158015610715573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107399190611c44565b15919050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac9190611c44565b9050808211156107d75760405162461bcd60e51b81526004016107ce90611c5d565b60405180910390fd5b336000818152600a60205260408120916107f0906109cd565b90508084111561085e5760405162461bcd60e51b815260206004820152603360248201527f52657175657374656420616d6f756e74206f6620746f6b656e732065786365656044820152723232b21030b63637bbb2b2103837b93a34b7b760691b60648201526084016107ce565b838260010160008282546108729190611cb4565b92505081905550836006600082825461088b9190611cb4565b90915550506001546108a7906001600160a01b03163386611718565b81546040513391600080516020611e10833981519152916108d091888252602082015260400190565b60405180910390a250505050565b6001546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561092b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094f9190611c44565b90506109596106cc565b8015610966575060055481145b91505090565b6002546001600160a01b0316331461098357600080fd5b6002546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600280546001600160a01b0319169055565b6000600554600014156109e257506000919050565b60006109ec61136c565b6001600160a01b0384166000908152600a60205260408120919250610a1060085490565b90506000612710600554610a249190611ccc565b610a3083612710611ceb565b8454610a3c9087611ccc565b610a469190611ccc565b610a509190611d02565b90508260010154811115610a77576001830154610a6d9082611ceb565b9695505050505050565b50600095945050505050565b6001600160a01b0381166000908152600a602052604081206007544790610aaa9082611cb4565b6005548354919250600091610abf9084611ccc565b610ac99190611d02565b90506000836002015482610add9190611ceb565b905082811115610aea5750815b95945050505050565b610afb6106cc565b610b5b5760405162461bcd60e51b815260206004820152602b60248201527f5769746864726177206465706f73697420616e6420726577617264206d75737460448201526a08189948195b98589b195960aa1b60648201526084016107ce565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610ba4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc89190611c44565b336000818152600a6020526040812092935090610be4906109cd565b8254909150600090610bf69083611cb4565b905083811115610c185760405162461bcd60e51b81526004016107ce90611c5d565b6000610c22610e05565b90506000610c2f33610a83565b6005548654919250600091610c449085611ccc565b610c4e9190611d02565b90508015610cd35786610c618286611cb4565b1115610c7f5760405162461bcd60e51b81526004016107ce90611c5d565b600454600154610c9c916001600160a01b03918216911683611718565b60045460408051838152600060208201526001600160a01b0390921691600080516020611e10833981519152910160405180910390a25b600554865460095460009291610ce891611ccc565b610cf29190611d02565b90508060096000828254610d069190611ceb565b90915550506001870154610d1a9082611cb4565b60066000828254610d2b9190611ceb565b9091555050865460058054600090610d44908490611ceb565b90915550506000600180890182905590885554610d6b906001600160a01b03163387611718565b60408051868152600060208201523391600080516020611e10833981519152910160405180910390a2866002015460076000828254610daa9190611ceb565b9091555050600060028801558215610dfb5760405183815233907f94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c9060200160405180910390a2610dfb3384611780565b5050505050505050565b600080610e1061136c565b90506000600554600014610e4a576000610e2960085490565b9050612710610e388285611ccc565b610e429190611d02565b915050610e4d565b50805b600954811115610e6b57600954610e649082611ceb565b9250505090565b60009250505090565b600054610100900460ff1680610e8d575060005460ff16155b610ea95760405162461bcd60e51b81526004016107ce90611d24565b600054610100900460ff16158015610ecb576000805461ffff19166101011790555b6001600160a01b03821615801590610ee557506127108411155b610eee57600080fd5b610ef783611039565b610f0033611899565b826001600160a01b031663d4b839926040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f629190611b9f565b6001600160a01b031663e2fdcc176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc39190611b9f565b600380546001600160a01b039283166001600160a01b031991821617909155600886905560048054928516929091168217905560405133907f8e69c3a0200ac71eb0d842c26986baaa25a28aabfee91d144725df5b3190f4cb90600090a38015611033576000805461ff00191690555b50505050565b600054610100900460ff1680611052575060005460ff16155b61106e5760405162461bcd60e51b81526004016107ce90611d24565b600054610100900460ff16158015611090576000805461ffff19166101011790555b81600060026101000a8154816001600160a01b0302191690836001600160a01b031602179055506000826001600160a01b031663d4b839926040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111b9190611b9f565b6001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611158573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117c9190611b9f565b90506001600160a01b03811661119157600080fd5b600180546001600160a01b0319166001600160a01b039290921691909117905580156111c3576000805461ff00191690555b5050565b6002546001600160a01b031633146111de57600080fd5b600480546001600160a01b0319166001600160a01b03831690811790915560405133907f8e69c3a0200ac71eb0d842c26986baaa25a28aabfee91d144725df5b3190f4cb90600090a350565b6112326108de565b61127e5760405162461bcd60e51b815260206004820152601760248201527f4465706f736974206d75737420626520656e61626c656400000000000000000060448201526064016107ce565b600081116112ce5760405162461bcd60e51b815260206004820152601760248201527f56616c7565206d757374206265206e6f7420656d70747900000000000000000060448201526064016107ce565b80600560008282546112e09190611cb4565b9091555050336000908152600a60205260408120805490918391839190611308908490611cb4565b9091555050600154611325906001600160a01b0316333085611908565b805460405133917ffdfdcf596161b0e81e3161597d46888dcc88bd83b22dcfb341c76377ca3bbc9e9161136091868252602082015260400190565b60405180910390a25050565b6000600654611379611472565b6113839190611cb4565b905090565b336000818152600a60205260408120916113a190610a83565b9050600081116114015760405162461bcd60e51b815260206004820152602560248201527f5468657265206973206e6f20617661696c61626c652045544820746f20776974604482015264686472617760d81b60648201526084016107ce565b808260020160008282546114159190611cb4565b92505081905550806007600082825461142e9190611cb4565b909155505060405181815233907f94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c9060200160405180910390a26111c33382611780565b600354604051630bc5b6f360e11b815230600482015260009182916001600160a01b039091169063178b6de690602401602060405180830381865afa1580156114bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e39190611c44565b6001546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611531573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115559190611c44565b9050600060055482846115689190611cb4565b6115729190611ceb565b905081811115611583575092915050565b9392505050565b6002546001600160a01b031633146115a157600080fd5b6115aa81611899565b50565b6004546001600160a01b031633146115c457600080fd5b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561160d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116319190611c44565b9050600061163d610e05565b90508181111561164a5750805b600081116116ab5760405162461bcd60e51b815260206004820152602860248201527f5468657265206973206e6f20617661696c61626c652072657761726420746f20604482015267776974686472617760c01b60648201526084016107ce565b80600960008282546116bd9190611cb4565b9250508190555080600660008282546116d69190611cb4565b90915550506001546116f2906001600160a01b03163383611718565b60408051828152600060208201523391600080516020611e108339815191529101611360565b6040516001600160a01b03831660248201526044810182905261177b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611940565b505050565b804710156117d05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016107ce565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461181d576040519150601f19603f3d011682016040523d82523d6000602084013e611822565b606091505b505090508061177b5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016107ce565b6001600160a01b0381166118ac57600080fd5b6002546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600280546001600160a01b0319166001600160a01b0392909216919091179055565b6040516001600160a01b03808516602483015283166044820152606481018290526110339085906323b872dd60e01b90608401611744565b6000611995826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a129092919063ffffffff16565b80519091501561177b57808060200190518101906119b39190611d72565b61177b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107ce565b6060611a218484600085611a29565b949350505050565b606082471015611a8a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016107ce565b843b611ad85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107ce565b600080866001600160a01b03168587604051611af49190611dc0565b60006040518083038185875af1925050503d8060008114611b31576040519150601f19603f3d011682016040523d82523d6000602084013e611b36565b606091505b5091509150611b46828286611b51565b979650505050505050565b60608315611b60575081611583565b825115611b705782518084602001fd5b8160405162461bcd60e51b81526004016107ce9190611ddc565b6001600160a01b03811681146115aa57600080fd5b600060208284031215611bb157600080fd5b815161158381611b8a565b8183823760009101908152919050565b600060208284031215611bde57600080fd5b5035919050565b600060208284031215611bf757600080fd5b813561158381611b8a565b600080600060608486031215611c1757600080fd5b833592506020840135611c2981611b8a565b91506040840135611c3981611b8a565b809150509250925092565b600060208284031215611c5657600080fd5b5051919050565b60208082526021908201527f4e6f7420656e6f75676820746f6b656e7320696e2074686520636f6e747261636040820152601d60fa1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611cc757611cc7611c9e565b500190565b6000816000190483118215151615611ce657611ce6611c9e565b500290565b600082821015611cfd57611cfd611c9e565b500390565b600082611d1f57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600060208284031215611d8457600080fd5b8151801515811461158357600080fd5b60005b83811015611daf578181015183820152602001611d97565b838111156110335750506000910152565b60008251611dd2818460208701611d94565b9190910192915050565b6020815260008251806020840152611dfb816040850160208701611d94565b601f01601f1916919091016040019291505056feffe903c0abe6b2dbb2f3474ef43d7a3c1fca49e5a774453423ca8e1952aabffaa26469706673582212205110339267ec0e221913f3117af4bf92653ae9f7278c6eeadbdebe555c41463d64736f6c634300080a0033",
  "deployedSourceMap": "222:11600:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1748:19:27;:17;:19::i;:::-;1740:28;;;;;;1778:14;4128:7;;;;;-1:-1:-1;;;;;4128:7:27;-1:-1:-1;;;;;1803:15:27;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1778:43;-1:-1:-1;;;;;;1839:17:27;;1087:20:40;1831:28:27;;;;;;1929:16;1951:6;-1:-1:-1;;;;;1951:19:27;1971:8;;1951:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1928:52;;;1994:11;1990:408;;;2272:16;2267:3;;2247:42;2318:16;2267:3;2306:29;1990:408;2379:8;;;2506:190:28;;;;;;;;;;;;;:::i;:::-;;;921:14:41;;914:22;896:41;;884:2;869:18;2506:190:28;;;;;;;;1337:36;;;;;;;;;;;;;;;;;;;1094:25:41;;;1082:2;1067:18;1337:36:28;948:177:41;7791:644:28;;;;;;;;;;-1:-1:-1;7791:644:28;;;;;:::i;:::-;;:::i;:::-;;3423:105;;;;;;;;;;-1:-1:-1;3507:14:28;;3423:105;;1068:46;;;;;;;;;;;;1109:5;1068:46;;2754:295;;;;;;;;;;;;;:::i;1155:26::-;;;;;;;;;;-1:-1:-1;1155:26:28;;;;-1:-1:-1;;;;;1155:26:28;;;;;;-1:-1:-1;;;;;1479:32:41;;;1461:51;;1449:2;1434:18;1155:26:28;1315:203:41;1381:137:34;;;;;;;;;;;;;:::i;6053:900:28:-;;;;;;;;;;-1:-1:-1;6053:900:28;;;;;:::i;:::-;;:::i;10519:564::-;;;;;;;;;;-1:-1:-1;10519:564:28;;;;;:::i;:::-;;:::i;8518:1930::-;;;;;;;;;;;;;:::i;1270:32::-;;;;;;;;;;;;;;;;1380:47;;;;;;;;;;-1:-1:-1;1380:47:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1999:25:41;;;2055:2;2040:18;;2033:34;;;;2083:18;;;2076:34;1987:2;1972:18;1380:47:28;1797:319:41;693:77:34;;;;;;;;;;-1:-1:-1;757:6:34;;-1:-1:-1;;;;;757:6:34;693:77;;1013:90;;;;;;;;;;-1:-1:-1;1090:6:34;;-1:-1:-1;;;;;1090:6:34;1076:10;:20;1013:90;;5190:781:28;;;;;;;;;;;;;:::i;1930:514::-;;;;;;;;;;-1:-1:-1;1930:514:28;;;;;:::i;:::-;;:::i;11710:110::-;;;;;;;;;;;;;:::i;3719:246:27:-;;;;;;;;;;-1:-1:-1;3719:246:27;;;;;:::i;:::-;;:::i;3111:163:28:-;;;;;;;;;;-1:-1:-1;3111:163:28;;;;;:::i;:::-;;:::i;1229:35::-;;;;;;;;;;;;;;;;3644:466;;;;;;;;;;-1:-1:-1;3644:466:28;;;;;:::i;:::-;;:::i;4972:128::-;;;;;;;;;;;;;:::i;11166:451::-;;;;;;;;;;;;;:::i;4197:622::-;;;;;;;;;;;;;:::i;1121:28::-;;;;;;;;;;-1:-1:-1;1121:28:28;;;;-1:-1:-1;;;;;1121:28:28;;;1689:115:34;;;;;;;;;;-1:-1:-1;1689:115:34;;;;;:::i;:::-;;:::i;7037:638:28:-;;;;;;;;;;;;;:::i;4039:103:27:-;;;;;;;;;;-1:-1:-1;4087:22:27;4128:7;;;;-1:-1:-1;;;;;4128:7:27;4039:103;;3616:26;;;;;;;;;;-1:-1:-1;3616:26:27;;;;-1:-1:-1;;;;;3616:26:27;;;1188:35:28;;;;;;;;;;;;;;;;11710:110;11769:4;11806:7;757:6:34;;-1:-1:-1;;;;;757:6:34;;693:77;11806:7:28;-1:-1:-1;;;;;11792:21:28;:10;-1:-1:-1;;;;;11792:21:28;;11785:28;;11710:110;:::o;2506:190::-;2650:6;;:34;;-1:-1:-1;;;2650:34:28;;2678:4;2650:34;;;1461:51:41;2559:4:28;;-1:-1:-1;;;;;2650:6:28;;:19;;1434:18:41;;2650:34:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;2506:190;-1:-1:-1;2506:190:28:o;7791:644::-;7875:5;;:30;;-1:-1:-1;;;7875:30:28;;7899:4;7875:30;;;1461:51:41;7857:15:28;;-1:-1:-1;;;;;7875:5:28;;:15;;1434:18:41;;7875:30:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7857:48;;7933:7;7923:6;:17;;7915:63;;;;-1:-1:-1;;;7915:63:28;;;;;;;:::i;:::-;;;;;;;;;8030:10;7989:27;8019:22;;;:10;:22;;;;;;8077:39;;:27;:39::i;:::-;8051:65;;8146:15;8136:6;:25;;8127:90;;;;-1:-1:-1;;;8127:90:28;;4456:2:41;8127:90:28;;;4438:21:41;4495:2;4475:18;;;4468:30;4534:34;4514:18;;;4507:62;-1:-1:-1;;;4585:18:41;;;4578:49;4644:19;;8127:90:28;4254:415:41;8127:90:28;8256:6;8227:9;:25;;;:35;;;;;;;:::i;:::-;;;;;;;;8296:6;8272:20;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;8313:5:28;;:38;;-1:-1:-1;;;;;8313:5:28;8332:10;8344:6;8313:18;:38::i;:::-;8402:25;;8366:62;;8382:10;;-1:-1:-1;;;;;;;;;;;8366:62:28;;;8394:6;5113:25:41;;5169:2;5154:18;;5147:34;5101:2;5086:18;;4939:248;8366:62:28;;;;;;;;7847:588;;;7791:644;:::o;2754:295::-;2888:5;;:30;;-1:-1:-1;;;2888:30:28;;2912:4;2888:30;;;1461:51:41;2803:4:28;;;;-1:-1:-1;;;;;2888:5:28;;;;:15;;1434:18:41;;2888:30:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2867:51;;2982:22;:20;:22::i;:::-;:60;;;;;3022:20;;3008:10;:34;2982:60;2975:67;;;2754:295;:::o;1381:137:34:-;1090:6;;-1:-1:-1;;;;;1090:6:34;1076:10;:20;889:18;;;;;;1463:6:::1;::::0;1442:40:::1;::::0;1479:1:::1;::::0;-1:-1:-1;;;;;1463:6:34::1;::::0;1442:40:::1;::::0;1479:1;;1442:40:::1;1492:6;:19:::0;;-1:-1:-1;;;;;;1492:19:34::1;::::0;;1381:137::o;6053:900:28:-;6131:7;6207:20;;6231:1;6207:25;6203:64;;;-1:-1:-1;6255:1:28;;6053:900;-1:-1:-1;6053:900:28:o;6203:64::-;6324:14;6341:21;:19;:21::i;:::-;-1:-1:-1;;;;;6402:22:28;;6372:27;6402:22;;;:10;:22;;;;;6324:38;;-1:-1:-1;6453:19:28;3507:14;;;3423:105;6453:19;6434:38;;6593:26;1109:5;6702:20;;:37;;;;:::i;:::-;6660:25;6677:8;1109:5;6660:25;:::i;:::-;6631;;6622:34;;:6;:34;:::i;:::-;:64;;;;:::i;:::-;:118;;;;:::i;:::-;6593:147;;6824:9;:25;;;6803:18;:46;6799:130;;;6893:25;;;;6872:46;;:18;:46;:::i;:::-;6865:53;6053:900;-1:-1:-1;;;;;;6053:900:28:o;6799:130::-;-1:-1:-1;6945:1:28;;6053:900;-1:-1:-1;;;;;6053:900:28:o;10519:564::-;-1:-1:-1;;;;;10643:22:28;;10594:7;10643:22;;;:10;:22;;;;;10778:17;;10693:21;;10767:28;;10693:21;10767:28;:::i;:::-;10869:20;;10841:25;;10767:28;;-1:-1:-1;10805:23:28;;10831:35;;10767:28;10831:35;:::i;:::-;:58;;;;:::i;:::-;10805:84;;10900:20;10941:9;:22;;;10923:15;:40;;;;:::i;:::-;10900:63;;10992:7;10977:12;:22;10973:75;;;-1:-1:-1;11030:7:28;10973:75;11064:12;10519:564;-1:-1:-1;;;;;10519:564:28:o;8518:1930::-;8566:22;:20;:22::i;:::-;8558:78;;;;-1:-1:-1;;;8558:78:28;;5919:2:41;8558:78:28;;;5901:21:41;5958:2;5938:18;;;5931:30;5997:34;5977:18;;;5970:62;-1:-1:-1;;;6048:18:41;;;6041:41;6099:19;;8558:78:28;5717:407:41;8558:78:28;8664:5;;:30;;-1:-1:-1;;;8664:30:28;;8688:4;8664:30;;;1461:51:41;8646:15:28;;-1:-1:-1;;;;;8664:5:28;;:15;;1434:18:41;;8664:30:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8746:10;8705:27;8735:22;;;:10;:22;;;;;8646:48;;-1:-1:-1;8705:27:28;8793:39;;:27;:39::i;:::-;8876:25;;8767:65;;-1:-1:-1;8842:13:28;;8858:43;;8767:65;8858:43;:::i;:::-;8842:59;;8928:7;8919:5;:16;;8911:62;;;;-1:-1:-1;;;8911:62:28;;;;;;;:::i;:::-;9102:29;9134:26;:24;:26::i;:::-;9102:58;;9224:20;9247:36;9272:10;9247:24;:36::i;:::-;9432:20;;9404:25;;9224:59;;-1:-1:-1;9357:20:28;;9380:49;;:21;:49;:::i;:::-;:72;;;;:::i;:::-;9357:95;-1:-1:-1;9466:16:28;;9462:247;;9530:7;9506:20;9514:12;9506:5;:20;:::i;:::-;:31;;9498:77;;;;-1:-1:-1;;;9498:77:28;;;;;;;:::i;:::-;9608:11;;;9589:5;:45;;-1:-1:-1;;;;;9589:5:28;;;;9608:11;9621:12;9589:18;:45::i;:::-;9669:11;;9653:45;;;5113:25:41;;;9669:11:28;5169:2:41;5154:18;;5147:34;-1:-1:-1;;;;;9669:11:28;;;;-1:-1:-1;;;;;;;;;;;9653:45:28;5086:18:41;9653:45:28;;;;;;;9462:247;9801:20;;9773:25;;9749:21;;9719:27;;9801:20;9749:49;;;:::i;:::-;:72;;;;:::i;:::-;9719:102;;9857:19;9832:21;;:44;;;;;;;:::i;:::-;;;;-1:-1:-1;;9932:25:28;;;;9910:47;;:19;:47;:::i;:::-;9886:20;;:71;;;;;;;:::i;:::-;;;;-1:-1:-1;;9991:25:28;;9967:20;:49;;9991:25;;9967:49;;9991:25;;9967:49;:::i;:::-;;;;-1:-1:-1;;10055:1:28;10027:25;;;;:29;;;10066;;;10106:5;:37;;-1:-1:-1;;;;;10106:5:28;10125:10;10137:5;10106:18;:37::i;:::-;10158;;;5113:25:41;;;10193:1:28;5169:2:41;5154:18;;5147:34;10174:10:28;;-1:-1:-1;;;;;;;;;;;10158:37:28;5086:18:41;10158:37:28;;;;;;;10227:9;:22;;;10206:17;;:43;;;;;;;:::i;:::-;;;;-1:-1:-1;;10284:1:28;10259:22;;;:26;10299:16;;10295:147;;10336:38;;1094:25:41;;;10349:10:28;;10336:38;;1082:2:41;1067:18;10336:38:28;;;;;;;10388:43;10396:10;10418:12;10388:29;:43::i;:::-;8548:1900;;;;;;;;8518:1930::o;5190:781::-;5247:7;5313:14;5330:21;:19;:21::i;:::-;5313:38;;5435:26;5497:20;;5521:1;5497:25;5493:274;;5538:16;5557:19;3507:14;;;3423:105;5557:19;5538:38;-1:-1:-1;1109:5:28;5611:17;5538:38;5611:6;:17;:::i;:::-;:34;;;;:::i;:::-;5590:55;;5524:185;5493:274;;;-1:-1:-1;5750:6:28;5493:274;5850:21;;5829:18;:42;5825:122;;;5915:21;;5894:42;;:18;:42;:::i;:::-;5887:49;;;;5190:781;:::o;5825:122::-;5963:1;5956:8;;;;5190:781;:::o;1930:514::-;2037:13:35;;;;;;;;:30;;-1:-1:-1;2055:12:35;;;;2054:13;2037:30;2029:89;;;;-1:-1:-1;;;2029:89:35;;;;;;;:::i;:::-;2129:19;2152:13;;;;;;2151:14;2175:98;;;;2209:13;:20;;-1:-1:-1;;2243:19:35;;;;;2175:98;-1:-1:-1;;;;;2098:26:28;::::1;::::0;;::::1;::::0;:63:::1;;;1109:5;2128:15;:33;;2098:63;2090:72;;;::::0;::::1;;2172:48;2212:7;2172:39;:48::i;:::-;2230:30;2249:10;2230:18;:30::i;:::-;2279:7;-1:-1:-1::0;;;;;2279:14:28::1;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2279:23:28::1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2270:6;:34:::0;;-1:-1:-1;;;;;2270:34:28;;::::1;-1:-1:-1::0;;;;;;2270:34:28;;::::1;;::::0;;;2314:14:::1;:32:::0;;;2356:11:::1;:26:::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;2397:40:::1;::::0;2412:10:::1;::::0;2397:40:::1;::::0;2270:6:::1;::::0;2397:40:::1;2299:14:35::0;2295:66;;;2345:5;2329:21;;-1:-1:-1;;2329:21:35;;;2295:66;2019:348;1930:514:28;;;:::o;3719:246:27:-;2037:13:35;;;;;;;;:30;;-1:-1:-1;2055:12:35;;;;2054:13;2037:30;2029:89;;;;-1:-1:-1;;;2029:89:35;;;;;;;:::i;:::-;2129:19;2152:13;;;;;;2151:14;2175:98;;;;2209:13;:20;;-1:-1:-1;;2243:19:35;;;;;2175:98;3810:7:27::1;3800;;:17;;;;;-1:-1:-1::0;;;;;3800:17:27::1;;;;;-1:-1:-1::0;;;;;3800:17:27::1;;;;;;3827:24;3854:7;-1:-1:-1::0;;;;;3854:14:27::1;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3854:22:27::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3827:51:::0;-1:-1:-1;;;;;;3896:33:27;::::1;3888:42;;;::::0;::::1;;3940:5;:18:::0;;-1:-1:-1;;;;;;3940:18:27::1;-1:-1:-1::0;;;;;3940:18:27;;;::::1;::::0;;;::::1;::::0;;2295:66:35;;;;2345:5;2329:21;;-1:-1:-1;;2329:21:35;;;2295:66;2019:348;3719:246:27;:::o;3111:163:28:-;1090:6:34;;-1:-1:-1;;;;;1090:6:34;1076:10;:20;889:18;;;;;;3186:11:28::1;:26:::0;;-1:-1:-1;;;;;;3186:26:28::1;-1:-1:-1::0;;;;;3186:26:28;::::1;::::0;;::::1;::::0;;;3227:40:::1;::::0;3242:10:::1;::::0;3227:40:::1;::::0;-1:-1:-1;;3227:40:28::1;3111:163:::0;:::o;3644:466::-;3710:18;:16;:18::i;:::-;3702:54;;;;-1:-1:-1;;;3702:54:28;;7606:2:41;3702:54:28;;;7588:21:41;7645:2;7625:18;;;7618:30;7684:25;7664:18;;;7657:53;7727:18;;3702:54:28;7404:347:41;3702:54:28;3783:1;3774:6;:10;3766:46;;;;-1:-1:-1;;;3766:46:28;;7958:2:41;3766:46:28;;;7940:21:41;7997:2;7977:18;;;7970:30;8036:25;8016:18;;;8009:53;8079:18;;3766:46:28;7756:347:41;3766:46:28;3846:6;3822:20;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;3903:10:28;3862:27;3892:22;;;:10;:22;;;;;3924:35;;3892:22;;3953:6;;3892:22;;3862:27;3924:35;;3953:6;;3924:35;:::i;:::-;;;;-1:-1:-1;;3969:5:28;;:57;;-1:-1:-1;;;;;3969:5:28;3992:10;4012:4;4019:6;3969:22;:57::i;:::-;4077:25;;4041:62;;4057:10;;4041:62;;;;4069:6;5113:25:41;;5169:2;5154:18;;5147:34;5101:2;5086:18;;4939:248;4041:62:28;;;;;;;;3692:418;3644:466;:::o;4972:128::-;5024:7;5073:20;;5050;:18;:20::i;:::-;:43;;;;:::i;:::-;5043:50;;4972:128;:::o;11166:451::-;11256:10;11215:27;11245:22;;;:10;:22;;;;;;11300:36;;:24;:36::i;:::-;11277:59;;11369:1;11354:12;:16;11346:66;;;;-1:-1:-1;;;11346:66:28;;8310:2:41;11346:66:28;;;8292:21:41;8349:2;8329:18;;;8322:30;8388:34;8368:18;;;8361:62;-1:-1:-1;;;8439:18:41;;;8432:35;8484:19;;11346:66:28;8108:401:41;11346:66:28;11448:12;11422:9;:22;;;:38;;;;;;;:::i;:::-;;;;;;;;11492:12;11471:17;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;11519:38:28;;1094:25:41;;;11532:10:28;;11519:38;;1082:2:41;1067:18;11519:38:28;;;;;;;11567:43;11575:10;11597:12;11567:29;:43::i;4197:622::-;4373:6;;:34;;-1:-1:-1;;;4373:34:28;;4401:4;4373:34;;;1461:51:41;4248:7:28;;;;-1:-1:-1;;;;;4373:6:28;;;;:19;;1434:18:41;;4373:34:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4486:5;;:30;;-1:-1:-1;;;4486:30:28;;4510:4;4486:30;;;1461:51:41;4350:57:28;;-1:-1:-1;4465:18:28;;-1:-1:-1;;;;;4486:5:28;;;;:15;;1434:18:41;;4486:30:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4465:51;;4581:14;4626:20;;4613:10;4598:12;:25;;;;:::i;:::-;:48;;;;:::i;:::-;4581:65;;4736:10;4727:6;:19;4723:67;;;-1:-1:-1;4769:10:28;4197:622;-1:-1:-1;;4197:622:28:o;4723:67::-;4806:6;4197:622;-1:-1:-1;;;4197:622:28:o;1689:115:34:-;1090:6;;-1:-1:-1;;;;;1090:6:34;1076:10;:20;889:18;;;;;;1769:28:::1;1788:8;1769:18;:28::i;:::-;1689:115:::0;:::o;7037:638:28:-;7110:11;;-1:-1:-1;;;;;7110:11:28;7096:10;:25;7088:34;;;;;;7150:5;;:30;;-1:-1:-1;;;7150:30:28;;7174:4;7150:30;;;1461:51:41;7132:15:28;;-1:-1:-1;;;;;7150:5:28;;:15;;1434:18:41;;7150:30:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7132:48;;7190:23;7216:26;:24;:26::i;:::-;7190:52;;7275:7;7257:15;:25;7253:81;;;-1:-1:-1;7316:7:28;7253:81;7382:1;7364:15;:19;7343:106;;;;-1:-1:-1;;;7343:106:28;;8716:2:41;7343:106:28;;;8698:21:41;8755:2;8735:18;;;8728:30;8794:34;8774:18;;;8767:62;-1:-1:-1;;;8845:18:41;;;8838:38;8893:19;;7343:106:28;8514:404:41;7343:106:28;7484:15;7459:21;;:40;;;;;;;:::i;:::-;;;;;;;;7533:15;7509:20;;:39;;;;;;;:::i;:::-;;;;-1:-1:-1;;7559:5:28;;:47;;-1:-1:-1;;;;;7559:5:28;7578:10;7590:15;7559:18;:47::i;:::-;7621;;;5113:25:41;;;7666:1:28;5169:2:41;5154:18;;5147:34;7637:10:28;;-1:-1:-1;;;;;;;;;;;7621:47:28;5086:18:41;7621:47:28;4939:248:41;697:205:39;836:58;;-1:-1:-1;;;;;9115:32:41;;836:58:39;;;9097:51:41;9164:18;;;9157:34;;;809:86:39;;829:5;;-1:-1:-1;;;859:23:39;9070:18:41;;836:58:39;;;;-1:-1:-1;;836:58:39;;;;;;;;;;;;;;-1:-1:-1;;;;;836:58:39;-1:-1:-1;;;;;;836:58:39;;;;;;;;;;809:19;:86::i;:::-;697:205;;;:::o;2065:312:40:-;2179:6;2154:21;:31;;2146:73;;;;-1:-1:-1;;;2146:73:40;;9404:2:41;2146:73:40;;;9386:21:41;9443:2;9423:18;;;9416:30;9482:31;9462:18;;;9455:59;9531:18;;2146:73:40;9202:353:41;2146:73:40;2231:12;2249:9;-1:-1:-1;;;;;2249:14:40;2271:6;2249:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2230:52;;;2300:7;2292:78;;;;-1:-1:-1;;;2292:78:40;;9972:2:41;2292:78:40;;;9954:21:41;10011:2;9991:18;;;9984:30;10050:34;10030:18;;;10023:62;10121:28;10101:18;;;10094:56;10167:19;;2292:78:40;9770:422:41;1948:183:34;-1:-1:-1;;;;;2021:22:34;;2013:31;;;;;;2080:6;;2059:38;;-1:-1:-1;;;;;2059:38:34;;;;2080:6;;2059:38;;2080:6;;2059:38;2107:6;:17;;-1:-1:-1;;;;;;2107:17:34;-1:-1:-1;;;;;2107:17:34;;;;;;;;;;1948:183::o;908:241:39:-;1073:68;;-1:-1:-1;;;;;10455:15:41;;;1073:68:39;;;10437:34:41;10507:15;;10487:18;;;10480:43;10539:18;;;10532:34;;;1046:96:39;;1066:5;;-1:-1:-1;;;1096:27:39;10372:18:41;;1073:68:39;10197:375:41;3203:706:39;3622:23;3648:69;3676:4;3648:69;;;;;;;;;;;;;;;;;3656:5;-1:-1:-1;;;;;3648:27:39;;;:69;;;;;:::i;:::-;3731:17;;3622:95;;-1:-1:-1;3731:21:39;3727:176;;3826:10;3815:30;;;;;;;;;;;;:::i;:::-;3807:85;;;;-1:-1:-1;;;3807:85:39;;11061:2:41;3807:85:39;;;11043:21:41;11100:2;11080:18;;;11073:30;11139:34;11119:18;;;11112:62;-1:-1:-1;;;11190:18:41;;;11183:40;11240:19;;3807:85:39;10859:406:41;3514:223:40;3647:12;3678:52;3700:6;3708:4;3714:1;3717:12;3678:21;:52::i;:::-;3671:59;3514:223;-1:-1:-1;;;;3514:223:40:o;4601:499::-;4766:12;4823:5;4798:21;:30;;4790:81;;;;-1:-1:-1;;;4790:81:40;;11472:2:41;4790:81:40;;;11454:21:41;11511:2;11491:18;;;11484:30;11550:34;11530:18;;;11523:62;-1:-1:-1;;;11601:18:41;;;11594:36;11647:19;;4790:81:40;11270:402:41;4790:81:40;1087:20;;4881:60;;;;-1:-1:-1;;;4881:60:40;;11879:2:41;4881:60:40;;;11861:21:41;11918:2;11898:18;;;11891:30;11957:31;11937:18;;;11930:59;12006:18;;4881:60:40;11677:353:41;4881:60:40;4953:12;4967:23;4994:6;-1:-1:-1;;;;;4994:11:40;5013:5;5020:4;4994:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4952:73;;;;5042:51;5059:7;5068:10;5080:12;5042:16;:51::i;:::-;5035:58;4601:499;-1:-1:-1;;;;;;;4601:499:40:o;7214:692::-;7360:12;7388:7;7384:516;;;-1:-1:-1;7418:10:40;7411:17;;7384:516;7529:17;;:21;7525:365;;7723:10;7717:17;7783:15;7770:10;7766:2;7762:19;7755:44;7525:365;7862:12;7855:20;;-1:-1:-1;;;7855:20:40;;;;;;;;:::i;14:153:41:-;-1:-1:-1;;;;;111:31:41;;101:42;;91:70;;157:1;154;147:12;172:303;272:6;325:2;313:9;304:7;300:23;296:32;293:52;;;341:1;338;331:12;293:52;373:9;367:16;392:53;439:5;392:53;:::i;480:271::-;663:6;655;650:3;637:33;619:3;689:16;;714:13;;;689:16;480:271;-1:-1:-1;480:271:41:o;1130:180::-;1189:6;1242:2;1230:9;1221:7;1217:23;1213:32;1210:52;;;1258:1;1255;1248:12;1210:52;-1:-1:-1;1281:23:41;;1130:180;-1:-1:-1;1130:180:41:o;1523:269::-;1582:6;1635:2;1623:9;1614:7;1610:23;1606:32;1603:52;;;1651:1;1648;1641:12;1603:52;1690:9;1677:23;1709:53;1756:5;1709:53;:::i;2121:532::-;2230:6;2238;2246;2299:2;2287:9;2278:7;2274:23;2270:32;2267:52;;;2315:1;2312;2305:12;2267:52;2351:9;2338:23;2328:33;;2411:2;2400:9;2396:18;2383:32;2424:53;2471:5;2424:53;:::i;:::-;2496:5;-1:-1:-1;2553:2:41;2538:18;;2525:32;2566:55;2525:32;2566:55;:::i;:::-;2640:7;2630:17;;;2121:532;;;;;:::o;3663:184::-;3733:6;3786:2;3774:9;3765:7;3761:23;3757:32;3754:52;;;3802:1;3799;3792:12;3754:52;-1:-1:-1;3825:16:41;;3663:184;-1:-1:-1;3663:184:41:o;3852:397::-;4054:2;4036:21;;;4093:2;4073:18;;;4066:30;4132:34;4127:2;4112:18;;4105:62;-1:-1:-1;;;4198:2:41;4183:18;;4176:31;4239:3;4224:19;;3852:397::o;4674:127::-;4735:10;4730:3;4726:20;4723:1;4716:31;4766:4;4763:1;4756:15;4790:4;4787:1;4780:15;4806:128;4846:3;4877:1;4873:6;4870:1;4867:13;4864:39;;;4883:18;;:::i;:::-;-1:-1:-1;4919:9:41;;4806:128::o;5192:168::-;5232:7;5298:1;5294;5290:6;5286:14;5283:1;5280:21;5275:1;5268:9;5261:17;5257:45;5254:71;;;5305:18;;:::i;:::-;-1:-1:-1;5345:9:41;;5192:168::o;5365:125::-;5405:4;5433:1;5430;5427:8;5424:34;;;5438:18;;:::i;:::-;-1:-1:-1;5475:9:41;;5365:125::o;5495:217::-;5535:1;5561;5551:132;;5605:10;5600:3;5596:20;5593:1;5586:31;5640:4;5637:1;5630:15;5668:4;5665:1;5658:15;5551:132;-1:-1:-1;5697:9:41;;5495:217::o;6390:410::-;6592:2;6574:21;;;6631:2;6611:18;;;6604:30;6670:34;6665:2;6650:18;;6643:62;-1:-1:-1;;;6736:2:41;6721:18;;6714:44;6790:3;6775:19;;6390:410::o;10577:277::-;10644:6;10697:2;10685:9;10676:7;10672:23;10668:32;10665:52;;;10713:1;10710;10703:12;10665:52;10745:9;10739:16;10798:5;10791:13;10784:21;10777:5;10774:32;10764:60;;10820:1;10817;10810:12;12035:258;12107:1;12117:113;12131:6;12128:1;12125:13;12117:113;;;12207:11;;;12201:18;12188:11;;;12181:39;12153:2;12146:10;12117:113;;;12248:6;12245:1;12242:13;12239:48;;;-1:-1:-1;;12283:1:41;12265:16;;12258:27;12035:258::o;12298:274::-;12427:3;12465:6;12459:13;12481:53;12527:6;12522:3;12515:4;12507:6;12503:17;12481:53;:::i;:::-;12550:16;;;;;12298:274;-1:-1:-1;;12298:274:41:o;12577:383::-;12726:2;12715:9;12708:21;12689:4;12758:6;12752:13;12801:6;12796:2;12785:9;12781:18;12774:34;12817:66;12876:6;12871:2;12860:9;12856:18;12851:2;12843:6;12839:15;12817:66;:::i;:::-;12944:2;12923:15;-1:-1:-1;;12919:29:41;12904:45;;;;12951:2;12900:54;;12577:383;-1:-1:-1;;12577:383:41:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "BASIS_FRACTION()": {
        "notice": "Defines base fraction and precision of worker fraction. E.g., for a value of 10000, a worker fraction of 100 represents 1% of reward (100/10000)"
      },
      "depositTokens(uint256)": {
        "notice": "Transfer tokens as delegator",
        "params": {
          "_value": "Amount of tokens to transfer"
        }
      },
      "getAvailableDelegatorETH(address)": {
        "notice": "Get available ether for delegator"
      },
      "getAvailableDelegatorReward(address)": {
        "notice": "Get available reward in tokens for delegator"
      },
      "getAvailableReward()": {
        "notice": "Get available reward for all delegators and owner"
      },
      "getAvailableWorkerReward()": {
        "notice": "Get available reward in tokens for worker node owner"
      },
      "getCumulativeReward()": {
        "notice": "Get cumulative reward. Available and withdrawn reward together to use in delegator/owner reward calculations"
      },
      "getWorkerFraction()": {
        "notice": "Calculate worker's fraction depending on deposited tokens Override to implement dynamic worker fraction."
      },
      "initialize(address)": {
        "params": {
          "_router": "Interface router contract address"
        }
      },
      "initialize(uint256,address,address)": {
        "notice": "Initialize function for using with OpenZeppelin proxy",
        "params": {
          "_router": "StakingInterfaceRouter address",
          "_workerFraction": "Share of token reward that worker node owner will get. Use value up to BASIS_FRACTION (10000), if _workerFraction = BASIS_FRACTION -> means 100% reward as commission. For example, 100 worker fraction is 1% of reward",
          "_workerOwner": "Owner of worker node, only this address can withdraw worker commission"
        }
      },
      "isDepositAllowed()": {
        "notice": "deposit() is allowed"
      },
      "isFallbackAllowed()": {
        "notice": "Calling fallback function is allowed only for the owner"
      },
      "isOwner()": {
        "returns": {
          "_0": "true if `msg.sender` is the owner of the contract."
        }
      },
      "isWithdrawAllAllowed()": {
        "notice": "withdrawAll() is allowed"
      },
      "owner()": {
        "returns": {
          "_0": "the address of the owner."
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.",
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "router()": {
        "details": "Returns address of StakingInterfaceRouter"
      },
      "setWorkerOwner(address)": {
        "notice": "Set worker owner address"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "withdrawAll()": {
        "notice": "Withdraw reward, deposit and fee to delegator"
      },
      "withdrawETH()": {
        "notice": "Withdraw available amount of ETH to delegator"
      },
      "withdrawTokens(uint256)": {
        "notice": "Withdraw reward to delegator",
        "params": {
          "_value": "Amount of tokens to withdraw"
        }
      },
      "withdrawWorkerReward()": {
        "notice": "Withdraw reward in tokens to worker node owner"
      }
    },
    "notice": "Contract acts as delegate for sub-stakers*",
    "version": 1
  },
  "offset": [
    222,
    11822
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9212E643 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xE086E5EC GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF435D2E5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF435D2E5 EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x645 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x669 JUMPI DUP1 PUSH4 0xFD012664 EQ PUSH2 0x689 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x5C6 JUMPI DUP1 PUSH4 0xE0974EA5 EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0xE2FDCC17 EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x610 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0xD330D85B GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xD330D85B EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xD42AA8A7 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0xDD49756E EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0xDD934E89 EQ PUSH2 0x5B1 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x9212E643 EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0xB4988FD0 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xBD4BD9CE EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x53B JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x8B713B2E GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x8B713B2E EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x8D23FC61 EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x4D1 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x83679E91 EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0x84DBFC85 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x431 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x31843E25 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x31843E25 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x44CBEE0D EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x4D444FAC EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x595B1872 EQ PUSH2 0x3A4 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x17A00261 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x2DCED887 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x315A095D EQ PUSH2 0x342 JUMPI PUSH2 0x1E3 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1E3 JUMPI STOP JUMPDEST PUSH2 0x1EB PUSH2 0x69F JUMP JUMPDEST PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD4B83992 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x244 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x29B SWAP3 SWAP2 SWAP1 PUSH2 0x1BBC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2D6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 ISZERO PUSH2 0x2EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x315 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x73F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x334 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0x2710 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0x8DE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x3C4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x315 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x96C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0x40C CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE5 JUMP JUMPDEST PUSH2 0x9CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0x42C CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE5 JUMP JUMPDEST PUSH2 0xA83 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0xAF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x498 PUSH2 0x477 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE5 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x315 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x309 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0xE05 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x521 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C02 JUMP JUMPDEST PUSH2 0xE74 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0x69F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x556 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE5 JUMP JUMPDEST PUSH2 0x1039 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE5 JUMP JUMPDEST PUSH2 0x11C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x5AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x122A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0x136C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x1388 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0x1472 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x3C4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x62B CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE5 JUMP JUMPDEST PUSH2 0x158A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0x15AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x3C4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B3 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xBC5B6F3 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x178B6DE6 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x715 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x739 SWAP2 SWAP1 PUSH2 0x1C44 JUMP JUMPDEST ISZERO SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x788 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7AC SWAP2 SWAP1 PUSH2 0x1C44 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CE SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 PUSH2 0x7F0 SWAP1 PUSH2 0x9CD JUMP JUMPDEST SWAP1 POP DUP1 DUP5 GT ISZERO PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657175657374656420616D6F756E74206F6620746F6B656E73206578636565 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x3232B21030B63637BBB2B2103837B93A34B7B7 PUSH1 0x69 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7CE JUMP JUMPDEST DUP4 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x872 SWAP2 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x88B SWAP2 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH2 0x8A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP7 PUSH2 0x1718 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E10 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x8D0 SWAP2 DUP9 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x92B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94F SWAP2 SWAP1 PUSH2 0x1C44 JUMP JUMPDEST SWAP1 POP PUSH2 0x959 PUSH2 0x6CC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x966 JUMPI POP PUSH1 0x5 SLOAD DUP2 EQ JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x983 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x9E2 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9EC PUSH2 0x136C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP PUSH2 0xA10 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 PUSH1 0x5 SLOAD PUSH2 0xA24 SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0xA30 DUP4 PUSH2 0x2710 PUSH2 0x1CEB JUMP JUMPDEST DUP5 SLOAD PUSH2 0xA3C SWAP1 DUP8 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0xA46 SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0xA77 JUMPI PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0xA6D SWAP1 DUP3 PUSH2 0x1CEB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x7 SLOAD SELFBALANCE SWAP1 PUSH2 0xAAA SWAP1 DUP3 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP4 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0xABF SWAP1 DUP5 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0xAC9 SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 ADD SLOAD DUP3 PUSH2 0xADD SWAP2 SWAP1 PUSH2 0x1CEB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0xAEA JUMPI POP DUP2 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAFB PUSH2 0x6CC JUMP JUMPDEST PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177206465706F73697420616E6420726577617264206D757374 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x8189948195B98589B1959 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBC8 SWAP2 SWAP1 PUSH2 0x1C44 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP4 POP SWAP1 PUSH2 0xBE4 SWAP1 PUSH2 0x9CD JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xBF6 SWAP1 DUP4 PUSH2 0x1CB4 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xC18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CE SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC22 PUSH2 0xE05 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC2F CALLER PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP7 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0xC44 SWAP1 DUP6 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0xC4E SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xCD3 JUMPI DUP7 PUSH2 0xC61 DUP3 DUP7 PUSH2 0x1CB4 JUMP JUMPDEST GT ISZERO PUSH2 0xC7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CE SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 SLOAD PUSH2 0xC9C SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E10 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x5 SLOAD DUP7 SLOAD PUSH1 0x9 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0xCE8 SWAP2 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0xCF2 SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD06 SWAP2 SWAP1 PUSH2 0x1CEB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP8 ADD SLOAD PUSH2 0xD1A SWAP1 DUP3 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD2B SWAP2 SWAP1 PUSH2 0x1CEB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP7 SLOAD PUSH1 0x5 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xD44 SWAP1 DUP5 SWAP1 PUSH2 0x1CEB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 PUSH1 0x1 DUP1 DUP10 ADD DUP3 SWAP1 SSTORE SWAP1 DUP9 SSTORE SLOAD PUSH2 0xD6B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP8 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E10 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP7 PUSH1 0x2 ADD SLOAD PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x1CEB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 PUSH1 0x2 DUP9 ADD SSTORE DUP3 ISZERO PUSH2 0xDFB JUMPI PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0x94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xDFB CALLER DUP5 PUSH2 0x1780 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE10 PUSH2 0x136C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD PUSH1 0x0 EQ PUSH2 0xE4A JUMPI PUSH1 0x0 PUSH2 0xE29 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2710 PUSH2 0xE38 DUP3 DUP6 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0xE42 SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE4D JUMP JUMPDEST POP DUP1 JUMPDEST PUSH1 0x9 SLOAD DUP2 GT ISZERO PUSH2 0xE6B JUMPI PUSH1 0x9 SLOAD PUSH2 0xE64 SWAP1 DUP3 PUSH2 0x1CEB JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xE8D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xEA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CE SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xECB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xEE5 JUMPI POP PUSH2 0x2710 DUP5 GT ISZERO JUMPDEST PUSH2 0xEEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEF7 DUP4 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0xF00 CALLER PUSH2 0x1899 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD4B83992 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF3E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF62 SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE2FDCC17 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP7 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x8E69C3A0200AC71EB0D842C26986BAAA25A28AABFEE91D144725DF5B3190F4CB SWAP1 PUSH1 0x0 SWAP1 LOG3 DUP1 ISZERO PUSH2 0x1033 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1052 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x106E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CE SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1090 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD4B83992 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x111B SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1158 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x117C SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x11C3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x8E69C3A0200AC71EB0D842C26986BAAA25A28AABFEE91D144725DF5B3190F4CB SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x1232 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x127E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F736974206D75737420626520656E61626C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x12CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C7565206D757374206265206E6F7420656D707479000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CE JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12E0 SWAP2 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP4 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x1308 SWAP1 DUP5 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH2 0x1325 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0x1908 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 PUSH32 0xFDFDCF596161B0E81E3161597D46888DCC88BD83B22DCFB341C76377CA3BBC9E SWAP2 PUSH2 0x1360 SWAP2 DUP7 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH2 0x1379 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x1383 SWAP2 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 PUSH2 0x13A1 SWAP1 PUSH2 0xA83 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1401 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206973206E6F20617661696C61626C652045544820746F20776974 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6864726177 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7CE JUMP JUMPDEST DUP1 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1415 SWAP2 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x142E SWAP2 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x11C3 CALLER DUP3 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xBC5B6F3 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x178B6DE6 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14E3 SWAP2 SWAP1 PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1531 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1555 SWAP2 SWAP1 PUSH2 0x1C44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD DUP3 DUP5 PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST PUSH2 0x1572 SWAP2 SWAP1 PUSH2 0x1CEB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1583 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15AA DUP2 PUSH2 0x1899 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x160D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1631 SWAP2 SWAP1 PUSH2 0x1C44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x163D PUSH2 0xE05 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x164A JUMPI POP DUP1 JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x16AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206973206E6F20617661696C61626C652072657761726420746F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x7769746864726177 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7CE JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16BD SWAP2 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16D6 SWAP2 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH2 0x16F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E10 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x177B SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1940 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x17D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x181D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1822 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x177B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x18AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1033 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1995 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A12 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x177B JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x19B3 SWAP2 SWAP1 PUSH2 0x1D72 JUMP JUMPDEST PUSH2 0x177B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A21 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1A29 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1A8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7CE JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x1AD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1AF4 SWAP2 SWAP1 PUSH2 0x1DC0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B31 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B36 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1B46 DUP3 DUP3 DUP7 PUSH2 0x1B51 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1B60 JUMPI POP DUP2 PUSH2 0x1583 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1B70 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0x1DDC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1583 DUP2 PUSH2 0x1B8A JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1583 DUP2 PUSH2 0x1B8A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1C29 DUP2 PUSH2 0x1B8A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1C39 DUP2 PUSH2 0x1B8A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E2074686520636F6E74726163 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1CC7 JUMPI PUSH2 0x1CC7 PUSH2 0x1C9E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1CE6 JUMPI PUSH2 0x1CE6 PUSH2 0x1C9E JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1CFD JUMPI PUSH2 0x1CFD PUSH2 0x1C9E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D1F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DAF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D97 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1033 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1DD2 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1D94 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1DFB DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID SELFDESTRUCT 0xE9 SUB 0xC0 0xAB 0xE6 0xB2 0xDB 0xB2 RETURN SELFBALANCE 0x4E DELEGATECALL RETURNDATASIZE PUSH27 0x3C1FCA49E5A774453423CA8E1952AABFFAA2646970667358221220 MLOAD LT CALLER SWAP3 PUSH8 0xEC0E221913F3117A DELEGATECALL 0xBF SWAP3 PUSH6 0x3AE9F7278C6E 0xEA 0xDB 0xDE 0xBE SSTORE 0x5C COINBASE CHAINID RETURNDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        222,
        11822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "8": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "LT",
      "path": "28"
    },
    "9": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1DC"
    },
    "12": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "13": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "16": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "SHR",
      "path": "28"
    },
    "19": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "20": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x9212E643"
    },
    "25": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "GT",
      "path": "28"
    },
    "26": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x102"
    },
    "29": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "30": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "31": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xE086E5EC"
    },
    "36": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "GT",
      "path": "28"
    },
    "37": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x95"
    },
    "40": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "41": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "42": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xF435D2E5"
    },
    "47": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "GT",
      "path": "28"
    },
    "48": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x64"
    },
    "51": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "52": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "53": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xF435D2E5"
    },
    "58": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "59": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x630"
    },
    "62": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "63": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "64": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xF887EA40"
    },
    "69": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "70": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x645"
    },
    "73": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "74": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "75": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xFC0C546A"
    },
    "80": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "81": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x669"
    },
    "84": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "85": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "86": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xFD012664"
    },
    "91": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "92": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x689"
    },
    "95": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "96": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E3"
    },
    "99": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "100": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "101": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "102": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xE086E5EC"
    },
    "107": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "108": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5C6"
    },
    "111": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "112": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "113": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xE0974EA5"
    },
    "118": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "119": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5DB"
    },
    "122": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "123": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "124": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xE2FDCC17"
    },
    "129": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "130": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5F0"
    },
    "133": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "134": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "135": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xF2FDE38B"
    },
    "140": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "141": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x610"
    },
    "144": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "145": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E3"
    },
    "148": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "149": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "150": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "151": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xD330D85B"
    },
    "156": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "GT",
      "path": "28"
    },
    "157": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xD1"
    },
    "160": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "161": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "162": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xD330D85B"
    },
    "167": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "168": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x55B"
    },
    "171": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "172": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "173": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xD42AA8A7"
    },
    "178": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "179": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x57B"
    },
    "182": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "183": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "184": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xDD49756E"
    },
    "189": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "190": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x591"
    },
    "193": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "194": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "195": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xDD934E89"
    },
    "200": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "201": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5B1"
    },
    "204": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "205": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E3"
    },
    "208": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "209": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "210": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "211": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x9212E643"
    },
    "216": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "217": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4F1"
    },
    "220": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "221": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "222": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xB4988FD0"
    },
    "227": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "228": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x506"
    },
    "231": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "232": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "233": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xBD4BD9CE"
    },
    "238": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "239": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x526"
    },
    "242": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "243": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "244": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xC4D66DE8"
    },
    "249": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "250": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x53B"
    },
    "253": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "254": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E3"
    },
    "257": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "258": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "259": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "260": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x715018A6"
    },
    "265": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "GT",
      "path": "28"
    },
    "266": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x17A"
    },
    "269": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "270": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "271": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x8B713B2E"
    },
    "276": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "GT",
      "path": "28"
    },
    "277": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x149"
    },
    "280": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "281": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "282": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x8B713B2E"
    },
    "287": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "288": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x446"
    },
    "291": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "292": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "293": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x8D23FC61"
    },
    "298": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "299": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x45C"
    },
    "302": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "303": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "304": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x8DA5CB5B"
    },
    "309": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "310": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4B3"
    },
    "313": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "314": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "315": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x8F32D59B"
    },
    "320": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "321": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4D1"
    },
    "324": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "325": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E3"
    },
    "328": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "329": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "330": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "331": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x715018A6"
    },
    "336": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "337": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3DC"
    },
    "340": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "341": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "342": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x83679E91"
    },
    "347": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "348": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3F1"
    },
    "351": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "352": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "353": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x84DBFC85"
    },
    "358": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "359": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x411"
    },
    "362": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "363": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "364": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x853828B6"
    },
    "369": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "370": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x431"
    },
    "373": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "374": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E3"
    },
    "377": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "378": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "379": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "380": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x31843E25"
    },
    "385": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "GT",
      "path": "28"
    },
    "386": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1B6"
    },
    "389": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "390": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "391": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x31843E25"
    },
    "396": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "397": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x364"
    },
    "400": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "401": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "402": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x44CBEE0D"
    },
    "407": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "408": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x379"
    },
    "411": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "412": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "413": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x4D444FAC"
    },
    "418": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "419": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x38F"
    },
    "422": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "423": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "424": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x595B1872"
    },
    "429": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "430": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3A4"
    },
    "433": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "434": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E3"
    },
    "437": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "438": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "439": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "440": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x17A00261"
    },
    "445": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "446": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2F4"
    },
    "449": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "450": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "451": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x2DCED887"
    },
    "456": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "457": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x31E"
    },
    "460": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "461": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "DUP1",
      "path": "28"
    },
    "462": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x315A095D"
    },
    "467": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "EQ",
      "path": "28"
    },
    "468": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x342"
    },
    "471": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "472": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E3"
    },
    "475": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMP",
      "path": "28"
    },
    "476": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "477": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "478": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E3"
    },
    "481": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "482": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "STOP",
      "path": "28"
    },
    "483": {
      "fn": null,
      "offset": [
        222,
        11822
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "484": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1748,
        1767
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 0,
      "value": "0x1EB"
    },
    "487": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1748,
        1765
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x69F"
    },
    "490": {
      "fn": "RawStakingContract.<fallback>",
      "jump": "i",
      "offset": [
        1748,
        1767
      ],
      "op": "JUMP",
      "path": "27"
    },
    "491": {
      "branch": 120,
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1748,
        1767
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "492": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1740,
        1768
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1F4"
    },
    "495": {
      "branch": 120,
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1740,
        1768
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "496": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1740,
        1768
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "498": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1740,
        1768
      ],
      "op": "DUP1",
      "path": "27"
    },
    "499": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1740,
        1768
      ],
      "op": "REVERT",
      "path": "27"
    },
    "500": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1740,
        1768
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "501": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1778,
        1792
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "503": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4128,
        4135
      ],
      "op": "DUP1",
      "path": "27",
      "statement": 1
    },
    "504": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4128,
        4135
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "505": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4128,
        4135
      ],
      "op": "PUSH3",
      "path": "27",
      "value": "0x10000"
    },
    "509": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4128,
        4135
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "510": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4128,
        4135
      ],
      "op": "DIV",
      "path": "27"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "517": {
      "op": "SHL"
    },
    "518": {
      "op": "SUB"
    },
    "519": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4128,
        4135
      ],
      "op": "AND",
      "path": "27"
    },
    "520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "524": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "526": {
      "op": "SHL"
    },
    "527": {
      "op": "SUB"
    },
    "528": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1818
      ],
      "op": "AND",
      "path": "27"
    },
    "529": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1818
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xD4B83992"
    },
    "534": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "536": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "537": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "DUP2",
      "path": "27"
    },
    "538": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xFFFFFFFF"
    },
    "543": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "AND",
      "path": "27"
    },
    "544": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xE0"
    },
    "546": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "SHL",
      "path": "27"
    },
    "547": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "DUP2",
      "path": "27"
    },
    "548": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "549": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "551": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "ADD",
      "path": "27"
    },
    "552": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "554": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "556": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "557": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "DUP1",
      "path": "27"
    },
    "558": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "DUP4",
      "path": "27"
    },
    "559": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "SUB",
      "path": "27"
    },
    "560": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "DUP2",
      "path": "27"
    },
    "561": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "DUP7",
      "path": "27"
    },
    "562": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "GAS",
      "path": "27"
    },
    "563": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "564": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "565": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "DUP1",
      "path": "27"
    },
    "566": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "567": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x244"
    },
    "570": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "571": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "572": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "574": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "DUP1",
      "path": "27"
    },
    "575": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "576": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "577": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "579": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "REVERT",
      "path": "27"
    },
    "580": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "581": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "POP",
      "path": "27"
    },
    "582": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "POP",
      "path": "27"
    },
    "583": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "POP",
      "path": "27"
    },
    "584": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "POP",
      "path": "27"
    },
    "585": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "587": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "588": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "589": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "591": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "NOT",
      "path": "27"
    },
    "592": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "594": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "DUP3",
      "path": "27"
    },
    "595": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "ADD",
      "path": "27"
    },
    "596": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "AND",
      "path": "27"
    },
    "597": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "DUP3",
      "path": "27"
    },
    "598": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "ADD",
      "path": "27"
    },
    "599": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "DUP1",
      "path": "27"
    },
    "600": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "602": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "603": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "POP",
      "path": "27"
    },
    "604": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "DUP2",
      "path": "27"
    },
    "605": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "ADD",
      "path": "27"
    },
    "606": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "607": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x268"
    },
    "610": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "611": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "612": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B9F"
    },
    "615": {
      "fn": "RawStakingContract.<fallback>",
      "jump": "i",
      "offset": [
        1803,
        1820
      ],
      "op": "JUMP",
      "path": "27"
    },
    "616": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1803,
        1820
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "617": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1778,
        1821
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "618": {
      "op": "POP"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "625": {
      "op": "SHL"
    },
    "626": {
      "op": "SUB"
    },
    "627": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1839,
        1856
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 2
    },
    "628": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1839,
        1856
      ],
      "op": "AND",
      "path": "27"
    },
    "629": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "40"
    },
    "630": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1831,
        1859
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x27E"
    },
    "633": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1831,
        1859
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "634": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1831,
        1859
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "636": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1831,
        1859
      ],
      "op": "DUP1",
      "path": "27"
    },
    "637": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1831,
        1859
      ],
      "op": "REVERT",
      "path": "27"
    },
    "638": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1831,
        1859
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "639": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1929,
        1945
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "641": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1957
      ],
      "op": "DUP2",
      "path": "27"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "648": {
      "op": "SHL"
    },
    "649": {
      "op": "SUB"
    },
    "650": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1970
      ],
      "op": "AND",
      "path": "27"
    },
    "651": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1971,
        1979
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "653": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1971,
        1979
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "654": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "656": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "657": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x29B"
    },
    "660": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "661": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "662": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "663": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1BBC"
    },
    "666": {
      "fn": "RawStakingContract.<fallback>",
      "jump": "i",
      "offset": [
        1951,
        1980
      ],
      "op": "JUMP",
      "path": "27"
    },
    "667": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "668": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "670": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "672": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "673": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "DUP1",
      "path": "27"
    },
    "674": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "DUP4",
      "path": "27"
    },
    "675": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "SUB",
      "path": "27"
    },
    "676": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "DUP2",
      "path": "27"
    },
    "677": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "DUP6",
      "path": "27"
    },
    "678": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "GAS",
      "path": "27"
    },
    "679": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "DELEGATECALL",
      "path": "27"
    },
    "680": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "681": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "POP",
      "path": "27"
    },
    "682": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "POP",
      "path": "27"
    },
    "683": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "684": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "DUP1",
      "path": "27"
    },
    "685": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "687": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "DUP2",
      "path": "27"
    },
    "688": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "EQ",
      "path": "27"
    },
    "689": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2D6"
    },
    "692": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "693": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "695": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "696": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "697": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "POP",
      "path": "27"
    },
    "698": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "700": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "NOT",
      "path": "27"
    },
    "701": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3F"
    },
    "703": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "704": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "ADD",
      "path": "27"
    },
    "705": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "AND",
      "path": "27"
    },
    "706": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "DUP3",
      "path": "27"
    },
    "707": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "ADD",
      "path": "27"
    },
    "708": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "710": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "711": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "712": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "DUP3",
      "path": "27"
    },
    "713": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "714": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "715": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "717": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "719": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "DUP5",
      "path": "27"
    },
    "720": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "ADD",
      "path": "27"
    },
    "721": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "722": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2DB"
    },
    "725": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "JUMP",
      "path": "27"
    },
    "726": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "727": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "729": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "730": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "POP",
      "path": "27"
    },
    "731": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "732": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1951,
        1980
      ],
      "op": "POP",
      "path": "27"
    },
    "733": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1928,
        1980
      ],
      "op": "POP",
      "path": "27"
    },
    "734": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1928,
        1980
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "735": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1928,
        1980
      ],
      "op": "POP",
      "path": "27"
    },
    "736": {
      "branch": 121,
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1994,
        2005
      ],
      "op": "DUP1",
      "path": "27"
    },
    "737": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1990,
        2398
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "738": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1990,
        2398
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2EF"
    },
    "741": {
      "branch": 121,
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1990,
        2398
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "742": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        2272,
        2288
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "743": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        2267,
        2270
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "745": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        2267,
        2270
      ],
      "op": "DUP1",
      "path": "27"
    },
    "746": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        2247,
        2289
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "747": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        2318,
        2334
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "748": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        2267,
        2270
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "750": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        2306,
        2335
      ],
      "op": "RETURN",
      "path": "27"
    },
    "751": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        1990,
        2398
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "752": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        2379,
        2387
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 3,
      "value": "0x0"
    },
    "754": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        2379,
        2387
      ],
      "op": "DUP1",
      "path": "27"
    },
    "755": {
      "fn": "RawStakingContract.<fallback>",
      "offset": [
        2379,
        2387
      ],
      "op": "REVERT",
      "path": "27"
    },
    "756": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "757": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "758": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "DUP1",
      "path": "28"
    },
    "759": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "760": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x300"
    },
    "763": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "764": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "766": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "DUP1",
      "path": "28"
    },
    "767": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "REVERT",
      "path": "28"
    },
    "768": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "769": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "POP",
      "path": "28"
    },
    "770": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x309"
    },
    "773": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x6CC"
    },
    "776": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "jump": "i",
      "offset": [
        2506,
        2696
      ],
      "op": "JUMP",
      "path": "28"
    },
    "777": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "778": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "780": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "781": {
      "op": "SWAP1"
    },
    "782": {
      "op": "ISZERO"
    },
    "783": {
      "op": "ISZERO"
    },
    "784": {
      "op": "DUP2"
    },
    "785": {
      "op": "MSTORE"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "788": {
      "op": "ADD"
    },
    "789": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "790": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "792": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "793": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "DUP1",
      "path": "28"
    },
    "794": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "795": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "SUB",
      "path": "28"
    },
    "796": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "797": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "RETURN",
      "path": "28"
    },
    "798": {
      "offset": [
        1337,
        1373
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "799": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        1337,
        1373
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "800": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        1337,
        1373
      ],
      "op": "DUP1",
      "path": "28"
    },
    "801": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        1337,
        1373
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "802": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        1337,
        1373
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x32A"
    },
    "805": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        1337,
        1373
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "806": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        1337,
        1373
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "808": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        1337,
        1373
      ],
      "op": "DUP1",
      "path": "28"
    },
    "809": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        1337,
        1373
      ],
      "op": "REVERT",
      "path": "28"
    },
    "810": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        1337,
        1373
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "811": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        1337,
        1373
      ],
      "op": "POP",
      "path": "28"
    },
    "812": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        1337,
        1373
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x334"
    },
    "815": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        1337,
        1373
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x9"
    },
    "817": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        1337,
        1373
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "818": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        1337,
        1373
      ],
      "op": "DUP2",
      "path": "28"
    },
    "819": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        1337,
        1373
      ],
      "op": "JUMP",
      "path": "28"
    },
    "820": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        1337,
        1373
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "821": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        1337,
        1373
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "823": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        1337,
        1373
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "824": {
      "op": "SWAP1"
    },
    "825": {
      "op": "DUP2"
    },
    "826": {
      "op": "MSTORE"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "829": {
      "op": "ADD"
    },
    "830": {
      "offset": [
        1337,
        1373
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x315"
    },
    "833": {
      "op": "JUMP"
    },
    "834": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "835": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "836": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "DUP1",
      "path": "28"
    },
    "837": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "838": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x34E"
    },
    "841": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "842": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "844": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "DUP1",
      "path": "28"
    },
    "845": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "REVERT",
      "path": "28"
    },
    "846": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "847": {
      "op": "POP"
    },
    "848": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x362"
    },
    "851": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x35D"
    },
    "854": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "855": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "857": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1BCC"
    },
    "860": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "jump": "i",
      "offset": [
        7791,
        8435
      ],
      "op": "JUMP",
      "path": "28"
    },
    "861": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "862": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x73F"
    },
    "865": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "jump": "i",
      "offset": [
        7791,
        8435
      ],
      "op": "JUMP",
      "path": "28"
    },
    "866": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "867": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "STOP",
      "path": "28"
    },
    "868": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3423,
        3528
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "869": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3423,
        3528
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "870": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3423,
        3528
      ],
      "op": "DUP1",
      "path": "28"
    },
    "871": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3423,
        3528
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "872": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3423,
        3528
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x370"
    },
    "875": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3423,
        3528
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "876": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3423,
        3528
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "878": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3423,
        3528
      ],
      "op": "DUP1",
      "path": "28"
    },
    "879": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3423,
        3528
      ],
      "op": "REVERT",
      "path": "28"
    },
    "880": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3423,
        3528
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "881": {
      "op": "POP"
    },
    "882": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3507,
        3521
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 4,
      "value": "0x8"
    },
    "884": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3507,
        3521
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "885": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3423,
        3528
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x334"
    },
    "888": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3423,
        3528
      ],
      "op": "JUMP",
      "path": "28"
    },
    "889": {
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "890": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        1068,
        1114
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "891": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        1068,
        1114
      ],
      "op": "DUP1",
      "path": "28"
    },
    "892": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        1068,
        1114
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "893": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x385"
    },
    "896": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "897": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "899": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        1068,
        1114
      ],
      "op": "DUP1",
      "path": "28"
    },
    "900": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        1068,
        1114
      ],
      "op": "REVERT",
      "path": "28"
    },
    "901": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "902": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        1068,
        1114
      ],
      "op": "POP",
      "path": "28"
    },
    "903": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x334"
    },
    "906": {
      "offset": [
        1109,
        1114
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2710"
    },
    "909": {
      "offset": [
        1068,
        1114
      ],
      "op": "DUP2",
      "path": "28"
    },
    "910": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMP",
      "path": "28"
    },
    "911": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2754,
        3049
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "912": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2754,
        3049
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "913": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2754,
        3049
      ],
      "op": "DUP1",
      "path": "28"
    },
    "914": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2754,
        3049
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "915": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2754,
        3049
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x39B"
    },
    "918": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2754,
        3049
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "919": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2754,
        3049
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "921": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2754,
        3049
      ],
      "op": "DUP1",
      "path": "28"
    },
    "922": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2754,
        3049
      ],
      "op": "REVERT",
      "path": "28"
    },
    "923": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2754,
        3049
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "924": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2754,
        3049
      ],
      "op": "POP",
      "path": "28"
    },
    "925": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2754,
        3049
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x309"
    },
    "928": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2754,
        3049
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x8DE"
    },
    "931": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "jump": "i",
      "offset": [
        2754,
        3049
      ],
      "op": "JUMP",
      "path": "28"
    },
    "932": {
      "offset": [
        1155,
        1181
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "933": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        1155,
        1181
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "934": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        1155,
        1181
      ],
      "op": "DUP1",
      "path": "28"
    },
    "935": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        1155,
        1181
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "936": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        1155,
        1181
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3B0"
    },
    "939": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        1155,
        1181
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "940": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        1155,
        1181
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "942": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        1155,
        1181
      ],
      "op": "DUP1",
      "path": "28"
    },
    "943": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        1155,
        1181
      ],
      "op": "REVERT",
      "path": "28"
    },
    "944": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        1155,
        1181
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "945": {
      "op": "POP"
    },
    "946": {
      "offset": [
        1155,
        1181
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "948": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        1155,
        1181
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "949": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        1155,
        1181
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3C4"
    },
    "952": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        1155,
        1181
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "959": {
      "op": "SHL"
    },
    "960": {
      "op": "SUB"
    },
    "961": {
      "offset": [
        1155,
        1181
      ],
      "op": "AND",
      "path": "28"
    },
    "962": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        1155,
        1181
      ],
      "op": "DUP2",
      "path": "28"
    },
    "963": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        1155,
        1181
      ],
      "op": "JUMP",
      "path": "28"
    },
    "964": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        1155,
        1181
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "965": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        1155,
        1181
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "967": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        1155,
        1181
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "974": {
      "op": "SHL"
    },
    "975": {
      "op": "SUB"
    },
    "976": {
      "op": "SWAP1"
    },
    "977": {
      "op": "SWAP2"
    },
    "978": {
      "op": "AND"
    },
    "979": {
      "op": "DUP2"
    },
    "980": {
      "op": "MSTORE"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "983": {
      "op": "ADD"
    },
    "984": {
      "offset": [
        1155,
        1181
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x315"
    },
    "987": {
      "op": "JUMP"
    },
    "988": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "989": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "CALLVALUE",
      "path": "34"
    },
    "990": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "DUP1",
      "path": "34"
    },
    "991": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "992": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x3E8"
    },
    "995": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "996": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "998": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "DUP1",
      "path": "34"
    },
    "999": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "REVERT",
      "path": "34"
    },
    "1000": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1001": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "POP",
      "path": "34"
    },
    "1002": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x362"
    },
    "1005": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x96C"
    },
    "1008": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1009": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1010": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1011": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1012": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1013": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3FD"
    },
    "1016": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1017": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1019": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1020": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1021": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1022": {
      "op": "POP"
    },
    "1023": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x334"
    },
    "1026": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x40C"
    },
    "1029": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1030": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1032": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1BE5"
    },
    "1035": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "jump": "i",
      "offset": [
        6053,
        6953
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1036": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1037": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9CD"
    },
    "1040": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "jump": "i",
      "offset": [
        6053,
        6953
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1041": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10519,
        11083
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1042": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10519,
        11083
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1043": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10519,
        11083
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1044": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10519,
        11083
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1045": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10519,
        11083
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x41D"
    },
    "1048": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10519,
        11083
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1049": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10519,
        11083
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1051": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10519,
        11083
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1052": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10519,
        11083
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1053": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10519,
        11083
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1054": {
      "op": "POP"
    },
    "1055": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10519,
        11083
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x334"
    },
    "1058": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10519,
        11083
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x42C"
    },
    "1061": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10519,
        11083
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1062": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10519,
        11083
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1064": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10519,
        11083
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1BE5"
    },
    "1067": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "jump": "i",
      "offset": [
        10519,
        11083
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1068": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10519,
        11083
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1069": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10519,
        11083
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA83"
    },
    "1072": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "jump": "i",
      "offset": [
        10519,
        11083
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1073": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8518,
        10448
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1074": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8518,
        10448
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1075": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8518,
        10448
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1076": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8518,
        10448
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1077": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8518,
        10448
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x43D"
    },
    "1080": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8518,
        10448
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1081": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8518,
        10448
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1083": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8518,
        10448
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1084": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8518,
        10448
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1085": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8518,
        10448
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1086": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8518,
        10448
      ],
      "op": "POP",
      "path": "28"
    },
    "1087": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8518,
        10448
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x362"
    },
    "1090": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8518,
        10448
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAF3"
    },
    "1093": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        8518,
        10448
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1094": {
      "offset": [
        1270,
        1302
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1095": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1270,
        1302
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1096": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1270,
        1302
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1097": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1270,
        1302
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1098": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1270,
        1302
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x452"
    },
    "1101": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1270,
        1302
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1102": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1270,
        1302
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1104": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1270,
        1302
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1105": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1270,
        1302
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1106": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1270,
        1302
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1107": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1270,
        1302
      ],
      "op": "POP",
      "path": "28"
    },
    "1108": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1270,
        1302
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x334"
    },
    "1111": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1270,
        1302
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x7"
    },
    "1113": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1270,
        1302
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1114": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1270,
        1302
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1115": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1270,
        1302
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1116": {
      "offset": [
        1380,
        1427
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1117": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1118": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1119": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1120": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x468"
    },
    "1123": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1124": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1126": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1127": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1128": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1129": {
      "op": "POP"
    },
    "1130": {
      "offset": [
        1380,
        1427
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x498"
    },
    "1133": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x477"
    },
    "1136": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1137": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1139": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1BE5"
    },
    "1142": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        1380,
        1427
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1143": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1144": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xA"
    },
    "1146": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1148": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1149": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1151": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1152": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1153": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1154": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1156": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1157": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "1158": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1159": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1160": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "1162": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1163": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "ADD",
      "path": "28"
    },
    "1164": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1165": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "1167": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1168": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1169": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "ADD",
      "path": "28"
    },
    "1170": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1171": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1172": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1173": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1174": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "DUP4",
      "path": "28"
    },
    "1175": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1176": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1177": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1179": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1180": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        1380,
        1427
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1181": {
      "op": "SWAP4"
    },
    "1182": {
      "op": "DUP5"
    },
    "1183": {
      "op": "MSTORE"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1186": {
      "op": "DUP5"
    },
    "1187": {
      "op": "ADD"
    },
    "1188": {
      "op": "SWAP3"
    },
    "1189": {
      "op": "SWAP1"
    },
    "1190": {
      "op": "SWAP3"
    },
    "1191": {
      "op": "MSTORE"
    },
    "1192": {
      "op": "SWAP1"
    },
    "1193": {
      "op": "DUP3"
    },
    "1194": {
      "op": "ADD"
    },
    "1195": {
      "op": "MSTORE"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1198": {
      "op": "ADD"
    },
    "1199": {
      "offset": [
        1380,
        1427
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x315"
    },
    "1202": {
      "op": "JUMP"
    },
    "1203": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1204": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "CALLVALUE",
      "path": "34"
    },
    "1205": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1206": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "1207": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x4BF"
    },
    "1210": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1211": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1213": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1214": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "REVERT",
      "path": "34"
    },
    "1215": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1216": {
      "op": "POP"
    },
    "1217": {
      "fn": "Ownable.owner",
      "offset": [
        757,
        763
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 5,
      "value": "0x2"
    },
    "1219": {
      "fn": "Ownable.owner",
      "offset": [
        757,
        763
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1226": {
      "op": "SHL"
    },
    "1227": {
      "op": "SUB"
    },
    "1228": {
      "fn": "Ownable.owner",
      "offset": [
        757,
        763
      ],
      "op": "AND",
      "path": "34"
    },
    "1229": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x3C4"
    },
    "1232": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1233": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1234": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "CALLVALUE",
      "path": "34"
    },
    "1235": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1236": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "1237": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x4DD"
    },
    "1240": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1241": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1243": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1244": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "REVERT",
      "path": "34"
    },
    "1245": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1246": {
      "op": "POP"
    },
    "1247": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 6,
      "value": "0x2"
    },
    "1249": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1256": {
      "op": "SHL"
    },
    "1257": {
      "op": "SUB"
    },
    "1258": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "AND",
      "path": "34"
    },
    "1259": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "34"
    },
    "1260": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1096
      ],
      "op": "EQ",
      "path": "34"
    },
    "1261": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x309"
    },
    "1264": {
      "fn": "Ownable.isOwner",
      "offset": [
        1013,
        1103
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1265": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5190,
        5971
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1266": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5190,
        5971
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1267": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5190,
        5971
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1268": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5190,
        5971
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1269": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5190,
        5971
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4FD"
    },
    "1272": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5190,
        5971
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1273": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5190,
        5971
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1275": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5190,
        5971
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1276": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5190,
        5971
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1277": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5190,
        5971
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1278": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5190,
        5971
      ],
      "op": "POP",
      "path": "28"
    },
    "1279": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5190,
        5971
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x334"
    },
    "1282": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5190,
        5971
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xE05"
    },
    "1285": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "jump": "i",
      "offset": [
        5190,
        5971
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1286": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1287": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1288": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1289": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1290": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x512"
    },
    "1293": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1294": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1296": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1297": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1298": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1299": {
      "op": "POP"
    },
    "1300": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x362"
    },
    "1303": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x521"
    },
    "1306": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1307": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1309": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C02"
    },
    "1312": {
      "fn": "PoolingStakingContractV2.initialize",
      "jump": "i",
      "offset": [
        1930,
        2444
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1313": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1314": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xE74"
    },
    "1317": {
      "fn": "PoolingStakingContractV2.initialize",
      "jump": "i",
      "offset": [
        1930,
        2444
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1318": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11710,
        11820
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1319": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11710,
        11820
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1320": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11710,
        11820
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1321": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11710,
        11820
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1322": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11710,
        11820
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x532"
    },
    "1325": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11710,
        11820
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1326": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11710,
        11820
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1328": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11710,
        11820
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1329": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11710,
        11820
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1330": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11710,
        11820
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1331": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11710,
        11820
      ],
      "op": "POP",
      "path": "28"
    },
    "1332": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11710,
        11820
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x309"
    },
    "1335": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11710,
        11820
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x69F"
    },
    "1338": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "jump": "i",
      "offset": [
        11710,
        11820
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1339": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3719,
        3965
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1340": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3719,
        3965
      ],
      "op": "CALLVALUE",
      "path": "27"
    },
    "1341": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3719,
        3965
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1342": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3719,
        3965
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "1343": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3719,
        3965
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x547"
    },
    "1346": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3719,
        3965
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1347": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3719,
        3965
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1349": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3719,
        3965
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1350": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3719,
        3965
      ],
      "op": "REVERT",
      "path": "27"
    },
    "1351": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3719,
        3965
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1352": {
      "op": "POP"
    },
    "1353": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3719,
        3965
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x362"
    },
    "1356": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3719,
        3965
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x556"
    },
    "1359": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3719,
        3965
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1360": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3719,
        3965
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1362": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3719,
        3965
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1BE5"
    },
    "1365": {
      "fn": "InitializableStakingContract.initialize",
      "jump": "i",
      "offset": [
        3719,
        3965
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1366": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3719,
        3965
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1367": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3719,
        3965
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1039"
    },
    "1370": {
      "fn": "InitializableStakingContract.initialize",
      "jump": "i",
      "offset": [
        3719,
        3965
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1371": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3111,
        3274
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1372": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3111,
        3274
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1373": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3111,
        3274
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1374": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3111,
        3274
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1375": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3111,
        3274
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x567"
    },
    "1378": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3111,
        3274
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1379": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3111,
        3274
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1381": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3111,
        3274
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1382": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3111,
        3274
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1383": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3111,
        3274
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1384": {
      "op": "POP"
    },
    "1385": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3111,
        3274
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x362"
    },
    "1388": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3111,
        3274
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x576"
    },
    "1391": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3111,
        3274
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1392": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3111,
        3274
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1394": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3111,
        3274
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1BE5"
    },
    "1397": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "jump": "i",
      "offset": [
        3111,
        3274
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1398": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3111,
        3274
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1399": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3111,
        3274
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x11C7"
    },
    "1402": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "jump": "i",
      "offset": [
        3111,
        3274
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1403": {
      "offset": [
        1229,
        1264
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1404": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        1229,
        1264
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1405": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        1229,
        1264
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1406": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        1229,
        1264
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1407": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        1229,
        1264
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x587"
    },
    "1410": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        1229,
        1264
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1411": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        1229,
        1264
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1413": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        1229,
        1264
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1414": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        1229,
        1264
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1415": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        1229,
        1264
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1416": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        1229,
        1264
      ],
      "op": "POP",
      "path": "28"
    },
    "1417": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        1229,
        1264
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x334"
    },
    "1420": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        1229,
        1264
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x6"
    },
    "1422": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        1229,
        1264
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1423": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        1229,
        1264
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1424": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        1229,
        1264
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1425": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3644,
        4110
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1426": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3644,
        4110
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1427": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3644,
        4110
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1428": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3644,
        4110
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1429": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3644,
        4110
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x59D"
    },
    "1432": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3644,
        4110
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1433": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3644,
        4110
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1435": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3644,
        4110
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1436": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3644,
        4110
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1437": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3644,
        4110
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1438": {
      "op": "POP"
    },
    "1439": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3644,
        4110
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x362"
    },
    "1442": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3644,
        4110
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5AC"
    },
    "1445": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3644,
        4110
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1446": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3644,
        4110
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1448": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3644,
        4110
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1BCC"
    },
    "1451": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "jump": "i",
      "offset": [
        3644,
        4110
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1452": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3644,
        4110
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1453": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3644,
        4110
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x122A"
    },
    "1456": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "jump": "i",
      "offset": [
        3644,
        4110
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1457": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        4972,
        5100
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1458": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        4972,
        5100
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1459": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        4972,
        5100
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1460": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        4972,
        5100
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1461": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        4972,
        5100
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5BD"
    },
    "1464": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        4972,
        5100
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1465": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        4972,
        5100
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1467": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        4972,
        5100
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1468": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        4972,
        5100
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1469": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        4972,
        5100
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1470": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        4972,
        5100
      ],
      "op": "POP",
      "path": "28"
    },
    "1471": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        4972,
        5100
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x334"
    },
    "1474": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        4972,
        5100
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x136C"
    },
    "1477": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "jump": "i",
      "offset": [
        4972,
        5100
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1478": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11166,
        11617
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1479": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11166,
        11617
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1480": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11166,
        11617
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1481": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11166,
        11617
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1482": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11166,
        11617
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5D2"
    },
    "1485": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11166,
        11617
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1486": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11166,
        11617
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1488": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11166,
        11617
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1489": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11166,
        11617
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1490": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11166,
        11617
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1491": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11166,
        11617
      ],
      "op": "POP",
      "path": "28"
    },
    "1492": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11166,
        11617
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x362"
    },
    "1495": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11166,
        11617
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1388"
    },
    "1498": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "jump": "i",
      "offset": [
        11166,
        11617
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1499": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4197,
        4819
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1500": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4197,
        4819
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1501": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4197,
        4819
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1502": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4197,
        4819
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1503": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4197,
        4819
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5E7"
    },
    "1506": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4197,
        4819
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1507": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4197,
        4819
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1509": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4197,
        4819
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1510": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4197,
        4819
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1511": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4197,
        4819
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1512": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4197,
        4819
      ],
      "op": "POP",
      "path": "28"
    },
    "1513": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4197,
        4819
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x334"
    },
    "1516": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4197,
        4819
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1472"
    },
    "1519": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "jump": "i",
      "offset": [
        4197,
        4819
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1520": {
      "offset": [
        1121,
        1149
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1521": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        1121,
        1149
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1522": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        1121,
        1149
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1523": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        1121,
        1149
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1524": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        1121,
        1149
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5FC"
    },
    "1527": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        1121,
        1149
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1528": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        1121,
        1149
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1530": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        1121,
        1149
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1531": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        1121,
        1149
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1532": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        1121,
        1149
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1533": {
      "op": "POP"
    },
    "1534": {
      "offset": [
        1121,
        1149
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x3"
    },
    "1536": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        1121,
        1149
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1537": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        1121,
        1149
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3C4"
    },
    "1540": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        1121,
        1149
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1547": {
      "op": "SHL"
    },
    "1548": {
      "op": "SUB"
    },
    "1549": {
      "offset": [
        1121,
        1149
      ],
      "op": "AND",
      "path": "28"
    },
    "1550": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        1121,
        1149
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1551": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        1121,
        1149
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1552": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1553": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "CALLVALUE",
      "path": "34"
    },
    "1554": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1555": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "1556": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x61C"
    },
    "1559": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1560": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1562": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1563": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "REVERT",
      "path": "34"
    },
    "1564": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1565": {
      "op": "POP"
    },
    "1566": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x362"
    },
    "1569": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x62B"
    },
    "1572": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "CALLDATASIZE",
      "path": "34"
    },
    "1573": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x4"
    },
    "1575": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x1BE5"
    },
    "1578": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1579": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1580": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x158A"
    },
    "1583": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1584": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7037,
        7675
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1585": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7037,
        7675
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1586": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7037,
        7675
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1587": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7037,
        7675
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1588": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7037,
        7675
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x63C"
    },
    "1591": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7037,
        7675
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1592": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7037,
        7675
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1594": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7037,
        7675
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1595": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7037,
        7675
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1596": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7037,
        7675
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1597": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7037,
        7675
      ],
      "op": "POP",
      "path": "28"
    },
    "1598": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7037,
        7675
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x362"
    },
    "1601": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7037,
        7675
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x15AD"
    },
    "1604": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "jump": "i",
      "offset": [
        7037,
        7675
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1605": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4039,
        4142
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1606": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4039,
        4142
      ],
      "op": "CALLVALUE",
      "path": "27"
    },
    "1607": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4039,
        4142
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1608": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4039,
        4142
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "1609": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4039,
        4142
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x651"
    },
    "1612": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4039,
        4142
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1613": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4039,
        4142
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1615": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4039,
        4142
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1616": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4039,
        4142
      ],
      "op": "REVERT",
      "path": "27"
    },
    "1617": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4039,
        4142
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1618": {
      "op": "POP"
    },
    "1619": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4087,
        4109
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1621": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4128,
        4135
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1622": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4128,
        4135
      ],
      "op": "PUSH3",
      "path": "27",
      "value": "0x10000"
    },
    "1626": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4128,
        4135
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1627": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4128,
        4135
      ],
      "op": "DIV",
      "path": "27"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1634": {
      "op": "SHL"
    },
    "1635": {
      "op": "SUB"
    },
    "1636": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4128,
        4135
      ],
      "op": "AND",
      "path": "27"
    },
    "1637": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4039,
        4142
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3C4"
    },
    "1640": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        4039,
        4142
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1641": {
      "offset": [
        3616,
        3642
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1642": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        3616,
        3642
      ],
      "op": "CALLVALUE",
      "path": "27"
    },
    "1643": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        3616,
        3642
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1644": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        3616,
        3642
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "1645": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        3616,
        3642
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x675"
    },
    "1648": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        3616,
        3642
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1649": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        3616,
        3642
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1651": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        3616,
        3642
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1652": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        3616,
        3642
      ],
      "op": "REVERT",
      "path": "27"
    },
    "1653": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        3616,
        3642
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1654": {
      "op": "POP"
    },
    "1655": {
      "offset": [
        3616,
        3642
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "1657": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        3616,
        3642
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1658": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        3616,
        3642
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3C4"
    },
    "1661": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        3616,
        3642
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1668": {
      "op": "SHL"
    },
    "1669": {
      "op": "SUB"
    },
    "1670": {
      "offset": [
        3616,
        3642
      ],
      "op": "AND",
      "path": "27"
    },
    "1671": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        3616,
        3642
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1672": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        3616,
        3642
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1673": {
      "offset": [
        1188,
        1223
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1674": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        1188,
        1223
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1675": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        1188,
        1223
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1676": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        1188,
        1223
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1677": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        1188,
        1223
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x695"
    },
    "1680": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        1188,
        1223
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1681": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        1188,
        1223
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1683": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        1188,
        1223
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1684": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        1188,
        1223
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1685": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        1188,
        1223
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1686": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        1188,
        1223
      ],
      "op": "POP",
      "path": "28"
    },
    "1687": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        1188,
        1223
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x334"
    },
    "1690": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        1188,
        1223
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "1692": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        1188,
        1223
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1693": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        1188,
        1223
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1694": {
      "fn": "InitializableStakingContract.router",
      "offset": [
        1188,
        1223
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1695": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11710,
        11820
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1696": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11769,
        11773
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1698": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11806,
        11813
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 7,
      "value": "0x6B3"
    },
    "1701": {
      "fn": "Ownable.owner",
      "offset": [
        757,
        763
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x2"
    },
    "1703": {
      "fn": "Ownable.owner",
      "offset": [
        757,
        763
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1710": {
      "op": "SHL"
    },
    "1711": {
      "op": "SUB"
    },
    "1712": {
      "fn": "Ownable.owner",
      "offset": [
        757,
        763
      ],
      "op": "AND",
      "path": "34"
    },
    "1713": {
      "fn": "Ownable.owner",
      "offset": [
        757,
        763
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1714": {
      "fn": "Ownable.owner",
      "offset": [
        693,
        770
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1715": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11806,
        11813
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1722": {
      "op": "SHL"
    },
    "1723": {
      "op": "SUB"
    },
    "1724": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11792,
        11813
      ],
      "op": "AND",
      "path": "28"
    },
    "1725": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11792,
        11802
      ],
      "op": "CALLER",
      "path": "28"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1732": {
      "op": "SHL"
    },
    "1733": {
      "op": "SUB"
    },
    "1734": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11792,
        11813
      ],
      "op": "AND",
      "path": "28"
    },
    "1735": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11792,
        11813
      ],
      "op": "EQ",
      "path": "28"
    },
    "1736": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11785,
        11813
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1737": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11785,
        11813
      ],
      "op": "POP",
      "path": "28"
    },
    "1738": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "offset": [
        11710,
        11820
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1739": {
      "fn": "PoolingStakingContractV2.isFallbackAllowed",
      "jump": "o",
      "offset": [
        11710,
        11820
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1740": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1741": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2656
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 8,
      "value": "0x3"
    },
    "1743": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2656
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1744": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1746": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1747": {
      "op": "PUSH4",
      "value": "0xBC5B6F3"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1754": {
      "op": "SHL"
    },
    "1755": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1756": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1757": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2678,
        2682
      ],
      "op": "ADDRESS",
      "path": "28"
    },
    "1758": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1760": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1761": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "ADD",
      "path": "28"
    },
    "1762": {
      "op": "MSTORE"
    },
    "1763": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2559,
        2563
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1765": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2559,
        2563
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1772": {
      "op": "SHL"
    },
    "1773": {
      "op": "SUB"
    },
    "1774": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2656
      ],
      "op": "AND",
      "path": "28"
    },
    "1775": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2656
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1776": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2669
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x178B6DE6"
    },
    "1781": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2669
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1784": {
      "op": "ADD"
    },
    "1785": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1787": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1789": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1790": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1791": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "DUP4",
      "path": "28"
    },
    "1792": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "SUB",
      "path": "28"
    },
    "1793": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1794": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "DUP7",
      "path": "28"
    },
    "1795": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "GAS",
      "path": "28"
    },
    "1796": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "STATICCALL",
      "path": "28"
    },
    "1797": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1798": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1799": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1800": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x715"
    },
    "1803": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1804": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "1805": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1807": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1808": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "1809": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "1810": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1812": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1813": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1814": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "POP",
      "path": "28"
    },
    "1815": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "POP",
      "path": "28"
    },
    "1816": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "POP",
      "path": "28"
    },
    "1817": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "POP",
      "path": "28"
    },
    "1818": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1820": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1821": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "1822": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "1824": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "NOT",
      "path": "28"
    },
    "1825": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "1827": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1828": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "ADD",
      "path": "28"
    },
    "1829": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "AND",
      "path": "28"
    },
    "1830": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1831": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "ADD",
      "path": "28"
    },
    "1832": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1833": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1835": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1836": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "POP",
      "path": "28"
    },
    "1837": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1838": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "ADD",
      "path": "28"
    },
    "1839": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1840": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x739"
    },
    "1843": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1844": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1845": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C44"
    },
    "1848": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "jump": "i",
      "offset": [
        2650,
        2684
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1849": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2684
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1850": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2689
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1851": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2650,
        2689
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1852": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "offset": [
        2506,
        2696
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1853": {
      "op": "POP"
    },
    "1854": {
      "fn": "PoolingStakingContractV2.isWithdrawAllAllowed",
      "jump": "o",
      "offset": [
        2506,
        2696
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1855": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1856": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7880
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "1858": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7880
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1859": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1861": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1862": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1869": {
      "op": "SHL"
    },
    "1870": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1871": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1872": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7899,
        7903
      ],
      "op": "ADDRESS",
      "path": "28"
    },
    "1873": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1875": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1876": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "ADD",
      "path": "28"
    },
    "1877": {
      "op": "MSTORE"
    },
    "1878": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7857,
        7872
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1880": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7857,
        7872
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1887": {
      "op": "SHL"
    },
    "1888": {
      "op": "SUB"
    },
    "1889": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7880
      ],
      "op": "AND",
      "path": "28"
    },
    "1890": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7880
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1891": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7890
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x70A08231"
    },
    "1896": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7890
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1899": {
      "op": "ADD"
    },
    "1900": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1902": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1904": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1905": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1906": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "DUP4",
      "path": "28"
    },
    "1907": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "SUB",
      "path": "28"
    },
    "1908": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1909": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "DUP7",
      "path": "28"
    },
    "1910": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "GAS",
      "path": "28"
    },
    "1911": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "STATICCALL",
      "path": "28"
    },
    "1912": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1913": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1914": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1915": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x788"
    },
    "1918": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1919": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "1920": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1922": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1923": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "1924": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "1925": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1927": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1928": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1929": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "POP",
      "path": "28"
    },
    "1930": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "POP",
      "path": "28"
    },
    "1931": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "POP",
      "path": "28"
    },
    "1932": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "POP",
      "path": "28"
    },
    "1933": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1935": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1936": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "1937": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "1939": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "NOT",
      "path": "28"
    },
    "1940": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "1942": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1943": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "ADD",
      "path": "28"
    },
    "1944": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "AND",
      "path": "28"
    },
    "1945": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1946": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "ADD",
      "path": "28"
    },
    "1947": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1948": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1950": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1951": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "POP",
      "path": "28"
    },
    "1952": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1953": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "ADD",
      "path": "28"
    },
    "1954": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1955": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7AC"
    },
    "1958": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1959": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1960": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C44"
    },
    "1963": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "jump": "i",
      "offset": [
        7875,
        7905
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1964": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1965": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7857,
        7905
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1966": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7857,
        7905
      ],
      "op": "POP",
      "path": "28"
    },
    "1967": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7933,
        7940
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 9
    },
    "1968": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7923,
        7929
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1969": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7923,
        7940
      ],
      "op": "GT",
      "path": "28"
    },
    "1970": {
      "branch": 92,
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7923,
        7940
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1971": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7D7"
    },
    "1974": {
      "branch": 92,
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1975": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1977": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1978": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1984": {
      "op": "SHL"
    },
    "1985": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1986": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1987": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1989": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "ADD",
      "path": "28"
    },
    "1990": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7CE"
    },
    "1993": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1994": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C5D"
    },
    "1997": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "jump": "i",
      "offset": [
        7915,
        7978
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1998": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1999": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2001": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2002": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2003": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2004": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "SUB",
      "path": "28"
    },
    "2005": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2006": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "28"
    },
    "2007": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7915,
        7978
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2008": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8030,
        8040
      ],
      "op": "CALLER",
      "path": "28"
    },
    "2009": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7989,
        8016
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2011": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8019,
        8041
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2012": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8019,
        8041
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2013": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8019,
        8041
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2014": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8019,
        8029
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xA"
    },
    "2016": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8019,
        8041
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2018": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8019,
        8041
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2019": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8019,
        8041
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2021": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8019,
        8041
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2022": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8019,
        8041
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "2023": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8019,
        8041
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2024": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8077,
        8116
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7F0"
    },
    "2027": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8077,
        8116
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2028": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8077,
        8104
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9CD"
    },
    "2031": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "jump": "i",
      "offset": [
        8077,
        8116
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2032": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8077,
        8116
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2033": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8051,
        8116
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2034": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8051,
        8116
      ],
      "op": "POP",
      "path": "28"
    },
    "2035": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8146,
        8161
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 10
    },
    "2036": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8136,
        8142
      ],
      "op": "DUP5",
      "path": "28"
    },
    "2037": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8136,
        8161
      ],
      "op": "GT",
      "path": "28"
    },
    "2038": {
      "branch": 93,
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8136,
        8161
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2039": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8127,
        8217
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x85E"
    },
    "2042": {
      "branch": 93,
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8127,
        8217
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2043": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8127,
        8217
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2045": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8127,
        8217
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2046": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2052": {
      "op": "SHL"
    },
    "2053": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8127,
        8217
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2054": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8127,
        8217
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2057": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8127,
        8217
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "2059": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8127,
        8217
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2060": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8127,
        8217
      ],
      "op": "ADD",
      "path": "28"
    },
    "2061": {
      "op": "MSTORE"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x33"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2066": {
      "op": "DUP3"
    },
    "2067": {
      "op": "ADD"
    },
    "2068": {
      "op": "MSTORE"
    },
    "2069": {
      "op": "PUSH32",
      "value": "0x52657175657374656420616D6F756E74206F6620746F6B656E73206578636565"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2104": {
      "op": "DUP3"
    },
    "2105": {
      "op": "ADD"
    },
    "2106": {
      "op": "MSTORE"
    },
    "2107": {
      "op": "PUSH19",
      "value": "0x3232B21030B63637BBB2B2103837B93A34B7B7"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "2129": {
      "op": "SHL"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2132": {
      "op": "DUP3"
    },
    "2133": {
      "op": "ADD"
    },
    "2134": {
      "op": "MSTORE"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2137": {
      "op": "ADD"
    },
    "2138": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8127,
        8217
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7CE"
    },
    "2141": {
      "op": "JUMP"
    },
    "2142": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8127,
        8217
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2143": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8256,
        8262
      ],
      "op": "DUP4",
      "path": "28",
      "statement": 11
    },
    "2144": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8227,
        8236
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2145": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8227,
        8252
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "2147": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8227,
        8252
      ],
      "op": "ADD",
      "path": "28"
    },
    "2148": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8227,
        8252
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2150": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8227,
        8262
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2151": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8227,
        8262
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2152": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8227,
        8262
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2153": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8227,
        8262
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x872"
    },
    "2156": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8227,
        8262
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2157": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8227,
        8262
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2158": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8227,
        8262
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CB4"
    },
    "2161": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "jump": "i",
      "offset": [
        8227,
        8262
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2162": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8227,
        8262
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2163": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8227,
        8262
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2164": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8227,
        8262
      ],
      "op": "POP",
      "path": "28"
    },
    "2165": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8227,
        8262
      ],
      "op": "POP",
      "path": "28"
    },
    "2166": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8227,
        8262
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2167": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8227,
        8262
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2168": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8227,
        8262
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "2169": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8227,
        8262
      ],
      "op": "POP",
      "path": "28"
    },
    "2170": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8296,
        8302
      ],
      "op": "DUP4",
      "path": "28",
      "statement": 12
    },
    "2171": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8272,
        8292
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x6"
    },
    "2173": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8272,
        8292
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2175": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8272,
        8302
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2176": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8272,
        8302
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2177": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8272,
        8302
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2178": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8272,
        8302
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x88B"
    },
    "2181": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8272,
        8302
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2182": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8272,
        8302
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2183": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8272,
        8302
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CB4"
    },
    "2186": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "jump": "i",
      "offset": [
        8272,
        8302
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2187": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8272,
        8302
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2188": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8272,
        8302
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2189": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8272,
        8302
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2190": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8272,
        8302
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "2191": {
      "op": "POP"
    },
    "2192": {
      "op": "POP"
    },
    "2193": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8313,
        8318
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 13,
      "value": "0x1"
    },
    "2195": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8313,
        8318
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2196": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8313,
        8351
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x8A7"
    },
    "2199": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8313,
        8351
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2206": {
      "op": "SHL"
    },
    "2207": {
      "op": "SUB"
    },
    "2208": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8313,
        8318
      ],
      "op": "AND",
      "path": "28"
    },
    "2209": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8332,
        8342
      ],
      "op": "CALLER",
      "path": "28"
    },
    "2210": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8344,
        8350
      ],
      "op": "DUP7",
      "path": "28"
    },
    "2211": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8313,
        8331
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1718"
    },
    "2214": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "jump": "i",
      "offset": [
        8313,
        8351
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2215": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8313,
        8351
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2216": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8402,
        8427
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 14
    },
    "2217": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8402,
        8427
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2218": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8366,
        8428
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2220": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8366,
        8428
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2221": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8382,
        8392
      ],
      "op": "CALLER",
      "path": "28"
    },
    "2222": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8382,
        8392
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2225": {
      "op": "DUP1"
    },
    "2226": {
      "op": "MLOAD"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2229": {
      "op": "PUSH2",
      "value": "0x1E10"
    },
    "2232": {
      "op": "DUP4"
    },
    "2233": {
      "op": "CODECOPY"
    },
    "2234": {
      "op": "DUP2"
    },
    "2235": {
      "op": "MLOAD"
    },
    "2236": {
      "op": "SWAP2"
    },
    "2237": {
      "op": "MSTORE"
    },
    "2238": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8366,
        8428
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2239": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8366,
        8428
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x8D0"
    },
    "2242": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8366,
        8428
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2243": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8394,
        8400
      ],
      "op": "DUP9",
      "path": "28"
    },
    "2244": {
      "op": "DUP3"
    },
    "2245": {
      "op": "MSTORE"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2248": {
      "op": "DUP3"
    },
    "2249": {
      "op": "ADD"
    },
    "2250": {
      "op": "MSTORE"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2253": {
      "op": "ADD"
    },
    "2254": {
      "op": "SWAP1"
    },
    "2255": {
      "op": "JUMP"
    },
    "2256": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8366,
        8428
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2257": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8366,
        8428
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2259": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8366,
        8428
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2260": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8366,
        8428
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2261": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8366,
        8428
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2262": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8366,
        8428
      ],
      "op": "SUB",
      "path": "28"
    },
    "2263": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8366,
        8428
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2264": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        8366,
        8428
      ],
      "op": "LOG2",
      "path": "28"
    },
    "2265": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7847,
        8435
      ],
      "op": "POP",
      "path": "28"
    },
    "2266": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7847,
        8435
      ],
      "op": "POP",
      "path": "28"
    },
    "2267": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7847,
        8435
      ],
      "op": "POP",
      "path": "28"
    },
    "2268": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "offset": [
        7791,
        8435
      ],
      "op": "POP",
      "path": "28"
    },
    "2269": {
      "fn": "PoolingStakingContractV2.withdrawTokens",
      "jump": "o",
      "offset": [
        7791,
        8435
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2270": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2754,
        3049
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2271": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2893
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "2273": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2893
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2274": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2276": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2277": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2284": {
      "op": "SHL"
    },
    "2285": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2286": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2287": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2912,
        2916
      ],
      "op": "ADDRESS",
      "path": "28"
    },
    "2288": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "2290": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2291": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "ADD",
      "path": "28"
    },
    "2292": {
      "op": "MSTORE"
    },
    "2293": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2803,
        2807
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2295": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2803,
        2807
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2296": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2803,
        2807
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2297": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2803,
        2807
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2304": {
      "op": "SHL"
    },
    "2305": {
      "op": "SUB"
    },
    "2306": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2893
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2307": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2893
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2308": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2893
      ],
      "op": "AND",
      "path": "28"
    },
    "2309": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2893
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2310": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2903
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x70A08231"
    },
    "2315": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2903
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2318": {
      "op": "ADD"
    },
    "2319": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2321": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2323": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2324": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2325": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2326": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "SUB",
      "path": "28"
    },
    "2327": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2328": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "DUP7",
      "path": "28"
    },
    "2329": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "GAS",
      "path": "28"
    },
    "2330": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "STATICCALL",
      "path": "28"
    },
    "2331": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2332": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2333": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2334": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x92B"
    },
    "2337": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2338": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "2339": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2341": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2342": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "2343": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "2344": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2346": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "REVERT",
      "path": "28"
    },
    "2347": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2348": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "POP",
      "path": "28"
    },
    "2349": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "POP",
      "path": "28"
    },
    "2350": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "POP",
      "path": "28"
    },
    "2351": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "POP",
      "path": "28"
    },
    "2352": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2354": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2355": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "2356": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "2358": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "NOT",
      "path": "28"
    },
    "2359": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "2361": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2362": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "ADD",
      "path": "28"
    },
    "2363": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "AND",
      "path": "28"
    },
    "2364": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2365": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "ADD",
      "path": "28"
    },
    "2366": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2367": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2369": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2370": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "POP",
      "path": "28"
    },
    "2371": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2372": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "ADD",
      "path": "28"
    },
    "2373": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2374": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x94F"
    },
    "2377": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2378": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2379": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C44"
    },
    "2382": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "jump": "i",
      "offset": [
        2888,
        2918
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2383": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2888,
        2918
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2384": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2867,
        2918
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2385": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2867,
        2918
      ],
      "op": "POP",
      "path": "28"
    },
    "2386": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2982,
        3004
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 15,
      "value": "0x959"
    },
    "2389": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2982,
        3002
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x6CC"
    },
    "2392": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "jump": "i",
      "offset": [
        2982,
        3004
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2393": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2982,
        3004
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2394": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2982,
        3042
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2395": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2982,
        3042
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2396": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2982,
        3042
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x966"
    },
    "2399": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2982,
        3042
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2400": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2982,
        3042
      ],
      "op": "POP",
      "path": "28"
    },
    "2401": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        3022,
        3042
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "2403": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        3022,
        3042
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2404": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        3008,
        3018
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2405": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        3008,
        3042
      ],
      "op": "EQ",
      "path": "28"
    },
    "2406": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2982,
        3042
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2407": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2975,
        3042
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2408": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2975,
        3042
      ],
      "op": "POP",
      "path": "28"
    },
    "2409": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2975,
        3042
      ],
      "op": "POP",
      "path": "28"
    },
    "2410": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "offset": [
        2754,
        3049
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2411": {
      "fn": "PoolingStakingContractV2.isDepositAllowed",
      "jump": "o",
      "offset": [
        2754,
        3049
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2412": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "2413": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x2"
    },
    "2415": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2422": {
      "op": "SHL"
    },
    "2423": {
      "op": "SUB"
    },
    "2424": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "AND",
      "path": "34"
    },
    "2425": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "34"
    },
    "2426": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1096
      ],
      "op": "EQ",
      "path": "34"
    },
    "2427": {
      "offset": [
        889,
        907
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x983"
    },
    "2430": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "2431": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "2433": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "DUP1",
      "path": "34"
    },
    "2434": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "REVERT",
      "path": "34"
    },
    "2435": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "2436": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 16,
      "value": "0x2"
    },
    "2438": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "2439": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "2441": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "2442": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1479,
        1480
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "2444": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1479,
        1480
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2451": {
      "op": "SHL"
    },
    "2452": {
      "op": "SUB"
    },
    "2453": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "AND",
      "path": "34"
    },
    "2454": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1463,
        1469
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "2455": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "PUSH32",
      "path": "34",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2488": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "2489": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1479,
        1480
      ],
      "op": "DUP4",
      "path": "34"
    },
    "2490": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1479,
        1480
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "2491": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1442,
        1482
      ],
      "op": "LOG3",
      "path": "34"
    },
    "2492": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1498
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 17,
      "value": "0x2"
    },
    "2494": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "DUP1",
      "path": "34"
    },
    "2495": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2502": {
      "op": "SHL"
    },
    "2503": {
      "op": "SUB"
    },
    "2504": {
      "op": "NOT"
    },
    "2505": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "AND",
      "path": "34"
    },
    "2506": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "2507": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1492,
        1511
      ],
      "op": "SSTORE",
      "path": "34"
    },
    "2508": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1381,
        1518
      ],
      "op": "JUMP",
      "path": "34"
    },
    "2509": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2510": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6131,
        6138
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2512": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6207,
        6227
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "2514": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6207,
        6227
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2515": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6231,
        6232
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2517": {
      "branch": 94,
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6207,
        6232
      ],
      "op": "EQ",
      "path": "28"
    },
    "2518": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6203,
        6267
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2519": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6203,
        6267
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9E2"
    },
    "2522": {
      "branch": 94,
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6203,
        6267
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2523": {
      "op": "POP"
    },
    "2524": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6255,
        6256
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 18,
      "value": "0x0"
    },
    "2526": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6255,
        6256
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2527": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2528": {
      "op": "POP"
    },
    "2529": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "jump": "o",
      "offset": [
        6053,
        6953
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2530": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6203,
        6267
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2531": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6324,
        6338
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2533": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6341,
        6362
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9EC"
    },
    "2536": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6341,
        6360
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x136C"
    },
    "2539": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "jump": "i",
      "offset": [
        6341,
        6362
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2540": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6341,
        6362
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2547": {
      "op": "SHL"
    },
    "2548": {
      "op": "SUB"
    },
    "2549": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6402,
        6424
      ],
      "op": "DUP5",
      "path": "28"
    },
    "2550": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6402,
        6424
      ],
      "op": "AND",
      "path": "28"
    },
    "2551": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6372,
        6399
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2553": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6402,
        6424
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2554": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6402,
        6424
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2555": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6402,
        6424
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2556": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6402,
        6412
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xA"
    },
    "2558": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6402,
        6424
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2560": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6402,
        6424
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2561": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6402,
        6424
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2563": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6402,
        6424
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2564": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6402,
        6424
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "2565": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6324,
        6362
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2566": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6324,
        6362
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2567": {
      "op": "POP"
    },
    "2568": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6453,
        6472
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA10"
    },
    "2571": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3507,
        3521
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x8"
    },
    "2573": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3507,
        3521
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2574": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3507,
        3521
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2575": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3423,
        3528
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2576": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6453,
        6472
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2577": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6434,
        6472
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2578": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6434,
        6472
      ],
      "op": "POP",
      "path": "28"
    },
    "2579": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6593,
        6619
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2581": {
      "offset": [
        1109,
        1114
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2710"
    },
    "2584": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6702,
        6722
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "2586": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6702,
        6722
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2587": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6702,
        6739
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA24"
    },
    "2590": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6702,
        6739
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2591": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6702,
        6739
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2592": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6702,
        6739
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CCC"
    },
    "2595": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "jump": "i",
      "offset": [
        6702,
        6739
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2596": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6702,
        6739
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2597": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6660,
        6685
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA30"
    },
    "2600": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6677,
        6685
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2601": {
      "offset": [
        1109,
        1114
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2710"
    },
    "2604": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6660,
        6685
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CEB"
    },
    "2607": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "jump": "i",
      "offset": [
        6660,
        6685
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2608": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6660,
        6685
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2609": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6631,
        6656
      ],
      "op": "DUP5",
      "path": "28"
    },
    "2610": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6631,
        6656
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2611": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6622,
        6656
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA3C"
    },
    "2614": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6622,
        6656
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2615": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6622,
        6628
      ],
      "op": "DUP8",
      "path": "28"
    },
    "2616": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6622,
        6656
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CCC"
    },
    "2619": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "jump": "i",
      "offset": [
        6622,
        6656
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2620": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6622,
        6656
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2621": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6622,
        6686
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA46"
    },
    "2624": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6622,
        6686
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2625": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6622,
        6686
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2626": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6622,
        6686
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CCC"
    },
    "2629": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "jump": "i",
      "offset": [
        6622,
        6686
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2630": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6622,
        6686
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2631": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6622,
        6740
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA50"
    },
    "2634": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6622,
        6740
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2635": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6622,
        6740
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2636": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6622,
        6740
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D02"
    },
    "2639": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "jump": "i",
      "offset": [
        6622,
        6740
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2640": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6622,
        6740
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2641": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6593,
        6740
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2642": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6593,
        6740
      ],
      "op": "POP",
      "path": "28"
    },
    "2643": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6824,
        6833
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2644": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6824,
        6849
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "2646": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6824,
        6849
      ],
      "op": "ADD",
      "path": "28"
    },
    "2647": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6824,
        6849
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2648": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6803,
        6821
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2649": {
      "branch": 95,
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6803,
        6849
      ],
      "op": "GT",
      "path": "28"
    },
    "2650": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6799,
        6929
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2651": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6799,
        6929
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA77"
    },
    "2654": {
      "branch": 95,
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6799,
        6929
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2655": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6893,
        6918
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 19,
      "value": "0x1"
    },
    "2657": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6893,
        6918
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2658": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6893,
        6918
      ],
      "op": "ADD",
      "path": "28"
    },
    "2659": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6893,
        6918
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2660": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6872,
        6918
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA6D"
    },
    "2663": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6872,
        6918
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2664": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6872,
        6890
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2665": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6872,
        6918
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CEB"
    },
    "2668": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "jump": "i",
      "offset": [
        6872,
        6918
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2669": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6872,
        6918
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2670": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6865,
        6918
      ],
      "op": "SWAP7",
      "path": "28"
    },
    "2671": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "2672": {
      "op": "POP"
    },
    "2673": {
      "op": "POP"
    },
    "2674": {
      "op": "POP"
    },
    "2675": {
      "op": "POP"
    },
    "2676": {
      "op": "POP"
    },
    "2677": {
      "op": "POP"
    },
    "2678": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "jump": "o",
      "offset": [
        6053,
        6953
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2679": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6799,
        6929
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2680": {
      "op": "POP"
    },
    "2681": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6945,
        6946
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 20,
      "value": "0x0"
    },
    "2683": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6945,
        6946
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "2684": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "offset": [
        6053,
        6953
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "2685": {
      "op": "POP"
    },
    "2686": {
      "op": "POP"
    },
    "2687": {
      "op": "POP"
    },
    "2688": {
      "op": "POP"
    },
    "2689": {
      "op": "POP"
    },
    "2690": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorReward",
      "jump": "o",
      "offset": [
        6053,
        6953
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2691": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10519,
        11083
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2698": {
      "op": "SHL"
    },
    "2699": {
      "op": "SUB"
    },
    "2700": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10643,
        10665
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2701": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10643,
        10665
      ],
      "op": "AND",
      "path": "28"
    },
    "2702": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10594,
        10601
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2704": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10643,
        10665
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2705": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10643,
        10665
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2706": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10643,
        10665
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2707": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10643,
        10653
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xA"
    },
    "2709": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10643,
        10665
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2711": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10643,
        10665
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2712": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10643,
        10665
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2714": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10643,
        10665
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2715": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10643,
        10665
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "2716": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10778,
        10795
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 21,
      "value": "0x7"
    },
    "2718": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10778,
        10795
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2719": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10693,
        10714
      ],
      "op": "SELFBALANCE",
      "path": "28"
    },
    "2720": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10693,
        10714
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2721": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10767,
        10795
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAAA"
    },
    "2724": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10767,
        10795
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2725": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10693,
        10714
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2726": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10767,
        10795
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CB4"
    },
    "2729": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "jump": "i",
      "offset": [
        10767,
        10795
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2730": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10767,
        10795
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2731": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10869,
        10889
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "2733": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10869,
        10889
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2734": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10841,
        10866
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2735": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10841,
        10866
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2736": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10767,
        10795
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2737": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10767,
        10795
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2738": {
      "op": "POP"
    },
    "2739": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10805,
        10828
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2741": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10805,
        10828
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2742": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10831,
        10866
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xABF"
    },
    "2745": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10831,
        10866
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2746": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10767,
        10795
      ],
      "op": "DUP5",
      "path": "28"
    },
    "2747": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10831,
        10866
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CCC"
    },
    "2750": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "jump": "i",
      "offset": [
        10831,
        10866
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2751": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10831,
        10866
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2752": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10831,
        10889
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAC9"
    },
    "2755": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10831,
        10889
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2756": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10831,
        10889
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2757": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10831,
        10889
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D02"
    },
    "2760": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "jump": "i",
      "offset": [
        10831,
        10889
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2761": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10831,
        10889
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2762": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10805,
        10889
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2763": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10805,
        10889
      ],
      "op": "POP",
      "path": "28"
    },
    "2764": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10900,
        10920
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2766": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10941,
        10950
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2767": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10941,
        10963
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "2769": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10941,
        10963
      ],
      "op": "ADD",
      "path": "28"
    },
    "2770": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10941,
        10963
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2771": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10923,
        10938
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2772": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10923,
        10963
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xADD"
    },
    "2775": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10923,
        10963
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2776": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10923,
        10963
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2777": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10923,
        10963
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CEB"
    },
    "2780": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "jump": "i",
      "offset": [
        10923,
        10963
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2781": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10923,
        10963
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2782": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10900,
        10963
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2783": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10900,
        10963
      ],
      "op": "POP",
      "path": "28"
    },
    "2784": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10992,
        10999
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2785": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10977,
        10989
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2786": {
      "branch": 96,
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10977,
        10999
      ],
      "op": "GT",
      "path": "28"
    },
    "2787": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10973,
        11048
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2788": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10973,
        11048
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAEA"
    },
    "2791": {
      "branch": 96,
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10973,
        11048
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2792": {
      "op": "POP"
    },
    "2793": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        11030,
        11037
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 22
    },
    "2794": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10973,
        11048
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2795": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        11064,
        11076
      ],
      "op": "SWAP6",
      "path": "28",
      "statement": 23
    },
    "2796": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "offset": [
        10519,
        11083
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "2797": {
      "op": "POP"
    },
    "2798": {
      "op": "POP"
    },
    "2799": {
      "op": "POP"
    },
    "2800": {
      "op": "POP"
    },
    "2801": {
      "op": "POP"
    },
    "2802": {
      "fn": "PoolingStakingContractV2.getAvailableDelegatorETH",
      "jump": "o",
      "offset": [
        10519,
        11083
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2803": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8518,
        10448
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2804": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8566,
        8588
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 24,
      "value": "0xAFB"
    },
    "2807": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8566,
        8586
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x6CC"
    },
    "2810": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        8566,
        8588
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2811": {
      "branch": 97,
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8566,
        8588
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2812": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8558,
        8636
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xB5B"
    },
    "2815": {
      "branch": 97,
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8558,
        8636
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2816": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8558,
        8636
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2818": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8558,
        8636
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2819": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2825": {
      "op": "SHL"
    },
    "2826": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8558,
        8636
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2827": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8558,
        8636
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2830": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8558,
        8636
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "2832": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8558,
        8636
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2833": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8558,
        8636
      ],
      "op": "ADD",
      "path": "28"
    },
    "2834": {
      "op": "MSTORE"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2839": {
      "op": "DUP3"
    },
    "2840": {
      "op": "ADD"
    },
    "2841": {
      "op": "MSTORE"
    },
    "2842": {
      "op": "PUSH32",
      "value": "0x5769746864726177206465706F73697420616E6420726577617264206D757374"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2877": {
      "op": "DUP3"
    },
    "2878": {
      "op": "ADD"
    },
    "2879": {
      "op": "MSTORE"
    },
    "2880": {
      "op": "PUSH11",
      "value": "0x8189948195B98589B1959"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "2894": {
      "op": "SHL"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2897": {
      "op": "DUP3"
    },
    "2898": {
      "op": "ADD"
    },
    "2899": {
      "op": "MSTORE"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2902": {
      "op": "ADD"
    },
    "2903": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8558,
        8636
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7CE"
    },
    "2906": {
      "op": "JUMP"
    },
    "2907": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8558,
        8636
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2908": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8669
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "2910": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8669
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2911": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2913": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2914": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2921": {
      "op": "SHL"
    },
    "2922": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2923": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2924": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8688,
        8692
      ],
      "op": "ADDRESS",
      "path": "28"
    },
    "2925": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "2927": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2928": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "ADD",
      "path": "28"
    },
    "2929": {
      "op": "MSTORE"
    },
    "2930": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8646,
        8661
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2932": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8646,
        8661
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2939": {
      "op": "SHL"
    },
    "2940": {
      "op": "SUB"
    },
    "2941": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8669
      ],
      "op": "AND",
      "path": "28"
    },
    "2942": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8669
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2943": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8679
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x70A08231"
    },
    "2948": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8679
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2951": {
      "op": "ADD"
    },
    "2952": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2954": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2956": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2957": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2958": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2959": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "SUB",
      "path": "28"
    },
    "2960": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2961": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "DUP7",
      "path": "28"
    },
    "2962": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "GAS",
      "path": "28"
    },
    "2963": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "STATICCALL",
      "path": "28"
    },
    "2964": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2965": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2966": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2967": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xBA4"
    },
    "2970": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2971": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "2972": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2974": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2975": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "2976": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "2977": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2979": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "REVERT",
      "path": "28"
    },
    "2980": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2981": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "POP",
      "path": "28"
    },
    "2982": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "POP",
      "path": "28"
    },
    "2983": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "POP",
      "path": "28"
    },
    "2984": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "POP",
      "path": "28"
    },
    "2985": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2987": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2988": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "2989": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "2991": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "NOT",
      "path": "28"
    },
    "2992": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "2994": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2995": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "ADD",
      "path": "28"
    },
    "2996": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "AND",
      "path": "28"
    },
    "2997": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2998": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "ADD",
      "path": "28"
    },
    "2999": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3000": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3002": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3003": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "POP",
      "path": "28"
    },
    "3004": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3005": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "ADD",
      "path": "28"
    },
    "3006": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3007": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xBC8"
    },
    "3010": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3011": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3012": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C44"
    },
    "3015": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        8664,
        8694
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3016": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8664,
        8694
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3017": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8746,
        8756
      ],
      "op": "CALLER",
      "path": "28"
    },
    "3018": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8705,
        8732
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3020": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8735,
        8757
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3021": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8735,
        8757
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3022": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8735,
        8757
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3023": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8735,
        8745
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xA"
    },
    "3025": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8735,
        8757
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "3027": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8735,
        8757
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3028": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8735,
        8757
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3030": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8735,
        8757
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3031": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8735,
        8757
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "3032": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8646,
        8694
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "3033": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8646,
        8694
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "3034": {
      "op": "POP"
    },
    "3035": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8705,
        8732
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3036": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8793,
        8832
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xBE4"
    },
    "3039": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8793,
        8832
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3040": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8793,
        8820
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9CD"
    },
    "3043": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        8793,
        8832
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3044": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8793,
        8832
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3045": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8876,
        8901
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3046": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8876,
        8901
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3047": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8767,
        8832
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3048": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8767,
        8832
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3049": {
      "op": "POP"
    },
    "3050": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8842,
        8855
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3052": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8842,
        8855
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3053": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8858,
        8901
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xBF6"
    },
    "3056": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8858,
        8901
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3057": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8767,
        8832
      ],
      "op": "DUP4",
      "path": "28"
    },
    "3058": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8858,
        8901
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CB4"
    },
    "3061": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        8858,
        8901
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3062": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8858,
        8901
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3063": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8842,
        8901
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3064": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8842,
        8901
      ],
      "op": "POP",
      "path": "28"
    },
    "3065": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8928,
        8935
      ],
      "op": "DUP4",
      "path": "28",
      "statement": 25
    },
    "3066": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8919,
        8924
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3067": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8919,
        8935
      ],
      "op": "GT",
      "path": "28"
    },
    "3068": {
      "branch": 98,
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8919,
        8935
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3069": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8911,
        8973
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xC18"
    },
    "3072": {
      "branch": 98,
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8911,
        8973
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3073": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8911,
        8973
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3075": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8911,
        8973
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3076": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3082": {
      "op": "SHL"
    },
    "3083": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8911,
        8973
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3084": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8911,
        8973
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3085": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8911,
        8973
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "3087": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8911,
        8973
      ],
      "op": "ADD",
      "path": "28"
    },
    "3088": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8911,
        8973
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7CE"
    },
    "3091": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8911,
        8973
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3092": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8911,
        8973
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C5D"
    },
    "3095": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        8911,
        8973
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3096": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8911,
        8973
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3097": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9102,
        9131
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3099": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9134,
        9160
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xC22"
    },
    "3102": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9134,
        9158
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xE05"
    },
    "3105": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        9134,
        9160
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3106": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9134,
        9160
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3107": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9102,
        9160
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3108": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9102,
        9160
      ],
      "op": "POP",
      "path": "28"
    },
    "3109": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9224,
        9244
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3111": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9247,
        9283
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xC2F"
    },
    "3114": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9272,
        9282
      ],
      "op": "CALLER",
      "path": "28"
    },
    "3115": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9247,
        9271
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA83"
    },
    "3118": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        9247,
        9283
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3119": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9247,
        9283
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3120": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9432,
        9452
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "3122": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9432,
        9452
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3123": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9404,
        9429
      ],
      "op": "DUP7",
      "path": "28"
    },
    "3124": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9404,
        9429
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3125": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9224,
        9283
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3126": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9224,
        9283
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "3127": {
      "op": "POP"
    },
    "3128": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9357,
        9377
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3130": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9357,
        9377
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3131": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9380,
        9429
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xC44"
    },
    "3134": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9380,
        9429
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3135": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9380,
        9401
      ],
      "op": "DUP6",
      "path": "28"
    },
    "3136": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9380,
        9429
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CCC"
    },
    "3139": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        9380,
        9429
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3140": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9380,
        9429
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3141": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9380,
        9452
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xC4E"
    },
    "3144": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9380,
        9452
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3145": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9380,
        9452
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3146": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9380,
        9452
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D02"
    },
    "3149": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        9380,
        9452
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3150": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9380,
        9452
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3151": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9357,
        9452
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3152": {
      "op": "POP"
    },
    "3153": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9466,
        9482
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3154": {
      "branch": 99,
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9466,
        9482
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3155": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9462,
        9709
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xCD3"
    },
    "3158": {
      "branch": 99,
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9462,
        9709
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3159": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9530,
        9537
      ],
      "op": "DUP7",
      "path": "28",
      "statement": 26
    },
    "3160": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9506,
        9526
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xC61"
    },
    "3163": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9514,
        9526
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3164": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9506,
        9511
      ],
      "op": "DUP7",
      "path": "28"
    },
    "3165": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9506,
        9526
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CB4"
    },
    "3168": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        9506,
        9526
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3169": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9506,
        9526
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3170": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9506,
        9537
      ],
      "op": "GT",
      "path": "28"
    },
    "3171": {
      "branch": 100,
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9506,
        9537
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3172": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9498,
        9575
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xC7F"
    },
    "3175": {
      "branch": 100,
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9498,
        9575
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3176": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9498,
        9575
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3178": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9498,
        9575
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3179": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3185": {
      "op": "SHL"
    },
    "3186": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9498,
        9575
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3187": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9498,
        9575
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3188": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9498,
        9575
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "3190": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9498,
        9575
      ],
      "op": "ADD",
      "path": "28"
    },
    "3191": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9498,
        9575
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7CE"
    },
    "3194": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9498,
        9575
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3195": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9498,
        9575
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C5D"
    },
    "3198": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        9498,
        9575
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3199": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9498,
        9575
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3200": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9608,
        9619
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 27,
      "value": "0x4"
    },
    "3202": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9608,
        9619
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3203": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9608,
        9619
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "3205": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9589,
        9594
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3206": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9589,
        9634
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xC9C"
    },
    "3209": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9589,
        9634
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3216": {
      "op": "SHL"
    },
    "3217": {
      "op": "SUB"
    },
    "3218": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9589,
        9594
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3219": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9589,
        9594
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3220": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9589,
        9594
      ],
      "op": "AND",
      "path": "28"
    },
    "3221": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9589,
        9594
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3222": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9608,
        9619
      ],
      "op": "AND",
      "path": "28"
    },
    "3223": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9621,
        9633
      ],
      "op": "DUP4",
      "path": "28"
    },
    "3224": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9589,
        9607
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1718"
    },
    "3227": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        9589,
        9634
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3228": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9589,
        9634
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3229": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9669,
        9680
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 28,
      "value": "0x4"
    },
    "3231": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9669,
        9680
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3232": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9653,
        9698
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3234": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9653,
        9698
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3235": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9653,
        9698
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3236": {
      "op": "DUP4"
    },
    "3237": {
      "op": "DUP2"
    },
    "3238": {
      "op": "MSTORE"
    },
    "3239": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9669,
        9680
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3243": {
      "op": "DUP3"
    },
    "3244": {
      "op": "ADD"
    },
    "3245": {
      "op": "MSTORE"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3252": {
      "op": "SHL"
    },
    "3253": {
      "op": "SUB"
    },
    "3254": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9669,
        9680
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3255": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9669,
        9680
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "3256": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9669,
        9680
      ],
      "op": "AND",
      "path": "28"
    },
    "3257": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9669,
        9680
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3260": {
      "op": "DUP1"
    },
    "3261": {
      "op": "MLOAD"
    },
    "3262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3264": {
      "op": "PUSH2",
      "value": "0x1E10"
    },
    "3267": {
      "op": "DUP4"
    },
    "3268": {
      "op": "CODECOPY"
    },
    "3269": {
      "op": "DUP2"
    },
    "3270": {
      "op": "MLOAD"
    },
    "3271": {
      "op": "SWAP2"
    },
    "3272": {
      "op": "MSTORE"
    },
    "3273": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9653,
        9698
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3274": {
      "op": "ADD"
    },
    "3275": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9653,
        9698
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3277": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9653,
        9698
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3278": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9653,
        9698
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3279": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9653,
        9698
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3280": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9653,
        9698
      ],
      "op": "SUB",
      "path": "28"
    },
    "3281": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9653,
        9698
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3282": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9653,
        9698
      ],
      "op": "LOG2",
      "path": "28"
    },
    "3283": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9462,
        9709
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3284": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9801,
        9821
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "3286": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9801,
        9821
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3287": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9773,
        9798
      ],
      "op": "DUP7",
      "path": "28"
    },
    "3288": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9773,
        9798
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3289": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9749,
        9770
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x9"
    },
    "3291": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9749,
        9770
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3292": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9719,
        9746
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3294": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9719,
        9746
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "3295": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9801,
        9821
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3296": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9749,
        9798
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xCE8"
    },
    "3299": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9749,
        9798
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3300": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9749,
        9798
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CCC"
    },
    "3303": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        9749,
        9798
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3304": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9749,
        9798
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3305": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9749,
        9821
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xCF2"
    },
    "3308": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9749,
        9821
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3309": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9749,
        9821
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3310": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9749,
        9821
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D02"
    },
    "3313": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        9749,
        9821
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3314": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9749,
        9821
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3315": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9719,
        9821
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3316": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9719,
        9821
      ],
      "op": "POP",
      "path": "28"
    },
    "3317": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9857,
        9876
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 29
    },
    "3318": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9832,
        9853
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x9"
    },
    "3320": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9832,
        9853
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3322": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9832,
        9876
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3323": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9832,
        9876
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3324": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9832,
        9876
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3325": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9832,
        9876
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xD06"
    },
    "3328": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9832,
        9876
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3329": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9832,
        9876
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3330": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9832,
        9876
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CEB"
    },
    "3333": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        9832,
        9876
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3334": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9832,
        9876
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3335": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9832,
        9876
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3336": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9832,
        9876
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3337": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9832,
        9876
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "3338": {
      "op": "POP"
    },
    "3339": {
      "op": "POP"
    },
    "3340": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9932,
        9957
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 30,
      "value": "0x1"
    },
    "3342": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9932,
        9957
      ],
      "op": "DUP8",
      "path": "28"
    },
    "3343": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9932,
        9957
      ],
      "op": "ADD",
      "path": "28"
    },
    "3344": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9932,
        9957
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3345": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9910,
        9957
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xD1A"
    },
    "3348": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9910,
        9957
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3349": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9910,
        9929
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3350": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9910,
        9957
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CB4"
    },
    "3353": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        9910,
        9957
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3354": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9910,
        9957
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3355": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9886,
        9906
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x6"
    },
    "3357": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9886,
        9906
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3359": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9886,
        9957
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3360": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9886,
        9957
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3361": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9886,
        9957
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3362": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9886,
        9957
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xD2B"
    },
    "3365": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9886,
        9957
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3366": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9886,
        9957
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3367": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9886,
        9957
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CEB"
    },
    "3370": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        9886,
        9957
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3371": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9886,
        9957
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3372": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9886,
        9957
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3373": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9886,
        9957
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3374": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9886,
        9957
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "3375": {
      "op": "POP"
    },
    "3376": {
      "op": "POP"
    },
    "3377": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9991,
        10016
      ],
      "op": "DUP7",
      "path": "28",
      "statement": 31
    },
    "3378": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9991,
        10016
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3379": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9967,
        9987
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "3381": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9967,
        10016
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3382": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9967,
        10016
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3383": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9991,
        10016
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3385": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9991,
        10016
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3386": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9967,
        10016
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xD44"
    },
    "3389": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9967,
        10016
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3390": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9991,
        10016
      ],
      "op": "DUP5",
      "path": "28"
    },
    "3391": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9991,
        10016
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3392": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9967,
        10016
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CEB"
    },
    "3395": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        9967,
        10016
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3396": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9967,
        10016
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3397": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9967,
        10016
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3398": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9967,
        10016
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3399": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        9967,
        10016
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "3400": {
      "op": "POP"
    },
    "3401": {
      "op": "POP"
    },
    "3402": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10055,
        10056
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 32,
      "value": "0x0"
    },
    "3404": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10027,
        10052
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "3406": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10027,
        10052
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3407": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10027,
        10052
      ],
      "op": "DUP10",
      "path": "28"
    },
    "3408": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10027,
        10052
      ],
      "op": "ADD",
      "path": "28"
    },
    "3409": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10027,
        10056
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3410": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10027,
        10056
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3411": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10027,
        10056
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "3412": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10066,
        10095
      ],
      "op": "SWAP1",
      "path": "28",
      "statement": 33
    },
    "3413": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10066,
        10095
      ],
      "op": "DUP9",
      "path": "28"
    },
    "3414": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10066,
        10095
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "3415": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10106,
        10111
      ],
      "op": "SLOAD",
      "path": "28",
      "statement": 34
    },
    "3416": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10106,
        10143
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xD6B"
    },
    "3419": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10106,
        10143
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3426": {
      "op": "SHL"
    },
    "3427": {
      "op": "SUB"
    },
    "3428": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10106,
        10111
      ],
      "op": "AND",
      "path": "28"
    },
    "3429": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10125,
        10135
      ],
      "op": "CALLER",
      "path": "28"
    },
    "3430": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10137,
        10142
      ],
      "op": "DUP8",
      "path": "28"
    },
    "3431": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10106,
        10124
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1718"
    },
    "3434": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        10106,
        10143
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3435": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10106,
        10143
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3436": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10158,
        10195
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 35,
      "value": "0x40"
    },
    "3438": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10158,
        10195
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3439": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10158,
        10195
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3440": {
      "op": "DUP7"
    },
    "3441": {
      "op": "DUP2"
    },
    "3442": {
      "op": "MSTORE"
    },
    "3443": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10193,
        10194
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3447": {
      "op": "DUP3"
    },
    "3448": {
      "op": "ADD"
    },
    "3449": {
      "op": "MSTORE"
    },
    "3450": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10174,
        10184
      ],
      "op": "CALLER",
      "path": "28"
    },
    "3451": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10174,
        10184
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3454": {
      "op": "DUP1"
    },
    "3455": {
      "op": "MLOAD"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3458": {
      "op": "PUSH2",
      "value": "0x1E10"
    },
    "3461": {
      "op": "DUP4"
    },
    "3462": {
      "op": "CODECOPY"
    },
    "3463": {
      "op": "DUP2"
    },
    "3464": {
      "op": "MLOAD"
    },
    "3465": {
      "op": "SWAP2"
    },
    "3466": {
      "op": "MSTORE"
    },
    "3467": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10158,
        10195
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3468": {
      "op": "ADD"
    },
    "3469": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10158,
        10195
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3471": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10158,
        10195
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3472": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10158,
        10195
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3473": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10158,
        10195
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3474": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10158,
        10195
      ],
      "op": "SUB",
      "path": "28"
    },
    "3475": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10158,
        10195
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3476": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10158,
        10195
      ],
      "op": "LOG2",
      "path": "28"
    },
    "3477": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10227,
        10236
      ],
      "op": "DUP7",
      "path": "28",
      "statement": 36
    },
    "3478": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10227,
        10249
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "3480": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10227,
        10249
      ],
      "op": "ADD",
      "path": "28"
    },
    "3481": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10227,
        10249
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3482": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10206,
        10223
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x7"
    },
    "3484": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10206,
        10223
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3486": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10206,
        10249
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3487": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10206,
        10249
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3488": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10206,
        10249
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3489": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10206,
        10249
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xDAA"
    },
    "3492": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10206,
        10249
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3493": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10206,
        10249
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3494": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10206,
        10249
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CEB"
    },
    "3497": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        10206,
        10249
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3498": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10206,
        10249
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3499": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10206,
        10249
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3500": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10206,
        10249
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3501": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10206,
        10249
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "3502": {
      "op": "POP"
    },
    "3503": {
      "op": "POP"
    },
    "3504": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10284,
        10285
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 37,
      "value": "0x0"
    },
    "3506": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10259,
        10281
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "3508": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10259,
        10281
      ],
      "op": "DUP9",
      "path": "28"
    },
    "3509": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10259,
        10281
      ],
      "op": "ADD",
      "path": "28"
    },
    "3510": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10259,
        10285
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "3511": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10299,
        10315
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3512": {
      "branch": 101,
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10299,
        10315
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3513": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10295,
        10442
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xDFB"
    },
    "3516": {
      "branch": 101,
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10295,
        10442
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3517": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10336,
        10374
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 38,
      "value": "0x40"
    },
    "3519": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10336,
        10374
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3520": {
      "op": "DUP4"
    },
    "3521": {
      "op": "DUP2"
    },
    "3522": {
      "op": "MSTORE"
    },
    "3523": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10349,
        10359
      ],
      "op": "CALLER",
      "path": "28"
    },
    "3524": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10349,
        10359
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3525": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10336,
        10374
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C"
    },
    "3558": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10336,
        10374
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3561": {
      "op": "ADD"
    },
    "3562": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10336,
        10374
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3564": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10336,
        10374
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3565": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10336,
        10374
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3566": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10336,
        10374
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3567": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10336,
        10374
      ],
      "op": "SUB",
      "path": "28"
    },
    "3568": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10336,
        10374
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3569": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10336,
        10374
      ],
      "op": "LOG2",
      "path": "28"
    },
    "3570": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10388,
        10431
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 39,
      "value": "0xDFB"
    },
    "3573": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10396,
        10406
      ],
      "op": "CALLER",
      "path": "28"
    },
    "3574": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10418,
        10430
      ],
      "op": "DUP5",
      "path": "28"
    },
    "3575": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10388,
        10417
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1780"
    },
    "3578": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "i",
      "offset": [
        10388,
        10431
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3579": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        10388,
        10431
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3580": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8548,
        10448
      ],
      "op": "POP",
      "path": "28"
    },
    "3581": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8548,
        10448
      ],
      "op": "POP",
      "path": "28"
    },
    "3582": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8548,
        10448
      ],
      "op": "POP",
      "path": "28"
    },
    "3583": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8548,
        10448
      ],
      "op": "POP",
      "path": "28"
    },
    "3584": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8548,
        10448
      ],
      "op": "POP",
      "path": "28"
    },
    "3585": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8548,
        10448
      ],
      "op": "POP",
      "path": "28"
    },
    "3586": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8548,
        10448
      ],
      "op": "POP",
      "path": "28"
    },
    "3587": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "offset": [
        8548,
        10448
      ],
      "op": "POP",
      "path": "28"
    },
    "3588": {
      "fn": "PoolingStakingContractV2.withdrawAll",
      "jump": "o",
      "offset": [
        8518,
        10448
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3589": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5190,
        5971
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3590": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5247,
        5254
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3592": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5313,
        5327
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3593": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5330,
        5351
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xE10"
    },
    "3596": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5330,
        5349
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x136C"
    },
    "3599": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "jump": "i",
      "offset": [
        5330,
        5351
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3600": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5330,
        5351
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3601": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5313,
        5351
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3602": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5313,
        5351
      ],
      "op": "POP",
      "path": "28"
    },
    "3603": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5435,
        5461
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3605": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5497,
        5517
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "3607": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5497,
        5517
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3608": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5521,
        5522
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3610": {
      "branch": 102,
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5497,
        5522
      ],
      "op": "EQ",
      "path": "28"
    },
    "3611": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5493,
        5767
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xE4A"
    },
    "3614": {
      "branch": 102,
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5493,
        5767
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3615": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5538,
        5554
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3617": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5557,
        5576
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xE29"
    },
    "3620": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3507,
        3521
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x8"
    },
    "3622": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3507,
        3521
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3623": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3507,
        3521
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3624": {
      "fn": "PoolingStakingContractV2.getWorkerFraction",
      "offset": [
        3423,
        3528
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3625": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5557,
        5576
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3626": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5538,
        5576
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3627": {
      "op": "POP"
    },
    "3628": {
      "offset": [
        1109,
        1114
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2710"
    },
    "3631": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5611,
        5628
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 40,
      "value": "0xE38"
    },
    "3634": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5538,
        5576
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3635": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5611,
        5617
      ],
      "op": "DUP6",
      "path": "28"
    },
    "3636": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5611,
        5628
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CCC"
    },
    "3639": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "jump": "i",
      "offset": [
        5611,
        5628
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3640": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5611,
        5628
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3641": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5611,
        5645
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xE42"
    },
    "3644": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5611,
        5645
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3645": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5611,
        5645
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3646": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5611,
        5645
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D02"
    },
    "3649": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "jump": "i",
      "offset": [
        5611,
        5645
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3650": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5611,
        5645
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3651": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5590,
        5645
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3652": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5590,
        5645
      ],
      "op": "POP",
      "path": "28"
    },
    "3653": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5524,
        5709
      ],
      "op": "POP",
      "path": "28"
    },
    "3654": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5493,
        5767
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xE4D"
    },
    "3657": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5493,
        5767
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3658": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5493,
        5767
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3659": {
      "op": "POP"
    },
    "3660": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5750,
        5756
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 41
    },
    "3661": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5493,
        5767
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3662": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5850,
        5871
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x9"
    },
    "3664": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5850,
        5871
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3665": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5829,
        5847
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3666": {
      "branch": 103,
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5829,
        5871
      ],
      "op": "GT",
      "path": "28"
    },
    "3667": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5825,
        5947
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3668": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5825,
        5947
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xE6B"
    },
    "3671": {
      "branch": 103,
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5825,
        5947
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3672": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5915,
        5936
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 42,
      "value": "0x9"
    },
    "3674": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5915,
        5936
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3675": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5894,
        5936
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xE64"
    },
    "3678": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5894,
        5936
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3679": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5894,
        5912
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3680": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5894,
        5936
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CEB"
    },
    "3683": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "jump": "i",
      "offset": [
        5894,
        5936
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3684": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5894,
        5936
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3685": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5887,
        5936
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "3686": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5887,
        5936
      ],
      "op": "POP",
      "path": "28"
    },
    "3687": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5887,
        5936
      ],
      "op": "POP",
      "path": "28"
    },
    "3688": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5887,
        5936
      ],
      "op": "POP",
      "path": "28"
    },
    "3689": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5190,
        5971
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3690": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "jump": "o",
      "offset": [
        5190,
        5971
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3691": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5825,
        5947
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3692": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5963,
        5964
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 43,
      "value": "0x0"
    },
    "3694": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5956,
        5964
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "3695": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5956,
        5964
      ],
      "op": "POP",
      "path": "28"
    },
    "3696": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5956,
        5964
      ],
      "op": "POP",
      "path": "28"
    },
    "3697": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5956,
        5964
      ],
      "op": "POP",
      "path": "28"
    },
    "3698": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "offset": [
        5190,
        5971
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3699": {
      "fn": "PoolingStakingContractV2.getAvailableWorkerReward",
      "jump": "o",
      "offset": [
        5190,
        5971
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3700": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3701": {
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "3703": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "3704": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x100"
    },
    "3707": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3708": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DIV",
      "path": "35"
    },
    "3709": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xFF"
    },
    "3711": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "AND",
      "path": "35"
    },
    "3712": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3713": {
      "offset": [
        2037,
        2067
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xE8D"
    },
    "3716": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "3717": {
      "op": "POP"
    },
    "3718": {
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "3720": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "3721": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xFF"
    },
    "3723": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "AND",
      "path": "35"
    },
    "3724": {
      "offset": [
        2054,
        2067
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "3725": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3726": {
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xEA9"
    },
    "3729": {
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "3730": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "3732": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "3733": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3739": {
      "op": "SHL"
    },
    "3740": {
      "offset": [
        2029,
        2118
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3741": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3742": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "3744": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "ADD",
      "path": "35"
    },
    "3745": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x7CE"
    },
    "3748": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3749": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1D24"
    },
    "3752": {
      "fn": "PoolingStakingContractV2.initialize",
      "jump": "i",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMP",
      "path": "35"
    },
    "3753": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3754": {
      "offset": [
        2129,
        2148
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "3756": {
      "offset": [
        2152,
        2165
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "3757": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x100"
    },
    "3760": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3761": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "DIV",
      "path": "35"
    },
    "3762": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xFF"
    },
    "3764": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "AND",
      "path": "35"
    },
    "3765": {
      "offset": [
        2151,
        2165
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "3766": {
      "offset": [
        2175,
        2273
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3767": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "3768": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xECB"
    },
    "3771": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "3772": {
      "offset": [
        2209,
        2222
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "3774": {
      "offset": [
        2209,
        2229
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3775": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2209,
        2229
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "3776": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "3779": {
      "op": "NOT"
    },
    "3780": {
      "offset": [
        2243,
        2262
      ],
      "op": "AND",
      "path": "35"
    },
    "3781": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x101"
    },
    "3784": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "OR",
      "path": "35"
    },
    "3785": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3786": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SSTORE",
      "path": "35"
    },
    "3787": {
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3794": {
      "op": "SHL"
    },
    "3795": {
      "op": "SUB"
    },
    "3796": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2098,
        2124
      ],
      "op": "DUP3",
      "path": "28",
      "statement": 44
    },
    "3797": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2098,
        2124
      ],
      "op": "AND",
      "path": "28"
    },
    "3798": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2098,
        2124
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3799": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2098,
        2124
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3800": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2098,
        2124
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3801": {
      "branch": 104,
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2098,
        2124
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3802": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2098,
        2161
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xEE5"
    },
    "3805": {
      "branch": 104,
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2098,
        2161
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3806": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2098,
        2161
      ],
      "op": "POP",
      "path": "28"
    },
    "3807": {
      "offset": [
        1109,
        1114
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2710"
    },
    "3810": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2128,
        2143
      ],
      "op": "DUP5",
      "path": "28"
    },
    "3811": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2128,
        2161
      ],
      "op": "GT",
      "path": "28"
    },
    "3812": {
      "branch": 105,
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2128,
        2161
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3813": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2098,
        2161
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3814": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2090,
        2162
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xEEE"
    },
    "3817": {
      "branch": 105,
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2090,
        2162
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3818": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2090,
        2162
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3820": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2090,
        2162
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3821": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2090,
        2162
      ],
      "op": "REVERT",
      "path": "28"
    },
    "3822": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2090,
        2162
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3823": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2172,
        2220
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 45,
      "value": "0xEF7"
    },
    "3826": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2212,
        2219
      ],
      "op": "DUP4",
      "path": "28"
    },
    "3827": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2172,
        2211
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1039"
    },
    "3830": {
      "fn": "PoolingStakingContractV2.initialize",
      "jump": "i",
      "offset": [
        2172,
        2220
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3831": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2172,
        2220
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3832": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2230,
        2260
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 46,
      "value": "0xF00"
    },
    "3835": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2249,
        2259
      ],
      "op": "CALLER",
      "path": "28"
    },
    "3836": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2230,
        2248
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1899"
    },
    "3839": {
      "fn": "PoolingStakingContractV2.initialize",
      "jump": "i",
      "offset": [
        2230,
        2260
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3840": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2230,
        2260
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3841": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2286
      ],
      "op": "DUP3",
      "path": "28",
      "statement": 47
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3848": {
      "op": "SHL"
    },
    "3849": {
      "op": "SUB"
    },
    "3850": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2293
      ],
      "op": "AND",
      "path": "28"
    },
    "3851": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2293
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xD4B83992"
    },
    "3856": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3858": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3859": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3860": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xFFFFFFFF"
    },
    "3865": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "AND",
      "path": "28"
    },
    "3866": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE0"
    },
    "3868": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "SHL",
      "path": "28"
    },
    "3869": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3870": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3871": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "3873": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "ADD",
      "path": "28"
    },
    "3874": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "3876": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3878": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3879": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3880": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "DUP4",
      "path": "28"
    },
    "3881": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "SUB",
      "path": "28"
    },
    "3882": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3883": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "DUP7",
      "path": "28"
    },
    "3884": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "GAS",
      "path": "28"
    },
    "3885": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "STATICCALL",
      "path": "28"
    },
    "3886": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3887": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3888": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3889": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF3E"
    },
    "3892": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3893": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "3894": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3896": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3897": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "3898": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "3899": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3901": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "REVERT",
      "path": "28"
    },
    "3902": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3903": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "POP",
      "path": "28"
    },
    "3904": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "POP",
      "path": "28"
    },
    "3905": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "POP",
      "path": "28"
    },
    "3906": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "POP",
      "path": "28"
    },
    "3907": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3909": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3910": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "3911": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "3913": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "NOT",
      "path": "28"
    },
    "3914": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "3916": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3917": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "ADD",
      "path": "28"
    },
    "3918": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "AND",
      "path": "28"
    },
    "3919": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3920": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "ADD",
      "path": "28"
    },
    "3921": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3922": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3924": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3925": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "POP",
      "path": "28"
    },
    "3926": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3927": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "ADD",
      "path": "28"
    },
    "3928": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3929": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF62"
    },
    "3932": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3933": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3934": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1B9F"
    },
    "3937": {
      "fn": "PoolingStakingContractV2.initialize",
      "jump": "i",
      "offset": [
        2279,
        2295
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3938": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2295
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3945": {
      "op": "SHL"
    },
    "3946": {
      "op": "SUB"
    },
    "3947": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2302
      ],
      "op": "AND",
      "path": "28"
    },
    "3948": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2302
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xE2FDCC17"
    },
    "3953": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3955": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3956": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3957": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xFFFFFFFF"
    },
    "3962": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "AND",
      "path": "28"
    },
    "3963": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE0"
    },
    "3965": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "SHL",
      "path": "28"
    },
    "3966": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3967": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3968": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "3970": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "ADD",
      "path": "28"
    },
    "3971": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "3973": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3975": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3976": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3977": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "DUP4",
      "path": "28"
    },
    "3978": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "SUB",
      "path": "28"
    },
    "3979": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3980": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "DUP7",
      "path": "28"
    },
    "3981": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "GAS",
      "path": "28"
    },
    "3982": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "STATICCALL",
      "path": "28"
    },
    "3983": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3984": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3985": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3986": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF9F"
    },
    "3989": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3990": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "3991": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3993": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3994": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "3995": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "3996": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3998": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "REVERT",
      "path": "28"
    },
    "3999": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4000": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "POP",
      "path": "28"
    },
    "4001": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "POP",
      "path": "28"
    },
    "4002": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "POP",
      "path": "28"
    },
    "4003": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "POP",
      "path": "28"
    },
    "4004": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4006": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4007": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "4008": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "4010": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "NOT",
      "path": "28"
    },
    "4011": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "4013": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4014": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "ADD",
      "path": "28"
    },
    "4015": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "AND",
      "path": "28"
    },
    "4016": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4017": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "ADD",
      "path": "28"
    },
    "4018": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4019": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4021": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4022": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "POP",
      "path": "28"
    },
    "4023": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4024": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "ADD",
      "path": "28"
    },
    "4025": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4026": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xFC3"
    },
    "4029": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4030": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4031": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1B9F"
    },
    "4034": {
      "fn": "PoolingStakingContractV2.initialize",
      "jump": "i",
      "offset": [
        2279,
        2304
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4035": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2279,
        2304
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4036": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2270,
        2276
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x3"
    },
    "4038": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2270,
        2304
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4039": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2270,
        2304
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4046": {
      "op": "SHL"
    },
    "4047": {
      "op": "SUB"
    },
    "4048": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2270,
        2304
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4049": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2270,
        2304
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4050": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2270,
        2304
      ],
      "op": "AND",
      "path": "28"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4057": {
      "op": "SHL"
    },
    "4058": {
      "op": "SUB"
    },
    "4059": {
      "op": "NOT"
    },
    "4060": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2270,
        2304
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4061": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2270,
        2304
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4062": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2270,
        2304
      ],
      "op": "AND",
      "path": "28"
    },
    "4063": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2270,
        2304
      ],
      "op": "OR",
      "path": "28"
    },
    "4064": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2270,
        2304
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4065": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2270,
        2304
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4066": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2270,
        2304
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4067": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2314,
        2328
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 48,
      "value": "0x8"
    },
    "4069": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2314,
        2346
      ],
      "op": "DUP7",
      "path": "28"
    },
    "4070": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2314,
        2346
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4071": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2314,
        2346
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4072": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2356,
        2367
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 49,
      "value": "0x4"
    },
    "4074": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2356,
        2382
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4075": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2356,
        2382
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4076": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2356,
        2382
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4077": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2356,
        2382
      ],
      "op": "DUP6",
      "path": "28"
    },
    "4078": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2356,
        2382
      ],
      "op": "AND",
      "path": "28"
    },
    "4079": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2356,
        2382
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4080": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2356,
        2382
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4081": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2356,
        2382
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4082": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2356,
        2382
      ],
      "op": "AND",
      "path": "28"
    },
    "4083": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2356,
        2382
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4084": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2356,
        2382
      ],
      "op": "OR",
      "path": "28"
    },
    "4085": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2356,
        2382
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4086": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2356,
        2382
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4087": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2397,
        2437
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 50,
      "value": "0x40"
    },
    "4089": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2397,
        2437
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4090": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2412,
        2422
      ],
      "op": "CALLER",
      "path": "28"
    },
    "4091": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2412,
        2422
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4092": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2397,
        2437
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x8E69C3A0200AC71EB0D842C26986BAAA25A28AABFEE91D144725DF5B3190F4CB"
    },
    "4125": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2397,
        2437
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4126": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2270,
        2276
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4128": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2270,
        2276
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4129": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2397,
        2437
      ],
      "op": "LOG3",
      "path": "28"
    },
    "4130": {
      "offset": [
        2299,
        2313
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4131": {
      "offset": [
        2295,
        2361
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "4132": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1033"
    },
    "4135": {
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "4136": {
      "offset": [
        2345,
        2350
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4138": {
      "offset": [
        2329,
        2350
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4139": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "4140": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "4143": {
      "op": "NOT"
    },
    "4144": {
      "offset": [
        2329,
        2350
      ],
      "op": "AND",
      "path": "35"
    },
    "4145": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4146": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SSTORE",
      "path": "35"
    },
    "4147": {
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4148": {
      "offset": [
        2019,
        2367
      ],
      "op": "POP",
      "path": "35"
    },
    "4149": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "POP",
      "path": "28"
    },
    "4150": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "POP",
      "path": "28"
    },
    "4151": {
      "fn": "PoolingStakingContractV2.initialize",
      "offset": [
        1930,
        2444
      ],
      "op": "POP",
      "path": "28"
    },
    "4152": {
      "fn": "PoolingStakingContractV2.initialize",
      "jump": "o",
      "offset": [
        1930,
        2444
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4153": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3719,
        3965
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4154": {
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4156": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "4157": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x100"
    },
    "4160": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4161": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DIV",
      "path": "35"
    },
    "4162": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xFF"
    },
    "4164": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "AND",
      "path": "35"
    },
    "4165": {
      "branch": 118,
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2037,
        2050
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4166": {
      "offset": [
        2037,
        2067
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1052"
    },
    "4169": {
      "branch": 118,
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "4170": {
      "op": "POP"
    },
    "4171": {
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4173": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "4174": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xFF"
    },
    "4176": {
      "branch": 119,
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2055,
        2067
      ],
      "op": "AND",
      "path": "35"
    },
    "4177": {
      "offset": [
        2054,
        2067
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "4178": {
      "offset": [
        2037,
        2067
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4179": {
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x106E"
    },
    "4182": {
      "branch": 119,
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "4183": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4185": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4186": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4192": {
      "op": "SHL"
    },
    "4193": {
      "offset": [
        2029,
        2118
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4194": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4195": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "4197": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "ADD",
      "path": "35"
    },
    "4198": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x7CE"
    },
    "4201": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4202": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1D24"
    },
    "4205": {
      "fn": "InitializableStakingContract.initialize",
      "jump": "i",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMP",
      "path": "35"
    },
    "4206": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2029,
        2118
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4207": {
      "offset": [
        2129,
        2148
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4209": {
      "offset": [
        2152,
        2165
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "4210": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x100"
    },
    "4213": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4214": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "DIV",
      "path": "35"
    },
    "4215": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xFF"
    },
    "4217": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2152,
        2165
      ],
      "op": "AND",
      "path": "35"
    },
    "4218": {
      "offset": [
        2151,
        2165
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "4219": {
      "offset": [
        2175,
        2273
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4220": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "4221": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1090"
    },
    "4224": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "4225": {
      "offset": [
        2209,
        2222
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4227": {
      "offset": [
        2209,
        2229
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4228": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2209,
        2229
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "4229": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4232": {
      "op": "NOT"
    },
    "4233": {
      "offset": [
        2243,
        2262
      ],
      "op": "AND",
      "path": "35"
    },
    "4234": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x101"
    },
    "4237": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "OR",
      "path": "35"
    },
    "4238": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4239": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2243,
        2262
      ],
      "op": "SSTORE",
      "path": "35"
    },
    "4240": {
      "offset": [
        2175,
        2273
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4241": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3810,
        3817
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 51
    },
    "4242": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3800,
        3807
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4244": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3800,
        3807
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "4246": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100"
    },
    "4249": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3800,
        3817
      ],
      "op": "EXP",
      "path": "27"
    },
    "4250": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4251": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3800,
        3817
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4252": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4259": {
      "op": "SHL"
    },
    "4260": {
      "op": "SUB"
    },
    "4261": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3800,
        3817
      ],
      "op": "MUL",
      "path": "27"
    },
    "4262": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3800,
        3817
      ],
      "op": "NOT",
      "path": "27"
    },
    "4263": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3800,
        3817
      ],
      "op": "AND",
      "path": "27"
    },
    "4264": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4265": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4272": {
      "op": "SHL"
    },
    "4273": {
      "op": "SUB"
    },
    "4274": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3800,
        3817
      ],
      "op": "AND",
      "path": "27"
    },
    "4275": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3800,
        3817
      ],
      "op": "MUL",
      "path": "27"
    },
    "4276": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3800,
        3817
      ],
      "op": "OR",
      "path": "27"
    },
    "4277": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4278": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3800,
        3817
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "4279": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3800,
        3817
      ],
      "op": "POP",
      "path": "27"
    },
    "4280": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3827,
        3851
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4282": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3861
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4289": {
      "op": "SHL"
    },
    "4290": {
      "op": "SUB"
    },
    "4291": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3868
      ],
      "op": "AND",
      "path": "27"
    },
    "4292": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3868
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xD4B83992"
    },
    "4297": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4299": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4300": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4301": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xFFFFFFFF"
    },
    "4306": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "AND",
      "path": "27"
    },
    "4307": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xE0"
    },
    "4309": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "SHL",
      "path": "27"
    },
    "4310": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4311": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4312": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "4314": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "ADD",
      "path": "27"
    },
    "4315": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4317": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4319": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4320": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4321": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4322": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "SUB",
      "path": "27"
    },
    "4323": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4324": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "DUP7",
      "path": "27"
    },
    "4325": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "GAS",
      "path": "27"
    },
    "4326": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "4327": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "4328": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4329": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "4330": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10F7"
    },
    "4333": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4334": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "4335": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4337": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4338": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "4339": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "4340": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4342": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "REVERT",
      "path": "27"
    },
    "4343": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4344": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "POP",
      "path": "27"
    },
    "4345": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "POP",
      "path": "27"
    },
    "4346": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "POP",
      "path": "27"
    },
    "4347": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "POP",
      "path": "27"
    },
    "4348": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4350": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4351": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "4352": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "4354": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "NOT",
      "path": "27"
    },
    "4355": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "4357": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4358": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "ADD",
      "path": "27"
    },
    "4359": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "AND",
      "path": "27"
    },
    "4360": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4361": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "ADD",
      "path": "27"
    },
    "4362": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4363": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4365": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4366": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "POP",
      "path": "27"
    },
    "4367": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4368": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "ADD",
      "path": "27"
    },
    "4369": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4370": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x111B"
    },
    "4373": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4374": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4375": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B9F"
    },
    "4378": {
      "fn": "InitializableStakingContract.initialize",
      "jump": "i",
      "offset": [
        3854,
        3870
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4379": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3870
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4386": {
      "op": "SHL"
    },
    "4387": {
      "op": "SUB"
    },
    "4388": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3876
      ],
      "op": "AND",
      "path": "27"
    },
    "4389": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3876
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xFC0C546A"
    },
    "4394": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4396": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4397": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4398": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xFFFFFFFF"
    },
    "4403": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "AND",
      "path": "27"
    },
    "4404": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xE0"
    },
    "4406": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "SHL",
      "path": "27"
    },
    "4407": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4408": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4409": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "4411": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "ADD",
      "path": "27"
    },
    "4412": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4414": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4416": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4417": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4418": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4419": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "SUB",
      "path": "27"
    },
    "4420": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4421": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "DUP7",
      "path": "27"
    },
    "4422": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "GAS",
      "path": "27"
    },
    "4423": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "STATICCALL",
      "path": "27"
    },
    "4424": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "4425": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4426": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "4427": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1158"
    },
    "4430": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4431": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "4432": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4434": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4435": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "4436": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "4437": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4439": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "REVERT",
      "path": "27"
    },
    "4440": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4441": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "POP",
      "path": "27"
    },
    "4442": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "POP",
      "path": "27"
    },
    "4443": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "POP",
      "path": "27"
    },
    "4444": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "POP",
      "path": "27"
    },
    "4445": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4447": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4448": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "4449": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "4451": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "NOT",
      "path": "27"
    },
    "4452": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "4454": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4455": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "ADD",
      "path": "27"
    },
    "4456": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "AND",
      "path": "27"
    },
    "4457": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4458": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "ADD",
      "path": "27"
    },
    "4459": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4460": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4462": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4463": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "POP",
      "path": "27"
    },
    "4464": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4465": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "ADD",
      "path": "27"
    },
    "4466": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4467": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x117C"
    },
    "4470": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4471": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4472": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B9F"
    },
    "4475": {
      "fn": "InitializableStakingContract.initialize",
      "jump": "i",
      "offset": [
        3854,
        3878
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4476": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3854,
        3878
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4477": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3827,
        3878
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4478": {
      "op": "POP"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4483": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4485": {
      "op": "SHL"
    },
    "4486": {
      "op": "SUB"
    },
    "4487": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3896,
        3929
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 52
    },
    "4488": {
      "branch": 122,
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3896,
        3929
      ],
      "op": "AND",
      "path": "27"
    },
    "4489": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3888,
        3930
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1191"
    },
    "4492": {
      "branch": 122,
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3888,
        3930
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4493": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3888,
        3930
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4495": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3888,
        3930
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4496": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3888,
        3930
      ],
      "op": "REVERT",
      "path": "27"
    },
    "4497": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3888,
        3930
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4498": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3940,
        3945
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 53,
      "value": "0x1"
    },
    "4500": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3940,
        3958
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4501": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3940,
        3958
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4508": {
      "op": "SHL"
    },
    "4509": {
      "op": "SUB"
    },
    "4510": {
      "op": "NOT"
    },
    "4511": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3940,
        3958
      ],
      "op": "AND",
      "path": "27"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4518": {
      "op": "SHL"
    },
    "4519": {
      "op": "SUB"
    },
    "4520": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3940,
        3958
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "4521": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3940,
        3958
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4522": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3940,
        3958
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "4523": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3940,
        3958
      ],
      "op": "AND",
      "path": "27"
    },
    "4524": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3940,
        3958
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4525": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3940,
        3958
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4526": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3940,
        3958
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4527": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3940,
        3958
      ],
      "op": "OR",
      "path": "27"
    },
    "4528": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3940,
        3958
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4529": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3940,
        3958
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "4530": {
      "offset": [
        2295,
        2361
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4531": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "4532": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x11C3"
    },
    "4535": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "4536": {
      "offset": [
        2345,
        2350
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4538": {
      "offset": [
        2329,
        2350
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4539": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "4540": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "4543": {
      "op": "NOT"
    },
    "4544": {
      "offset": [
        2329,
        2350
      ],
      "op": "AND",
      "path": "35"
    },
    "4545": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4546": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        2329,
        2350
      ],
      "op": "SSTORE",
      "path": "35"
    },
    "4547": {
      "offset": [
        2295,
        2361
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4548": {
      "offset": [
        2019,
        2367
      ],
      "op": "POP",
      "path": "35"
    },
    "4549": {
      "fn": "InitializableStakingContract.initialize",
      "offset": [
        3719,
        3965
      ],
      "op": "POP",
      "path": "27"
    },
    "4550": {
      "fn": "InitializableStakingContract.initialize",
      "jump": "o",
      "offset": [
        3719,
        3965
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4551": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3111,
        3274
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4552": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x2"
    },
    "4554": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4561": {
      "op": "SHL"
    },
    "4562": {
      "op": "SUB"
    },
    "4563": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "AND",
      "path": "34"
    },
    "4564": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "34"
    },
    "4565": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1096
      ],
      "op": "EQ",
      "path": "34"
    },
    "4566": {
      "offset": [
        889,
        907
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x11DE"
    },
    "4569": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "4570": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "4572": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "DUP1",
      "path": "34"
    },
    "4573": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "REVERT",
      "path": "34"
    },
    "4574": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "4575": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3186,
        3197
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 54,
      "value": "0x4"
    },
    "4577": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3186,
        3212
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4578": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3186,
        3212
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4585": {
      "op": "SHL"
    },
    "4586": {
      "op": "SUB"
    },
    "4587": {
      "op": "NOT"
    },
    "4588": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3186,
        3212
      ],
      "op": "AND",
      "path": "28"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4595": {
      "op": "SHL"
    },
    "4596": {
      "op": "SUB"
    },
    "4597": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3186,
        3212
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4598": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3186,
        3212
      ],
      "op": "AND",
      "path": "28"
    },
    "4599": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3186,
        3212
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4600": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3186,
        3212
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4601": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3186,
        3212
      ],
      "op": "OR",
      "path": "28"
    },
    "4602": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3186,
        3212
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4603": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3186,
        3212
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4604": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3186,
        3212
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4605": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3227,
        3267
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 55,
      "value": "0x40"
    },
    "4607": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3227,
        3267
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4608": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3242,
        3252
      ],
      "op": "CALLER",
      "path": "28"
    },
    "4609": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3242,
        3252
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4610": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3227,
        3267
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x8E69C3A0200AC71EB0D842C26986BAAA25A28AABFEE91D144725DF5B3190F4CB"
    },
    "4643": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3227,
        3267
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4646": {
      "op": "SWAP1"
    },
    "4647": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3227,
        3267
      ],
      "op": "LOG3",
      "path": "28"
    },
    "4648": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "offset": [
        3111,
        3274
      ],
      "op": "POP",
      "path": "28"
    },
    "4649": {
      "fn": "PoolingStakingContractV2.setWorkerOwner",
      "jump": "o",
      "offset": [
        3111,
        3274
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4650": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3644,
        4110
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4651": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3710,
        3728
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 56,
      "value": "0x1232"
    },
    "4654": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3710,
        3726
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x8DE"
    },
    "4657": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "jump": "i",
      "offset": [
        3710,
        3728
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4658": {
      "branch": 106,
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3710,
        3728
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4659": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3702,
        3756
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x127E"
    },
    "4662": {
      "branch": 106,
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3702,
        3756
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4663": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3702,
        3756
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4665": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3702,
        3756
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4666": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4672": {
      "op": "SHL"
    },
    "4673": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3702,
        3756
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4674": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3702,
        3756
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4677": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3702,
        3756
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "4679": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3702,
        3756
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4680": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3702,
        3756
      ],
      "op": "ADD",
      "path": "28"
    },
    "4681": {
      "op": "MSTORE"
    },
    "4682": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "4684": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4686": {
      "op": "DUP3"
    },
    "4687": {
      "op": "ADD"
    },
    "4688": {
      "op": "MSTORE"
    },
    "4689": {
      "op": "PUSH32",
      "value": "0x4465706F736974206D75737420626520656E61626C6564000000000000000000"
    },
    "4722": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4724": {
      "op": "DUP3"
    },
    "4725": {
      "op": "ADD"
    },
    "4726": {
      "op": "MSTORE"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4729": {
      "op": "ADD"
    },
    "4730": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3702,
        3756
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7CE"
    },
    "4733": {
      "op": "JUMP"
    },
    "4734": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3702,
        3756
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4735": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3783,
        3784
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 57,
      "value": "0x0"
    },
    "4737": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3774,
        3780
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4738": {
      "branch": 107,
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3774,
        3784
      ],
      "op": "GT",
      "path": "28"
    },
    "4739": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3766,
        3812
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x12CE"
    },
    "4742": {
      "branch": 107,
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3766,
        3812
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4743": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3766,
        3812
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4745": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3766,
        3812
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4746": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4752": {
      "op": "SHL"
    },
    "4753": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3766,
        3812
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4754": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3766,
        3812
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4757": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3766,
        3812
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "4759": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3766,
        3812
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4760": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3766,
        3812
      ],
      "op": "ADD",
      "path": "28"
    },
    "4761": {
      "op": "MSTORE"
    },
    "4762": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "4764": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4766": {
      "op": "DUP3"
    },
    "4767": {
      "op": "ADD"
    },
    "4768": {
      "op": "MSTORE"
    },
    "4769": {
      "op": "PUSH32",
      "value": "0x56616C7565206D757374206265206E6F7420656D707479000000000000000000"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4804": {
      "op": "DUP3"
    },
    "4805": {
      "op": "ADD"
    },
    "4806": {
      "op": "MSTORE"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4809": {
      "op": "ADD"
    },
    "4810": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3766,
        3812
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7CE"
    },
    "4813": {
      "op": "JUMP"
    },
    "4814": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3766,
        3812
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4815": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3846,
        3852
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 58
    },
    "4816": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3822,
        3842
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "4818": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3822,
        3842
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4820": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3822,
        3852
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4821": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3822,
        3852
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4822": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3822,
        3852
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4823": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3822,
        3852
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x12E0"
    },
    "4826": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3822,
        3852
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4827": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3822,
        3852
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4828": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3822,
        3852
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CB4"
    },
    "4831": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "jump": "i",
      "offset": [
        3822,
        3852
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4832": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3822,
        3852
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4833": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3822,
        3852
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4834": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3822,
        3852
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4835": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3822,
        3852
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4836": {
      "op": "POP"
    },
    "4837": {
      "op": "POP"
    },
    "4838": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3903,
        3913
      ],
      "op": "CALLER",
      "path": "28"
    },
    "4839": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3862,
        3889
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4841": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3892,
        3914
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4842": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3892,
        3914
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4843": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3892,
        3914
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4844": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3892,
        3902
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xA"
    },
    "4846": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3892,
        3914
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "4848": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3892,
        3914
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4849": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3892,
        3914
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4851": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3892,
        3914
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4852": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3892,
        3914
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "4853": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3924,
        3959
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 59
    },
    "4854": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3924,
        3959
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4855": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3892,
        3914
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4856": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3892,
        3914
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4857": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3953,
        3959
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4858": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3953,
        3959
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4859": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3892,
        3914
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4860": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3892,
        3914
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4861": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3862,
        3889
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4862": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3924,
        3959
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1308"
    },
    "4865": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3924,
        3959
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4866": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3953,
        3959
      ],
      "op": "DUP5",
      "path": "28"
    },
    "4867": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3953,
        3959
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4868": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3924,
        3959
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CB4"
    },
    "4871": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "jump": "i",
      "offset": [
        3924,
        3959
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4872": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3924,
        3959
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4873": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3924,
        3959
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4874": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3924,
        3959
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4875": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3924,
        3959
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4876": {
      "op": "POP"
    },
    "4877": {
      "op": "POP"
    },
    "4878": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3969,
        3974
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 60,
      "value": "0x1"
    },
    "4880": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3969,
        3974
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4881": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3969,
        4026
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1325"
    },
    "4884": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3969,
        4026
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4891": {
      "op": "SHL"
    },
    "4892": {
      "op": "SUB"
    },
    "4893": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3969,
        3974
      ],
      "op": "AND",
      "path": "28"
    },
    "4894": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3992,
        4002
      ],
      "op": "CALLER",
      "path": "28"
    },
    "4895": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4012,
        4016
      ],
      "op": "ADDRESS",
      "path": "28"
    },
    "4896": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4019,
        4025
      ],
      "op": "DUP6",
      "path": "28"
    },
    "4897": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3969,
        3991
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1908"
    },
    "4900": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "jump": "i",
      "offset": [
        3969,
        4026
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4901": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3969,
        4026
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4902": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4077,
        4102
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 61
    },
    "4903": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4077,
        4102
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4904": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4041,
        4103
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4906": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4041,
        4103
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4907": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4057,
        4067
      ],
      "op": "CALLER",
      "path": "28"
    },
    "4908": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4057,
        4067
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4909": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4041,
        4103
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0xFDFDCF596161B0E81E3161597D46888DCC88BD83B22DCFB341C76377CA3BBC9E"
    },
    "4942": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4041,
        4103
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4943": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4041,
        4103
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1360"
    },
    "4946": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4041,
        4103
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4947": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4069,
        4075
      ],
      "op": "DUP7",
      "path": "28"
    },
    "4948": {
      "op": "DUP3"
    },
    "4949": {
      "op": "MSTORE"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4952": {
      "op": "DUP3"
    },
    "4953": {
      "op": "ADD"
    },
    "4954": {
      "op": "MSTORE"
    },
    "4955": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4957": {
      "op": "ADD"
    },
    "4958": {
      "op": "SWAP1"
    },
    "4959": {
      "op": "JUMP"
    },
    "4960": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4041,
        4103
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4961": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4041,
        4103
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4963": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4041,
        4103
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4964": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4041,
        4103
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4965": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4041,
        4103
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4966": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4041,
        4103
      ],
      "op": "SUB",
      "path": "28"
    },
    "4967": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4041,
        4103
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4968": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        4041,
        4103
      ],
      "op": "LOG2",
      "path": "28"
    },
    "4969": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3692,
        4110
      ],
      "op": "POP",
      "path": "28"
    },
    "4970": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "offset": [
        3644,
        4110
      ],
      "op": "POP",
      "path": "28"
    },
    "4971": {
      "fn": "PoolingStakingContractV2.depositTokens",
      "jump": "o",
      "offset": [
        3644,
        4110
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4972": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        4972,
        5100
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4973": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        5024,
        5031
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4975": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        5073,
        5093
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 62,
      "value": "0x6"
    },
    "4977": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        5073,
        5093
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4978": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        5050,
        5070
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1379"
    },
    "4981": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        5050,
        5068
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1472"
    },
    "4984": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "jump": "i",
      "offset": [
        5050,
        5070
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4985": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        5050,
        5070
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4986": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        5050,
        5093
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1383"
    },
    "4989": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        5050,
        5093
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4990": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        5050,
        5093
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4991": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        5050,
        5093
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CB4"
    },
    "4994": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "jump": "i",
      "offset": [
        5050,
        5093
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4995": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        5050,
        5093
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4996": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        5043,
        5093
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4997": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        5043,
        5093
      ],
      "op": "POP",
      "path": "28"
    },
    "4998": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "offset": [
        4972,
        5100
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4999": {
      "fn": "PoolingStakingContractV2.getCumulativeReward",
      "jump": "o",
      "offset": [
        4972,
        5100
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5000": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11166,
        11617
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5001": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11256,
        11266
      ],
      "op": "CALLER",
      "path": "28"
    },
    "5002": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11215,
        11242
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5004": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11245,
        11267
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5005": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11245,
        11267
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5006": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11245,
        11267
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5007": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11245,
        11255
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xA"
    },
    "5009": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11245,
        11267
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "5011": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11245,
        11267
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5012": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11245,
        11267
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5014": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11245,
        11267
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5015": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11245,
        11267
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "5016": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11245,
        11267
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5017": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11300,
        11336
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x13A1"
    },
    "5020": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11300,
        11336
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5021": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11300,
        11324
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA83"
    },
    "5024": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "jump": "i",
      "offset": [
        11300,
        11336
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5025": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11300,
        11336
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5026": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11277,
        11336
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5027": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11277,
        11336
      ],
      "op": "POP",
      "path": "28"
    },
    "5028": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11369,
        11370
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 63,
      "value": "0x0"
    },
    "5030": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11354,
        11366
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5031": {
      "branch": 108,
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11354,
        11370
      ],
      "op": "GT",
      "path": "28"
    },
    "5032": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11346,
        11412
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1401"
    },
    "5035": {
      "branch": 108,
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11346,
        11412
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5036": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11346,
        11412
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5038": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11346,
        11412
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5039": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5043": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5045": {
      "op": "SHL"
    },
    "5046": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11346,
        11412
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5047": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11346,
        11412
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5050": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11346,
        11412
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "5052": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11346,
        11412
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5053": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11346,
        11412
      ],
      "op": "ADD",
      "path": "28"
    },
    "5054": {
      "op": "MSTORE"
    },
    "5055": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5059": {
      "op": "DUP3"
    },
    "5060": {
      "op": "ADD"
    },
    "5061": {
      "op": "MSTORE"
    },
    "5062": {
      "op": "PUSH32",
      "value": "0x5468657265206973206E6F20617661696C61626C652045544820746F20776974"
    },
    "5095": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5097": {
      "op": "DUP3"
    },
    "5098": {
      "op": "ADD"
    },
    "5099": {
      "op": "MSTORE"
    },
    "5100": {
      "op": "PUSH5",
      "value": "0x6864726177"
    },
    "5106": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5108": {
      "op": "SHL"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5111": {
      "op": "DUP3"
    },
    "5112": {
      "op": "ADD"
    },
    "5113": {
      "op": "MSTORE"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5116": {
      "op": "ADD"
    },
    "5117": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11346,
        11412
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7CE"
    },
    "5120": {
      "op": "JUMP"
    },
    "5121": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11346,
        11412
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5122": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11448,
        11460
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 64
    },
    "5123": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11422,
        11431
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5124": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11422,
        11444
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "5126": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11422,
        11444
      ],
      "op": "ADD",
      "path": "28"
    },
    "5127": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11422,
        11444
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5129": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11422,
        11460
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5130": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11422,
        11460
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5131": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11422,
        11460
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5132": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11422,
        11460
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1415"
    },
    "5135": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11422,
        11460
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5136": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11422,
        11460
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5137": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11422,
        11460
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CB4"
    },
    "5140": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "jump": "i",
      "offset": [
        11422,
        11460
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5141": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11422,
        11460
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5142": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11422,
        11460
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "5143": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11422,
        11460
      ],
      "op": "POP",
      "path": "28"
    },
    "5144": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11422,
        11460
      ],
      "op": "POP",
      "path": "28"
    },
    "5145": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11422,
        11460
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5146": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11422,
        11460
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5147": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11422,
        11460
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "5148": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11422,
        11460
      ],
      "op": "POP",
      "path": "28"
    },
    "5149": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11492,
        11504
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 65
    },
    "5150": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11471,
        11488
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x7"
    },
    "5152": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11471,
        11488
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5154": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11471,
        11504
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5155": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11471,
        11504
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5156": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11471,
        11504
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5157": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11471,
        11504
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x142E"
    },
    "5160": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11471,
        11504
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5161": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11471,
        11504
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5162": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11471,
        11504
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CB4"
    },
    "5165": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "jump": "i",
      "offset": [
        11471,
        11504
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5166": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11471,
        11504
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5167": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11471,
        11504
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5168": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11471,
        11504
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5169": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11471,
        11504
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "5170": {
      "op": "POP"
    },
    "5171": {
      "op": "POP"
    },
    "5172": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11519,
        11557
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 66,
      "value": "0x40"
    },
    "5174": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11519,
        11557
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5175": {
      "op": "DUP2"
    },
    "5176": {
      "op": "DUP2"
    },
    "5177": {
      "op": "MSTORE"
    },
    "5178": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11532,
        11542
      ],
      "op": "CALLER",
      "path": "28"
    },
    "5179": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11532,
        11542
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5180": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11519,
        11557
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C"
    },
    "5213": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11519,
        11557
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5216": {
      "op": "ADD"
    },
    "5217": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11519,
        11557
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5219": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11519,
        11557
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5220": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11519,
        11557
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5221": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11519,
        11557
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5222": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11519,
        11557
      ],
      "op": "SUB",
      "path": "28"
    },
    "5223": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11519,
        11557
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5224": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11519,
        11557
      ],
      "op": "LOG2",
      "path": "28"
    },
    "5225": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11567,
        11610
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 67,
      "value": "0x11C3"
    },
    "5228": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11575,
        11585
      ],
      "op": "CALLER",
      "path": "28"
    },
    "5229": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11597,
        11609
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5230": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "offset": [
        11567,
        11596
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1780"
    },
    "5233": {
      "fn": "PoolingStakingContractV2.withdrawETH",
      "jump": "i",
      "offset": [
        11567,
        11610
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5234": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4197,
        4819
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5235": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4379
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x3"
    },
    "5237": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4379
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5238": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5240": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5241": {
      "op": "PUSH4",
      "value": "0xBC5B6F3"
    },
    "5246": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5248": {
      "op": "SHL"
    },
    "5249": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5250": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5251": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4401,
        4405
      ],
      "op": "ADDRESS",
      "path": "28"
    },
    "5252": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "5254": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5255": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "ADD",
      "path": "28"
    },
    "5256": {
      "op": "MSTORE"
    },
    "5257": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4248,
        4255
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5259": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4248,
        4255
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5260": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4248,
        4255
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5261": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4248,
        4255
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5268": {
      "op": "SHL"
    },
    "5269": {
      "op": "SUB"
    },
    "5270": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4379
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5271": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4379
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5272": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4379
      ],
      "op": "AND",
      "path": "28"
    },
    "5273": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4379
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5274": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4392
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x178B6DE6"
    },
    "5279": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4392
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5282": {
      "op": "ADD"
    },
    "5283": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "5285": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5287": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5288": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5289": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "DUP4",
      "path": "28"
    },
    "5290": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "SUB",
      "path": "28"
    },
    "5291": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5292": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "DUP7",
      "path": "28"
    },
    "5293": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "GAS",
      "path": "28"
    },
    "5294": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "STATICCALL",
      "path": "28"
    },
    "5295": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5296": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5297": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5298": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x14BF"
    },
    "5301": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5302": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "5303": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5305": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5306": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "5307": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "5308": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5310": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "REVERT",
      "path": "28"
    },
    "5311": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5312": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "POP",
      "path": "28"
    },
    "5313": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "POP",
      "path": "28"
    },
    "5314": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "POP",
      "path": "28"
    },
    "5315": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "POP",
      "path": "28"
    },
    "5316": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5318": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5319": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "5320": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "5322": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "NOT",
      "path": "28"
    },
    "5323": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "5325": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5326": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "ADD",
      "path": "28"
    },
    "5327": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "AND",
      "path": "28"
    },
    "5328": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5329": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "ADD",
      "path": "28"
    },
    "5330": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5331": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5333": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5334": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "POP",
      "path": "28"
    },
    "5335": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5336": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "ADD",
      "path": "28"
    },
    "5337": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5338": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x14E3"
    },
    "5341": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5342": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5343": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C44"
    },
    "5346": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "jump": "i",
      "offset": [
        4373,
        4407
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5347": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4373,
        4407
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5348": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4491
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "5350": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4491
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5351": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5353": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5354": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5359": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5361": {
      "op": "SHL"
    },
    "5362": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5363": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5364": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4510,
        4514
      ],
      "op": "ADDRESS",
      "path": "28"
    },
    "5365": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "5367": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5368": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "ADD",
      "path": "28"
    },
    "5369": {
      "op": "MSTORE"
    },
    "5370": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4350,
        4407
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5371": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4350,
        4407
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "5372": {
      "op": "POP"
    },
    "5373": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4465,
        4483
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5375": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4465,
        4483
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5382": {
      "op": "SHL"
    },
    "5383": {
      "op": "SUB"
    },
    "5384": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4491
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5385": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4491
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5386": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4491
      ],
      "op": "AND",
      "path": "28"
    },
    "5387": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4491
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5388": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4501
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x70A08231"
    },
    "5393": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4501
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5394": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5396": {
      "op": "ADD"
    },
    "5397": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "5399": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5401": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5402": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5403": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "DUP4",
      "path": "28"
    },
    "5404": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "SUB",
      "path": "28"
    },
    "5405": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5406": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "DUP7",
      "path": "28"
    },
    "5407": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "GAS",
      "path": "28"
    },
    "5408": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "STATICCALL",
      "path": "28"
    },
    "5409": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5410": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5411": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5412": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1531"
    },
    "5415": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5416": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "5417": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5419": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5420": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "5421": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "5422": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5424": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "REVERT",
      "path": "28"
    },
    "5425": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5426": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "POP",
      "path": "28"
    },
    "5427": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "POP",
      "path": "28"
    },
    "5428": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "POP",
      "path": "28"
    },
    "5429": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "POP",
      "path": "28"
    },
    "5430": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5432": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5433": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "5434": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "5436": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "NOT",
      "path": "28"
    },
    "5437": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "5439": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5440": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "ADD",
      "path": "28"
    },
    "5441": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "AND",
      "path": "28"
    },
    "5442": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5443": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "ADD",
      "path": "28"
    },
    "5444": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5445": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5447": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5448": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "POP",
      "path": "28"
    },
    "5449": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5450": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "ADD",
      "path": "28"
    },
    "5451": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5452": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1555"
    },
    "5455": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5456": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5457": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C44"
    },
    "5460": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "jump": "i",
      "offset": [
        4486,
        4516
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5461": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4486,
        4516
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5462": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4465,
        4516
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5463": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4465,
        4516
      ],
      "op": "POP",
      "path": "28"
    },
    "5464": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4581,
        4595
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5466": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4626,
        4646
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x5"
    },
    "5468": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4626,
        4646
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5469": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4613,
        4623
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5470": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4598,
        4610
      ],
      "op": "DUP5",
      "path": "28"
    },
    "5471": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4598,
        4623
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1568"
    },
    "5474": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4598,
        4623
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5475": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4598,
        4623
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5476": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4598,
        4623
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CB4"
    },
    "5479": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "jump": "i",
      "offset": [
        4598,
        4623
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5480": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4598,
        4623
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5481": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4598,
        4646
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1572"
    },
    "5484": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4598,
        4646
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5485": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4598,
        4646
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5486": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4598,
        4646
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CEB"
    },
    "5489": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "jump": "i",
      "offset": [
        4598,
        4646
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5490": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4598,
        4646
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5491": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4581,
        4646
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5492": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4581,
        4646
      ],
      "op": "POP",
      "path": "28"
    },
    "5493": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4736,
        4746
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5494": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4727,
        4733
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5495": {
      "branch": 109,
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4727,
        4746
      ],
      "op": "GT",
      "path": "28"
    },
    "5496": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4723,
        4790
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5497": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4723,
        4790
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1583"
    },
    "5500": {
      "branch": 109,
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4723,
        4790
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5501": {
      "op": "POP"
    },
    "5502": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4769,
        4779
      ],
      "op": "SWAP3",
      "path": "28",
      "statement": 68
    },
    "5503": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4197,
        4819
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5504": {
      "op": "POP"
    },
    "5505": {
      "op": "POP"
    },
    "5506": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "jump": "o",
      "offset": [
        4197,
        4819
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5507": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4723,
        4790
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5508": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4806,
        4812
      ],
      "op": "SWAP4",
      "path": "28",
      "statement": 69
    },
    "5509": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "offset": [
        4197,
        4819
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "5510": {
      "op": "POP"
    },
    "5511": {
      "op": "POP"
    },
    "5512": {
      "op": "POP"
    },
    "5513": {
      "fn": "PoolingStakingContractV2.getAvailableReward",
      "jump": "o",
      "offset": [
        4197,
        4819
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5514": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "5515": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x2"
    },
    "5517": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "5518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5524": {
      "op": "SHL"
    },
    "5525": {
      "op": "SUB"
    },
    "5526": {
      "fn": "Ownable.isOwner",
      "offset": [
        1090,
        1096
      ],
      "op": "AND",
      "path": "34"
    },
    "5527": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "34"
    },
    "5528": {
      "fn": "Ownable.isOwner",
      "offset": [
        1076,
        1096
      ],
      "op": "EQ",
      "path": "34"
    },
    "5529": {
      "offset": [
        889,
        907
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x15A1"
    },
    "5532": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "5533": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "5535": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "DUP1",
      "path": "34"
    },
    "5536": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "REVERT",
      "path": "34"
    },
    "5537": {
      "fn": "Ownable.isOwner",
      "offset": [
        889,
        907
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "5538": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1769,
        1797
      ],
      "op": "PUSH2",
      "path": "34",
      "statement": 70,
      "value": "0x15AA"
    },
    "5541": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1788,
        1796
      ],
      "op": "DUP2",
      "path": "34"
    },
    "5542": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1769,
        1787
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x1899"
    },
    "5545": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1769,
        1797
      ],
      "op": "JUMP",
      "path": "34"
    },
    "5546": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1769,
        1797
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "5547": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1689,
        1804
      ],
      "op": "POP",
      "path": "34"
    },
    "5548": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1689,
        1804
      ],
      "op": "JUMP",
      "path": "34"
    },
    "5549": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7037,
        7675
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5550": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7110,
        7121
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 71,
      "value": "0x4"
    },
    "5552": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7110,
        7121
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5559": {
      "op": "SHL"
    },
    "5560": {
      "op": "SUB"
    },
    "5561": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7110,
        7121
      ],
      "op": "AND",
      "path": "28"
    },
    "5562": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7096,
        7106
      ],
      "op": "CALLER",
      "path": "28"
    },
    "5563": {
      "branch": 110,
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7096,
        7121
      ],
      "op": "EQ",
      "path": "28"
    },
    "5564": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7088,
        7122
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x15C4"
    },
    "5567": {
      "branch": 110,
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7088,
        7122
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5568": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7088,
        7122
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5570": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7088,
        7122
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5571": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7088,
        7122
      ],
      "op": "REVERT",
      "path": "28"
    },
    "5572": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7088,
        7122
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5573": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7155
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "5575": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7155
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5576": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5578": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5579": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5584": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5586": {
      "op": "SHL"
    },
    "5587": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5588": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5589": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7174,
        7178
      ],
      "op": "ADDRESS",
      "path": "28"
    },
    "5590": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "5592": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5593": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "ADD",
      "path": "28"
    },
    "5594": {
      "op": "MSTORE"
    },
    "5595": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7132,
        7147
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5597": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7132,
        7147
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5604": {
      "op": "SHL"
    },
    "5605": {
      "op": "SUB"
    },
    "5606": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7155
      ],
      "op": "AND",
      "path": "28"
    },
    "5607": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7155
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5608": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7165
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x70A08231"
    },
    "5613": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7165
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5614": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5616": {
      "op": "ADD"
    },
    "5617": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "5619": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5621": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5622": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5623": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "DUP4",
      "path": "28"
    },
    "5624": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "SUB",
      "path": "28"
    },
    "5625": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5626": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "DUP7",
      "path": "28"
    },
    "5627": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "GAS",
      "path": "28"
    },
    "5628": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "STATICCALL",
      "path": "28"
    },
    "5629": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5630": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5631": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5632": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x160D"
    },
    "5635": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5636": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "5637": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5639": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5640": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "5641": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "5642": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5644": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "REVERT",
      "path": "28"
    },
    "5645": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5646": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "POP",
      "path": "28"
    },
    "5647": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "POP",
      "path": "28"
    },
    "5648": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "POP",
      "path": "28"
    },
    "5649": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "POP",
      "path": "28"
    },
    "5650": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5652": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5653": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "5654": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "5656": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "NOT",
      "path": "28"
    },
    "5657": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "5659": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5660": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "ADD",
      "path": "28"
    },
    "5661": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "AND",
      "path": "28"
    },
    "5662": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5663": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "ADD",
      "path": "28"
    },
    "5664": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5665": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5667": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5668": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "POP",
      "path": "28"
    },
    "5669": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5670": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "ADD",
      "path": "28"
    },
    "5671": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5672": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1631"
    },
    "5675": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5676": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5677": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C44"
    },
    "5680": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "jump": "i",
      "offset": [
        7150,
        7180
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5681": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7150,
        7180
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5682": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7132,
        7180
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5683": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7132,
        7180
      ],
      "op": "POP",
      "path": "28"
    },
    "5684": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7190,
        7213
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5686": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7216,
        7242
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x163D"
    },
    "5689": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7216,
        7240
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xE05"
    },
    "5692": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "jump": "i",
      "offset": [
        7216,
        7242
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5693": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7216,
        7242
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5694": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7190,
        7242
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5695": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7190,
        7242
      ],
      "op": "POP",
      "path": "28"
    },
    "5696": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7275,
        7282
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5697": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7257,
        7272
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5698": {
      "branch": 111,
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7257,
        7282
      ],
      "op": "GT",
      "path": "28"
    },
    "5699": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7253,
        7334
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5700": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7253,
        7334
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x164A"
    },
    "5703": {
      "branch": 111,
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7253,
        7334
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5704": {
      "op": "POP"
    },
    "5705": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7316,
        7323
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 72
    },
    "5706": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7253,
        7334
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5707": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7382,
        7383
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 73,
      "value": "0x0"
    },
    "5709": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7364,
        7379
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5710": {
      "branch": 112,
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7364,
        7383
      ],
      "op": "GT",
      "path": "28"
    },
    "5711": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7343,
        7449
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x16AB"
    },
    "5714": {
      "branch": 112,
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7343,
        7449
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5715": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7343,
        7449
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5717": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7343,
        7449
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5718": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5722": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5724": {
      "op": "SHL"
    },
    "5725": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7343,
        7449
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5726": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7343,
        7449
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5729": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7343,
        7449
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "5731": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7343,
        7449
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5732": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7343,
        7449
      ],
      "op": "ADD",
      "path": "28"
    },
    "5733": {
      "op": "MSTORE"
    },
    "5734": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "5736": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5738": {
      "op": "DUP3"
    },
    "5739": {
      "op": "ADD"
    },
    "5740": {
      "op": "MSTORE"
    },
    "5741": {
      "op": "PUSH32",
      "value": "0x5468657265206973206E6F20617661696C61626C652072657761726420746F20"
    },
    "5774": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5776": {
      "op": "DUP3"
    },
    "5777": {
      "op": "ADD"
    },
    "5778": {
      "op": "MSTORE"
    },
    "5779": {
      "op": "PUSH8",
      "value": "0x7769746864726177"
    },
    "5788": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5790": {
      "op": "SHL"
    },
    "5791": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5793": {
      "op": "DUP3"
    },
    "5794": {
      "op": "ADD"
    },
    "5795": {
      "op": "MSTORE"
    },
    "5796": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5798": {
      "op": "ADD"
    },
    "5799": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7343,
        7449
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7CE"
    },
    "5802": {
      "op": "JUMP"
    },
    "5803": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7343,
        7449
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5804": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7484,
        7499
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 74
    },
    "5805": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7459,
        7480
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x9"
    },
    "5807": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7459,
        7480
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5809": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7459,
        7499
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5810": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7459,
        7499
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5811": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7459,
        7499
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5812": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7459,
        7499
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x16BD"
    },
    "5815": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7459,
        7499
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5816": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7459,
        7499
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5817": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7459,
        7499
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CB4"
    },
    "5820": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "jump": "i",
      "offset": [
        7459,
        7499
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5821": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7459,
        7499
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5822": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7459,
        7499
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "5823": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7459,
        7499
      ],
      "op": "POP",
      "path": "28"
    },
    "5824": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7459,
        7499
      ],
      "op": "POP",
      "path": "28"
    },
    "5825": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7459,
        7499
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5826": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7459,
        7499
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5827": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7459,
        7499
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "5828": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7459,
        7499
      ],
      "op": "POP",
      "path": "28"
    },
    "5829": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7533,
        7548
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 75
    },
    "5830": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7509,
        7529
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x6"
    },
    "5832": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7509,
        7529
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5834": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7509,
        7548
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5835": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7509,
        7548
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5836": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7509,
        7548
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5837": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7509,
        7548
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x16D6"
    },
    "5840": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7509,
        7548
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5841": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7509,
        7548
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5842": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7509,
        7548
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CB4"
    },
    "5845": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "jump": "i",
      "offset": [
        7509,
        7548
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5846": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7509,
        7548
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5847": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7509,
        7548
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5848": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7509,
        7548
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5849": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7509,
        7548
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "5850": {
      "op": "POP"
    },
    "5851": {
      "op": "POP"
    },
    "5852": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7559,
        7564
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 76,
      "value": "0x1"
    },
    "5854": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7559,
        7564
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5855": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7559,
        7606
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x16F2"
    },
    "5858": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7559,
        7606
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5865": {
      "op": "SHL"
    },
    "5866": {
      "op": "SUB"
    },
    "5867": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7559,
        7564
      ],
      "op": "AND",
      "path": "28"
    },
    "5868": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7578,
        7588
      ],
      "op": "CALLER",
      "path": "28"
    },
    "5869": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7590,
        7605
      ],
      "op": "DUP4",
      "path": "28"
    },
    "5870": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7559,
        7577
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1718"
    },
    "5873": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "jump": "i",
      "offset": [
        7559,
        7606
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5874": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7559,
        7606
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5875": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7621,
        7668
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 77,
      "value": "0x40"
    },
    "5877": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7621,
        7668
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5878": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7621,
        7668
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5879": {
      "op": "DUP3"
    },
    "5880": {
      "op": "DUP2"
    },
    "5881": {
      "op": "MSTORE"
    },
    "5882": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7666,
        7667
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5886": {
      "op": "DUP3"
    },
    "5887": {
      "op": "ADD"
    },
    "5888": {
      "op": "MSTORE"
    },
    "5889": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7637,
        7647
      ],
      "op": "CALLER",
      "path": "28"
    },
    "5890": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7637,
        7647
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5893": {
      "op": "DUP1"
    },
    "5894": {
      "op": "MLOAD"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5897": {
      "op": "PUSH2",
      "value": "0x1E10"
    },
    "5900": {
      "op": "DUP4"
    },
    "5901": {
      "op": "CODECOPY"
    },
    "5902": {
      "op": "DUP2"
    },
    "5903": {
      "op": "MLOAD"
    },
    "5904": {
      "op": "SWAP2"
    },
    "5905": {
      "op": "MSTORE"
    },
    "5906": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7621,
        7668
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5907": {
      "op": "ADD"
    },
    "5908": {
      "fn": "PoolingStakingContractV2.withdrawWorkerReward",
      "offset": [
        7621,
        7668
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1360"
    },
    "5911": {
      "op": "JUMP"
    },
    "5912": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        697,
        902
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5913": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 78,
      "value": "0x40"
    },
    "5915": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "5916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5922": {
      "op": "SHL"
    },
    "5923": {
      "op": "SUB"
    },
    "5924": {
      "op": "DUP4"
    },
    "5925": {
      "op": "AND"
    },
    "5926": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x24"
    },
    "5928": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "DUP3",
      "path": "39"
    },
    "5929": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "ADD",
      "path": "39"
    },
    "5930": {
      "op": "MSTORE"
    },
    "5931": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5933": {
      "op": "DUP2"
    },
    "5934": {
      "op": "ADD"
    },
    "5935": {
      "op": "DUP3"
    },
    "5936": {
      "op": "SWAP1"
    },
    "5937": {
      "op": "MSTORE"
    },
    "5938": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        809,
        895
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x177B"
    },
    "5941": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        809,
        895
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5942": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        829,
        834
      ],
      "op": "DUP5",
      "path": "39"
    },
    "5943": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        829,
        834
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5944": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "5949": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5951": {
      "op": "SHL"
    },
    "5952": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        859,
        882
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5953": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5955": {
      "op": "ADD"
    },
    "5956": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5957": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "5959": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "DUP1",
      "path": "39"
    },
    "5960": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "5961": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5963": {
      "op": "NOT"
    },
    "5964": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "DUP2",
      "path": "39"
    },
    "5965": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "DUP5",
      "path": "39"
    },
    "5966": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "SUB",
      "path": "39"
    },
    "5967": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "ADD",
      "path": "39"
    },
    "5968": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "DUP2",
      "path": "39"
    },
    "5969": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "5970": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "5971": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5972": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "5973": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "5975": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "DUP2",
      "path": "39"
    },
    "5976": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "ADD",
      "path": "39"
    },
    "5977": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "DUP1",
      "path": "39"
    },
    "5978": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "5979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5983": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5985": {
      "op": "SHL"
    },
    "5986": {
      "op": "SUB"
    },
    "5987": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "AND",
      "path": "39"
    },
    "5988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5992": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5994": {
      "op": "SHL"
    },
    "5995": {
      "op": "SUB"
    },
    "5996": {
      "op": "NOT"
    },
    "5997": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5998": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "SWAP4",
      "path": "39"
    },
    "5999": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "AND",
      "path": "39"
    },
    "6000": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "6001": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "6002": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "6003": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "OR",
      "path": "39"
    },
    "6004": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "6005": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "6006": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        894
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "6007": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        809,
        828
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1940"
    },
    "6010": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        809,
        895
      ],
      "op": "JUMP",
      "path": "39"
    },
    "6011": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        809,
        895
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "6012": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        697,
        902
      ],
      "op": "POP",
      "path": "39"
    },
    "6013": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        697,
        902
      ],
      "op": "POP",
      "path": "39"
    },
    "6014": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        697,
        902
      ],
      "op": "POP",
      "path": "39"
    },
    "6015": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        697,
        902
      ],
      "op": "JUMP",
      "path": "39"
    },
    "6016": {
      "fn": "Address.sendValue",
      "offset": [
        2065,
        2377
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6017": {
      "fn": "Address.sendValue",
      "offset": [
        2179,
        2185
      ],
      "op": "DUP1",
      "path": "40",
      "statement": 79
    },
    "6018": {
      "fn": "Address.sendValue",
      "offset": [
        2154,
        2175
      ],
      "op": "SELFBALANCE",
      "path": "40"
    },
    "6019": {
      "fn": "Address.sendValue",
      "offset": [
        2154,
        2185
      ],
      "op": "LT",
      "path": "40"
    },
    "6020": {
      "branch": 113,
      "fn": "Address.sendValue",
      "offset": [
        2154,
        2185
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "6021": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x17D0"
    },
    "6024": {
      "branch": 113,
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "6025": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "6027": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6028": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6032": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6034": {
      "op": "SHL"
    },
    "6035": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6036": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6037": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6039": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "6041": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6042": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "ADD",
      "path": "40"
    },
    "6043": {
      "op": "MSTORE"
    },
    "6044": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "6046": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6048": {
      "op": "DUP3"
    },
    "6049": {
      "op": "ADD"
    },
    "6050": {
      "op": "MSTORE"
    },
    "6051": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E6365000000"
    },
    "6084": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6086": {
      "op": "DUP3"
    },
    "6087": {
      "op": "ADD"
    },
    "6088": {
      "op": "MSTORE"
    },
    "6089": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6091": {
      "op": "ADD"
    },
    "6092": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x7CE"
    },
    "6095": {
      "op": "JUMP"
    },
    "6096": {
      "fn": "Address.sendValue",
      "offset": [
        2146,
        2219
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6097": {
      "fn": "Address.sendValue",
      "offset": [
        2231,
        2243
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "6099": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2258
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6104": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6106": {
      "op": "SHL"
    },
    "6107": {
      "op": "SUB"
    },
    "6108": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2263
      ],
      "op": "AND",
      "path": "40"
    },
    "6109": {
      "fn": "Address.sendValue",
      "offset": [
        2271,
        2277
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6110": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "6112": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6113": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "6115": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "6117": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6118": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6119": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP4",
      "path": "40"
    },
    "6120": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "SUB",
      "path": "40"
    },
    "6121": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6122": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP6",
      "path": "40"
    },
    "6123": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP8",
      "path": "40"
    },
    "6124": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "GAS",
      "path": "40"
    },
    "6125": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "CALL",
      "path": "40"
    },
    "6126": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "6127": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "6128": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "6129": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "6130": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "6131": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6132": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "6134": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6135": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "EQ",
      "path": "40"
    },
    "6136": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x181D"
    },
    "6139": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "6140": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "6142": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6143": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6144": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "6145": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1F"
    },
    "6147": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "NOT",
      "path": "40"
    },
    "6148": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x3F"
    },
    "6150": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "6151": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "ADD",
      "path": "40"
    },
    "6152": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "AND",
      "path": "40"
    },
    "6153": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6154": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "ADD",
      "path": "40"
    },
    "6155": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "6157": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6158": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "6159": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6160": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6161": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "6162": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "6164": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "6166": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "DUP5",
      "path": "40"
    },
    "6167": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "ADD",
      "path": "40"
    },
    "6168": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "RETURNDATACOPY",
      "path": "40"
    },
    "6169": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1822"
    },
    "6172": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "JUMP",
      "path": "40"
    },
    "6173": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6174": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "6176": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6177": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "6178": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6179": {
      "fn": "Address.sendValue",
      "offset": [
        2249,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "6180": {
      "fn": "Address.sendValue",
      "offset": [
        2230,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "6181": {
      "fn": "Address.sendValue",
      "offset": [
        2230,
        2282
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6182": {
      "fn": "Address.sendValue",
      "offset": [
        2230,
        2282
      ],
      "op": "POP",
      "path": "40"
    },
    "6183": {
      "branch": 114,
      "fn": "Address.sendValue",
      "offset": [
        2300,
        2307
      ],
      "op": "DUP1",
      "path": "40",
      "statement": 80
    },
    "6184": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x177B"
    },
    "6187": {
      "branch": 114,
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "6188": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "6190": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6191": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6195": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6197": {
      "op": "SHL"
    },
    "6198": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6199": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6202": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "6204": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6205": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "ADD",
      "path": "40"
    },
    "6206": {
      "op": "MSTORE"
    },
    "6207": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "6209": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6211": {
      "op": "DUP3"
    },
    "6212": {
      "op": "ADD"
    },
    "6213": {
      "op": "MSTORE"
    },
    "6214": {
      "op": "PUSH32",
      "value": "0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072"
    },
    "6247": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6249": {
      "op": "DUP3"
    },
    "6250": {
      "op": "ADD"
    },
    "6251": {
      "op": "MSTORE"
    },
    "6252": {
      "op": "PUSH32",
      "value": "0x6563697069656E74206D61792068617665207265766572746564000000000000"
    },
    "6285": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6287": {
      "op": "DUP3"
    },
    "6288": {
      "op": "ADD"
    },
    "6289": {
      "op": "MSTORE"
    },
    "6290": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6292": {
      "op": "ADD"
    },
    "6293": {
      "fn": "Address.sendValue",
      "offset": [
        2292,
        2370
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x7CE"
    },
    "6296": {
      "op": "JUMP"
    },
    "6297": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1948,
        2131
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "6298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6304": {
      "op": "SHL"
    },
    "6305": {
      "op": "SUB"
    },
    "6306": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2021,
        2043
      ],
      "op": "DUP2",
      "path": "34",
      "statement": 81
    },
    "6307": {
      "branch": 123,
      "fn": "Ownable._transferOwnership",
      "offset": [
        2021,
        2043
      ],
      "op": "AND",
      "path": "34"
    },
    "6308": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x18AC"
    },
    "6311": {
      "branch": 123,
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "6312": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "6314": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "DUP1",
      "path": "34"
    },
    "6315": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "REVERT",
      "path": "34"
    },
    "6316": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2044
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "6317": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 82,
      "value": "0x2"
    },
    "6319": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "6320": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "6322": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "6323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6329": {
      "op": "SHL"
    },
    "6330": {
      "op": "SUB"
    },
    "6331": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "DUP1",
      "path": "34"
    },
    "6332": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "DUP5",
      "path": "34"
    },
    "6333": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "AND",
      "path": "34"
    },
    "6334": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "6335": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "AND",
      "path": "34"
    },
    "6336": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "6337": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "PUSH32",
      "path": "34",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "6370": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "6371": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "6373": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2080,
        2086
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "6374": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2059,
        2097
      ],
      "op": "LOG3",
      "path": "34"
    },
    "6375": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2113
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 83,
      "value": "0x2"
    },
    "6377": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "DUP1",
      "path": "34"
    },
    "6378": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "6379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6385": {
      "op": "SHL"
    },
    "6386": {
      "op": "SUB"
    },
    "6387": {
      "op": "NOT"
    },
    "6388": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "AND",
      "path": "34"
    },
    "6389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6395": {
      "op": "SHL"
    },
    "6396": {
      "op": "SUB"
    },
    "6397": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "6398": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "6399": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "6400": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "AND",
      "path": "34"
    },
    "6401": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "6402": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "6403": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "6404": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "OR",
      "path": "34"
    },
    "6405": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "6406": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2107,
        2124
      ],
      "op": "SSTORE",
      "path": "34"
    },
    "6407": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        1948,
        2131
      ],
      "op": "JUMP",
      "path": "34"
    },
    "6408": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        908,
        1149
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "6409": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 84,
      "value": "0x40"
    },
    "6411": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "6412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6418": {
      "op": "SHL"
    },
    "6419": {
      "op": "SUB"
    },
    "6420": {
      "op": "DUP1"
    },
    "6421": {
      "op": "DUP6"
    },
    "6422": {
      "op": "AND"
    },
    "6423": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x24"
    },
    "6425": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "DUP4",
      "path": "39"
    },
    "6426": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "ADD",
      "path": "39"
    },
    "6427": {
      "op": "MSTORE"
    },
    "6428": {
      "op": "DUP4"
    },
    "6429": {
      "op": "AND"
    },
    "6430": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6432": {
      "op": "DUP3"
    },
    "6433": {
      "op": "ADD"
    },
    "6434": {
      "op": "MSTORE"
    },
    "6435": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6437": {
      "op": "DUP2"
    },
    "6438": {
      "op": "ADD"
    },
    "6439": {
      "op": "DUP3"
    },
    "6440": {
      "op": "SWAP1"
    },
    "6441": {
      "op": "MSTORE"
    },
    "6442": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1046,
        1142
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1033"
    },
    "6445": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1046,
        1142
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "6446": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1066,
        1071
      ],
      "op": "DUP6",
      "path": "39"
    },
    "6447": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1066,
        1071
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "6448": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "6453": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6455": {
      "op": "SHL"
    },
    "6456": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1096,
        1123
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "6457": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6459": {
      "op": "ADD"
    },
    "6460": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1073,
        1141
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1744"
    },
    "6463": {
      "op": "JUMP"
    },
    "6464": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3203,
        3909
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "6465": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3622,
        3645
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "6467": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1995"
    },
    "6470": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3676,
        3680
      ],
      "op": "DUP3",
      "path": "39"
    },
    "6471": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "6473": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "6474": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "DUP1",
      "path": "39"
    },
    "6475": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "6477": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "ADD",
      "path": "39"
    },
    "6478": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "6480": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "6481": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "DUP1",
      "path": "39"
    },
    "6482": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "6484": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "DUP2",
      "path": "39"
    },
    "6485": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "6486": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "6488": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "ADD",
      "path": "39"
    },
    "6489": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "PUSH32",
      "path": "39",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "6522": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "DUP2",
      "path": "39"
    },
    "6523": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "6524": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "POP",
      "path": "39"
    },
    "6525": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3656,
        3661
      ],
      "op": "DUP6",
      "path": "39"
    },
    "6526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6532": {
      "op": "SHL"
    },
    "6533": {
      "op": "SUB"
    },
    "6534": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3675
      ],
      "op": "AND",
      "path": "39"
    },
    "6535": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3675
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1A12"
    },
    "6538": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3675
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "6539": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "6540": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "6541": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "6542": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xFFFFFFFF"
    },
    "6547": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "AND",
      "path": "39"
    },
    "6548": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3648,
        3717
      ],
      "op": "JUMP",
      "path": "39"
    },
    "6549": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3648,
        3717
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "6550": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3748
      ],
      "op": "DUP1",
      "path": "39"
    },
    "6551": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3748
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "6552": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3622,
        3717
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "6553": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3622,
        3717
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "6554": {
      "op": "POP"
    },
    "6555": {
      "branch": 124,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3752
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "6556": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3903
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x177B"
    },
    "6559": {
      "branch": 124,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3903
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "6560": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3826,
        3836
      ],
      "op": "DUP1",
      "path": "39",
      "statement": 85
    },
    "6561": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "DUP1",
      "path": "39"
    },
    "6562": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "6564": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "ADD",
      "path": "39"
    },
    "6565": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "6566": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "6567": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "DUP2",
      "path": "39"
    },
    "6568": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "ADD",
      "path": "39"
    },
    "6569": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "6570": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x19B3"
    },
    "6573": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "6574": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "6575": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1D72"
    },
    "6578": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3815,
        3845
      ],
      "op": "JUMP",
      "path": "39"
    },
    "6579": {
      "branch": 125,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3815,
        3845
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "6580": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x177B"
    },
    "6583": {
      "branch": 125,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "6584": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "6586": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "6587": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6591": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6593": {
      "op": "SHL"
    },
    "6594": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "DUP2",
      "path": "39"
    },
    "6595": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "6596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6598": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "6600": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "DUP3",
      "path": "39"
    },
    "6601": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "ADD",
      "path": "39"
    },
    "6602": {
      "op": "MSTORE"
    },
    "6603": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "6605": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6607": {
      "op": "DUP3"
    },
    "6608": {
      "op": "ADD"
    },
    "6609": {
      "op": "MSTORE"
    },
    "6610": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "6643": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6645": {
      "op": "DUP3"
    },
    "6646": {
      "op": "ADD"
    },
    "6647": {
      "op": "MSTORE"
    },
    "6648": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "6659": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "6661": {
      "op": "SHL"
    },
    "6662": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6664": {
      "op": "DUP3"
    },
    "6665": {
      "op": "ADD"
    },
    "6666": {
      "op": "MSTORE"
    },
    "6667": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6669": {
      "op": "ADD"
    },
    "6670": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3807,
        3892
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x7CE"
    },
    "6673": {
      "op": "JUMP"
    },
    "6674": {
      "fn": "Address.functionCall",
      "offset": [
        3514,
        3737
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6675": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3659
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "6677": {
      "fn": "Address.functionCall",
      "offset": [
        3678,
        3730
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 86,
      "value": "0x1A21"
    },
    "6680": {
      "fn": "Address.functionCall",
      "offset": [
        3700,
        3706
      ],
      "op": "DUP5",
      "path": "40"
    },
    "6681": {
      "fn": "Address.functionCall",
      "offset": [
        3708,
        3712
      ],
      "op": "DUP5",
      "path": "40"
    },
    "6682": {
      "fn": "Address.functionCall",
      "offset": [
        3714,
        3715
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "6684": {
      "fn": "Address.functionCall",
      "offset": [
        3717,
        3729
      ],
      "op": "DUP6",
      "path": "40"
    },
    "6685": {
      "fn": "Address.functionCall",
      "offset": [
        3678,
        3699
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1A29"
    },
    "6688": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3678,
        3730
      ],
      "op": "JUMP",
      "path": "40"
    },
    "6689": {
      "fn": "Address.functionCall",
      "offset": [
        3678,
        3730
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6690": {
      "fn": "Address.functionCall",
      "offset": [
        3671,
        3730
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "6691": {
      "fn": "Address.functionCall",
      "offset": [
        3514,
        3737
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "6692": {
      "op": "POP"
    },
    "6693": {
      "op": "POP"
    },
    "6694": {
      "op": "POP"
    },
    "6695": {
      "op": "POP"
    },
    "6696": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3514,
        3737
      ],
      "op": "JUMP",
      "path": "40"
    },
    "6697": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4601,
        5100
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6698": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4766,
        4778
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "6700": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4823,
        4828
      ],
      "op": "DUP3",
      "path": "40",
      "statement": 87
    },
    "6701": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4798,
        4819
      ],
      "op": "SELFBALANCE",
      "path": "40"
    },
    "6702": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4798,
        4828
      ],
      "op": "LT",
      "path": "40"
    },
    "6703": {
      "branch": 115,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4798,
        4828
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "6704": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1A8A"
    },
    "6707": {
      "branch": 115,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "6708": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "6710": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6711": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6715": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6717": {
      "op": "SHL"
    },
    "6718": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6719": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6722": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "6724": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6725": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "ADD",
      "path": "40"
    },
    "6726": {
      "op": "MSTORE"
    },
    "6727": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6729": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6731": {
      "op": "DUP3"
    },
    "6732": {
      "op": "ADD"
    },
    "6733": {
      "op": "MSTORE"
    },
    "6734": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6769": {
      "op": "DUP3"
    },
    "6770": {
      "op": "ADD"
    },
    "6771": {
      "op": "MSTORE"
    },
    "6772": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "6779": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "6781": {
      "op": "SHL"
    },
    "6782": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6784": {
      "op": "DUP3"
    },
    "6785": {
      "op": "ADD"
    },
    "6786": {
      "op": "MSTORE"
    },
    "6787": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6789": {
      "op": "ADD"
    },
    "6790": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x7CE"
    },
    "6793": {
      "op": "JUMP"
    },
    "6794": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4790,
        4871
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6795": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "DUP5",
      "path": "40"
    },
    "6796": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "40"
    },
    "6797": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 88,
      "value": "0x1AD8"
    },
    "6800": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "6801": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "6803": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6804": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6808": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6810": {
      "op": "SHL"
    },
    "6811": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6812": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6815": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "6817": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6818": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "ADD",
      "path": "40"
    },
    "6819": {
      "op": "MSTORE"
    },
    "6820": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "6822": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6824": {
      "op": "DUP3"
    },
    "6825": {
      "op": "ADD"
    },
    "6826": {
      "op": "MSTORE"
    },
    "6827": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "6860": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6862": {
      "op": "DUP3"
    },
    "6863": {
      "op": "ADD"
    },
    "6864": {
      "op": "MSTORE"
    },
    "6865": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6867": {
      "op": "ADD"
    },
    "6868": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x7CE"
    },
    "6871": {
      "op": "JUMP"
    },
    "6872": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4881,
        4941
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6873": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4953,
        4965
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "6875": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4990
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6876": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5000
      ],
      "op": "DUP7",
      "path": "40"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6883": {
      "op": "SHL"
    },
    "6884": {
      "op": "SUB"
    },
    "6885": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5005
      ],
      "op": "AND",
      "path": "40"
    },
    "6886": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5013,
        5018
      ],
      "op": "DUP6",
      "path": "40"
    },
    "6887": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5020,
        5024
      ],
      "op": "DUP8",
      "path": "40"
    },
    "6888": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "6890": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6891": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1AF4"
    },
    "6894": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6895": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6896": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1DC0"
    },
    "6899": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMP",
      "path": "40"
    },
    "6900": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6901": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "6903": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "6905": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6906": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6907": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP4",
      "path": "40"
    },
    "6908": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SUB",
      "path": "40"
    },
    "6909": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6910": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP6",
      "path": "40"
    },
    "6911": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP8",
      "path": "40"
    },
    "6912": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "GAS",
      "path": "40"
    },
    "6913": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "CALL",
      "path": "40"
    },
    "6914": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "6915": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "40"
    },
    "6916": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "40"
    },
    "6917": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "40"
    },
    "6918": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "6919": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6920": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "6922": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6923": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "EQ",
      "path": "40"
    },
    "6924": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1B31"
    },
    "6927": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "6928": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "6930": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6931": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6932": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "40"
    },
    "6933": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1F"
    },
    "6935": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "NOT",
      "path": "40"
    },
    "6936": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x3F"
    },
    "6938": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "6939": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "ADD",
      "path": "40"
    },
    "6940": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "AND",
      "path": "40"
    },
    "6941": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6942": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "ADD",
      "path": "40"
    },
    "6943": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "6945": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6946": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "6947": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6948": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6949": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "6950": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "6952": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "6954": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "DUP5",
      "path": "40"
    },
    "6955": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "ADD",
      "path": "40"
    },
    "6956": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "RETURNDATACOPY",
      "path": "40"
    },
    "6957": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1B36"
    },
    "6960": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMP",
      "path": "40"
    },
    "6961": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6962": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "6964": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6965": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "40"
    },
    "6966": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6967": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4994,
        5025
      ],
      "op": "POP",
      "path": "40"
    },
    "6968": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4952,
        5025
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6969": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4952,
        5025
      ],
      "op": "POP",
      "path": "40"
    },
    "6970": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4952,
        5025
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6971": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4952,
        5025
      ],
      "op": "POP",
      "path": "40"
    },
    "6972": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5093
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 89,
      "value": "0x1B46"
    },
    "6975": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5059,
        5066
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6976": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5068,
        5078
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6977": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5080,
        5092
      ],
      "op": "DUP7",
      "path": "40"
    },
    "6978": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5058
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1B51"
    },
    "6981": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5042,
        5093
      ],
      "op": "JUMP",
      "path": "40"
    },
    "6982": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5093
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6983": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5035,
        5093
      ],
      "op": "SWAP8",
      "path": "40"
    },
    "6984": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4601,
        5100
      ],
      "op": "SWAP7",
      "path": "40"
    },
    "6985": {
      "op": "POP"
    },
    "6986": {
      "op": "POP"
    },
    "6987": {
      "op": "POP"
    },
    "6988": {
      "op": "POP"
    },
    "6989": {
      "op": "POP"
    },
    "6990": {
      "op": "POP"
    },
    "6991": {
      "op": "POP"
    },
    "6992": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4601,
        5100
      ],
      "op": "JUMP",
      "path": "40"
    },
    "6993": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7214,
        7906
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6994": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7360,
        7372
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "6996": {
      "branch": 116,
      "fn": "Address.verifyCallResult",
      "offset": [
        7388,
        7395
      ],
      "op": "DUP4",
      "path": "40"
    },
    "6997": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7384,
        7900
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "6998": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7384,
        7900
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1B60"
    },
    "7001": {
      "branch": 116,
      "fn": "Address.verifyCallResult",
      "offset": [
        7384,
        7900
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "7002": {
      "op": "POP"
    },
    "7003": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7418,
        7428
      ],
      "op": "DUP2",
      "path": "40",
      "statement": 90
    },
    "7004": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7411,
        7428
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1583"
    },
    "7007": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7411,
        7428
      ],
      "op": "JUMP",
      "path": "40"
    },
    "7008": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7384,
        7900
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "7009": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7529,
        7546
      ],
      "op": "DUP3",
      "path": "40"
    },
    "7010": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7529,
        7546
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "7011": {
      "branch": 117,
      "fn": "Address.verifyCallResult",
      "offset": [
        7529,
        7550
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "7012": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7525,
        7890
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1B70"
    },
    "7015": {
      "branch": 117,
      "fn": "Address.verifyCallResult",
      "offset": [
        7525,
        7890
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "7016": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7723,
        7733
      ],
      "op": "DUP3",
      "path": "40"
    },
    "7017": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7717,
        7734
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "7018": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7783,
        7798
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7019": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7770,
        7780
      ],
      "op": "DUP5",
      "path": "40"
    },
    "7020": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7766,
        7768
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "7022": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7762,
        7781
      ],
      "op": "ADD",
      "path": "40"
    },
    "7023": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7755,
        7799
      ],
      "op": "REVERT",
      "path": "40"
    },
    "7024": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7525,
        7890
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "7025": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7862,
        7874
      ],
      "op": "DUP2",
      "path": "40",
      "statement": 91
    },
    "7026": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7028": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "7029": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7033": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7035": {
      "op": "SHL"
    },
    "7036": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7037": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7038": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "7040": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "ADD",
      "path": "40"
    },
    "7041": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x7CE"
    },
    "7044": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7045": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7046": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7855,
        7875
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1DDC"
    },
    "7049": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        7855,
        7875
      ],
      "op": "JUMP",
      "path": "40"
    },
    "7050": {
      "op": "JUMPDEST"
    },
    "7051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7057": {
      "op": "SHL"
    },
    "7058": {
      "op": "SUB"
    },
    "7059": {
      "op": "DUP2"
    },
    "7060": {
      "op": "AND"
    },
    "7061": {
      "op": "DUP2"
    },
    "7062": {
      "op": "EQ"
    },
    "7063": {
      "op": "PUSH2",
      "value": "0x15AA"
    },
    "7066": {
      "op": "JUMPI"
    },
    "7067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7069": {
      "op": "DUP1"
    },
    "7070": {
      "op": "REVERT"
    },
    "7071": {
      "op": "JUMPDEST"
    },
    "7072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7076": {
      "op": "DUP3"
    },
    "7077": {
      "op": "DUP5"
    },
    "7078": {
      "op": "SUB"
    },
    "7079": {
      "op": "SLT"
    },
    "7080": {
      "op": "ISZERO"
    },
    "7081": {
      "op": "PUSH2",
      "value": "0x1BB1"
    },
    "7084": {
      "op": "JUMPI"
    },
    "7085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7087": {
      "op": "DUP1"
    },
    "7088": {
      "op": "REVERT"
    },
    "7089": {
      "op": "JUMPDEST"
    },
    "7090": {
      "op": "DUP2"
    },
    "7091": {
      "op": "MLOAD"
    },
    "7092": {
      "op": "PUSH2",
      "value": "0x1583"
    },
    "7095": {
      "op": "DUP2"
    },
    "7096": {
      "op": "PUSH2",
      "value": "0x1B8A"
    },
    "7099": {
      "jump": "i",
      "op": "JUMP"
    },
    "7100": {
      "op": "JUMPDEST"
    },
    "7101": {
      "op": "DUP2"
    },
    "7102": {
      "op": "DUP4"
    },
    "7103": {
      "op": "DUP3"
    },
    "7104": {
      "op": "CALLDATACOPY"
    },
    "7105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7107": {
      "op": "SWAP2"
    },
    "7108": {
      "op": "ADD"
    },
    "7109": {
      "op": "SWAP1"
    },
    "7110": {
      "op": "DUP2"
    },
    "7111": {
      "op": "MSTORE"
    },
    "7112": {
      "op": "SWAP2"
    },
    "7113": {
      "op": "SWAP1"
    },
    "7114": {
      "op": "POP"
    },
    "7115": {
      "jump": "o",
      "op": "JUMP"
    },
    "7116": {
      "op": "JUMPDEST"
    },
    "7117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7121": {
      "op": "DUP3"
    },
    "7122": {
      "op": "DUP5"
    },
    "7123": {
      "op": "SUB"
    },
    "7124": {
      "op": "SLT"
    },
    "7125": {
      "op": "ISZERO"
    },
    "7126": {
      "op": "PUSH2",
      "value": "0x1BDE"
    },
    "7129": {
      "op": "JUMPI"
    },
    "7130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7132": {
      "op": "DUP1"
    },
    "7133": {
      "op": "REVERT"
    },
    "7134": {
      "op": "JUMPDEST"
    },
    "7135": {
      "op": "POP"
    },
    "7136": {
      "op": "CALLDATALOAD"
    },
    "7137": {
      "op": "SWAP2"
    },
    "7138": {
      "op": "SWAP1"
    },
    "7139": {
      "op": "POP"
    },
    "7140": {
      "jump": "o",
      "op": "JUMP"
    },
    "7141": {
      "op": "JUMPDEST"
    },
    "7142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7146": {
      "op": "DUP3"
    },
    "7147": {
      "op": "DUP5"
    },
    "7148": {
      "op": "SUB"
    },
    "7149": {
      "op": "SLT"
    },
    "7150": {
      "op": "ISZERO"
    },
    "7151": {
      "op": "PUSH2",
      "value": "0x1BF7"
    },
    "7154": {
      "op": "JUMPI"
    },
    "7155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7157": {
      "op": "DUP1"
    },
    "7158": {
      "op": "REVERT"
    },
    "7159": {
      "op": "JUMPDEST"
    },
    "7160": {
      "op": "DUP2"
    },
    "7161": {
      "op": "CALLDATALOAD"
    },
    "7162": {
      "op": "PUSH2",
      "value": "0x1583"
    },
    "7165": {
      "op": "DUP2"
    },
    "7166": {
      "op": "PUSH2",
      "value": "0x1B8A"
    },
    "7169": {
      "jump": "i",
      "op": "JUMP"
    },
    "7170": {
      "op": "JUMPDEST"
    },
    "7171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7173": {
      "op": "DUP1"
    },
    "7174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7176": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7178": {
      "op": "DUP5"
    },
    "7179": {
      "op": "DUP7"
    },
    "7180": {
      "op": "SUB"
    },
    "7181": {
      "op": "SLT"
    },
    "7182": {
      "op": "ISZERO"
    },
    "7183": {
      "op": "PUSH2",
      "value": "0x1C17"
    },
    "7186": {
      "op": "JUMPI"
    },
    "7187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7189": {
      "op": "DUP1"
    },
    "7190": {
      "op": "REVERT"
    },
    "7191": {
      "op": "JUMPDEST"
    },
    "7192": {
      "op": "DUP4"
    },
    "7193": {
      "op": "CALLDATALOAD"
    },
    "7194": {
      "op": "SWAP3"
    },
    "7195": {
      "op": "POP"
    },
    "7196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7198": {
      "op": "DUP5"
    },
    "7199": {
      "op": "ADD"
    },
    "7200": {
      "op": "CALLDATALOAD"
    },
    "7201": {
      "op": "PUSH2",
      "value": "0x1C29"
    },
    "7204": {
      "op": "DUP2"
    },
    "7205": {
      "op": "PUSH2",
      "value": "0x1B8A"
    },
    "7208": {
      "jump": "i",
      "op": "JUMP"
    },
    "7209": {
      "op": "JUMPDEST"
    },
    "7210": {
      "op": "SWAP2"
    },
    "7211": {
      "op": "POP"
    },
    "7212": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7214": {
      "op": "DUP5"
    },
    "7215": {
      "op": "ADD"
    },
    "7216": {
      "op": "CALLDATALOAD"
    },
    "7217": {
      "op": "PUSH2",
      "value": "0x1C39"
    },
    "7220": {
      "op": "DUP2"
    },
    "7221": {
      "op": "PUSH2",
      "value": "0x1B8A"
    },
    "7224": {
      "jump": "i",
      "op": "JUMP"
    },
    "7225": {
      "op": "JUMPDEST"
    },
    "7226": {
      "op": "DUP1"
    },
    "7227": {
      "op": "SWAP2"
    },
    "7228": {
      "op": "POP"
    },
    "7229": {
      "op": "POP"
    },
    "7230": {
      "op": "SWAP3"
    },
    "7231": {
      "op": "POP"
    },
    "7232": {
      "op": "SWAP3"
    },
    "7233": {
      "op": "POP"
    },
    "7234": {
      "op": "SWAP3"
    },
    "7235": {
      "jump": "o",
      "op": "JUMP"
    },
    "7236": {
      "op": "JUMPDEST"
    },
    "7237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7239": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7241": {
      "op": "DUP3"
    },
    "7242": {
      "op": "DUP5"
    },
    "7243": {
      "op": "SUB"
    },
    "7244": {
      "op": "SLT"
    },
    "7245": {
      "op": "ISZERO"
    },
    "7246": {
      "op": "PUSH2",
      "value": "0x1C56"
    },
    "7249": {
      "op": "JUMPI"
    },
    "7250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7252": {
      "op": "DUP1"
    },
    "7253": {
      "op": "REVERT"
    },
    "7254": {
      "op": "JUMPDEST"
    },
    "7255": {
      "op": "POP"
    },
    "7256": {
      "op": "MLOAD"
    },
    "7257": {
      "op": "SWAP2"
    },
    "7258": {
      "op": "SWAP1"
    },
    "7259": {
      "op": "POP"
    },
    "7260": {
      "jump": "o",
      "op": "JUMP"
    },
    "7261": {
      "op": "JUMPDEST"
    },
    "7262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7264": {
      "op": "DUP1"
    },
    "7265": {
      "op": "DUP3"
    },
    "7266": {
      "op": "MSTORE"
    },
    "7267": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "7269": {
      "op": "SWAP1"
    },
    "7270": {
      "op": "DUP3"
    },
    "7271": {
      "op": "ADD"
    },
    "7272": {
      "op": "MSTORE"
    },
    "7273": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F75676820746F6B656E7320696E2074686520636F6E74726163"
    },
    "7306": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7308": {
      "op": "DUP3"
    },
    "7309": {
      "op": "ADD"
    },
    "7310": {
      "op": "MSTORE"
    },
    "7311": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "7313": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "7315": {
      "op": "SHL"
    },
    "7316": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7318": {
      "op": "DUP3"
    },
    "7319": {
      "op": "ADD"
    },
    "7320": {
      "op": "MSTORE"
    },
    "7321": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7323": {
      "op": "ADD"
    },
    "7324": {
      "op": "SWAP1"
    },
    "7325": {
      "jump": "o",
      "op": "JUMP"
    },
    "7326": {
      "op": "JUMPDEST"
    },
    "7327": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7332": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7334": {
      "op": "SHL"
    },
    "7335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7337": {
      "op": "MSTORE"
    },
    "7338": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7340": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7342": {
      "op": "MSTORE"
    },
    "7343": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7347": {
      "op": "REVERT"
    },
    "7348": {
      "op": "JUMPDEST"
    },
    "7349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7351": {
      "op": "DUP3"
    },
    "7352": {
      "op": "NOT"
    },
    "7353": {
      "op": "DUP3"
    },
    "7354": {
      "op": "GT"
    },
    "7355": {
      "op": "ISZERO"
    },
    "7356": {
      "op": "PUSH2",
      "value": "0x1CC7"
    },
    "7359": {
      "op": "JUMPI"
    },
    "7360": {
      "op": "PUSH2",
      "value": "0x1CC7"
    },
    "7363": {
      "op": "PUSH2",
      "value": "0x1C9E"
    },
    "7366": {
      "jump": "i",
      "op": "JUMP"
    },
    "7367": {
      "op": "JUMPDEST"
    },
    "7368": {
      "op": "POP"
    },
    "7369": {
      "op": "ADD"
    },
    "7370": {
      "op": "SWAP1"
    },
    "7371": {
      "jump": "o",
      "op": "JUMP"
    },
    "7372": {
      "op": "JUMPDEST"
    },
    "7373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7375": {
      "op": "DUP2"
    },
    "7376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7378": {
      "op": "NOT"
    },
    "7379": {
      "op": "DIV"
    },
    "7380": {
      "op": "DUP4"
    },
    "7381": {
      "op": "GT"
    },
    "7382": {
      "op": "DUP3"
    },
    "7383": {
      "op": "ISZERO"
    },
    "7384": {
      "op": "ISZERO"
    },
    "7385": {
      "op": "AND"
    },
    "7386": {
      "op": "ISZERO"
    },
    "7387": {
      "op": "PUSH2",
      "value": "0x1CE6"
    },
    "7390": {
      "op": "JUMPI"
    },
    "7391": {
      "op": "PUSH2",
      "value": "0x1CE6"
    },
    "7394": {
      "op": "PUSH2",
      "value": "0x1C9E"
    },
    "7397": {
      "jump": "i",
      "op": "JUMP"
    },
    "7398": {
      "op": "JUMPDEST"
    },
    "7399": {
      "op": "POP"
    },
    "7400": {
      "op": "MUL"
    },
    "7401": {
      "op": "SWAP1"
    },
    "7402": {
      "jump": "o",
      "op": "JUMP"
    },
    "7403": {
      "op": "JUMPDEST"
    },
    "7404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7406": {
      "op": "DUP3"
    },
    "7407": {
      "op": "DUP3"
    },
    "7408": {
      "op": "LT"
    },
    "7409": {
      "op": "ISZERO"
    },
    "7410": {
      "op": "PUSH2",
      "value": "0x1CFD"
    },
    "7413": {
      "op": "JUMPI"
    },
    "7414": {
      "op": "PUSH2",
      "value": "0x1CFD"
    },
    "7417": {
      "op": "PUSH2",
      "value": "0x1C9E"
    },
    "7420": {
      "jump": "i",
      "op": "JUMP"
    },
    "7421": {
      "op": "JUMPDEST"
    },
    "7422": {
      "op": "POP"
    },
    "7423": {
      "op": "SUB"
    },
    "7424": {
      "op": "SWAP1"
    },
    "7425": {
      "jump": "o",
      "op": "JUMP"
    },
    "7426": {
      "op": "JUMPDEST"
    },
    "7427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7429": {
      "op": "DUP3"
    },
    "7430": {
      "op": "PUSH2",
      "value": "0x1D1F"
    },
    "7433": {
      "op": "JUMPI"
    },
    "7434": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7439": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7441": {
      "op": "SHL"
    },
    "7442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7444": {
      "op": "MSTORE"
    },
    "7445": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "7447": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7449": {
      "op": "MSTORE"
    },
    "7450": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7454": {
      "op": "REVERT"
    },
    "7455": {
      "op": "JUMPDEST"
    },
    "7456": {
      "op": "POP"
    },
    "7457": {
      "op": "DIV"
    },
    "7458": {
      "op": "SWAP1"
    },
    "7459": {
      "jump": "o",
      "op": "JUMP"
    },
    "7460": {
      "op": "JUMPDEST"
    },
    "7461": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7463": {
      "op": "DUP1"
    },
    "7464": {
      "op": "DUP3"
    },
    "7465": {
      "op": "MSTORE"
    },
    "7466": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "7468": {
      "op": "SWAP1"
    },
    "7469": {
      "op": "DUP3"
    },
    "7470": {
      "op": "ADD"
    },
    "7471": {
      "op": "MSTORE"
    },
    "7472": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "7505": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7507": {
      "op": "DUP3"
    },
    "7508": {
      "op": "ADD"
    },
    "7509": {
      "op": "MSTORE"
    },
    "7510": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "7525": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "7527": {
      "op": "SHL"
    },
    "7528": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7530": {
      "op": "DUP3"
    },
    "7531": {
      "op": "ADD"
    },
    "7532": {
      "op": "MSTORE"
    },
    "7533": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7535": {
      "op": "ADD"
    },
    "7536": {
      "op": "SWAP1"
    },
    "7537": {
      "jump": "o",
      "op": "JUMP"
    },
    "7538": {
      "op": "JUMPDEST"
    },
    "7539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7541": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7543": {
      "op": "DUP3"
    },
    "7544": {
      "op": "DUP5"
    },
    "7545": {
      "op": "SUB"
    },
    "7546": {
      "op": "SLT"
    },
    "7547": {
      "op": "ISZERO"
    },
    "7548": {
      "op": "PUSH2",
      "value": "0x1D84"
    },
    "7551": {
      "op": "JUMPI"
    },
    "7552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7554": {
      "op": "DUP1"
    },
    "7555": {
      "op": "REVERT"
    },
    "7556": {
      "op": "JUMPDEST"
    },
    "7557": {
      "op": "DUP2"
    },
    "7558": {
      "op": "MLOAD"
    },
    "7559": {
      "op": "DUP1"
    },
    "7560": {
      "op": "ISZERO"
    },
    "7561": {
      "op": "ISZERO"
    },
    "7562": {
      "op": "DUP2"
    },
    "7563": {
      "op": "EQ"
    },
    "7564": {
      "op": "PUSH2",
      "value": "0x1583"
    },
    "7567": {
      "op": "JUMPI"
    },
    "7568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7570": {
      "op": "DUP1"
    },
    "7571": {
      "op": "REVERT"
    },
    "7572": {
      "op": "JUMPDEST"
    },
    "7573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7575": {
      "op": "JUMPDEST"
    },
    "7576": {
      "op": "DUP4"
    },
    "7577": {
      "op": "DUP2"
    },
    "7578": {
      "op": "LT"
    },
    "7579": {
      "op": "ISZERO"
    },
    "7580": {
      "op": "PUSH2",
      "value": "0x1DAF"
    },
    "7583": {
      "op": "JUMPI"
    },
    "7584": {
      "op": "DUP2"
    },
    "7585": {
      "op": "DUP2"
    },
    "7586": {
      "op": "ADD"
    },
    "7587": {
      "op": "MLOAD"
    },
    "7588": {
      "op": "DUP4"
    },
    "7589": {
      "op": "DUP3"
    },
    "7590": {
      "op": "ADD"
    },
    "7591": {
      "op": "MSTORE"
    },
    "7592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7594": {
      "op": "ADD"
    },
    "7595": {
      "op": "PUSH2",
      "value": "0x1D97"
    },
    "7598": {
      "op": "JUMP"
    },
    "7599": {
      "op": "JUMPDEST"
    },
    "7600": {
      "op": "DUP4"
    },
    "7601": {
      "op": "DUP2"
    },
    "7602": {
      "op": "GT"
    },
    "7603": {
      "op": "ISZERO"
    },
    "7604": {
      "op": "PUSH2",
      "value": "0x1033"
    },
    "7607": {
      "op": "JUMPI"
    },
    "7608": {
      "op": "POP"
    },
    "7609": {
      "op": "POP"
    },
    "7610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7612": {
      "op": "SWAP2"
    },
    "7613": {
      "op": "ADD"
    },
    "7614": {
      "op": "MSTORE"
    },
    "7615": {
      "jump": "o",
      "op": "JUMP"
    },
    "7616": {
      "op": "JUMPDEST"
    },
    "7617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7619": {
      "op": "DUP3"
    },
    "7620": {
      "op": "MLOAD"
    },
    "7621": {
      "op": "PUSH2",
      "value": "0x1DD2"
    },
    "7624": {
      "op": "DUP2"
    },
    "7625": {
      "op": "DUP5"
    },
    "7626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7628": {
      "op": "DUP8"
    },
    "7629": {
      "op": "ADD"
    },
    "7630": {
      "op": "PUSH2",
      "value": "0x1D94"
    },
    "7633": {
      "jump": "i",
      "op": "JUMP"
    },
    "7634": {
      "op": "JUMPDEST"
    },
    "7635": {
      "op": "SWAP2"
    },
    "7636": {
      "op": "SWAP1"
    },
    "7637": {
      "op": "SWAP2"
    },
    "7638": {
      "op": "ADD"
    },
    "7639": {
      "op": "SWAP3"
    },
    "7640": {
      "op": "SWAP2"
    },
    "7641": {
      "op": "POP"
    },
    "7642": {
      "op": "POP"
    },
    "7643": {
      "jump": "o",
      "op": "JUMP"
    },
    "7644": {
      "op": "JUMPDEST"
    },
    "7645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7647": {
      "op": "DUP2"
    },
    "7648": {
      "op": "MSTORE"
    },
    "7649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7651": {
      "op": "DUP3"
    },
    "7652": {
      "op": "MLOAD"
    },
    "7653": {
      "op": "DUP1"
    },
    "7654": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7656": {
      "op": "DUP5"
    },
    "7657": {
      "op": "ADD"
    },
    "7658": {
      "op": "MSTORE"
    },
    "7659": {
      "op": "PUSH2",
      "value": "0x1DFB"
    },
    "7662": {
      "op": "DUP2"
    },
    "7663": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7665": {
      "op": "DUP6"
    },
    "7666": {
      "op": "ADD"
    },
    "7667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7669": {
      "op": "DUP8"
    },
    "7670": {
      "op": "ADD"
    },
    "7671": {
      "op": "PUSH2",
      "value": "0x1D94"
    },
    "7674": {
      "jump": "i",
      "op": "JUMP"
    },
    "7675": {
      "op": "JUMPDEST"
    },
    "7676": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7678": {
      "op": "ADD"
    },
    "7679": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7681": {
      "op": "NOT"
    },
    "7682": {
      "op": "AND"
    },
    "7683": {
      "op": "SWAP2"
    },
    "7684": {
      "op": "SWAP1"
    },
    "7685": {
      "op": "SWAP2"
    },
    "7686": {
      "op": "ADD"
    },
    "7687": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7689": {
      "op": "ADD"
    },
    "7690": {
      "op": "SWAP3"
    },
    "7691": {
      "op": "SWAP2"
    },
    "7692": {
      "op": "POP"
    },
    "7693": {
      "op": "POP"
    },
    "7694": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d3a67b5d405f323324ff8bf702281aad0a4946c7",
  "source": "// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.8.0;\n\nimport \"../../zeppelin/ownership/Ownable.sol\";\nimport \"./AbstractStakingContract.sol\";\n\n/**\n * @notice Contract acts as delegate for sub-stakers\n **/\ncontract PoolingStakingContractV2 is InitializableStakingContract, Ownable {\n    using Address for address payable;\n    using SafeERC20 for NuCypherToken;\n\n    event TokensDeposited(\n        address indexed sender,\n        uint256 value,\n        uint256 depositedTokens\n    );\n    event TokensWithdrawn(\n        address indexed sender,\n        uint256 value,\n        uint256 depositedTokens\n    );\n    event ETHWithdrawn(address indexed sender, uint256 value);\n    event WorkerOwnerSet(address indexed sender, address indexed workerOwner);\n\n    struct Delegator {\n        uint256 depositedTokens;\n        uint256 withdrawnReward;\n        uint256 withdrawnETH;\n    }\n\n    /**\n     * Defines base fraction and precision of worker fraction.\n     * E.g., for a value of 10000, a worker fraction of 100 represents 1% of reward (100/10000)\n     */\n    uint256 public constant BASIS_FRACTION = 10000;\n\n    IStakingEscrow public escrow;\n    address public workerOwner;\n\n    uint256 public totalDepositedTokens;\n    uint256 public totalWithdrawnReward;\n    uint256 public totalWithdrawnETH;\n\n    uint256 workerFraction;\n    uint256 public workerWithdrawnReward;\n\n    mapping(address => Delegator) public delegators;\n\n    /**\n     * @notice Initialize function for using with OpenZeppelin proxy\n     * @param _workerFraction Share of token reward that worker node owner will get.\n     * Use value up to BASIS_FRACTION (10000), if _workerFraction = BASIS_FRACTION -> means 100% reward as commission.\n     * For example, 100 worker fraction is 1% of reward\n     * @param _router StakingInterfaceRouter address\n     * @param _workerOwner Owner of worker node, only this address can withdraw worker commission\n     */\n    function initialize(\n        uint256 _workerFraction,\n        StakingInterfaceRouter _router,\n        address _workerOwner\n    ) external initializer {\n        require(_workerOwner != address(0) && _workerFraction <= BASIS_FRACTION);\n        InitializableStakingContract.initialize(_router);\n        _transferOwnership(msg.sender);\n        escrow = _router.target().escrow();\n        workerFraction = _workerFraction;\n        workerOwner = _workerOwner;\n        emit WorkerOwnerSet(msg.sender, _workerOwner);\n    }\n\n    /**\n     * @notice withdrawAll() is allowed\n     */\n    function isWithdrawAllAllowed() public view returns (bool) {\n        // no tokens in StakingEscrow contract which belong to pool\n        return escrow.getAllTokens(address(this)) == 0;\n    }\n\n    /**\n     * @notice deposit() is allowed\n     */\n    function isDepositAllowed() public view returns (bool) {\n        // tokens which directly belong to pool\n        uint256 freeTokens = token.balanceOf(address(this));\n\n        // no sub-stakes and no earned reward\n        return isWithdrawAllAllowed() && freeTokens == totalDepositedTokens;\n    }\n\n    /**\n     * @notice Set worker owner address\n     */\n    function setWorkerOwner(address _workerOwner) external onlyOwner {\n        workerOwner = _workerOwner;\n        emit WorkerOwnerSet(msg.sender, _workerOwner);\n    }\n\n    /**\n     * @notice Calculate worker's fraction depending on deposited tokens\n     * Override to implement dynamic worker fraction.\n     */\n    function getWorkerFraction() public view virtual returns (uint256) {\n        return workerFraction;\n    }\n\n    /**\n     * @notice Transfer tokens as delegator\n     * @param _value Amount of tokens to transfer\n     */\n    function depositTokens(uint256 _value) external {\n        require(isDepositAllowed(), \"Deposit must be enabled\");\n        require(_value > 0, \"Value must be not empty\");\n        totalDepositedTokens += _value;\n        Delegator storage delegator = delegators[msg.sender];\n        delegator.depositedTokens += _value;\n        token.safeTransferFrom(msg.sender, address(this), _value);\n        emit TokensDeposited(msg.sender, _value, delegator.depositedTokens);\n    }\n\n    /**\n     * @notice Get available reward for all delegators and owner\n     */\n    function getAvailableReward() public view returns (uint256) {\n        // locked + unlocked tokens in StakingEscrow contract which belong to pool\n        uint256 stakedTokens = escrow.getAllTokens(address(this));\n        // tokens which directly belong to pool\n        uint256 freeTokens = token.balanceOf(address(this));\n        // tokens in excess of the initially deposited\n        uint256 reward = stakedTokens + freeTokens - totalDepositedTokens;\n        // check how many of reward tokens belong directly to pool\n        if (reward > freeTokens) {\n            return freeTokens;\n        }\n        return reward;\n    }\n\n    /**\n     * @notice Get cumulative reward.\n     * Available and withdrawn reward together to use in delegator/owner reward calculations\n     */\n    function getCumulativeReward() public view returns (uint256) {\n        return getAvailableReward() + totalWithdrawnReward;\n    }\n\n    /**\n     * @notice Get available reward in tokens for worker node owner\n     */\n    function getAvailableWorkerReward() public view returns (uint256) {\n        // total current and historical reward\n        uint256 reward = getCumulativeReward();\n\n        // calculate total reward for worker including historical reward\n        uint256 maxAllowableReward;\n        // usual case\n        if (totalDepositedTokens != 0) {\n            uint256 fraction = getWorkerFraction();\n            maxAllowableReward = reward * fraction / BASIS_FRACTION;\n        // special case when there are no delegators\n        } else {\n            maxAllowableReward = reward;\n        }\n\n        // check that worker has any new reward\n        if (maxAllowableReward > workerWithdrawnReward) {\n            return maxAllowableReward - workerWithdrawnReward;\n        }\n        return 0;\n    }\n\n    /**\n     * @notice Get available reward in tokens for delegator\n     */\n    function getAvailableDelegatorReward(address _delegator) public view returns (uint256) {\n        // special case when there are no delegators\n        if (totalDepositedTokens == 0) {\n            return 0;\n        }\n\n        // total current and historical reward\n        uint256 reward = getCumulativeReward();\n        Delegator storage delegator = delegators[_delegator];\n        uint256 fraction = getWorkerFraction();\n\n        // calculate total reward for delegator including historical reward\n        // excluding worker share\n        uint256 maxAllowableReward = reward * delegator.depositedTokens * (BASIS_FRACTION - fraction)\n            / (totalDepositedTokens * BASIS_FRACTION);\n\n        // check that worker has any new reward\n        if (maxAllowableReward > delegator.withdrawnReward) {\n            return maxAllowableReward - delegator.withdrawnReward;\n        }\n        return 0;\n    }\n\n    /**\n     * @notice Withdraw reward in tokens to worker node owner\n     */\n    function withdrawWorkerReward() external {\n        require(msg.sender == workerOwner);\n        uint256 balance = token.balanceOf(address(this));\n        uint256 availableReward = getAvailableWorkerReward();\n\n        if (availableReward > balance) {\n            availableReward = balance;\n        }\n        require(\n            availableReward > 0,\n            \"There is no available reward to withdraw\"\n        );\n        workerWithdrawnReward += availableReward;\n        totalWithdrawnReward += availableReward;\n\n        token.safeTransfer(msg.sender, availableReward);\n        emit TokensWithdrawn(msg.sender, availableReward, 0);\n    }\n\n    /**\n     * @notice Withdraw reward to delegator\n     * @param _value Amount of tokens to withdraw\n     */\n    function withdrawTokens(uint256 _value) public override {\n        uint256 balance = token.balanceOf(address(this));\n        require(_value <= balance, \"Not enough tokens in the contract\");\n\n        Delegator storage delegator = delegators[msg.sender];\n        uint256 availableReward = getAvailableDelegatorReward(msg.sender);\n\n        require( _value <= availableReward, \"Requested amount of tokens exceeded allowed portion\");\n        delegator.withdrawnReward += _value;\n        totalWithdrawnReward += _value;\n\n        token.safeTransfer(msg.sender, _value);\n        emit TokensWithdrawn(msg.sender, _value, delegator.depositedTokens);\n    }\n\n    /**\n     * @notice Withdraw reward, deposit and fee to delegator\n     */\n    function withdrawAll() public {\n        require(isWithdrawAllAllowed(), \"Withdraw deposit and reward must be enabled\");\n        uint256 balance = token.balanceOf(address(this));\n\n        Delegator storage delegator = delegators[msg.sender];\n        uint256 availableReward = getAvailableDelegatorReward(msg.sender);\n        uint256 value = availableReward + delegator.depositedTokens;\n        require(value <= balance, \"Not enough tokens in the contract\");\n\n        // TODO remove double reading: availableReward and availableWorkerReward use same calls to external contracts\n        uint256 availableWorkerReward = getAvailableWorkerReward();\n\n        // potentially could be less then due reward\n        uint256 availableETH = getAvailableDelegatorETH(msg.sender);\n\n        // prevent losing reward for worker after calculations\n        uint256 workerReward = availableWorkerReward * delegator.depositedTokens / totalDepositedTokens;\n        if (workerReward > 0) {\n            require(value + workerReward <= balance, \"Not enough tokens in the contract\");\n            token.safeTransfer(workerOwner, workerReward);\n            emit TokensWithdrawn(workerOwner, workerReward, 0);\n        }\n\n        uint256 withdrawnToDecrease = workerWithdrawnReward * delegator.depositedTokens / totalDepositedTokens;\n\n        workerWithdrawnReward -= withdrawnToDecrease;\n        totalWithdrawnReward -= withdrawnToDecrease + delegator.withdrawnReward;\n        totalDepositedTokens -= delegator.depositedTokens;\n\n        delegator.withdrawnReward = 0;\n        delegator.depositedTokens = 0;\n\n        token.safeTransfer(msg.sender, value);\n        emit TokensWithdrawn(msg.sender, value, 0);\n\n        totalWithdrawnETH -= delegator.withdrawnETH;\n        delegator.withdrawnETH = 0;\n        if (availableETH > 0) {\n            emit ETHWithdrawn(msg.sender, availableETH);\n            payable(msg.sender).sendValue(availableETH);\n        }\n    }\n\n    /**\n     * @notice Get available ether for delegator\n     */\n    function getAvailableDelegatorETH(address _delegator) public view returns (uint256) {\n        Delegator storage delegator = delegators[_delegator];\n        uint256 balance = address(this).balance;\n        // ETH balance + already withdrawn\n        balance += totalWithdrawnETH;\n        uint256 maxAllowableETH = balance * delegator.depositedTokens / totalDepositedTokens;\n\n        uint256 availableETH = maxAllowableETH - delegator.withdrawnETH;\n        if (availableETH > balance) {\n            availableETH = balance;\n        }\n        return availableETH;\n    }\n\n    /**\n     * @notice Withdraw available amount of ETH to delegator\n     */\n    function withdrawETH() public override {\n        Delegator storage delegator = delegators[msg.sender];\n        uint256 availableETH = getAvailableDelegatorETH(msg.sender);\n        require(availableETH > 0, \"There is no available ETH to withdraw\");\n        delegator.withdrawnETH += availableETH;\n\n        totalWithdrawnETH += availableETH;\n        emit ETHWithdrawn(msg.sender, availableETH);\n        payable(msg.sender).sendValue(availableETH);\n    }\n\n    /**\n     * @notice Calling fallback function is allowed only for the owner\n     */\n    function isFallbackAllowed() public override view returns (bool) {\n        return msg.sender == owner();\n    }\n}\n",
  "sourceMap": "222:11600:28:-:0;;;;;;;;;;;;-1:-1:-1;549:6:34;:19;;-1:-1:-1;;;;;;549:19:34;558:10;549:19;;;;;;583:40;;549:6;;583:40;;549:6;;583:40;222:11600:28;;;;;;",
  "sourcePath": "contracts/contracts/staking_contracts/PoolingStakingContractV2.sol",
  "type": "contract"
}