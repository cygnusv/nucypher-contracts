{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract NuCypherToken",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "contract IStakingEscrow",
          "name": "_escrow",
          "type": "address"
        },
        {
          "internalType": "contract PolicyManager",
          "name": "_policyManager",
          "type": "address"
        },
        {
          "internalType": "contract WorkLock",
          "name": "_workLock",
          "type": "address"
        },
        {
          "internalType": "contract IStaking",
          "name": "_tStaking",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositedETH",
          "type": "uint256"
        }
      ],
      "name": "Bid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "BidCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimedTokens",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "CompensationWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "MinFeeRateSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "PolicyFeeWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refundETH",
          "type": "uint256"
        }
      ],
      "name": "Refund",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "authorizer",
          "type": "address"
        }
      ],
      "name": "ThresholdNUStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "amount",
          "type": "uint96"
        }
      ],
      "name": "ThresholdNUUnstaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "WithdrawnAsStaker",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "bid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "escrow",
      "outputs": [
        {
          "internalType": "contract IStakingEscrow",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "policyManager",
      "outputs": [
        {
          "internalType": "contract PolicyManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minFeeRate",
          "type": "uint256"
        }
      ],
      "name": "setMinFeeRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "authorizer",
          "type": "address"
        }
      ],
      "name": "stakeNu",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingInterfaceAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tStaking",
      "outputs": [
        {
          "internalType": "contract IStaking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract NuCypherToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "amount",
          "type": "uint96"
        }
      ],
      "name": "unstakeNu",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "withdrawAsStaker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawCompensation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawPolicyFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "workLock",
      "outputs": [
        {
          "internalType": "contract WorkLock",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/contracts/IStakingEscrow.sol",
    "11": "contracts/contracts/NuCypherToken.sol",
    "12": "contracts/contracts/PolicyManager.sol",
    "15": "contracts/contracts/WorkLock.sol",
    "19": "contracts/contracts/lib/AdditionalMath.sol",
    "22": "contracts/contracts/lib/SignatureVerifier.sol",
    "26": "contracts/contracts/proxy/Upgradeable.sol",
    "29": "contracts/contracts/staking_contracts/StakingInterface.sol",
    "31": "contracts/threshold/IStaking.sol",
    "33": "contracts/zeppelin/math/SafeMath.sol",
    "34": "contracts/zeppelin/ownership/Ownable.sol",
    "36": "contracts/zeppelin/token/ERC20/ERC20.sol",
    "37": "contracts/zeppelin/token/ERC20/ERC20Detailed.sol",
    "38": "contracts/zeppelin/token/ERC20/IERC20.sol",
    "39": "contracts/zeppelin/token/ERC20/SafeERC20.sol",
    "40": "contracts/zeppelin/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/staking_contracts/StakingInterface.sol",
    "exportedSymbols": {
      "AbstractStakingContract": [
        11085
      ],
      "AdditionalMath": [
        7462
      ],
      "Address": [
        14756
      ],
      "BaseStakingInterface": [
        12172
      ],
      "ERC20": [
        14103
      ],
      "ERC20Detailed": [
        14165
      ],
      "IERC20": [
        14235
      ],
      "IStaking": [
        13145
      ],
      "IStakingEscrow": [
        691
      ],
      "InitializableStakingContract": [
        11147
      ],
      "Math": [
        13233
      ],
      "NuCypherToken": [
        751
      ],
      "Ownable": [
        13666
      ],
      "PolicyManager": [
        3682
      ],
      "RawStakingContract": [
        11027
      ],
      "SafeERC20": [
        14459
      ],
      "SafeMath": [
        13545
      ],
      "SignatureVerifier": [
        9074
      ],
      "StakingInterface": [
        12484
      ],
      "StakingInterfaceRouter": [
        10953
      ],
      "TokenRecipient": [
        765
      ],
      "Upgradeable": [
        10885
      ],
      "WorkLock": [
        7000
      ]
    },
    "id": 12485,
    "license": "AGPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12022,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "47:23:29"
      },
      {
        "absolutePath": "contracts/contracts/staking_contracts/AbstractStakingContract.sol",
        "file": "./AbstractStakingContract.sol",
        "id": 12023,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12485,
        "sourceUnit": 11148,
        "src": "73:39:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/NuCypherToken.sol",
        "file": "../NuCypherToken.sol",
        "id": 12024,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12485,
        "sourceUnit": 766,
        "src": "113:30:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/IStakingEscrow.sol",
        "file": "../IStakingEscrow.sol",
        "id": 12025,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12485,
        "sourceUnit": 692,
        "src": "144:31:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/PolicyManager.sol",
        "file": "../PolicyManager.sol",
        "id": 12026,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12485,
        "sourceUnit": 3683,
        "src": "176:30:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/WorkLock.sol",
        "file": "../WorkLock.sol",
        "id": 12027,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12485,
        "sourceUnit": 7001,
        "src": "207:25:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/threshold/IStaking.sol",
        "file": "../../threshold/IStaking.sol",
        "id": 12028,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12485,
        "sourceUnit": 13146,
        "src": "233:38:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "BaseStakingInterface",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 12029,
          "nodeType": "StructuredDocumentation",
          "src": "274:38:29",
          "text": " @notice Base StakingInterface"
        },
        "fullyImplemented": true,
        "id": 12172,
        "linearizedBaseContracts": [
          12172
        ],
        "name": "BaseStakingInterface",
        "nameLocation": "322:20:29",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "9d83a8dc",
            "id": 12031,
            "mutability": "immutable",
            "name": "stakingInterfaceAddress",
            "nameLocation": "375:23:29",
            "nodeType": "VariableDeclaration",
            "scope": 12172,
            "src": "350:48:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12030,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "350:7:29",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 12034,
            "mutability": "immutable",
            "name": "token",
            "nameLocation": "435:5:29",
            "nodeType": "VariableDeclaration",
            "scope": 12172,
            "src": "404:36:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NuCypherToken_$751",
              "typeString": "contract NuCypherToken"
            },
            "typeName": {
              "id": 12033,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12032,
                "name": "NuCypherToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 751,
                "src": "404:13:29"
              },
              "referencedDeclaration": 751,
              "src": "404:13:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NuCypherToken_$751",
                "typeString": "contract NuCypherToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e2fdcc17",
            "id": 12037,
            "mutability": "immutable",
            "name": "escrow",
            "nameLocation": "478:6:29",
            "nodeType": "VariableDeclaration",
            "scope": 12172,
            "src": "446:38:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStakingEscrow_$691",
              "typeString": "contract IStakingEscrow"
            },
            "typeName": {
              "id": 12036,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12035,
                "name": "IStakingEscrow",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 691,
                "src": "446:14:29"
              },
              "referencedDeclaration": 691,
              "src": "446:14:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                "typeString": "contract IStakingEscrow"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ab3dbf3b",
            "id": 12040,
            "mutability": "immutable",
            "name": "policyManager",
            "nameLocation": "521:13:29",
            "nodeType": "VariableDeclaration",
            "scope": 12172,
            "src": "490:44:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PolicyManager_$3682",
              "typeString": "contract PolicyManager"
            },
            "typeName": {
              "id": 12039,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12038,
                "name": "PolicyManager",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3682,
                "src": "490:13:29"
              },
              "referencedDeclaration": 3682,
              "src": "490:13:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PolicyManager_$3682",
                "typeString": "contract PolicyManager"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1c7fd532",
            "id": 12043,
            "mutability": "immutable",
            "name": "workLock",
            "nameLocation": "566:8:29",
            "nodeType": "VariableDeclaration",
            "scope": 12172,
            "src": "540:34:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WorkLock_$7000",
              "typeString": "contract WorkLock"
            },
            "typeName": {
              "id": 12042,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12041,
                "name": "WorkLock",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7000,
                "src": "540:8:29"
              },
              "referencedDeclaration": 7000,
              "src": "540:8:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WorkLock_$7000",
                "typeString": "contract WorkLock"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dbaa0fc6",
            "id": 12046,
            "mutability": "immutable",
            "name": "tStaking",
            "nameLocation": "606:8:29",
            "nodeType": "VariableDeclaration",
            "scope": 12172,
            "src": "580:34:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStaking_$13145",
              "typeString": "contract IStaking"
            },
            "typeName": {
              "id": 12045,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12044,
                "name": "IStaking",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13145,
                "src": "580:8:29"
              },
              "referencedDeclaration": 13145,
              "src": "580:8:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStaking_$13145",
                "typeString": "contract IStaking"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 12139,
              "nodeType": "Block",
              "src": "1087:531:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 12109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 12092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 12082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 12076,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 12070,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 12066,
                                      "name": "_token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12050,
                                      "src": "1105:6:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_NuCypherToken_$751",
                                        "typeString": "contract NuCypherToken"
                                      }
                                    },
                                    "id": 12067,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "totalSupply",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13740,
                                    "src": "1105:18:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 12068,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1105:20:29",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 12069,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1128:1:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1105:24:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_contract$_NuCypherToken_$751",
                                  "typeString": "contract NuCypherToken"
                                },
                                "id": 12075,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 12071,
                                      "name": "_escrow",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12053,
                                      "src": "1145:7:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                                        "typeString": "contract IStakingEscrow"
                                      }
                                    },
                                    "id": 12072,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "token",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 571,
                                    "src": "1145:13:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_NuCypherToken_$751_$",
                                      "typeString": "function () view external returns (contract NuCypherToken)"
                                    }
                                  },
                                  "id": 12073,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1145:15:29",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NuCypherToken_$751",
                                    "typeString": "contract NuCypherToken"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 12074,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12050,
                                  "src": "1164:6:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NuCypherToken_$751",
                                    "typeString": "contract NuCypherToken"
                                  }
                                },
                                "src": "1145:25:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1105:65:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 12081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 12077,
                                    "name": "_policyManager",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12056,
                                    "src": "1186:14:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PolicyManager_$3682",
                                      "typeString": "contract PolicyManager"
                                    }
                                  },
                                  "id": 12078,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "secondsPerPeriod",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 983,
                                  "src": "1186:31:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint32_$",
                                    "typeString": "function () view external returns (uint32)"
                                  }
                                },
                                "id": 12079,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1186:33:29",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 12080,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1222:1:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1186:37:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "1105:118:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 12091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 12087,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1266:1:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 12086,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1258:7:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 12085,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1258:7:29",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 12088,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1258:10:29",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 12083,
                                  "name": "_tStaking",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12062,
                                  "src": "1239:9:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStaking_$13145",
                                    "typeString": "contract IStaking"
                                  }
                                },
                                "id": 12084,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "stakedNu",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13099,
                                "src": "1239:18:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 12089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1239:30:29",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 12090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1273:1:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "1239:35:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1105:169:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 12107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 12101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 12095,
                                      "name": "_workLock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12059,
                                      "src": "1352:9:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_WorkLock_$7000",
                                        "typeString": "contract WorkLock"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_WorkLock_$7000",
                                        "typeString": "contract WorkLock"
                                      }
                                    ],
                                    "id": 12094,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1344:7:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 12093,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1344:7:29",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 12096,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1344:18:29",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 12099,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1374:1:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 12098,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1366:7:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 12097,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1366:7:29",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 12100,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1366:10:29",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1344:32:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 12106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 12102,
                                      "name": "_workLock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12059,
                                      "src": "1380:9:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_WorkLock_$7000",
                                        "typeString": "contract WorkLock"
                                      }
                                    },
                                    "id": 12103,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "boostingRefund",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5367,
                                    "src": "1380:24:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 12104,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1380:26:29",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 12105,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1409:1:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1380:30:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1344:66:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 12108,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1343:68:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1105:306:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12065,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1097:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:315:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12111,
                  "nodeType": "ExpressionStatement",
                  "src": "1097:315:29"
                },
                {
                  "expression": {
                    "id": 12114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12112,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12034,
                      "src": "1422:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NuCypherToken_$751",
                        "typeString": "contract NuCypherToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12113,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12050,
                      "src": "1430:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NuCypherToken_$751",
                        "typeString": "contract NuCypherToken"
                      }
                    },
                    "src": "1422:14:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NuCypherToken_$751",
                      "typeString": "contract NuCypherToken"
                    }
                  },
                  "id": 12115,
                  "nodeType": "ExpressionStatement",
                  "src": "1422:14:29"
                },
                {
                  "expression": {
                    "id": 12118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12116,
                      "name": "escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12037,
                      "src": "1446:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                        "typeString": "contract IStakingEscrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12117,
                      "name": "_escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12053,
                      "src": "1455:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                        "typeString": "contract IStakingEscrow"
                      }
                    },
                    "src": "1446:16:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                      "typeString": "contract IStakingEscrow"
                    }
                  },
                  "id": 12119,
                  "nodeType": "ExpressionStatement",
                  "src": "1446:16:29"
                },
                {
                  "expression": {
                    "id": 12122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12120,
                      "name": "policyManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12040,
                      "src": "1472:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolicyManager_$3682",
                        "typeString": "contract PolicyManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12121,
                      "name": "_policyManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12056,
                      "src": "1488:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolicyManager_$3682",
                        "typeString": "contract PolicyManager"
                      }
                    },
                    "src": "1472:30:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyManager_$3682",
                      "typeString": "contract PolicyManager"
                    }
                  },
                  "id": 12123,
                  "nodeType": "ExpressionStatement",
                  "src": "1472:30:29"
                },
                {
                  "expression": {
                    "id": 12126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12124,
                      "name": "workLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12043,
                      "src": "1512:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WorkLock_$7000",
                        "typeString": "contract WorkLock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12125,
                      "name": "_workLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12059,
                      "src": "1523:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WorkLock_$7000",
                        "typeString": "contract WorkLock"
                      }
                    },
                    "src": "1512:20:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WorkLock_$7000",
                      "typeString": "contract WorkLock"
                    }
                  },
                  "id": 12127,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:20:29"
                },
                {
                  "expression": {
                    "id": 12130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12128,
                      "name": "tStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12046,
                      "src": "1542:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStaking_$13145",
                        "typeString": "contract IStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12129,
                      "name": "_tStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12062,
                      "src": "1553:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStaking_$13145",
                        "typeString": "contract IStaking"
                      }
                    },
                    "src": "1542:20:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStaking_$13145",
                      "typeString": "contract IStaking"
                    }
                  },
                  "id": 12131,
                  "nodeType": "ExpressionStatement",
                  "src": "1542:20:29"
                },
                {
                  "expression": {
                    "id": 12137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12132,
                      "name": "stakingInterfaceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12031,
                      "src": "1572:23:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12135,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "1606:4:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BaseStakingInterface_$12172",
                            "typeString": "contract BaseStakingInterface"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BaseStakingInterface_$12172",
                            "typeString": "contract BaseStakingInterface"
                          }
                        ],
                        "id": 12134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1598:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 12133,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1598:7:29",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 12136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1598:13:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1572:39:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12138,
                  "nodeType": "ExpressionStatement",
                  "src": "1572:39:29"
                }
              ]
            },
            "documentation": {
              "id": 12047,
              "nodeType": "StructuredDocumentation",
              "src": "621:287:29",
              "text": " @notice Constructor sets addresses of the contracts\n @param _token Token contract\n @param _escrow Escrow contract\n @param _policyManager PolicyManager contract\n @param _workLock WorkLock contract\n @param _tStaking Threshold TokenStaking contract"
            },
            "id": 12140,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12050,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "948:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12140,
                  "src": "934:20:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NuCypherToken_$751",
                    "typeString": "contract NuCypherToken"
                  },
                  "typeName": {
                    "id": 12049,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12048,
                      "name": "NuCypherToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 751,
                      "src": "934:13:29"
                    },
                    "referencedDeclaration": 751,
                    "src": "934:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NuCypherToken_$751",
                      "typeString": "contract NuCypherToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12053,
                  "mutability": "mutable",
                  "name": "_escrow",
                  "nameLocation": "979:7:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12140,
                  "src": "964:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                    "typeString": "contract IStakingEscrow"
                  },
                  "typeName": {
                    "id": 12052,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12051,
                      "name": "IStakingEscrow",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 691,
                      "src": "964:14:29"
                    },
                    "referencedDeclaration": 691,
                    "src": "964:14:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                      "typeString": "contract IStakingEscrow"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12056,
                  "mutability": "mutable",
                  "name": "_policyManager",
                  "nameLocation": "1010:14:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12140,
                  "src": "996:28:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PolicyManager_$3682",
                    "typeString": "contract PolicyManager"
                  },
                  "typeName": {
                    "id": 12055,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12054,
                      "name": "PolicyManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3682,
                      "src": "996:13:29"
                    },
                    "referencedDeclaration": 3682,
                    "src": "996:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyManager_$3682",
                      "typeString": "contract PolicyManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12059,
                  "mutability": "mutable",
                  "name": "_workLock",
                  "nameLocation": "1043:9:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12140,
                  "src": "1034:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_WorkLock_$7000",
                    "typeString": "contract WorkLock"
                  },
                  "typeName": {
                    "id": 12058,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12057,
                      "name": "WorkLock",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7000,
                      "src": "1034:8:29"
                    },
                    "referencedDeclaration": 7000,
                    "src": "1034:8:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WorkLock_$7000",
                      "typeString": "contract WorkLock"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12062,
                  "mutability": "mutable",
                  "name": "_tStaking",
                  "nameLocation": "1071:9:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12140,
                  "src": "1062:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStaking_$13145",
                    "typeString": "contract IStaking"
                  },
                  "typeName": {
                    "id": 12061,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12060,
                      "name": "IStaking",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13145,
                      "src": "1062:8:29"
                    },
                    "referencedDeclaration": 13145,
                    "src": "1062:8:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStaking_$13145",
                      "typeString": "contract IStaking"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "924:162:29"
            },
            "returnParameters": {
              "id": 12064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1087:0:29"
            },
            "scope": 12172,
            "src": "913:705:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12153,
              "nodeType": "Block",
              "src": "1721:77:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12144,
                          "name": "stakingInterfaceAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12031,
                          "src": "1739:23:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 12147,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1774:4:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BaseStakingInterface_$12172",
                                "typeString": "contract BaseStakingInterface"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BaseStakingInterface_$12172",
                                "typeString": "contract BaseStakingInterface"
                              }
                            ],
                            "id": 12146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1766:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 12145,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1766:7:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1766:13:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1739:40:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1731:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1731:49:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12151,
                  "nodeType": "ExpressionStatement",
                  "src": "1731:49:29"
                },
                {
                  "id": 12152,
                  "nodeType": "PlaceholderStatement",
                  "src": "1790:1:29"
                }
              ]
            },
            "documentation": {
              "id": 12141,
              "nodeType": "StructuredDocumentation",
              "src": "1624:60:29",
              "text": " @dev Checks executing through delegate call"
            },
            "id": 12154,
            "name": "onlyDelegateCall",
            "nameLocation": "1698:16:29",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 12142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1714:2:29"
            },
            "src": "1689:109:29",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12170,
              "nodeType": "Block",
              "src": "1903:68:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 12160,
                              "name": "workLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12043,
                              "src": "1929:8:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WorkLock_$7000",
                                "typeString": "contract WorkLock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_WorkLock_$7000",
                                "typeString": "contract WorkLock"
                              }
                            ],
                            "id": 12159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1921:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 12158,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1921:7:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1921:17:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 12164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1950:1:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 12163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1942:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 12162,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1942:7:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1942:10:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1921:31:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1913:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1913:40:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12168,
                  "nodeType": "ExpressionStatement",
                  "src": "1913:40:29"
                },
                {
                  "id": 12169,
                  "nodeType": "PlaceholderStatement",
                  "src": "1963:1:29"
                }
              ]
            },
            "documentation": {
              "id": 12155,
              "nodeType": "StructuredDocumentation",
              "src": "1804:67:29",
              "text": " @dev Checks the existence of the worklock contract"
            },
            "id": 12171,
            "name": "workLockSet",
            "nameLocation": "1885:11:29",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 12156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1896:2:29"
            },
            "src": "1876:95:29",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 12485,
        "src": "313:1661:29",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12174,
              "name": "BaseStakingInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12172,
              "src": "2218:20:29"
            },
            "id": 12175,
            "nodeType": "InheritanceSpecifier",
            "src": "2218:20:29"
          }
        ],
        "canonicalName": "StakingInterface",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 12173,
          "nodeType": "StructuredDocumentation",
          "src": "1977:211:29",
          "text": " @notice Interface for accessing main contracts from a staking contract\n @dev All methods must be stateless because this code will be executed by delegatecall call, use immutable fields.\n @dev |v1.9.1|"
        },
        "fullyImplemented": true,
        "id": 12484,
        "linearizedBaseContracts": [
          12484,
          12172
        ],
        "name": "StakingInterface",
        "nameLocation": "2198:16:29",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 12181,
            "name": "WithdrawnAsStaker",
            "nameLocation": "2252:17:29",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12177,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2286:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12181,
                  "src": "2270:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2270:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12179,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2302:5:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12181,
                  "src": "2294:13:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2294:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2269:39:29"
            },
            "src": "2246:63:29"
          },
          {
            "anonymous": false,
            "id": 12187,
            "name": "PolicyFeeWithdrawn",
            "nameLocation": "2320:18:29",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12183,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2355:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12187,
                  "src": "2339:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2339:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12185,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2371:5:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12187,
                  "src": "2363:13:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2363:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2338:39:29"
            },
            "src": "2314:64:29"
          },
          {
            "anonymous": false,
            "id": 12193,
            "name": "MinFeeRateSet",
            "nameLocation": "2389:13:29",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12189,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2419:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12193,
                  "src": "2403:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12191,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2435:5:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12193,
                  "src": "2427:13:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2427:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2402:39:29"
            },
            "src": "2383:59:29"
          },
          {
            "anonymous": false,
            "id": 12199,
            "name": "Bid",
            "nameLocation": "2453:3:29",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12195,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2473:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12199,
                  "src": "2457:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2457:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12197,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "depositedETH",
                  "nameLocation": "2489:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12199,
                  "src": "2481:20:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2481:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2456:46:29"
            },
            "src": "2447:56:29"
          },
          {
            "anonymous": false,
            "id": 12205,
            "name": "Claimed",
            "nameLocation": "2514:7:29",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12201,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2538:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12205,
                  "src": "2522:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2522:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12203,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimedTokens",
                  "nameLocation": "2554:13:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12205,
                  "src": "2546:21:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2546:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2521:47:29"
            },
            "src": "2508:61:29"
          },
          {
            "anonymous": false,
            "id": 12211,
            "name": "Refund",
            "nameLocation": "2580:6:29",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12207,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2603:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12211,
                  "src": "2587:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2587:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12209,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "refundETH",
                  "nameLocation": "2619:9:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12211,
                  "src": "2611:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2611:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2586:43:29"
            },
            "src": "2574:56:29"
          },
          {
            "anonymous": false,
            "id": 12215,
            "name": "BidCanceled",
            "nameLocation": "2641:11:29",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12213,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2669:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12215,
                  "src": "2653:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2653:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2652:24:29"
            },
            "src": "2635:42:29"
          },
          {
            "anonymous": false,
            "id": 12219,
            "name": "CompensationWithdrawn",
            "nameLocation": "2688:21:29",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12217,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2726:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12219,
                  "src": "2710:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2710:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2709:24:29"
            },
            "src": "2682:52:29"
          },
          {
            "anonymous": false,
            "id": 12229,
            "name": "ThresholdNUStaked",
            "nameLocation": "2745:17:29",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12221,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2788:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12229,
                  "src": "2772:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2772:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12223,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "2820:8:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12229,
                  "src": "2804:24:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2804:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12225,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "2846:11:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12229,
                  "src": "2838:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2838:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12227,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "authorizer",
                  "nameLocation": "2875:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12229,
                  "src": "2867:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2867:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2762:129:29"
            },
            "src": "2739:153:29"
          },
          {
            "anonymous": false,
            "id": 12237,
            "name": "ThresholdNUUnstaked",
            "nameLocation": "2903:19:29",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12231,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2939:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12237,
                  "src": "2923:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2923:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12233,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "2963:8:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12237,
                  "src": "2947:24:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2947:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12235,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2980:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12237,
                  "src": "2973:13:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 12234,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2973:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2922:65:29"
            },
            "src": "2897:91:29"
          },
          {
            "body": {
              "id": 12263,
              "nodeType": "Block",
              "src": "3548:7:29",
              "statements": []
            },
            "documentation": {
              "id": 12238,
              "nodeType": "StructuredDocumentation",
              "src": "2994:287:29",
              "text": " @notice Constructor sets addresses of the contracts\n @param _token Token contract\n @param _escrow Escrow contract\n @param _policyManager PolicyManager contract\n @param _workLock WorkLock contract\n @param _tStaking Threshold TokenStaking contract"
            },
            "id": 12264,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 12256,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12241,
                    "src": "3489:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NuCypherToken_$751",
                      "typeString": "contract NuCypherToken"
                    }
                  },
                  {
                    "id": 12257,
                    "name": "_escrow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12244,
                    "src": "3497:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                      "typeString": "contract IStakingEscrow"
                    }
                  },
                  {
                    "id": 12258,
                    "name": "_policyManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12247,
                    "src": "3506:14:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyManager_$3682",
                      "typeString": "contract PolicyManager"
                    }
                  },
                  {
                    "id": 12259,
                    "name": "_workLock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12250,
                    "src": "3522:9:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WorkLock_$7000",
                      "typeString": "contract WorkLock"
                    }
                  },
                  {
                    "id": 12260,
                    "name": "_tStaking",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12253,
                    "src": "3533:9:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStaking_$13145",
                      "typeString": "contract IStaking"
                    }
                  }
                ],
                "id": 12261,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 12255,
                  "name": "BaseStakingInterface",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12172,
                  "src": "3468:20:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "3468:75:29"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12241,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3321:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12264,
                  "src": "3307:20:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NuCypherToken_$751",
                    "typeString": "contract NuCypherToken"
                  },
                  "typeName": {
                    "id": 12240,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12239,
                      "name": "NuCypherToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 751,
                      "src": "3307:13:29"
                    },
                    "referencedDeclaration": 751,
                    "src": "3307:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NuCypherToken_$751",
                      "typeString": "contract NuCypherToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12244,
                  "mutability": "mutable",
                  "name": "_escrow",
                  "nameLocation": "3352:7:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12264,
                  "src": "3337:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                    "typeString": "contract IStakingEscrow"
                  },
                  "typeName": {
                    "id": 12243,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12242,
                      "name": "IStakingEscrow",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 691,
                      "src": "3337:14:29"
                    },
                    "referencedDeclaration": 691,
                    "src": "3337:14:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                      "typeString": "contract IStakingEscrow"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12247,
                  "mutability": "mutable",
                  "name": "_policyManager",
                  "nameLocation": "3383:14:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12264,
                  "src": "3369:28:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PolicyManager_$3682",
                    "typeString": "contract PolicyManager"
                  },
                  "typeName": {
                    "id": 12246,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12245,
                      "name": "PolicyManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3682,
                      "src": "3369:13:29"
                    },
                    "referencedDeclaration": 3682,
                    "src": "3369:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyManager_$3682",
                      "typeString": "contract PolicyManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12250,
                  "mutability": "mutable",
                  "name": "_workLock",
                  "nameLocation": "3416:9:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12264,
                  "src": "3407:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_WorkLock_$7000",
                    "typeString": "contract WorkLock"
                  },
                  "typeName": {
                    "id": 12249,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12248,
                      "name": "WorkLock",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7000,
                      "src": "3407:8:29"
                    },
                    "referencedDeclaration": 7000,
                    "src": "3407:8:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WorkLock_$7000",
                      "typeString": "contract WorkLock"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12253,
                  "mutability": "mutable",
                  "name": "_tStaking",
                  "nameLocation": "3444:9:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12264,
                  "src": "3435:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStaking_$13145",
                    "typeString": "contract IStaking"
                  },
                  "typeName": {
                    "id": 12252,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12251,
                      "name": "IStaking",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13145,
                      "src": "3435:8:29"
                    },
                    "referencedDeclaration": 13145,
                    "src": "3435:8:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStaking_$13145",
                      "typeString": "contract IStaking"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3297:162:29"
            },
            "returnParameters": {
              "id": 12262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3548:0:29"
            },
            "scope": 12484,
            "src": "3286:269:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12284,
              "nodeType": "Block",
              "src": "3788:92:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12275,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12267,
                        "src": "3814:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12272,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12037,
                        "src": "3798:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingEscrow_$691",
                          "typeString": "contract IStakingEscrow"
                        }
                      },
                      "id": 12274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 690,
                      "src": "3798:15:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 12276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3798:23:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12277,
                  "nodeType": "ExpressionStatement",
                  "src": "3798:23:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12279,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3854:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3854:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12281,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12267,
                        "src": "3866:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12278,
                      "name": "WithdrawnAsStaker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12181,
                      "src": "3836:17:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3836:37:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12283,
                  "nodeType": "EmitStatement",
                  "src": "3831:42:29"
                }
              ]
            },
            "documentation": {
              "id": 12265,
              "nodeType": "StructuredDocumentation",
              "src": "3561:156:29",
              "text": " @notice Withdraw available amount of tokens from the staking escrow to the staking contract\n @param _value Amount of token to withdraw"
            },
            "functionSelector": "9d223d15",
            "id": 12285,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12270,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12269,
                  "name": "onlyDelegateCall",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12154,
                  "src": "3771:16:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "3771:16:29"
              }
            ],
            "name": "withdrawAsStaker",
            "nameLocation": "3731:16:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12267,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "3756:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12285,
                  "src": "3748:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3748:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3747:16:29"
            },
            "returnParameters": {
              "id": 12271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3788:0:29"
            },
            "scope": 12484,
            "src": "3722:158:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12303,
              "nodeType": "Block",
              "src": "4047:109:29",
              "statements": [
                {
                  "assignments": [
                    12292
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12292,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "4065:5:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 12303,
                      "src": "4057:13:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12291,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4057:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12296,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 12293,
                        "name": "policyManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12040,
                        "src": "4073:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyManager_$3682",
                          "typeString": "contract PolicyManager"
                        }
                      },
                      "id": 12294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2114,
                      "src": "4073:22:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 12295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4073:24:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4057:40:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12298,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4131:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4131:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12300,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12292,
                        "src": "4143:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12297,
                      "name": "PolicyFeeWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12187,
                      "src": "4112:18:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4112:37:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12302,
                  "nodeType": "EmitStatement",
                  "src": "4107:42:29"
                }
              ]
            },
            "documentation": {
              "id": 12286,
              "nodeType": "StructuredDocumentation",
              "src": "3886:103:29",
              "text": " @notice Withdraw available policy fees from the policy manager to the staking contract"
            },
            "functionSelector": "4e62ef1e",
            "id": 12304,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12289,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12288,
                  "name": "onlyDelegateCall",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12154,
                  "src": "4030:16:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "4030:16:29"
              }
            ],
            "name": "withdrawPolicyFee",
            "nameLocation": "4003:17:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4020:2:29"
            },
            "returnParameters": {
              "id": 12290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4047:0:29"
            },
            "scope": 12484,
            "src": "3994:162:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12324,
              "nodeType": "Block",
              "src": "4338:110:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12315,
                        "name": "_minFeeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12307,
                        "src": "4376:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12312,
                        "name": "policyManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12040,
                        "src": "4348:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyManager_$3682",
                          "typeString": "contract PolicyManager"
                        }
                      },
                      "id": 12314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setMinFeeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1276,
                      "src": "4348:27:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 12316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4348:40:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12317,
                  "nodeType": "ExpressionStatement",
                  "src": "4348:40:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12319,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4417:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4417:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12321,
                        "name": "_minFeeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12307,
                        "src": "4429:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12318,
                      "name": "MinFeeRateSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12193,
                      "src": "4403:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4403:38:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12323,
                  "nodeType": "EmitStatement",
                  "src": "4398:43:29"
                }
              ]
            },
            "documentation": {
              "id": 12305,
              "nodeType": "StructuredDocumentation",
              "src": "4162:103:29",
              "text": " @notice Set the minimum fee that the staker will accept in the policy manager contract"
            },
            "functionSelector": "8c316b90",
            "id": 12325,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12310,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12309,
                  "name": "onlyDelegateCall",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12154,
                  "src": "4321:16:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "4321:16:29"
              }
            ],
            "name": "setMinFeeRate",
            "nameLocation": "4279:13:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12307,
                  "mutability": "mutable",
                  "name": "_minFeeRate",
                  "nameLocation": "4301:11:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12325,
                  "src": "4293:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4293:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4292:21:29"
            },
            "returnParameters": {
              "id": 12311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4338:0:29"
            },
            "scope": 12484,
            "src": "4270:178:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12348,
              "nodeType": "Block",
              "src": "4591:84:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 12335,
                          "name": "workLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12043,
                          "src": "4601:8:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WorkLock_$7000",
                            "typeString": "contract WorkLock"
                          }
                        },
                        "id": 12337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6083,
                        "src": "4601:12:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 12339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 12338,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12328,
                          "src": "4621:6:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4601:27:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 12340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4601:29:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12341,
                  "nodeType": "ExpressionStatement",
                  "src": "4601:29:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12343,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4649:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4649:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12345,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12328,
                        "src": "4661:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12342,
                      "name": "Bid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12199,
                      "src": "4645:3:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4645:23:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12347,
                  "nodeType": "EmitStatement",
                  "src": "4640:28:29"
                }
              ]
            },
            "documentation": {
              "id": 12326,
              "nodeType": "StructuredDocumentation",
              "src": "4454:59:29",
              "text": " @notice Bid for tokens by transferring ETH"
            },
            "functionSelector": "454a2ab3",
            "id": 12349,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12331,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12330,
                  "name": "onlyDelegateCall",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12154,
                  "src": "4562:16:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "4562:16:29"
              },
              {
                "id": 12333,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12332,
                  "name": "workLockSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12171,
                  "src": "4579:11:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "4579:11:29"
              }
            ],
            "name": "bid",
            "nameLocation": "4527:3:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12328,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "4539:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12349,
                  "src": "4531:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4531:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4530:16:29"
            },
            "returnParameters": {
              "id": 12334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4591:0:29"
            },
            "scope": 12484,
            "src": "4518:157:29",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12367,
              "nodeType": "Block",
              "src": "4803:75:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 12357,
                        "name": "workLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12043,
                        "src": "4813:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WorkLock_$7000",
                          "typeString": "contract WorkLock"
                        }
                      },
                      "id": 12359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cancelBid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6198,
                      "src": "4813:18:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 12360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4813:20:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12361,
                  "nodeType": "ExpressionStatement",
                  "src": "4813:20:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12363,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4860:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4860:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12362,
                      "name": "BidCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12215,
                      "src": "4848:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4848:23:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12366,
                  "nodeType": "EmitStatement",
                  "src": "4843:28:29"
                }
              ]
            },
            "documentation": {
              "id": 12350,
              "nodeType": "StructuredDocumentation",
              "src": "4681:60:29",
              "text": " @notice Cancel bid and refund deposited ETH"
            },
            "functionSelector": "9435c887",
            "id": 12368,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12353,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12352,
                  "name": "onlyDelegateCall",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12154,
                  "src": "4774:16:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "4774:16:29"
              },
              {
                "id": 12355,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12354,
                  "name": "workLockSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12171,
                  "src": "4791:11:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "4791:11:29"
              }
            ],
            "name": "cancelBid",
            "nameLocation": "4755:9:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4764:2:29"
            },
            "returnParameters": {
              "id": 12356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4803:0:29"
            },
            "scope": 12484,
            "src": "4746:132:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12386,
              "nodeType": "Block",
              "src": "5022:96:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 12376,
                        "name": "workLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12043,
                        "src": "5032:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WorkLock_$7000",
                          "typeString": "contract WorkLock"
                        }
                      },
                      "id": 12378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawCompensation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6620,
                      "src": "5032:29:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 12379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5032:31:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12380,
                  "nodeType": "ExpressionStatement",
                  "src": "5032:31:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12382,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5100:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5100:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12381,
                      "name": "CompensationWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12219,
                      "src": "5078:21:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5078:33:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12385,
                  "nodeType": "EmitStatement",
                  "src": "5073:38:29"
                }
              ]
            },
            "documentation": {
              "id": 12369,
              "nodeType": "StructuredDocumentation",
              "src": "4884:65:29",
              "text": " @notice Withdraw compensation after force refund"
            },
            "functionSelector": "87a15dc9",
            "id": 12387,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12372,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12371,
                  "name": "onlyDelegateCall",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12154,
                  "src": "4993:16:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "4993:16:29"
              },
              {
                "id": 12374,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12373,
                  "name": "workLockSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12171,
                  "src": "5010:11:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "5010:11:29"
              }
            ],
            "name": "withdrawCompensation",
            "nameLocation": "4963:20:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4983:2:29"
            },
            "returnParameters": {
              "id": 12375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5022:0:29"
            },
            "scope": 12484,
            "src": "4954:164:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12407,
              "nodeType": "Block",
              "src": "5289:106:29",
              "statements": [
                {
                  "assignments": [
                    12396
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12396,
                      "mutability": "mutable",
                      "name": "claimedTokens",
                      "nameLocation": "5307:13:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 12407,
                      "src": "5299:21:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12395,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5299:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12400,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 12397,
                        "name": "workLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12043,
                        "src": "5323:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WorkLock_$7000",
                          "typeString": "contract WorkLock"
                        }
                      },
                      "id": 12398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6839,
                      "src": "5323:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 12399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5323:16:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5299:40:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12402,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5362:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5362:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12404,
                        "name": "claimedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12396,
                        "src": "5374:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12401,
                      "name": "Claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12205,
                      "src": "5354:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5354:34:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12406,
                  "nodeType": "EmitStatement",
                  "src": "5349:39:29"
                }
              ]
            },
            "documentation": {
              "id": 12388,
              "nodeType": "StructuredDocumentation",
              "src": "5124:107:29",
              "text": " @notice Claimed tokens will be deposited and locked as stake in the StakingEscrow contract"
            },
            "functionSelector": "4e71d92d",
            "id": 12408,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12391,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12390,
                  "name": "onlyDelegateCall",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12154,
                  "src": "5260:16:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "5260:16:29"
              },
              {
                "id": 12393,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12392,
                  "name": "workLockSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12171,
                  "src": "5277:11:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "5277:11:29"
              }
            ],
            "name": "claim",
            "nameLocation": "5245:5:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5250:2:29"
            },
            "returnParameters": {
              "id": 12394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5289:0:29"
            },
            "scope": 12484,
            "src": "5236:159:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12428,
              "nodeType": "Block",
              "src": "5518:98:29",
              "statements": [
                {
                  "assignments": [
                    12417
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12417,
                      "mutability": "mutable",
                      "name": "refundETH",
                      "nameLocation": "5536:9:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 12428,
                      "src": "5528:17:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12416,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5528:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12421,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 12418,
                        "name": "workLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12043,
                        "src": "5548:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WorkLock_$7000",
                          "typeString": "contract WorkLock"
                        }
                      },
                      "id": 12419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "refund",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6999,
                      "src": "5548:15:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 12420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5548:17:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5528:37:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12423,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5587:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5587:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12425,
                        "name": "refundETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12417,
                        "src": "5599:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12422,
                      "name": "Refund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12211,
                      "src": "5580:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5580:29:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12427,
                  "nodeType": "EmitStatement",
                  "src": "5575:34:29"
                }
              ]
            },
            "documentation": {
              "id": 12409,
              "nodeType": "StructuredDocumentation",
              "src": "5401:58:29",
              "text": " @notice Refund ETH for the completed work"
            },
            "functionSelector": "590e1ae3",
            "id": 12429,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12412,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12411,
                  "name": "onlyDelegateCall",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12154,
                  "src": "5489:16:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "5489:16:29"
              },
              {
                "id": 12414,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12413,
                  "name": "workLockSet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12171,
                  "src": "5506:11:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "5506:11:29"
              }
            ],
            "name": "refund",
            "nameLocation": "5473:6:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5479:2:29"
            },
            "returnParameters": {
              "id": 12415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5518:0:29"
            },
            "scope": 12484,
            "src": "5464:152:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12457,
              "nodeType": "Block",
              "src": "5932:147:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12444,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12432,
                        "src": "5959:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12445,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12434,
                        "src": "5969:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 12446,
                        "name": "authorizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12436,
                        "src": "5982:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 12441,
                        "name": "tStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12046,
                        "src": "5942:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStaking_$13145",
                          "typeString": "contract IStaking"
                        }
                      },
                      "id": 12443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakeNu",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12859,
                      "src": "5942:16:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_payable_$_t_address_$returns$__$",
                        "typeString": "function (address,address payable,address) external"
                      }
                    },
                    "id": 12447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5942:51:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12448,
                  "nodeType": "ExpressionStatement",
                  "src": "5942:51:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12450,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6026:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6026:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12452,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12432,
                        "src": "6038:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12453,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12434,
                        "src": "6048:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 12454,
                        "name": "authorizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12436,
                        "src": "6061:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12449,
                      "name": "ThresholdNUStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12229,
                      "src": "6008:17:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address)"
                      }
                    },
                    "id": 12455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6008:64:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12456,
                  "nodeType": "EmitStatement",
                  "src": "6003:69:29"
                }
              ]
            },
            "documentation": {
              "id": 12430,
              "nodeType": "StructuredDocumentation",
              "src": "5622:165:29",
              "text": " @notice Copies delegation from the legacy NU staking contract to T staking contract,\n additionally appointing beneficiary and authorizer roles."
            },
            "functionSelector": "81b0a0ce",
            "id": 12458,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12439,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12438,
                  "name": "onlyDelegateCall",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12154,
                  "src": "5915:16:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "5915:16:29"
              }
            ],
            "name": "stakeNu",
            "nameLocation": "5801:7:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12432,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5826:8:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12458,
                  "src": "5818:16:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5818:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12434,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "5860:11:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12458,
                  "src": "5844:27:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 12433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5844:15:29",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12436,
                  "mutability": "mutable",
                  "name": "authorizer",
                  "nameLocation": "5889:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12458,
                  "src": "5881:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5881:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5808:97:29"
            },
            "returnParameters": {
              "id": 12440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5932:0:29"
            },
            "scope": 12484,
            "src": "5792:287:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12482,
              "nodeType": "Block",
              "src": "6254:117:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12471,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12461,
                        "src": "6283:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12472,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12463,
                        "src": "6293:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "expression": {
                        "id": 12468,
                        "name": "tStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12046,
                        "src": "6264:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStaking_$13145",
                          "typeString": "contract IStaking"
                        }
                      },
                      "id": 12470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unstakeNu",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12987,
                      "src": "6264:18:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint96_$returns$__$",
                        "typeString": "function (address,uint96) external"
                      }
                    },
                    "id": 12473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6264:36:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12474,
                  "nodeType": "ExpressionStatement",
                  "src": "6264:36:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12476,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6335:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6335:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12478,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12461,
                        "src": "6347:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12479,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12463,
                        "src": "6357:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 12475,
                      "name": "ThresholdNUUnstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12237,
                      "src": "6315:19:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
                        "typeString": "function (address,address,uint96)"
                      }
                    },
                    "id": 12480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6315:49:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12481,
                  "nodeType": "EmitStatement",
                  "src": "6310:54:29"
                }
              ]
            },
            "documentation": {
              "id": 12459,
              "nodeType": "StructuredDocumentation",
              "src": "6085:86:29",
              "text": " @notice Reduces cached legacy NU stake amount by the provided amount."
            },
            "functionSelector": "58ccdf38",
            "id": 12483,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12466,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12465,
                  "name": "onlyDelegateCall",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12154,
                  "src": "6237:16:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "6237:16:29"
              }
            ],
            "name": "unstakeNu",
            "nameLocation": "6185:9:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12461,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6203:8:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12483,
                  "src": "6195:16:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6195:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12463,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6220:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 12483,
                  "src": "6213:13:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 12462,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "6213:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6194:33:29"
            },
            "returnParameters": {
              "id": 12467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6254:0:29"
            },
            "scope": 12484,
            "src": "6176:195:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 12485,
        "src": "2189:4184:29",
        "usedErrors": []
      }
    ],
    "src": "47:6327:29"
  },
  "bytecode": "6101406040523480156200001257600080fd5b5060405162001370380380620013708339810160408190526200003591620002ec565b84848484846000856001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200007b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000a191906200036c565b118015620001245750846001600160a01b0316846001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000119919062000386565b6001600160a01b0316145b80156200019b57506000836001600160a01b031663407f80016040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200016d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001939190620003ad565b63ffffffff16115b8015620002115750604051634a11fae360e01b8152600060048201526001600160a01b03821690634a11fae390602401602060405180830381865afa158015620001e9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020f91906200036c565b155b80156200029457506001600160a01b03821615806200029457506000826001600160a01b0316635bf997f56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200026c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029291906200036c565b115b6200029e57600080fd5b6001600160a01b0394851660a05292841660c05290831660e052821661010052166101205250503060805250620003d5915050565b6001600160a01b0381168114620002e957600080fd5b50565b600080600080600060a086880312156200030557600080fd5b85516200031281620002d3565b60208701519095506200032581620002d3565b60408701519094506200033881620002d3565b60608701519093506200034b81620002d3565b60808701519092506200035e81620002d3565b809150509295509295909350565b6000602082840312156200037f57600080fd5b5051919050565b6000602082840312156200039957600080fd5b8151620003a681620002d3565b9392505050565b600060208284031215620003c057600080fd5b815163ffffffff81168114620003a657600080fd5b60805160a05160c05160e0516101005161012051610e9c620004d4600039600081816102c0015281816106da015261090c01526000818161010a01528181610382015281816103b50152818161058a015281816105bf015281816107bb015281816107f0015281816109ee01528181610a2101528181610bd90152610c0c01526000818161028c0152818161049b0152610b0b0152600081816102f40152610cf6015260006103280152600081816102580152818161034c01528181610463015281816105540152818161067801528181610785015281816108a9015281816109b801528181610ac101528181610ba30152610cac0152610e9c6000f3fe6080604052600436106100f35760003560e01c80638c316b901161008a578063ab3dbf3b11610059578063ab3dbf3b1461027a578063dbaa0fc6146102ae578063e2fdcc17146102e2578063fc0c546a1461031657600080fd5b80638c316b90146101f15780639435c887146102115780639d223d15146102265780639d83a8dc1461024657600080fd5b806358ccdf38116100c657806358ccdf3814610187578063590e1ae3146101a757806381b0a0ce146101bc57806387a15dc9146101dc57600080fd5b80631c7fd532146100f8578063454a2ab3146101485780634e62ef1e1461015d5780634e71d92d14610172575b600080fd5b34801561010457600080fd5b5061012c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61015b610156366004610d8c565b61034a565b005b34801561016957600080fd5b5061015b610461565b34801561017e57600080fd5b5061015b610552565b34801561019357600080fd5b5061015b6101a2366004610dbd565b610676565b3480156101b357600080fd5b5061015b610783565b3480156101c857600080fd5b5061015b6101d7366004610e02565b6108a7565b3480156101e857600080fd5b5061015b6109b6565b3480156101fd57600080fd5b5061015b61020c366004610d8c565b610abf565b34801561021d57600080fd5b5061015b610ba1565b34801561023257600080fd5b5061015b610241366004610d8c565b610caa565b34801561025257600080fd5b5061012c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561028657600080fd5b5061012c7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102ba57600080fd5b5061012c7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102ee57600080fd5b5061012c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561032257600080fd5b5061012c7f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561038057600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166103b357600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631998aeef826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561040e57600080fd5b505af1158015610422573d6000803e3d6000fd5b50506040518481523393507fe684a55f31b79eca403df938249029212a5925ec6be8012e099b45bc1019e5d2925060200190505b60405180910390a250565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561049757600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633ccfd60b6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156104f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051d9190610e4d565b60405181815290915033907f3e0af9db9c08380520dc2592809e7281d3aedc8e7441b84c84bdbe00d093dcf190602001610456565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561058857600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105bb57600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e71d92d6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561061d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106419190610e4d565b60405181815290915033907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a90602001610456565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163014156106ac57600080fd5b604051630b199be760e31b81526001600160a01b0383811660048301526001600160601b03831660248301527f000000000000000000000000000000000000000000000000000000000000000016906358ccdf3890604401600060405180830381600087803b15801561071e57600080fd5b505af1158015610732573d6000803e3d6000fd5b50506040516001600160601b03841681526001600160a01b03851692503391507f8fe75ef10e5c5e55d7608601bf1236ffd5ec45d4357fde1e2c5c97abf7b27f689060200160405180910390a35050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163014156107b957600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107ec57600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663590e1ae36040518163ffffffff1660e01b81526004016020604051808303816000875af115801561084e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108729190610e4d565b60405181815290915033907fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d90602001610456565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163014156108dd57600080fd5b6040516340d8506760e11b81526001600160a01b038481166004830152838116602483015282811660448301527f000000000000000000000000000000000000000000000000000000000000000016906381b0a0ce90606401600060405180830381600087803b15801561095057600080fd5b505af1158015610964573d6000803e3d6000fd5b5050604080516001600160a01b0386811682528581166020830152871693503392507f53c7e51be5a8e99f46e6fef4cc254fafc9e161eb0a36ff54d8f408932bba1951910160405180910390a3505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163014156109ec57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a1f57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166387a15dc96040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a7a57600080fd5b505af1158015610a8e573d6000803e3d6000fd5b50506040513392507f1f3c545731eadf66e84bfa3f22265530ac6cde1c211e7a25da70139a06bc39a69150600090a2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316301415610af557600080fd5b6040516308c316b960e41b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638c316b9090602401600060405180830381600087803b158015610b5757600080fd5b505af1158015610b6b573d6000803e3d6000fd5b50506040518381523392507f6b9024cc1bf5710f290be788dca9886db7a3d9be0df0855bfa991dbf26a256bc9150602001610456565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316301415610bd757600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c0a57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639435c8876040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610c6557600080fd5b505af1158015610c79573d6000803e3d6000fd5b50506040513392507f7791542f9106a010f289aa1d108168b87d4e2d3d37ed4ecb762391da5e18a45d9150600090a2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316301415610ce057600080fd5b604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610d4257600080fd5b505af1158015610d56573d6000803e3d6000fd5b50506040518381523392507fe260c3ea1a7da044fdb8e612a54b70847532f00018c3f751beccd55032f620649150602001610456565b600060208284031215610d9e57600080fd5b5035919050565b6001600160a01b0381168114610dba57600080fd5b50565b60008060408385031215610dd057600080fd5b8235610ddb81610da5565b915060208301356001600160601b0381168114610df757600080fd5b809150509250929050565b600080600060608486031215610e1757600080fd5b8335610e2281610da5565b92506020840135610e3281610da5565b91506040840135610e4281610da5565b809150509250925092565b600060208284031215610e5f57600080fd5b505191905056fea2646970667358221220e47989062eb7176ccc8683604835e40b3294dfa896d0dbf37e5e5e4955939e2164736f6c634300080a0033",
  "bytecodeSha1": "8b1d486b0b1a5f248a55c2e843a0b9c255d46601",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "StakingInterface",
  "coverageMap": {
    "branches": {
      "10": {},
      "11": {},
      "12": {},
      "15": {},
      "19": {},
      "22": {},
      "26": {},
      "29": {
        "StakingInterface.withdrawAsStaker": {
          "17": [
            1739,
            1779,
            true
          ]
        }
      },
      "31": {},
      "33": {},
      "34": {},
      "36": {},
      "37": {},
      "38": {},
      "39": {},
      "40": {}
    },
    "statements": {
      "10": {},
      "11": {},
      "12": {},
      "15": {},
      "19": {},
      "22": {},
      "26": {},
      "29": {
        "StakingInterface.bid": {
          "0": [
            4601,
            4630
          ],
          "1": [
            4640,
            4668
          ]
        },
        "StakingInterface.cancelBid": {
          "13": [
            4813,
            4833
          ],
          "14": [
            4843,
            4871
          ]
        },
        "StakingInterface.claim": {
          "3": [
            5349,
            5388
          ]
        },
        "StakingInterface.refund": {
          "6": [
            5575,
            5609
          ]
        },
        "StakingInterface.setMinFeeRate": {
          "11": [
            4348,
            4388
          ],
          "12": [
            4398,
            4441
          ]
        },
        "StakingInterface.stakeNu": {
          "7": [
            5942,
            5993
          ],
          "8": [
            6003,
            6072
          ]
        },
        "StakingInterface.unstakeNu": {
          "4": [
            6264,
            6300
          ],
          "5": [
            6310,
            6364
          ]
        },
        "StakingInterface.withdrawAsStaker": {
          "15": [
            3798,
            3821
          ],
          "16": [
            3831,
            3873
          ]
        },
        "StakingInterface.withdrawCompensation": {
          "9": [
            5032,
            5063
          ],
          "10": [
            5073,
            5111
          ]
        },
        "StakingInterface.withdrawPolicyFee": {
          "2": [
            4107,
            4149
          ]
        }
      },
      "31": {},
      "33": {},
      "34": {},
      "36": {},
      "37": {},
      "38": {},
      "39": {},
      "40": {}
    }
  },
  "dependencies": [
    "AdditionalMath",
    "Address",
    "BaseStakingInterface",
    "ERC20",
    "ERC20Detailed",
    "IERC20",
    "IStaking",
    "IStakingEscrow",
    "NuCypherToken",
    "Ownable",
    "PolicyManager",
    "SafeERC20",
    "SafeMath",
    "SignatureVerifier",
    "TokenRecipient",
    "Upgradeable",
    "WorkLock"
  ],
  "deployedBytecode": "6080604052600436106100f35760003560e01c80638c316b901161008a578063ab3dbf3b11610059578063ab3dbf3b1461027a578063dbaa0fc6146102ae578063e2fdcc17146102e2578063fc0c546a1461031657600080fd5b80638c316b90146101f15780639435c887146102115780639d223d15146102265780639d83a8dc1461024657600080fd5b806358ccdf38116100c657806358ccdf3814610187578063590e1ae3146101a757806381b0a0ce146101bc57806387a15dc9146101dc57600080fd5b80631c7fd532146100f8578063454a2ab3146101485780634e62ef1e1461015d5780634e71d92d14610172575b600080fd5b34801561010457600080fd5b5061012c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61015b610156366004610d8c565b61034a565b005b34801561016957600080fd5b5061015b610461565b34801561017e57600080fd5b5061015b610552565b34801561019357600080fd5b5061015b6101a2366004610dbd565b610676565b3480156101b357600080fd5b5061015b610783565b3480156101c857600080fd5b5061015b6101d7366004610e02565b6108a7565b3480156101e857600080fd5b5061015b6109b6565b3480156101fd57600080fd5b5061015b61020c366004610d8c565b610abf565b34801561021d57600080fd5b5061015b610ba1565b34801561023257600080fd5b5061015b610241366004610d8c565b610caa565b34801561025257600080fd5b5061012c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561028657600080fd5b5061012c7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102ba57600080fd5b5061012c7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102ee57600080fd5b5061012c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561032257600080fd5b5061012c7f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561038057600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166103b357600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631998aeef826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561040e57600080fd5b505af1158015610422573d6000803e3d6000fd5b50506040518481523393507fe684a55f31b79eca403df938249029212a5925ec6be8012e099b45bc1019e5d2925060200190505b60405180910390a250565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561049757600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633ccfd60b6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156104f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051d9190610e4d565b60405181815290915033907f3e0af9db9c08380520dc2592809e7281d3aedc8e7441b84c84bdbe00d093dcf190602001610456565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630141561058857600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105bb57600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634e71d92d6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561061d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106419190610e4d565b60405181815290915033907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a90602001610456565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163014156106ac57600080fd5b604051630b199be760e31b81526001600160a01b0383811660048301526001600160601b03831660248301527f000000000000000000000000000000000000000000000000000000000000000016906358ccdf3890604401600060405180830381600087803b15801561071e57600080fd5b505af1158015610732573d6000803e3d6000fd5b50506040516001600160601b03841681526001600160a01b03851692503391507f8fe75ef10e5c5e55d7608601bf1236ffd5ec45d4357fde1e2c5c97abf7b27f689060200160405180910390a35050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163014156107b957600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107ec57600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663590e1ae36040518163ffffffff1660e01b81526004016020604051808303816000875af115801561084e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108729190610e4d565b60405181815290915033907fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d90602001610456565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163014156108dd57600080fd5b6040516340d8506760e11b81526001600160a01b038481166004830152838116602483015282811660448301527f000000000000000000000000000000000000000000000000000000000000000016906381b0a0ce90606401600060405180830381600087803b15801561095057600080fd5b505af1158015610964573d6000803e3d6000fd5b5050604080516001600160a01b0386811682528581166020830152871693503392507f53c7e51be5a8e99f46e6fef4cc254fafc9e161eb0a36ff54d8f408932bba1951910160405180910390a3505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163014156109ec57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a1f57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166387a15dc96040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a7a57600080fd5b505af1158015610a8e573d6000803e3d6000fd5b50506040513392507f1f3c545731eadf66e84bfa3f22265530ac6cde1c211e7a25da70139a06bc39a69150600090a2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316301415610af557600080fd5b6040516308c316b960e41b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638c316b9090602401600060405180830381600087803b158015610b5757600080fd5b505af1158015610b6b573d6000803e3d6000fd5b50506040518381523392507f6b9024cc1bf5710f290be788dca9886db7a3d9be0df0855bfa991dbf26a256bc9150602001610456565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316301415610bd757600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c0a57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639435c8876040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610c6557600080fd5b505af1158015610c79573d6000803e3d6000fd5b50506040513392507f7791542f9106a010f289aa1d108168b87d4e2d3d37ed4ecb762391da5e18a45d9150600090a2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316301415610ce057600080fd5b604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610d4257600080fd5b505af1158015610d56573d6000803e3d6000fd5b50506040518381523392507fe260c3ea1a7da044fdb8e612a54b70847532f00018c3f751beccd55032f620649150602001610456565b600060208284031215610d9e57600080fd5b5035919050565b6001600160a01b0381168114610dba57600080fd5b50565b60008060408385031215610dd057600080fd5b8235610ddb81610da5565b915060208301356001600160601b0381168114610df757600080fd5b809150509250929050565b600080600060608486031215610e1757600080fd5b8335610e2281610da5565b92506020840135610e3281610da5565b91506040840135610e4281610da5565b809150509250925092565b600060208284031215610e5f57600080fd5b505191905056fea2646970667358221220e47989062eb7176ccc8683604835e40b3294dfa896d0dbf37e5e5e4955939e2164736f6c634300080a0033",
  "deployedSourceMap": "2189:4184:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;540:34;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;195:32:41;;;177:51;;165:2;150:18;540:34:29;;;;;;;4518:157;;;;;;:::i;:::-;;:::i;:::-;;3994:162;;;;;;;;;;;;;:::i;5236:159::-;;;;;;;;;;;;;:::i;6176:195::-;;;;;;;;;;-1:-1:-1;6176:195:29;;;;;:::i;:::-;;:::i;5464:152::-;;;;;;;;;;;;;:::i;5792:287::-;;;;;;;;;;-1:-1:-1;5792:287:29;;;;;:::i;:::-;;:::i;4954:164::-;;;;;;;;;;;;;:::i;4270:178::-;;;;;;;;;;-1:-1:-1;4270:178:29;;;;;:::i;:::-;;:::i;4746:132::-;;;;;;;;;;;;;:::i;3722:158::-;;;;;;;;;;-1:-1:-1;3722:158:29;;;;;:::i;:::-;;:::i;350:48::-;;;;;;;;;;;;;;;490:44;;;;;;;;;;;;;;;580:34;;;;;;;;;;;;;;;446:38;;;;;;;;;;;;;;;404:36;;;;;;;;;;;;;;;4518:157;1739:23;-1:-1:-1;;;;;1739:40:29;1774:4;1739:40;;1731:49;;;;;;1929:8:::1;-1:-1:-1::0;;;;;1921:31:29::1;1913:40;;;::::0;::::1;;4601:8:::2;-1:-1:-1::0;;;;;4601:12:29::2;;4621:6;4601:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;4645:23:29::2;::::0;2811:25:41;;;4649:10:29::2;::::0;-1:-1:-1;4645:23:29::2;::::0;-1:-1:-1;2799:2:41;2784:18;;-1:-1:-1;4645:23:29::2;;;;;;;;4518:157:::0;:::o;3994:162::-;1739:23;-1:-1:-1;;;;;1739:40:29;1774:4;1739:40;;1731:49;;;;;;4057:13:::1;4073;-1:-1:-1::0;;;;;4073:22:29::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4112:37;::::0;2811:25:41;;;4057:40:29;;-1:-1:-1;4131:10:29::1;::::0;4112:37:::1;::::0;2799:2:41;2784:18;4112:37:29::1;2665:177:41::0;5236:159:29;1739:23;-1:-1:-1;;;;;1739:40:29;1774:4;1739:40;;1731:49;;;;;;1929:8:::1;-1:-1:-1::0;;;;;1921:31:29::1;1913:40;;;::::0;::::1;;5299:21:::2;5323:8;-1:-1:-1::0;;;;;5323:14:29::2;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5354:34;::::0;2811:25:41;;;5299:40:29;;-1:-1:-1;5362:10:29::2;::::0;5354:34:::2;::::0;2799:2:41;2784:18;5354:34:29::2;2665:177:41::0;6176:195:29;1739:23;-1:-1:-1;;;;;1739:40:29;1774:4;1739:40;;1731:49;;;;;;6264:36:::1;::::0;-1:-1:-1;;;6264:36:29;;-1:-1:-1;;;;;3226:32:41;;;6264:36:29::1;::::0;::::1;3208:51:41::0;-1:-1:-1;;;;;3295:39:41;;3275:18;;;3268:67;6264:8:29::1;:18;::::0;::::1;::::0;3181::41;;6264:36:29::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;6315:49:29::1;::::0;-1:-1:-1;;;;;3508:39:41;;3490:58;;-1:-1:-1;;;;;6315:49:29;::::1;::::0;-1:-1:-1;6335:10:29::1;::::0;-1:-1:-1;6315:49:29::1;::::0;3478:2:41;3463:18;6315:49:29::1;;;;;;;6176:195:::0;;:::o;5464:152::-;1739:23;-1:-1:-1;;;;;1739:40:29;1774:4;1739:40;;1731:49;;;;;;1929:8:::1;-1:-1:-1::0;;;;;1921:31:29::1;1913:40;;;::::0;::::1;;5528:17:::2;5548:8;-1:-1:-1::0;;;;;5548:15:29::2;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5580:29;::::0;2811:25:41;;;5528:37:29;;-1:-1:-1;5587:10:29::2;::::0;5580:29:::2;::::0;2799:2:41;2784:18;5580:29:29::2;2665:177:41::0;5792:287:29;1739:23;-1:-1:-1;;;;;1739:40:29;1774:4;1739:40;;1731:49;;;;;;5942:51:::1;::::0;-1:-1:-1;;;5942:51:29;;-1:-1:-1;;;;;3833:15:41;;;5942:51:29::1;::::0;::::1;3815:34:41::0;3885:15;;;3865:18;;;3858:43;3937:15;;;3917:18;;;3910:43;5942:8:29::1;:16;::::0;::::1;::::0;3750:18:41;;5942:51:29::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;6008:64:29::1;::::0;;-1:-1:-1;;;;;4202:15:41;;;4184:34;;4254:15;;;4249:2;4234:18;;4227:43;6008:64:29;::::1;::::0;-1:-1:-1;6026:10:29::1;::::0;-1:-1:-1;6008:64:29::1;::::0;4119:18:41;6008:64:29::1;;;;;;;5792:287:::0;;;:::o;4954:164::-;1739:23;-1:-1:-1;;;;;1739:40:29;1774:4;1739:40;;1731:49;;;;;;1929:8:::1;-1:-1:-1::0;;;;;1921:31:29::1;1913:40;;;::::0;::::1;;5032:8:::2;-1:-1:-1::0;;;;;5032:29:29::2;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;5078:33:29::2;::::0;5100:10:::2;::::0;-1:-1:-1;5078:33:29::2;::::0;-1:-1:-1;5078:33:29;;::::2;4954:164::o:0;4270:178::-;1739:23;-1:-1:-1;;;;;1739:40:29;1774:4;1739:40;;1731:49;;;;;;4348:40:::1;::::0;-1:-1:-1;;;4348:40:29;;::::1;::::0;::::1;2811:25:41::0;;;4348:13:29::1;-1:-1:-1::0;;;;;4348:27:29::1;::::0;::::1;::::0;2784:18:41;;4348:40:29::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4403:38:29::1;::::0;2811:25:41;;;4417:10:29::1;::::0;-1:-1:-1;4403:38:29::1;::::0;-1:-1:-1;2799:2:41;2784:18;4403:38:29::1;2665:177:41::0;4746:132:29;1739:23;-1:-1:-1;;;;;1739:40:29;1774:4;1739:40;;1731:49;;;;;;1929:8:::1;-1:-1:-1::0;;;;;1921:31:29::1;1913:40;;;::::0;::::1;;4813:8:::2;-1:-1:-1::0;;;;;4813:18:29::2;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;4848:23:29::2;::::0;4860:10:::2;::::0;-1:-1:-1;4848:23:29::2;::::0;-1:-1:-1;4848:23:29;;::::2;4746:132::o:0;3722:158::-;1739:23;-1:-1:-1;;;;;1739:40:29;1774:4;1739:40;;1731:49;;;;;;3798:23:::1;::::0;-1:-1:-1;;;3798:23:29;;::::1;::::0;::::1;2811:25:41::0;;;3798:6:29::1;-1:-1:-1::0;;;;;3798:15:29::1;::::0;::::1;::::0;2784:18:41;;3798:23:29::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3836:37:29::1;::::0;2811:25:41;;;3854:10:29::1;::::0;-1:-1:-1;3836:37:29::1;::::0;-1:-1:-1;2799:2:41;2784:18;3836:37:29::1;2665:177:41::0;239:180;298:6;351:2;339:9;330:7;326:23;322:32;319:52;;;367:1;364;357:12;319:52;-1:-1:-1;390:23:41;;239:180;-1:-1:-1;239:180:41:o;424:131::-;-1:-1:-1;;;;;499:31:41;;489:42;;479:70;;545:1;542;535:12;479:70;424:131;:::o;560:435::-;627:6;635;688:2;676:9;667:7;663:23;659:32;656:52;;;704:1;701;694:12;656:52;743:9;730:23;762:31;787:5;762:31;:::i;:::-;812:5;-1:-1:-1;869:2:41;854:18;;841:32;-1:-1:-1;;;;;904:40:41;;892:53;;882:81;;959:1;956;949:12;882:81;982:7;972:17;;;560:435;;;;;:::o;1000:537::-;1085:6;1093;1101;1154:2;1142:9;1133:7;1129:23;1125:32;1122:52;;;1170:1;1167;1160:12;1122:52;1209:9;1196:23;1228:31;1253:5;1228:31;:::i;:::-;1278:5;-1:-1:-1;1335:2:41;1320:18;;1307:32;1348:33;1307:32;1348:33;:::i;:::-;1400:7;-1:-1:-1;1459:2:41;1444:18;;1431:32;1472:33;1431:32;1472:33;:::i;:::-;1524:7;1514:17;;;1000:537;;;;;:::o;2847:184::-;2917:6;2970:2;2958:9;2949:7;2945:23;2941:32;2938:52;;;2986:1;2983;2976:12;2938:52;-1:-1:-1;3009:16:41;;2847:184;-1:-1:-1;2847:184:41:o",
  "language": "Solidity",
  "natspec": {
    "details": "All methods must be stateless because this code will be executed by delegatecall call, use immutable fields.|v1.9.1|",
    "kind": "dev",
    "methods": {
      "bid(uint256)": {
        "notice": "Bid for tokens by transferring ETH"
      },
      "cancelBid()": {
        "notice": "Cancel bid and refund deposited ETH"
      },
      "claim()": {
        "notice": "Claimed tokens will be deposited and locked as stake in the StakingEscrow contract"
      },
      "constructor": {
        "notice": "Constructor sets addresses of the contracts",
        "params": {
          "_escrow": "Escrow contract",
          "_policyManager": "PolicyManager contract",
          "_tStaking": "Threshold TokenStaking contract",
          "_token": "Token contract",
          "_workLock": "WorkLock contract"
        }
      },
      "refund()": {
        "notice": "Refund ETH for the completed work"
      },
      "setMinFeeRate(uint256)": {
        "notice": "Set the minimum fee that the staker will accept in the policy manager contract"
      },
      "stakeNu(address,address,address)": {
        "notice": "Copies delegation from the legacy NU staking contract to T staking contract, additionally appointing beneficiary and authorizer roles."
      },
      "unstakeNu(address,uint96)": {
        "notice": "Reduces cached legacy NU stake amount by the provided amount."
      },
      "withdrawAsStaker(uint256)": {
        "notice": "Withdraw available amount of tokens from the staking escrow to the staking contract",
        "params": {
          "_value": "Amount of token to withdraw"
        }
      },
      "withdrawCompensation()": {
        "notice": "Withdraw compensation after force refund"
      },
      "withdrawPolicyFee()": {
        "notice": "Withdraw available policy fees from the policy manager to the staking contract"
      }
    },
    "notice": "Interface for accessing main contracts from a staking contract",
    "version": 1
  },
  "offset": [
    2189,
    6373
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C316B90 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xAB3DBF3B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xAB3DBF3B EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0xDBAA0FC6 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xE2FDCC17 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8C316B90 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x9435C887 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x9D223D15 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x9D83A8DC EQ PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x58CCDF38 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x58CCDF38 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x590E1AE3 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x81B0A0CE EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x87A15DC9 EQ PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1C7FD532 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x454A2AB3 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x4E62EF1E EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x172 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0xD8C JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x461 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x552 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x676 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x783 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x9B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0xD8C JUMP JUMPDEST PUSH2 0xABF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0xBA1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0xD8C JUMP JUMPDEST PUSH2 0xCAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1998AEEF DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x422 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP4 POP PUSH32 0xE684A55F31B79ECA403DF938249029212A5925EC6BE8012E099B45BC1019E5D2 SWAP3 POP PUSH1 0x20 ADD SWAP1 POP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3CCFD60B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE SWAP1 SWAP2 POP CALLER SWAP1 PUSH32 0x3E0AF9DB9C08380520DC2592809E7281D3AEDC8E7441B84C84BDBE00D093DCF1 SWAP1 PUSH1 0x20 ADD PUSH2 0x456 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4E71D92D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x61D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x641 SWAP2 SWAP1 PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE SWAP1 SWAP2 POP CALLER SWAP1 PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP1 PUSH1 0x20 ADD PUSH2 0x456 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB199BE7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x58CCDF38 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x732 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 POP CALLER SWAP2 POP PUSH32 0x8FE75EF10E5C5E55D7608601BF1236FFD5EC45D4357FDE1E2C5C97ABF7B27F68 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x7B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x590E1AE3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x84E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x872 SWAP2 SWAP1 PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE SWAP1 SWAP2 POP CALLER SWAP1 PUSH32 0xBB28353E4598C3B9199101A66E0989549B659A59A54D2C27FBB183F1932C8E6D SWAP1 PUSH1 0x20 ADD PUSH2 0x456 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x8DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40D85067 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP3 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x81B0A0CE SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x964 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP8 AND SWAP4 POP CALLER SWAP3 POP PUSH32 0x53C7E51BE5A8E99F46E6FEF4CC254FAFC9E161EB0A36FF54D8F408932BBA1951 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x9EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x87A15DC9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP3 POP PUSH32 0x1F3C545731EADF66E84BFA3F22265530AC6CDE1C211E7A25DA70139A06BC39A6 SWAP2 POP PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0xAF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8C316B9 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8C316B90 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB6B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP3 POP PUSH32 0x6B9024CC1BF5710F290BE788DCA9886DB7A3D9BE0DF0855BFA991DBF26A256BC SWAP2 POP PUSH1 0x20 ADD PUSH2 0x456 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0xBD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9435C887 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC79 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP3 POP PUSH32 0x7791542F9106A010F289AA1D108168B87D4E2D3D37ED4ECB762391DA5E18A45D SWAP2 POP PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0xCE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD56 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP3 POP PUSH32 0xE260C3EA1A7DA044FDB8E612A54B70847532F00018C3F751BECCD55032F62064 SWAP2 POP PUSH1 0x20 ADD PUSH2 0x456 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xDDB DUP2 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xE22 DUP2 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xE32 DUP2 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0xE42 DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 PUSH26 0x89062EB7176CCC8683604835E40B3294DFA896D0DBF37E5E5E49 SSTORE SWAP4 SWAP15 0x21 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "8": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "LT",
      "path": "29"
    },
    "9": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xF3"
    },
    "12": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "13": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "16": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "SHR",
      "path": "29"
    },
    "19": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "20": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x8C316B90"
    },
    "25": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "GT",
      "path": "29"
    },
    "26": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x8A"
    },
    "29": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "30": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "31": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xAB3DBF3B"
    },
    "36": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "GT",
      "path": "29"
    },
    "37": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "41": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "42": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xAB3DBF3B"
    },
    "47": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "EQ",
      "path": "29"
    },
    "48": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x27A"
    },
    "51": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "52": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "53": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xDBAA0FC6"
    },
    "58": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "EQ",
      "path": "29"
    },
    "59": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2AE"
    },
    "62": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "63": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "64": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xE2FDCC17"
    },
    "69": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "EQ",
      "path": "29"
    },
    "70": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2E2"
    },
    "73": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "74": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "75": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFC0C546A"
    },
    "80": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "EQ",
      "path": "29"
    },
    "81": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x316"
    },
    "84": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "85": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "88": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "REVERT",
      "path": "29"
    },
    "89": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "90": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "91": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x8C316B90"
    },
    "96": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "EQ",
      "path": "29"
    },
    "97": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1F1"
    },
    "100": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "101": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "102": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x9435C887"
    },
    "107": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "EQ",
      "path": "29"
    },
    "108": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x211"
    },
    "111": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "112": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "113": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x9D223D15"
    },
    "118": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "EQ",
      "path": "29"
    },
    "119": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x226"
    },
    "122": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "123": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "124": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x9D83A8DC"
    },
    "129": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "EQ",
      "path": "29"
    },
    "130": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x246"
    },
    "133": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "134": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "136": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "137": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "REVERT",
      "path": "29"
    },
    "138": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "139": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "140": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x58CCDF38"
    },
    "145": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "GT",
      "path": "29"
    },
    "146": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xC6"
    },
    "149": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "150": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "151": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x58CCDF38"
    },
    "156": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "EQ",
      "path": "29"
    },
    "157": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x187"
    },
    "160": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "161": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "162": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x590E1AE3"
    },
    "167": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "EQ",
      "path": "29"
    },
    "168": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1A7"
    },
    "171": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "172": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "173": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x81B0A0CE"
    },
    "178": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "EQ",
      "path": "29"
    },
    "179": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1BC"
    },
    "182": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "183": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "184": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x87A15DC9"
    },
    "189": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "EQ",
      "path": "29"
    },
    "190": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1DC"
    },
    "193": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "194": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "196": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "197": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "REVERT",
      "path": "29"
    },
    "198": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "199": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "200": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x1C7FD532"
    },
    "205": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "EQ",
      "path": "29"
    },
    "206": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xF8"
    },
    "209": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "210": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "211": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x454A2AB3"
    },
    "216": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "EQ",
      "path": "29"
    },
    "217": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x148"
    },
    "220": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "221": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "222": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x4E62EF1E"
    },
    "227": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "EQ",
      "path": "29"
    },
    "228": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x15D"
    },
    "231": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "232": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "233": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x4E71D92D"
    },
    "238": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "EQ",
      "path": "29"
    },
    "239": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x172"
    },
    "242": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "243": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "244": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "246": {
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "247": {
      "first_revert": true,
      "fn": null,
      "offset": [
        2189,
        6373
      ],
      "op": "REVERT",
      "path": "29"
    },
    "248": {
      "offset": [
        540,
        574
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "249": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "250": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "DUP1",
      "path": "29"
    },
    "251": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "252": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x104"
    },
    "255": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "256": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "258": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "DUP1",
      "path": "29"
    },
    "259": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "REVERT",
      "path": "29"
    },
    "260": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "261": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "POP",
      "path": "29"
    },
    "262": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x12C"
    },
    "265": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "298": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "DUP2",
      "path": "29"
    },
    "299": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "JUMP",
      "path": "29"
    },
    "300": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "301": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "303": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "310": {
      "op": "SHL"
    },
    "311": {
      "op": "SUB"
    },
    "312": {
      "op": "SWAP1"
    },
    "313": {
      "op": "SWAP2"
    },
    "314": {
      "op": "AND"
    },
    "315": {
      "op": "DUP2"
    },
    "316": {
      "op": "MSTORE"
    },
    "317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "319": {
      "op": "ADD"
    },
    "320": {
      "offset": [
        540,
        574
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "322": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "323": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "DUP1",
      "path": "29"
    },
    "324": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "325": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "SUB",
      "path": "29"
    },
    "326": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "327": {
      "fn": null,
      "offset": [
        540,
        574
      ],
      "op": "RETURN",
      "path": "29"
    },
    "328": {
      "fn": "StakingInterface.bid",
      "offset": [
        4518,
        4675
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "329": {
      "fn": "StakingInterface.bid",
      "offset": [
        4518,
        4675
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x15B"
    },
    "332": {
      "fn": "StakingInterface.bid",
      "offset": [
        4518,
        4675
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x156"
    },
    "335": {
      "fn": "StakingInterface.bid",
      "offset": [
        4518,
        4675
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "336": {
      "fn": "StakingInterface.bid",
      "offset": [
        4518,
        4675
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "338": {
      "fn": "StakingInterface.bid",
      "offset": [
        4518,
        4675
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD8C"
    },
    "341": {
      "fn": "StakingInterface.bid",
      "jump": "i",
      "offset": [
        4518,
        4675
      ],
      "op": "JUMP",
      "path": "29"
    },
    "342": {
      "fn": "StakingInterface.bid",
      "offset": [
        4518,
        4675
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "343": {
      "fn": "StakingInterface.bid",
      "offset": [
        4518,
        4675
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x34A"
    },
    "346": {
      "fn": "StakingInterface.bid",
      "jump": "i",
      "offset": [
        4518,
        4675
      ],
      "op": "JUMP",
      "path": "29"
    },
    "347": {
      "fn": "StakingInterface.bid",
      "offset": [
        4518,
        4675
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "348": {
      "fn": "StakingInterface.bid",
      "offset": [
        4518,
        4675
      ],
      "op": "STOP",
      "path": "29"
    },
    "349": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        3994,
        4156
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "350": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        3994,
        4156
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "351": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        3994,
        4156
      ],
      "op": "DUP1",
      "path": "29"
    },
    "352": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        3994,
        4156
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "353": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        3994,
        4156
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x169"
    },
    "356": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        3994,
        4156
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "357": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        3994,
        4156
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "359": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        3994,
        4156
      ],
      "op": "DUP1",
      "path": "29"
    },
    "360": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        3994,
        4156
      ],
      "op": "REVERT",
      "path": "29"
    },
    "361": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        3994,
        4156
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "362": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        3994,
        4156
      ],
      "op": "POP",
      "path": "29"
    },
    "363": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        3994,
        4156
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x15B"
    },
    "366": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        3994,
        4156
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x461"
    },
    "369": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "jump": "i",
      "offset": [
        3994,
        4156
      ],
      "op": "JUMP",
      "path": "29"
    },
    "370": {
      "fn": "StakingInterface.claim",
      "offset": [
        5236,
        5395
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "371": {
      "fn": "StakingInterface.claim",
      "offset": [
        5236,
        5395
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "372": {
      "fn": "StakingInterface.claim",
      "offset": [
        5236,
        5395
      ],
      "op": "DUP1",
      "path": "29"
    },
    "373": {
      "fn": "StakingInterface.claim",
      "offset": [
        5236,
        5395
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "374": {
      "fn": "StakingInterface.claim",
      "offset": [
        5236,
        5395
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x17E"
    },
    "377": {
      "fn": "StakingInterface.claim",
      "offset": [
        5236,
        5395
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "378": {
      "fn": "StakingInterface.claim",
      "offset": [
        5236,
        5395
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "380": {
      "fn": "StakingInterface.claim",
      "offset": [
        5236,
        5395
      ],
      "op": "DUP1",
      "path": "29"
    },
    "381": {
      "fn": "StakingInterface.claim",
      "offset": [
        5236,
        5395
      ],
      "op": "REVERT",
      "path": "29"
    },
    "382": {
      "fn": "StakingInterface.claim",
      "offset": [
        5236,
        5395
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "383": {
      "fn": "StakingInterface.claim",
      "offset": [
        5236,
        5395
      ],
      "op": "POP",
      "path": "29"
    },
    "384": {
      "fn": "StakingInterface.claim",
      "offset": [
        5236,
        5395
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x15B"
    },
    "387": {
      "fn": "StakingInterface.claim",
      "offset": [
        5236,
        5395
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x552"
    },
    "390": {
      "fn": "StakingInterface.claim",
      "jump": "i",
      "offset": [
        5236,
        5395
      ],
      "op": "JUMP",
      "path": "29"
    },
    "391": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "392": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "393": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "DUP1",
      "path": "29"
    },
    "394": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "395": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x193"
    },
    "398": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "399": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "401": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "DUP1",
      "path": "29"
    },
    "402": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "REVERT",
      "path": "29"
    },
    "403": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "404": {
      "op": "POP"
    },
    "405": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x15B"
    },
    "408": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1A2"
    },
    "411": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "412": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "414": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xDBD"
    },
    "417": {
      "fn": "StakingInterface.unstakeNu",
      "jump": "i",
      "offset": [
        6176,
        6371
      ],
      "op": "JUMP",
      "path": "29"
    },
    "418": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "419": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x676"
    },
    "422": {
      "fn": "StakingInterface.unstakeNu",
      "jump": "i",
      "offset": [
        6176,
        6371
      ],
      "op": "JUMP",
      "path": "29"
    },
    "423": {
      "fn": "StakingInterface.refund",
      "offset": [
        5464,
        5616
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "424": {
      "fn": "StakingInterface.refund",
      "offset": [
        5464,
        5616
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "425": {
      "fn": "StakingInterface.refund",
      "offset": [
        5464,
        5616
      ],
      "op": "DUP1",
      "path": "29"
    },
    "426": {
      "fn": "StakingInterface.refund",
      "offset": [
        5464,
        5616
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "427": {
      "fn": "StakingInterface.refund",
      "offset": [
        5464,
        5616
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1B3"
    },
    "430": {
      "fn": "StakingInterface.refund",
      "offset": [
        5464,
        5616
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "431": {
      "fn": "StakingInterface.refund",
      "offset": [
        5464,
        5616
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "433": {
      "fn": "StakingInterface.refund",
      "offset": [
        5464,
        5616
      ],
      "op": "DUP1",
      "path": "29"
    },
    "434": {
      "fn": "StakingInterface.refund",
      "offset": [
        5464,
        5616
      ],
      "op": "REVERT",
      "path": "29"
    },
    "435": {
      "fn": "StakingInterface.refund",
      "offset": [
        5464,
        5616
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "436": {
      "fn": "StakingInterface.refund",
      "offset": [
        5464,
        5616
      ],
      "op": "POP",
      "path": "29"
    },
    "437": {
      "fn": "StakingInterface.refund",
      "offset": [
        5464,
        5616
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x15B"
    },
    "440": {
      "fn": "StakingInterface.refund",
      "offset": [
        5464,
        5616
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x783"
    },
    "443": {
      "fn": "StakingInterface.refund",
      "jump": "i",
      "offset": [
        5464,
        5616
      ],
      "op": "JUMP",
      "path": "29"
    },
    "444": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "445": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "446": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "DUP1",
      "path": "29"
    },
    "447": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "448": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1C8"
    },
    "451": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "452": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "454": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "DUP1",
      "path": "29"
    },
    "455": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "REVERT",
      "path": "29"
    },
    "456": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "457": {
      "op": "POP"
    },
    "458": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x15B"
    },
    "461": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1D7"
    },
    "464": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "465": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "467": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xE02"
    },
    "470": {
      "fn": "StakingInterface.stakeNu",
      "jump": "i",
      "offset": [
        5792,
        6079
      ],
      "op": "JUMP",
      "path": "29"
    },
    "471": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "472": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x8A7"
    },
    "475": {
      "fn": "StakingInterface.stakeNu",
      "jump": "i",
      "offset": [
        5792,
        6079
      ],
      "op": "JUMP",
      "path": "29"
    },
    "476": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        4954,
        5118
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "477": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        4954,
        5118
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "478": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        4954,
        5118
      ],
      "op": "DUP1",
      "path": "29"
    },
    "479": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        4954,
        5118
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "480": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        4954,
        5118
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1E8"
    },
    "483": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        4954,
        5118
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "484": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        4954,
        5118
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "486": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        4954,
        5118
      ],
      "op": "DUP1",
      "path": "29"
    },
    "487": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        4954,
        5118
      ],
      "op": "REVERT",
      "path": "29"
    },
    "488": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        4954,
        5118
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "489": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        4954,
        5118
      ],
      "op": "POP",
      "path": "29"
    },
    "490": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        4954,
        5118
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x15B"
    },
    "493": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        4954,
        5118
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x9B6"
    },
    "496": {
      "fn": "StakingInterface.withdrawCompensation",
      "jump": "i",
      "offset": [
        4954,
        5118
      ],
      "op": "JUMP",
      "path": "29"
    },
    "497": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4270,
        4448
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "498": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4270,
        4448
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "499": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4270,
        4448
      ],
      "op": "DUP1",
      "path": "29"
    },
    "500": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4270,
        4448
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "501": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4270,
        4448
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1FD"
    },
    "504": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4270,
        4448
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "505": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4270,
        4448
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "507": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4270,
        4448
      ],
      "op": "DUP1",
      "path": "29"
    },
    "508": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4270,
        4448
      ],
      "op": "REVERT",
      "path": "29"
    },
    "509": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4270,
        4448
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "510": {
      "op": "POP"
    },
    "511": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4270,
        4448
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x15B"
    },
    "514": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4270,
        4448
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x20C"
    },
    "517": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4270,
        4448
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "518": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4270,
        4448
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "520": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4270,
        4448
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD8C"
    },
    "523": {
      "fn": "StakingInterface.setMinFeeRate",
      "jump": "i",
      "offset": [
        4270,
        4448
      ],
      "op": "JUMP",
      "path": "29"
    },
    "524": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4270,
        4448
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "525": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4270,
        4448
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xABF"
    },
    "528": {
      "fn": "StakingInterface.setMinFeeRate",
      "jump": "i",
      "offset": [
        4270,
        4448
      ],
      "op": "JUMP",
      "path": "29"
    },
    "529": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4746,
        4878
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "530": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4746,
        4878
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "531": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4746,
        4878
      ],
      "op": "DUP1",
      "path": "29"
    },
    "532": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4746,
        4878
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "533": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4746,
        4878
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x21D"
    },
    "536": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4746,
        4878
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "537": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4746,
        4878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "539": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4746,
        4878
      ],
      "op": "DUP1",
      "path": "29"
    },
    "540": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4746,
        4878
      ],
      "op": "REVERT",
      "path": "29"
    },
    "541": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4746,
        4878
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "542": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4746,
        4878
      ],
      "op": "POP",
      "path": "29"
    },
    "543": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4746,
        4878
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x15B"
    },
    "546": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4746,
        4878
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xBA1"
    },
    "549": {
      "fn": "StakingInterface.cancelBid",
      "jump": "i",
      "offset": [
        4746,
        4878
      ],
      "op": "JUMP",
      "path": "29"
    },
    "550": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3722,
        3880
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "551": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3722,
        3880
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "552": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3722,
        3880
      ],
      "op": "DUP1",
      "path": "29"
    },
    "553": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3722,
        3880
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "554": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3722,
        3880
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x232"
    },
    "557": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3722,
        3880
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "558": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3722,
        3880
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "560": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3722,
        3880
      ],
      "op": "DUP1",
      "path": "29"
    },
    "561": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3722,
        3880
      ],
      "op": "REVERT",
      "path": "29"
    },
    "562": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3722,
        3880
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "563": {
      "op": "POP"
    },
    "564": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3722,
        3880
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x15B"
    },
    "567": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3722,
        3880
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x241"
    },
    "570": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3722,
        3880
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "571": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3722,
        3880
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "573": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3722,
        3880
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD8C"
    },
    "576": {
      "fn": "StakingInterface.withdrawAsStaker",
      "jump": "i",
      "offset": [
        3722,
        3880
      ],
      "op": "JUMP",
      "path": "29"
    },
    "577": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3722,
        3880
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "578": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3722,
        3880
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xCAA"
    },
    "581": {
      "fn": "StakingInterface.withdrawAsStaker",
      "jump": "i",
      "offset": [
        3722,
        3880
      ],
      "op": "JUMP",
      "path": "29"
    },
    "582": {
      "offset": [
        350,
        398
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "583": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        350,
        398
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "584": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        350,
        398
      ],
      "op": "DUP1",
      "path": "29"
    },
    "585": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        350,
        398
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "586": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        350,
        398
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x252"
    },
    "589": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        350,
        398
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "590": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        350,
        398
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "592": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        350,
        398
      ],
      "op": "DUP1",
      "path": "29"
    },
    "593": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        350,
        398
      ],
      "op": "REVERT",
      "path": "29"
    },
    "594": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        350,
        398
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "595": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        350,
        398
      ],
      "op": "POP",
      "path": "29"
    },
    "596": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        350,
        398
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x12C"
    },
    "599": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        350,
        398
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "632": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        350,
        398
      ],
      "op": "DUP2",
      "path": "29"
    },
    "633": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        350,
        398
      ],
      "op": "JUMP",
      "path": "29"
    },
    "634": {
      "offset": [
        490,
        534
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "635": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        490,
        534
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "636": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        490,
        534
      ],
      "op": "DUP1",
      "path": "29"
    },
    "637": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        490,
        534
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "638": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        490,
        534
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x286"
    },
    "641": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        490,
        534
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "642": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        490,
        534
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "644": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        490,
        534
      ],
      "op": "DUP1",
      "path": "29"
    },
    "645": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        490,
        534
      ],
      "op": "REVERT",
      "path": "29"
    },
    "646": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        490,
        534
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "647": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        490,
        534
      ],
      "op": "POP",
      "path": "29"
    },
    "648": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        490,
        534
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x12C"
    },
    "651": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        490,
        534
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "684": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        490,
        534
      ],
      "op": "DUP2",
      "path": "29"
    },
    "685": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        490,
        534
      ],
      "op": "JUMP",
      "path": "29"
    },
    "686": {
      "offset": [
        580,
        614
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "687": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        580,
        614
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "688": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        580,
        614
      ],
      "op": "DUP1",
      "path": "29"
    },
    "689": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        580,
        614
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "690": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        580,
        614
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2BA"
    },
    "693": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        580,
        614
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "694": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        580,
        614
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "696": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        580,
        614
      ],
      "op": "DUP1",
      "path": "29"
    },
    "697": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        580,
        614
      ],
      "op": "REVERT",
      "path": "29"
    },
    "698": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        580,
        614
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "699": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        580,
        614
      ],
      "op": "POP",
      "path": "29"
    },
    "700": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        580,
        614
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x12C"
    },
    "703": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        580,
        614
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "736": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        580,
        614
      ],
      "op": "DUP2",
      "path": "29"
    },
    "737": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        580,
        614
      ],
      "op": "JUMP",
      "path": "29"
    },
    "738": {
      "offset": [
        446,
        484
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "739": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        446,
        484
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "740": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        446,
        484
      ],
      "op": "DUP1",
      "path": "29"
    },
    "741": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        446,
        484
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "742": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        446,
        484
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2EE"
    },
    "745": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        446,
        484
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "746": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        446,
        484
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "748": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        446,
        484
      ],
      "op": "DUP1",
      "path": "29"
    },
    "749": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        446,
        484
      ],
      "op": "REVERT",
      "path": "29"
    },
    "750": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        446,
        484
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "751": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        446,
        484
      ],
      "op": "POP",
      "path": "29"
    },
    "752": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        446,
        484
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x12C"
    },
    "755": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        446,
        484
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "788": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        446,
        484
      ],
      "op": "DUP2",
      "path": "29"
    },
    "789": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        446,
        484
      ],
      "op": "JUMP",
      "path": "29"
    },
    "790": {
      "offset": [
        404,
        440
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "791": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        404,
        440
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "792": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        404,
        440
      ],
      "op": "DUP1",
      "path": "29"
    },
    "793": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        404,
        440
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "794": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        404,
        440
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x322"
    },
    "797": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        404,
        440
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "798": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        404,
        440
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "800": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        404,
        440
      ],
      "op": "DUP1",
      "path": "29"
    },
    "801": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        404,
        440
      ],
      "op": "REVERT",
      "path": "29"
    },
    "802": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        404,
        440
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "803": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        404,
        440
      ],
      "op": "POP",
      "path": "29"
    },
    "804": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        404,
        440
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x12C"
    },
    "807": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        404,
        440
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "840": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        404,
        440
      ],
      "op": "DUP2",
      "path": "29"
    },
    "841": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        404,
        440
      ],
      "op": "JUMP",
      "path": "29"
    },
    "842": {
      "fn": "StakingInterface.bid",
      "offset": [
        4518,
        4675
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "843": {
      "offset": [
        1739,
        1762
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "882": {
      "op": "SHL"
    },
    "883": {
      "op": "SUB"
    },
    "884": {
      "offset": [
        1739,
        1779
      ],
      "op": "AND",
      "path": "29"
    },
    "885": {
      "offset": [
        1774,
        1778
      ],
      "op": "ADDRESS",
      "path": "29"
    },
    "886": {
      "offset": [
        1739,
        1779
      ],
      "op": "EQ",
      "path": "29"
    },
    "887": {
      "fn": "StakingInterface.bid",
      "offset": [
        1739,
        1779
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "888": {
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x380"
    },
    "891": {
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "892": {
      "fn": "StakingInterface.bid",
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "894": {
      "fn": "StakingInterface.bid",
      "offset": [
        1731,
        1780
      ],
      "op": "DUP1",
      "path": "29"
    },
    "895": {
      "fn": "StakingInterface.bid",
      "offset": [
        1731,
        1780
      ],
      "op": "REVERT",
      "path": "29"
    },
    "896": {
      "fn": "StakingInterface.bid",
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "897": {
      "offset": [
        1929,
        1937
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "936": {
      "op": "SHL"
    },
    "937": {
      "op": "SUB"
    },
    "938": {
      "offset": [
        1921,
        1952
      ],
      "op": "AND",
      "path": "29"
    },
    "939": {
      "offset": [
        1913,
        1953
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3B3"
    },
    "942": {
      "offset": [
        1913,
        1953
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "943": {
      "fn": "StakingInterface.bid",
      "offset": [
        1913,
        1953
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "945": {
      "fn": "StakingInterface.bid",
      "offset": [
        1913,
        1953
      ],
      "op": "DUP1",
      "path": "29"
    },
    "946": {
      "fn": "StakingInterface.bid",
      "offset": [
        1913,
        1953
      ],
      "op": "REVERT",
      "path": "29"
    },
    "947": {
      "fn": "StakingInterface.bid",
      "offset": [
        1913,
        1953
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "948": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4609
      ],
      "op": "PUSH32",
      "path": "29",
      "statement": 0,
      "value": "0x0"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "987": {
      "op": "SHL"
    },
    "988": {
      "op": "SUB"
    },
    "989": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4613
      ],
      "op": "AND",
      "path": "29"
    },
    "990": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4613
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x1998AEEF"
    },
    "995": {
      "fn": "StakingInterface.bid",
      "offset": [
        4621,
        4627
      ],
      "op": "DUP3",
      "path": "29"
    },
    "996": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "998": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "999": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1000": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "1005": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "AND",
      "path": "29"
    },
    "1006": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xE0"
    },
    "1008": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "SHL",
      "path": "29"
    },
    "1009": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1010": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1011": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1013": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "ADD",
      "path": "29"
    },
    "1014": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1016": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1018": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1019": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1020": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1021": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "SUB",
      "path": "29"
    },
    "1022": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1023": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "DUP6",
      "path": "29"
    },
    "1024": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "DUP9",
      "path": "29"
    },
    "1025": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1026": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "EXTCODESIZE",
      "path": "29"
    },
    "1027": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1028": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1029": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1030": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x40E"
    },
    "1033": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1034": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1036": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1037": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1038": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1039": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "POP",
      "path": "29"
    },
    "1040": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "GAS",
      "path": "29"
    },
    "1041": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "CALL",
      "path": "29"
    },
    "1042": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1043": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1044": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1045": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x422"
    },
    "1048": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1049": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "1050": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1052": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1053": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "1054": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "1055": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1057": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1058": {
      "fn": "StakingInterface.bid",
      "offset": [
        4601,
        4630
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1059": {
      "op": "POP"
    },
    "1060": {
      "op": "POP"
    },
    "1061": {
      "fn": "StakingInterface.bid",
      "offset": [
        4645,
        4668
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 1,
      "value": "0x40"
    },
    "1063": {
      "fn": "StakingInterface.bid",
      "offset": [
        4645,
        4668
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1064": {
      "op": "DUP5"
    },
    "1065": {
      "op": "DUP2"
    },
    "1066": {
      "op": "MSTORE"
    },
    "1067": {
      "fn": "StakingInterface.bid",
      "offset": [
        4649,
        4659
      ],
      "op": "CALLER",
      "path": "29"
    },
    "1068": {
      "fn": "StakingInterface.bid",
      "offset": [
        4649,
        4659
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "1069": {
      "op": "POP"
    },
    "1070": {
      "fn": "StakingInterface.bid",
      "offset": [
        4645,
        4668
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0xE684A55F31B79ECA403DF938249029212A5925EC6BE8012E099B45BC1019E5D2"
    },
    "1103": {
      "fn": "StakingInterface.bid",
      "offset": [
        4645,
        4668
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1104": {
      "op": "POP"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1107": {
      "op": "ADD"
    },
    "1108": {
      "op": "SWAP1"
    },
    "1109": {
      "op": "POP"
    },
    "1110": {
      "fn": "StakingInterface.bid",
      "offset": [
        4645,
        4668
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1111": {
      "fn": "StakingInterface.bid",
      "offset": [
        4645,
        4668
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1113": {
      "fn": "StakingInterface.bid",
      "offset": [
        4645,
        4668
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1114": {
      "fn": "StakingInterface.bid",
      "offset": [
        4645,
        4668
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1115": {
      "fn": "StakingInterface.bid",
      "offset": [
        4645,
        4668
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1116": {
      "fn": "StakingInterface.bid",
      "offset": [
        4645,
        4668
      ],
      "op": "SUB",
      "path": "29"
    },
    "1117": {
      "fn": "StakingInterface.bid",
      "offset": [
        4645,
        4668
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1118": {
      "fn": "StakingInterface.bid",
      "offset": [
        4645,
        4668
      ],
      "op": "LOG2",
      "path": "29"
    },
    "1119": {
      "fn": "StakingInterface.bid",
      "offset": [
        4518,
        4675
      ],
      "op": "POP",
      "path": "29"
    },
    "1120": {
      "fn": "StakingInterface.bid",
      "jump": "o",
      "offset": [
        4518,
        4675
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1121": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        3994,
        4156
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1122": {
      "offset": [
        1739,
        1762
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1161": {
      "op": "SHL"
    },
    "1162": {
      "op": "SUB"
    },
    "1163": {
      "offset": [
        1739,
        1779
      ],
      "op": "AND",
      "path": "29"
    },
    "1164": {
      "offset": [
        1774,
        1778
      ],
      "op": "ADDRESS",
      "path": "29"
    },
    "1165": {
      "offset": [
        1739,
        1779
      ],
      "op": "EQ",
      "path": "29"
    },
    "1166": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        1739,
        1779
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1167": {
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x497"
    },
    "1170": {
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1171": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1173": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        1731,
        1780
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1174": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        1731,
        1780
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1175": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1176": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4057,
        4070
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1178": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4086
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1217": {
      "op": "SHL"
    },
    "1218": {
      "op": "SUB"
    },
    "1219": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4095
      ],
      "op": "AND",
      "path": "29"
    },
    "1220": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4095
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x3CCFD60B"
    },
    "1225": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1227": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1228": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1229": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "1234": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "AND",
      "path": "29"
    },
    "1235": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xE0"
    },
    "1237": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "SHL",
      "path": "29"
    },
    "1238": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1239": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1240": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1242": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "ADD",
      "path": "29"
    },
    "1243": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1245": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1247": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1248": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1249": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1250": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "SUB",
      "path": "29"
    },
    "1251": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1252": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1254": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "DUP8",
      "path": "29"
    },
    "1255": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "GAS",
      "path": "29"
    },
    "1256": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "CALL",
      "path": "29"
    },
    "1257": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1258": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1259": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1260": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x4F9"
    },
    "1263": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1264": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "1265": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1267": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1268": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "1269": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "1270": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1272": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1273": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1274": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "POP",
      "path": "29"
    },
    "1275": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "POP",
      "path": "29"
    },
    "1276": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "POP",
      "path": "29"
    },
    "1277": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "POP",
      "path": "29"
    },
    "1278": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1280": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1281": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "1282": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "1284": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "NOT",
      "path": "29"
    },
    "1285": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "1287": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1288": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "ADD",
      "path": "29"
    },
    "1289": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "AND",
      "path": "29"
    },
    "1290": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1291": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "ADD",
      "path": "29"
    },
    "1292": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1293": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1295": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1296": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "POP",
      "path": "29"
    },
    "1297": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1298": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "ADD",
      "path": "29"
    },
    "1299": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1300": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x51D"
    },
    "1303": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1304": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1305": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xE4D"
    },
    "1308": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "jump": "i",
      "offset": [
        4073,
        4097
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1309": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4073,
        4097
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1310": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4112,
        4149
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 2,
      "value": "0x40"
    },
    "1312": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4112,
        4149
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1313": {
      "op": "DUP2"
    },
    "1314": {
      "op": "DUP2"
    },
    "1315": {
      "op": "MSTORE"
    },
    "1316": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4057,
        4097
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1317": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4057,
        4097
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1318": {
      "op": "POP"
    },
    "1319": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4131,
        4141
      ],
      "op": "CALLER",
      "path": "29"
    },
    "1320": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4131,
        4141
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1321": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4112,
        4149
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x3E0AF9DB9C08380520DC2592809E7281D3AEDC8E7441B84C84BDBE00D093DCF1"
    },
    "1354": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4112,
        4149
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1357": {
      "op": "ADD"
    },
    "1358": {
      "fn": "StakingInterface.withdrawPolicyFee",
      "offset": [
        4112,
        4149
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x456"
    },
    "1361": {
      "op": "JUMP"
    },
    "1362": {
      "fn": "StakingInterface.claim",
      "offset": [
        5236,
        5395
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1363": {
      "offset": [
        1739,
        1762
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1402": {
      "op": "SHL"
    },
    "1403": {
      "op": "SUB"
    },
    "1404": {
      "offset": [
        1739,
        1779
      ],
      "op": "AND",
      "path": "29"
    },
    "1405": {
      "offset": [
        1774,
        1778
      ],
      "op": "ADDRESS",
      "path": "29"
    },
    "1406": {
      "offset": [
        1739,
        1779
      ],
      "op": "EQ",
      "path": "29"
    },
    "1407": {
      "fn": "StakingInterface.claim",
      "offset": [
        1739,
        1779
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1408": {
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x588"
    },
    "1411": {
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1412": {
      "fn": "StakingInterface.claim",
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1414": {
      "fn": "StakingInterface.claim",
      "offset": [
        1731,
        1780
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1415": {
      "fn": "StakingInterface.claim",
      "offset": [
        1731,
        1780
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1416": {
      "fn": "StakingInterface.claim",
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1417": {
      "offset": [
        1929,
        1937
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1456": {
      "op": "SHL"
    },
    "1457": {
      "op": "SUB"
    },
    "1458": {
      "offset": [
        1921,
        1952
      ],
      "op": "AND",
      "path": "29"
    },
    "1459": {
      "offset": [
        1913,
        1953
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x5BB"
    },
    "1462": {
      "offset": [
        1913,
        1953
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1463": {
      "fn": "StakingInterface.claim",
      "offset": [
        1913,
        1953
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1465": {
      "fn": "StakingInterface.claim",
      "offset": [
        1913,
        1953
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1466": {
      "fn": "StakingInterface.claim",
      "offset": [
        1913,
        1953
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1467": {
      "fn": "StakingInterface.claim",
      "offset": [
        1913,
        1953
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1468": {
      "fn": "StakingInterface.claim",
      "offset": [
        5299,
        5320
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1470": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5331
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1509": {
      "op": "SHL"
    },
    "1510": {
      "op": "SUB"
    },
    "1511": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5337
      ],
      "op": "AND",
      "path": "29"
    },
    "1512": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5337
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x4E71D92D"
    },
    "1517": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1519": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1520": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1521": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "1526": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "AND",
      "path": "29"
    },
    "1527": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xE0"
    },
    "1529": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "SHL",
      "path": "29"
    },
    "1530": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1531": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1532": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1534": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "ADD",
      "path": "29"
    },
    "1535": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1537": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1539": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1540": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1541": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1542": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "SUB",
      "path": "29"
    },
    "1543": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1544": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1546": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "DUP8",
      "path": "29"
    },
    "1547": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "GAS",
      "path": "29"
    },
    "1548": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "CALL",
      "path": "29"
    },
    "1549": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1550": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1551": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1552": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x61D"
    },
    "1555": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1556": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "1557": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1559": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1560": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "1561": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "1562": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1564": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1565": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1566": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "POP",
      "path": "29"
    },
    "1567": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "POP",
      "path": "29"
    },
    "1568": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "POP",
      "path": "29"
    },
    "1569": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "POP",
      "path": "29"
    },
    "1570": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1572": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1573": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "1574": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "1576": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "NOT",
      "path": "29"
    },
    "1577": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "1579": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1580": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "ADD",
      "path": "29"
    },
    "1581": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "AND",
      "path": "29"
    },
    "1582": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1583": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "ADD",
      "path": "29"
    },
    "1584": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1585": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1587": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1588": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "POP",
      "path": "29"
    },
    "1589": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1590": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "ADD",
      "path": "29"
    },
    "1591": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1592": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x641"
    },
    "1595": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1596": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1597": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xE4D"
    },
    "1600": {
      "fn": "StakingInterface.claim",
      "jump": "i",
      "offset": [
        5323,
        5339
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1601": {
      "fn": "StakingInterface.claim",
      "offset": [
        5323,
        5339
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1602": {
      "fn": "StakingInterface.claim",
      "offset": [
        5354,
        5388
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 3,
      "value": "0x40"
    },
    "1604": {
      "fn": "StakingInterface.claim",
      "offset": [
        5354,
        5388
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1605": {
      "op": "DUP2"
    },
    "1606": {
      "op": "DUP2"
    },
    "1607": {
      "op": "MSTORE"
    },
    "1608": {
      "fn": "StakingInterface.claim",
      "offset": [
        5299,
        5339
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1609": {
      "fn": "StakingInterface.claim",
      "offset": [
        5299,
        5339
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1610": {
      "op": "POP"
    },
    "1611": {
      "fn": "StakingInterface.claim",
      "offset": [
        5362,
        5372
      ],
      "op": "CALLER",
      "path": "29"
    },
    "1612": {
      "fn": "StakingInterface.claim",
      "offset": [
        5362,
        5372
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1613": {
      "fn": "StakingInterface.claim",
      "offset": [
        5354,
        5388
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A"
    },
    "1646": {
      "fn": "StakingInterface.claim",
      "offset": [
        5354,
        5388
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1649": {
      "op": "ADD"
    },
    "1650": {
      "fn": "StakingInterface.claim",
      "offset": [
        5354,
        5388
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x456"
    },
    "1653": {
      "op": "JUMP"
    },
    "1654": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1655": {
      "offset": [
        1739,
        1762
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1694": {
      "op": "SHL"
    },
    "1695": {
      "op": "SUB"
    },
    "1696": {
      "offset": [
        1739,
        1779
      ],
      "op": "AND",
      "path": "29"
    },
    "1697": {
      "offset": [
        1774,
        1778
      ],
      "op": "ADDRESS",
      "path": "29"
    },
    "1698": {
      "offset": [
        1739,
        1779
      ],
      "op": "EQ",
      "path": "29"
    },
    "1699": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        1739,
        1779
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1700": {
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x6AC"
    },
    "1703": {
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1704": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1706": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        1731,
        1780
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1707": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        1731,
        1780
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1708": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1709": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 4,
      "value": "0x40"
    },
    "1711": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1712": {
      "op": "PUSH4",
      "value": "0xB199BE7"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1719": {
      "op": "SHL"
    },
    "1720": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1721": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1728": {
      "op": "SHL"
    },
    "1729": {
      "op": "SUB"
    },
    "1730": {
      "op": "DUP4"
    },
    "1731": {
      "op": "DUP2"
    },
    "1732": {
      "op": "AND"
    },
    "1733": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1735": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1736": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "ADD",
      "path": "29"
    },
    "1737": {
      "op": "MSTORE"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1744": {
      "op": "SHL"
    },
    "1745": {
      "op": "SUB"
    },
    "1746": {
      "op": "DUP4"
    },
    "1747": {
      "op": "AND"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1750": {
      "op": "DUP4"
    },
    "1751": {
      "op": "ADD"
    },
    "1752": {
      "op": "MSTORE"
    },
    "1753": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6272
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "1786": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6282
      ],
      "op": "AND",
      "path": "29"
    },
    "1787": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6282
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1788": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6282
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x58CCDF38"
    },
    "1793": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6282
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1796": {
      "op": "ADD"
    },
    "1797": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1799": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1801": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1802": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1803": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1804": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "SUB",
      "path": "29"
    },
    "1805": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1806": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1808": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "DUP8",
      "path": "29"
    },
    "1809": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1810": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "EXTCODESIZE",
      "path": "29"
    },
    "1811": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1812": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1813": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1814": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x71E"
    },
    "1817": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1818": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1820": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1821": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1822": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1823": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "POP",
      "path": "29"
    },
    "1824": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "GAS",
      "path": "29"
    },
    "1825": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "CALL",
      "path": "29"
    },
    "1826": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1827": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1828": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1829": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x732"
    },
    "1832": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1833": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "1834": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1836": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1837": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "1838": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "1839": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1841": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1842": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6264,
        6300
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1843": {
      "op": "POP"
    },
    "1844": {
      "op": "POP"
    },
    "1845": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6315,
        6364
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 5,
      "value": "0x40"
    },
    "1847": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6315,
        6364
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1854": {
      "op": "SHL"
    },
    "1855": {
      "op": "SUB"
    },
    "1856": {
      "op": "DUP5"
    },
    "1857": {
      "op": "AND"
    },
    "1858": {
      "op": "DUP2"
    },
    "1859": {
      "op": "MSTORE"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1866": {
      "op": "SHL"
    },
    "1867": {
      "op": "SUB"
    },
    "1868": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6315,
        6364
      ],
      "op": "DUP6",
      "path": "29"
    },
    "1869": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6315,
        6364
      ],
      "op": "AND",
      "path": "29"
    },
    "1870": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6315,
        6364
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1871": {
      "op": "POP"
    },
    "1872": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6335,
        6345
      ],
      "op": "CALLER",
      "path": "29"
    },
    "1873": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6335,
        6345
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1874": {
      "op": "POP"
    },
    "1875": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6315,
        6364
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x8FE75EF10E5C5E55D7608601BF1236FFD5EC45D4357FDE1E2C5C97ABF7B27F68"
    },
    "1908": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6315,
        6364
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1911": {
      "op": "ADD"
    },
    "1912": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6315,
        6364
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1914": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6315,
        6364
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1915": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6315,
        6364
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1916": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6315,
        6364
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1917": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6315,
        6364
      ],
      "op": "SUB",
      "path": "29"
    },
    "1918": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6315,
        6364
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1919": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6315,
        6364
      ],
      "op": "LOG3",
      "path": "29"
    },
    "1920": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "POP",
      "path": "29"
    },
    "1921": {
      "fn": "StakingInterface.unstakeNu",
      "offset": [
        6176,
        6371
      ],
      "op": "POP",
      "path": "29"
    },
    "1922": {
      "fn": "StakingInterface.unstakeNu",
      "jump": "o",
      "offset": [
        6176,
        6371
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1923": {
      "fn": "StakingInterface.refund",
      "offset": [
        5464,
        5616
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1924": {
      "offset": [
        1739,
        1762
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1963": {
      "op": "SHL"
    },
    "1964": {
      "op": "SUB"
    },
    "1965": {
      "offset": [
        1739,
        1779
      ],
      "op": "AND",
      "path": "29"
    },
    "1966": {
      "offset": [
        1774,
        1778
      ],
      "op": "ADDRESS",
      "path": "29"
    },
    "1967": {
      "offset": [
        1739,
        1779
      ],
      "op": "EQ",
      "path": "29"
    },
    "1968": {
      "fn": "StakingInterface.refund",
      "offset": [
        1739,
        1779
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1969": {
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x7B9"
    },
    "1972": {
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1973": {
      "fn": "StakingInterface.refund",
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1975": {
      "fn": "StakingInterface.refund",
      "offset": [
        1731,
        1780
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1976": {
      "fn": "StakingInterface.refund",
      "offset": [
        1731,
        1780
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1977": {
      "fn": "StakingInterface.refund",
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1978": {
      "offset": [
        1929,
        1937
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2017": {
      "op": "SHL"
    },
    "2018": {
      "op": "SUB"
    },
    "2019": {
      "offset": [
        1921,
        1952
      ],
      "op": "AND",
      "path": "29"
    },
    "2020": {
      "offset": [
        1913,
        1953
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x7EC"
    },
    "2023": {
      "offset": [
        1913,
        1953
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2024": {
      "fn": "StakingInterface.refund",
      "offset": [
        1913,
        1953
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2026": {
      "fn": "StakingInterface.refund",
      "offset": [
        1913,
        1953
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2027": {
      "fn": "StakingInterface.refund",
      "offset": [
        1913,
        1953
      ],
      "op": "REVERT",
      "path": "29"
    },
    "2028": {
      "fn": "StakingInterface.refund",
      "offset": [
        1913,
        1953
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2029": {
      "fn": "StakingInterface.refund",
      "offset": [
        5528,
        5545
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2031": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5556
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2070": {
      "op": "SHL"
    },
    "2071": {
      "op": "SUB"
    },
    "2072": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5563
      ],
      "op": "AND",
      "path": "29"
    },
    "2073": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5563
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x590E1AE3"
    },
    "2078": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2080": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2081": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2082": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "2087": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "AND",
      "path": "29"
    },
    "2088": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xE0"
    },
    "2090": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "SHL",
      "path": "29"
    },
    "2091": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2092": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2093": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "2095": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "ADD",
      "path": "29"
    },
    "2096": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2098": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2100": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2101": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2102": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2103": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "SUB",
      "path": "29"
    },
    "2104": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2105": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2107": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "DUP8",
      "path": "29"
    },
    "2108": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "GAS",
      "path": "29"
    },
    "2109": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "CALL",
      "path": "29"
    },
    "2110": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2111": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2112": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2113": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x84E"
    },
    "2116": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2117": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2118": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2120": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2121": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "2122": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2123": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2125": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "REVERT",
      "path": "29"
    },
    "2126": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2127": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "POP",
      "path": "29"
    },
    "2128": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "POP",
      "path": "29"
    },
    "2129": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "POP",
      "path": "29"
    },
    "2130": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "POP",
      "path": "29"
    },
    "2131": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2133": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2134": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2135": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "2137": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "NOT",
      "path": "29"
    },
    "2138": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "2140": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2141": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "ADD",
      "path": "29"
    },
    "2142": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "AND",
      "path": "29"
    },
    "2143": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2144": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "ADD",
      "path": "29"
    },
    "2145": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2146": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2148": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2149": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "POP",
      "path": "29"
    },
    "2150": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2151": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "ADD",
      "path": "29"
    },
    "2152": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2153": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x872"
    },
    "2156": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2157": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2158": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xE4D"
    },
    "2161": {
      "fn": "StakingInterface.refund",
      "jump": "i",
      "offset": [
        5548,
        5565
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2162": {
      "fn": "StakingInterface.refund",
      "offset": [
        5548,
        5565
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2163": {
      "fn": "StakingInterface.refund",
      "offset": [
        5580,
        5609
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 6,
      "value": "0x40"
    },
    "2165": {
      "fn": "StakingInterface.refund",
      "offset": [
        5580,
        5609
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2166": {
      "op": "DUP2"
    },
    "2167": {
      "op": "DUP2"
    },
    "2168": {
      "op": "MSTORE"
    },
    "2169": {
      "fn": "StakingInterface.refund",
      "offset": [
        5528,
        5565
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2170": {
      "fn": "StakingInterface.refund",
      "offset": [
        5528,
        5565
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2171": {
      "op": "POP"
    },
    "2172": {
      "fn": "StakingInterface.refund",
      "offset": [
        5587,
        5597
      ],
      "op": "CALLER",
      "path": "29"
    },
    "2173": {
      "fn": "StakingInterface.refund",
      "offset": [
        5587,
        5597
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2174": {
      "fn": "StakingInterface.refund",
      "offset": [
        5580,
        5609
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0xBB28353E4598C3B9199101A66E0989549B659A59A54D2C27FBB183F1932C8E6D"
    },
    "2207": {
      "fn": "StakingInterface.refund",
      "offset": [
        5580,
        5609
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2210": {
      "op": "ADD"
    },
    "2211": {
      "fn": "StakingInterface.refund",
      "offset": [
        5580,
        5609
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x456"
    },
    "2214": {
      "op": "JUMP"
    },
    "2215": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2216": {
      "offset": [
        1739,
        1762
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "2249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2255": {
      "op": "SHL"
    },
    "2256": {
      "op": "SUB"
    },
    "2257": {
      "offset": [
        1739,
        1779
      ],
      "op": "AND",
      "path": "29"
    },
    "2258": {
      "offset": [
        1774,
        1778
      ],
      "op": "ADDRESS",
      "path": "29"
    },
    "2259": {
      "offset": [
        1739,
        1779
      ],
      "op": "EQ",
      "path": "29"
    },
    "2260": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        1739,
        1779
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2261": {
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x8DD"
    },
    "2264": {
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2265": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2267": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        1731,
        1780
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2268": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        1731,
        1780
      ],
      "op": "REVERT",
      "path": "29"
    },
    "2269": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2270": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 7,
      "value": "0x40"
    },
    "2272": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2273": {
      "op": "PUSH4",
      "value": "0x40D85067"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2280": {
      "op": "SHL"
    },
    "2281": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2282": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2289": {
      "op": "SHL"
    },
    "2290": {
      "op": "SUB"
    },
    "2291": {
      "op": "DUP5"
    },
    "2292": {
      "op": "DUP2"
    },
    "2293": {
      "op": "AND"
    },
    "2294": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "2296": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2297": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "ADD",
      "path": "29"
    },
    "2298": {
      "op": "MSTORE"
    },
    "2299": {
      "op": "DUP4"
    },
    "2300": {
      "op": "DUP2"
    },
    "2301": {
      "op": "AND"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2304": {
      "op": "DUP4"
    },
    "2305": {
      "op": "ADD"
    },
    "2306": {
      "op": "MSTORE"
    },
    "2307": {
      "op": "DUP3"
    },
    "2308": {
      "op": "DUP2"
    },
    "2309": {
      "op": "AND"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2312": {
      "op": "DUP4"
    },
    "2313": {
      "op": "ADD"
    },
    "2314": {
      "op": "MSTORE"
    },
    "2315": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5950
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "2348": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5958
      ],
      "op": "AND",
      "path": "29"
    },
    "2349": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5958
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2350": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5958
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x81B0A0CE"
    },
    "2355": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5958
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2358": {
      "op": "ADD"
    },
    "2359": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2361": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2363": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2364": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2365": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2366": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "SUB",
      "path": "29"
    },
    "2367": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2368": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2370": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "DUP8",
      "path": "29"
    },
    "2371": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2372": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "EXTCODESIZE",
      "path": "29"
    },
    "2373": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2374": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2375": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2376": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x950"
    },
    "2379": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2380": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2382": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2383": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "REVERT",
      "path": "29"
    },
    "2384": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2385": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "POP",
      "path": "29"
    },
    "2386": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "GAS",
      "path": "29"
    },
    "2387": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "CALL",
      "path": "29"
    },
    "2388": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2389": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2390": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2391": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x964"
    },
    "2394": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2395": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2396": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2398": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2399": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "2400": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2401": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2403": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "REVERT",
      "path": "29"
    },
    "2404": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5942,
        5993
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2405": {
      "op": "POP"
    },
    "2406": {
      "op": "POP"
    },
    "2407": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        6008,
        6072
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 8,
      "value": "0x40"
    },
    "2409": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        6008,
        6072
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2410": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        6008,
        6072
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2417": {
      "op": "SHL"
    },
    "2418": {
      "op": "SUB"
    },
    "2419": {
      "op": "DUP7"
    },
    "2420": {
      "op": "DUP2"
    },
    "2421": {
      "op": "AND"
    },
    "2422": {
      "op": "DUP3"
    },
    "2423": {
      "op": "MSTORE"
    },
    "2424": {
      "op": "DUP6"
    },
    "2425": {
      "op": "DUP2"
    },
    "2426": {
      "op": "AND"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2429": {
      "op": "DUP4"
    },
    "2430": {
      "op": "ADD"
    },
    "2431": {
      "op": "MSTORE"
    },
    "2432": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        6008,
        6072
      ],
      "op": "DUP8",
      "path": "29"
    },
    "2433": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        6008,
        6072
      ],
      "op": "AND",
      "path": "29"
    },
    "2434": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        6008,
        6072
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "2435": {
      "op": "POP"
    },
    "2436": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        6026,
        6036
      ],
      "op": "CALLER",
      "path": "29"
    },
    "2437": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        6026,
        6036
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2438": {
      "op": "POP"
    },
    "2439": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        6008,
        6072
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x53C7E51BE5A8E99F46E6FEF4CC254FAFC9E161EB0A36FF54D8F408932BBA1951"
    },
    "2472": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        6008,
        6072
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2473": {
      "op": "ADD"
    },
    "2474": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        6008,
        6072
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2476": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        6008,
        6072
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2477": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        6008,
        6072
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2478": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        6008,
        6072
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2479": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        6008,
        6072
      ],
      "op": "SUB",
      "path": "29"
    },
    "2480": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        6008,
        6072
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2481": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        6008,
        6072
      ],
      "op": "LOG3",
      "path": "29"
    },
    "2482": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "POP",
      "path": "29"
    },
    "2483": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "POP",
      "path": "29"
    },
    "2484": {
      "fn": "StakingInterface.stakeNu",
      "offset": [
        5792,
        6079
      ],
      "op": "POP",
      "path": "29"
    },
    "2485": {
      "fn": "StakingInterface.stakeNu",
      "jump": "o",
      "offset": [
        5792,
        6079
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2486": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        4954,
        5118
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2487": {
      "offset": [
        1739,
        1762
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2526": {
      "op": "SHL"
    },
    "2527": {
      "op": "SUB"
    },
    "2528": {
      "offset": [
        1739,
        1779
      ],
      "op": "AND",
      "path": "29"
    },
    "2529": {
      "offset": [
        1774,
        1778
      ],
      "op": "ADDRESS",
      "path": "29"
    },
    "2530": {
      "offset": [
        1739,
        1779
      ],
      "op": "EQ",
      "path": "29"
    },
    "2531": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        1739,
        1779
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2532": {
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x9EC"
    },
    "2535": {
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2536": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2538": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        1731,
        1780
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2539": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        1731,
        1780
      ],
      "op": "REVERT",
      "path": "29"
    },
    "2540": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2541": {
      "offset": [
        1929,
        1937
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2580": {
      "op": "SHL"
    },
    "2581": {
      "op": "SUB"
    },
    "2582": {
      "offset": [
        1921,
        1952
      ],
      "op": "AND",
      "path": "29"
    },
    "2583": {
      "offset": [
        1913,
        1953
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xA1F"
    },
    "2586": {
      "offset": [
        1913,
        1953
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2587": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        1913,
        1953
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2589": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        1913,
        1953
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2590": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        1913,
        1953
      ],
      "op": "REVERT",
      "path": "29"
    },
    "2591": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        1913,
        1953
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2592": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5040
      ],
      "op": "PUSH32",
      "path": "29",
      "statement": 9,
      "value": "0x0"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2631": {
      "op": "SHL"
    },
    "2632": {
      "op": "SUB"
    },
    "2633": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5061
      ],
      "op": "AND",
      "path": "29"
    },
    "2634": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5061
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x87A15DC9"
    },
    "2639": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2641": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2642": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2643": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "2648": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "AND",
      "path": "29"
    },
    "2649": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xE0"
    },
    "2651": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "SHL",
      "path": "29"
    },
    "2652": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2653": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2654": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "2656": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "ADD",
      "path": "29"
    },
    "2657": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2659": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2661": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2662": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2663": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2664": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "SUB",
      "path": "29"
    },
    "2665": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2666": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2668": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "DUP8",
      "path": "29"
    },
    "2669": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2670": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "EXTCODESIZE",
      "path": "29"
    },
    "2671": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2672": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2673": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2674": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xA7A"
    },
    "2677": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2678": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2680": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2681": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "REVERT",
      "path": "29"
    },
    "2682": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2683": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "POP",
      "path": "29"
    },
    "2684": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "GAS",
      "path": "29"
    },
    "2685": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "CALL",
      "path": "29"
    },
    "2686": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2687": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2688": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2689": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xA8E"
    },
    "2692": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2693": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2694": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2696": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2697": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "2698": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2699": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2701": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "REVERT",
      "path": "29"
    },
    "2702": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5032,
        5063
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2703": {
      "op": "POP"
    },
    "2704": {
      "op": "POP"
    },
    "2705": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5078,
        5111
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 10,
      "value": "0x40"
    },
    "2707": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5078,
        5111
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2708": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5100,
        5110
      ],
      "op": "CALLER",
      "path": "29"
    },
    "2709": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5100,
        5110
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2710": {
      "op": "POP"
    },
    "2711": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5078,
        5111
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x1F3C545731EADF66E84BFA3F22265530AC6CDE1C211E7A25DA70139A06BC39A6"
    },
    "2744": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5078,
        5111
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2745": {
      "op": "POP"
    },
    "2746": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5078,
        5111
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2748": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5078,
        5111
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2749": {
      "fn": "StakingInterface.withdrawCompensation",
      "offset": [
        5078,
        5111
      ],
      "op": "LOG2",
      "path": "29"
    },
    "2750": {
      "fn": "StakingInterface.withdrawCompensation",
      "jump": "o",
      "offset": [
        4954,
        5118
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2751": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4270,
        4448
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2752": {
      "offset": [
        1739,
        1762
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2791": {
      "op": "SHL"
    },
    "2792": {
      "op": "SUB"
    },
    "2793": {
      "offset": [
        1739,
        1779
      ],
      "op": "AND",
      "path": "29"
    },
    "2794": {
      "offset": [
        1774,
        1778
      ],
      "op": "ADDRESS",
      "path": "29"
    },
    "2795": {
      "offset": [
        1739,
        1779
      ],
      "op": "EQ",
      "path": "29"
    },
    "2796": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        1739,
        1779
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2797": {
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xAF5"
    },
    "2800": {
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2801": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2803": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        1731,
        1780
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2804": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        1731,
        1780
      ],
      "op": "REVERT",
      "path": "29"
    },
    "2805": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2806": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 11,
      "value": "0x40"
    },
    "2808": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2809": {
      "op": "PUSH4",
      "value": "0x8C316B9"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "2816": {
      "op": "SHL"
    },
    "2817": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2818": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2819": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "2821": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2822": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "ADD",
      "path": "29"
    },
    "2823": {
      "op": "DUP3"
    },
    "2824": {
      "op": "SWAP1"
    },
    "2825": {
      "op": "MSTORE"
    },
    "2826": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4361
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "2859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2865": {
      "op": "SHL"
    },
    "2866": {
      "op": "SUB"
    },
    "2867": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4375
      ],
      "op": "AND",
      "path": "29"
    },
    "2868": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4375
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2869": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4375
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x8C316B90"
    },
    "2874": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4375
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2877": {
      "op": "ADD"
    },
    "2878": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2880": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2882": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2883": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2884": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2885": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "SUB",
      "path": "29"
    },
    "2886": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2887": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2889": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "DUP8",
      "path": "29"
    },
    "2890": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2891": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "EXTCODESIZE",
      "path": "29"
    },
    "2892": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2893": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2894": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2895": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xB57"
    },
    "2898": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2899": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2901": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2902": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "REVERT",
      "path": "29"
    },
    "2903": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2904": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "POP",
      "path": "29"
    },
    "2905": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "GAS",
      "path": "29"
    },
    "2906": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "CALL",
      "path": "29"
    },
    "2907": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2908": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2909": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2910": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xB6B"
    },
    "2913": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2914": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2915": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2917": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2918": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "2919": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2920": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2922": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "REVERT",
      "path": "29"
    },
    "2923": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4348,
        4388
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2924": {
      "op": "POP"
    },
    "2925": {
      "op": "POP"
    },
    "2926": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4403,
        4441
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 12,
      "value": "0x40"
    },
    "2928": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4403,
        4441
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2929": {
      "op": "DUP4"
    },
    "2930": {
      "op": "DUP2"
    },
    "2931": {
      "op": "MSTORE"
    },
    "2932": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4417,
        4427
      ],
      "op": "CALLER",
      "path": "29"
    },
    "2933": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4417,
        4427
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2934": {
      "op": "POP"
    },
    "2935": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4403,
        4441
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x6B9024CC1BF5710F290BE788DCA9886DB7A3D9BE0DF0855BFA991DBF26A256BC"
    },
    "2968": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4403,
        4441
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2969": {
      "op": "POP"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2972": {
      "op": "ADD"
    },
    "2973": {
      "fn": "StakingInterface.setMinFeeRate",
      "offset": [
        4403,
        4441
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x456"
    },
    "2976": {
      "op": "JUMP"
    },
    "2977": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4746,
        4878
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2978": {
      "offset": [
        1739,
        1762
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3017": {
      "op": "SHL"
    },
    "3018": {
      "op": "SUB"
    },
    "3019": {
      "offset": [
        1739,
        1779
      ],
      "op": "AND",
      "path": "29"
    },
    "3020": {
      "offset": [
        1774,
        1778
      ],
      "op": "ADDRESS",
      "path": "29"
    },
    "3021": {
      "offset": [
        1739,
        1779
      ],
      "op": "EQ",
      "path": "29"
    },
    "3022": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        1739,
        1779
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "3023": {
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xBD7"
    },
    "3026": {
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3027": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3029": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        1731,
        1780
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3030": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        1731,
        1780
      ],
      "op": "REVERT",
      "path": "29"
    },
    "3031": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3032": {
      "offset": [
        1929,
        1937
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3071": {
      "op": "SHL"
    },
    "3072": {
      "op": "SUB"
    },
    "3073": {
      "offset": [
        1921,
        1952
      ],
      "op": "AND",
      "path": "29"
    },
    "3074": {
      "offset": [
        1913,
        1953
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xC0A"
    },
    "3077": {
      "offset": [
        1913,
        1953
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3078": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        1913,
        1953
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3080": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        1913,
        1953
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3081": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        1913,
        1953
      ],
      "op": "REVERT",
      "path": "29"
    },
    "3082": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        1913,
        1953
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3083": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4821
      ],
      "op": "PUSH32",
      "path": "29",
      "statement": 13,
      "value": "0x0"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3122": {
      "op": "SHL"
    },
    "3123": {
      "op": "SUB"
    },
    "3124": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4831
      ],
      "op": "AND",
      "path": "29"
    },
    "3125": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4831
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x9435C887"
    },
    "3130": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3132": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3133": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3134": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "3139": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "AND",
      "path": "29"
    },
    "3140": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xE0"
    },
    "3142": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "SHL",
      "path": "29"
    },
    "3143": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3144": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3145": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "3147": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "ADD",
      "path": "29"
    },
    "3148": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3150": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3152": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3153": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3154": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3155": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "SUB",
      "path": "29"
    },
    "3156": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3157": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3159": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "DUP8",
      "path": "29"
    },
    "3160": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3161": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "EXTCODESIZE",
      "path": "29"
    },
    "3162": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "3163": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3164": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "3165": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xC65"
    },
    "3168": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3169": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3171": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3172": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "REVERT",
      "path": "29"
    },
    "3173": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3174": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "POP",
      "path": "29"
    },
    "3175": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "GAS",
      "path": "29"
    },
    "3176": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "CALL",
      "path": "29"
    },
    "3177": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "3178": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3179": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "3180": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xC79"
    },
    "3183": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3184": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3185": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3187": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3188": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "3189": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3190": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3192": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "REVERT",
      "path": "29"
    },
    "3193": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4813,
        4833
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3194": {
      "op": "POP"
    },
    "3195": {
      "op": "POP"
    },
    "3196": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4848,
        4871
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 14,
      "value": "0x40"
    },
    "3198": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4848,
        4871
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3199": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4860,
        4870
      ],
      "op": "CALLER",
      "path": "29"
    },
    "3200": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4860,
        4870
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3201": {
      "op": "POP"
    },
    "3202": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4848,
        4871
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x7791542F9106A010F289AA1D108168B87D4E2D3D37ED4ECB762391DA5E18A45D"
    },
    "3235": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4848,
        4871
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3236": {
      "op": "POP"
    },
    "3237": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4848,
        4871
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3239": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4848,
        4871
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3240": {
      "fn": "StakingInterface.cancelBid",
      "offset": [
        4848,
        4871
      ],
      "op": "LOG2",
      "path": "29"
    },
    "3241": {
      "fn": "StakingInterface.cancelBid",
      "jump": "o",
      "offset": [
        4746,
        4878
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3242": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3722,
        3880
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3243": {
      "offset": [
        1739,
        1762
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3282": {
      "op": "SHL"
    },
    "3283": {
      "op": "SUB"
    },
    "3284": {
      "offset": [
        1739,
        1779
      ],
      "op": "AND",
      "path": "29"
    },
    "3285": {
      "offset": [
        1774,
        1778
      ],
      "op": "ADDRESS",
      "path": "29"
    },
    "3286": {
      "offset": [
        1739,
        1779
      ],
      "op": "EQ",
      "path": "29"
    },
    "3287": {
      "branch": 17,
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        1739,
        1779
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "3288": {
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xCE0"
    },
    "3291": {
      "branch": 17,
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3292": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        1731,
        1780
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3294": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        1731,
        1780
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3295": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        1731,
        1780
      ],
      "op": "REVERT",
      "path": "29"
    },
    "3296": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        1731,
        1780
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3297": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 15,
      "value": "0x40"
    },
    "3299": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3300": {
      "op": "PUSH4",
      "value": "0x2E1A7D4D"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3307": {
      "op": "SHL"
    },
    "3308": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3309": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3310": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "3312": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3313": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "ADD",
      "path": "29"
    },
    "3314": {
      "op": "DUP3"
    },
    "3315": {
      "op": "SWAP1"
    },
    "3316": {
      "op": "MSTORE"
    },
    "3317": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3804
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x0"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3356": {
      "op": "SHL"
    },
    "3357": {
      "op": "SUB"
    },
    "3358": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3813
      ],
      "op": "AND",
      "path": "29"
    },
    "3359": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3813
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3360": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3813
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x2E1A7D4D"
    },
    "3365": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3813
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3368": {
      "op": "ADD"
    },
    "3369": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3371": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3373": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3374": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3375": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3376": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "SUB",
      "path": "29"
    },
    "3377": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3378": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3380": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "DUP8",
      "path": "29"
    },
    "3381": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3382": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "EXTCODESIZE",
      "path": "29"
    },
    "3383": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "3384": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3385": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "3386": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD42"
    },
    "3389": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3390": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3392": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3393": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "REVERT",
      "path": "29"
    },
    "3394": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3395": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "POP",
      "path": "29"
    },
    "3396": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "GAS",
      "path": "29"
    },
    "3397": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "CALL",
      "path": "29"
    },
    "3398": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "3399": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3400": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "3401": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD56"
    },
    "3404": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3405": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3406": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3408": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3409": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "3410": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3411": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3413": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "REVERT",
      "path": "29"
    },
    "3414": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3798,
        3821
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3415": {
      "op": "POP"
    },
    "3416": {
      "op": "POP"
    },
    "3417": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3836,
        3873
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 16,
      "value": "0x40"
    },
    "3419": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3836,
        3873
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3420": {
      "op": "DUP4"
    },
    "3421": {
      "op": "DUP2"
    },
    "3422": {
      "op": "MSTORE"
    },
    "3423": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3854,
        3864
      ],
      "op": "CALLER",
      "path": "29"
    },
    "3424": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3854,
        3864
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3425": {
      "op": "POP"
    },
    "3426": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3836,
        3873
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0xE260C3EA1A7DA044FDB8E612A54B70847532F00018C3F751BECCD55032F62064"
    },
    "3459": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3836,
        3873
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3460": {
      "op": "POP"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3463": {
      "op": "ADD"
    },
    "3464": {
      "fn": "StakingInterface.withdrawAsStaker",
      "offset": [
        3836,
        3873
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x456"
    },
    "3467": {
      "op": "JUMP"
    },
    "3468": {
      "op": "JUMPDEST"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3473": {
      "op": "DUP3"
    },
    "3474": {
      "op": "DUP5"
    },
    "3475": {
      "op": "SUB"
    },
    "3476": {
      "op": "SLT"
    },
    "3477": {
      "op": "ISZERO"
    },
    "3478": {
      "op": "PUSH2",
      "value": "0xD9E"
    },
    "3481": {
      "op": "JUMPI"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3484": {
      "op": "DUP1"
    },
    "3485": {
      "op": "REVERT"
    },
    "3486": {
      "op": "JUMPDEST"
    },
    "3487": {
      "op": "POP"
    },
    "3488": {
      "op": "CALLDATALOAD"
    },
    "3489": {
      "op": "SWAP2"
    },
    "3490": {
      "op": "SWAP1"
    },
    "3491": {
      "op": "POP"
    },
    "3492": {
      "jump": "o",
      "op": "JUMP"
    },
    "3493": {
      "op": "JUMPDEST"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3500": {
      "op": "SHL"
    },
    "3501": {
      "op": "SUB"
    },
    "3502": {
      "op": "DUP2"
    },
    "3503": {
      "op": "AND"
    },
    "3504": {
      "op": "DUP2"
    },
    "3505": {
      "op": "EQ"
    },
    "3506": {
      "op": "PUSH2",
      "value": "0xDBA"
    },
    "3509": {
      "op": "JUMPI"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3512": {
      "op": "DUP1"
    },
    "3513": {
      "op": "REVERT"
    },
    "3514": {
      "op": "JUMPDEST"
    },
    "3515": {
      "op": "POP"
    },
    "3516": {
      "jump": "o",
      "op": "JUMP"
    },
    "3517": {
      "op": "JUMPDEST"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3520": {
      "op": "DUP1"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3523": {
      "op": "DUP4"
    },
    "3524": {
      "op": "DUP6"
    },
    "3525": {
      "op": "SUB"
    },
    "3526": {
      "op": "SLT"
    },
    "3527": {
      "op": "ISZERO"
    },
    "3528": {
      "op": "PUSH2",
      "value": "0xDD0"
    },
    "3531": {
      "op": "JUMPI"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3534": {
      "op": "DUP1"
    },
    "3535": {
      "op": "REVERT"
    },
    "3536": {
      "op": "JUMPDEST"
    },
    "3537": {
      "op": "DUP3"
    },
    "3538": {
      "op": "CALLDATALOAD"
    },
    "3539": {
      "op": "PUSH2",
      "value": "0xDDB"
    },
    "3542": {
      "op": "DUP2"
    },
    "3543": {
      "op": "PUSH2",
      "value": "0xDA5"
    },
    "3546": {
      "jump": "i",
      "op": "JUMP"
    },
    "3547": {
      "op": "JUMPDEST"
    },
    "3548": {
      "op": "SWAP2"
    },
    "3549": {
      "op": "POP"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3552": {
      "op": "DUP4"
    },
    "3553": {
      "op": "ADD"
    },
    "3554": {
      "op": "CALLDATALOAD"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3561": {
      "op": "SHL"
    },
    "3562": {
      "op": "SUB"
    },
    "3563": {
      "op": "DUP2"
    },
    "3564": {
      "op": "AND"
    },
    "3565": {
      "op": "DUP2"
    },
    "3566": {
      "op": "EQ"
    },
    "3567": {
      "op": "PUSH2",
      "value": "0xDF7"
    },
    "3570": {
      "op": "JUMPI"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3573": {
      "op": "DUP1"
    },
    "3574": {
      "op": "REVERT"
    },
    "3575": {
      "op": "JUMPDEST"
    },
    "3576": {
      "op": "DUP1"
    },
    "3577": {
      "op": "SWAP2"
    },
    "3578": {
      "op": "POP"
    },
    "3579": {
      "op": "POP"
    },
    "3580": {
      "op": "SWAP3"
    },
    "3581": {
      "op": "POP"
    },
    "3582": {
      "op": "SWAP3"
    },
    "3583": {
      "op": "SWAP1"
    },
    "3584": {
      "op": "POP"
    },
    "3585": {
      "jump": "o",
      "op": "JUMP"
    },
    "3586": {
      "op": "JUMPDEST"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3589": {
      "op": "DUP1"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3594": {
      "op": "DUP5"
    },
    "3595": {
      "op": "DUP7"
    },
    "3596": {
      "op": "SUB"
    },
    "3597": {
      "op": "SLT"
    },
    "3598": {
      "op": "ISZERO"
    },
    "3599": {
      "op": "PUSH2",
      "value": "0xE17"
    },
    "3602": {
      "op": "JUMPI"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3605": {
      "op": "DUP1"
    },
    "3606": {
      "op": "REVERT"
    },
    "3607": {
      "op": "JUMPDEST"
    },
    "3608": {
      "op": "DUP4"
    },
    "3609": {
      "op": "CALLDATALOAD"
    },
    "3610": {
      "op": "PUSH2",
      "value": "0xE22"
    },
    "3613": {
      "op": "DUP2"
    },
    "3614": {
      "op": "PUSH2",
      "value": "0xDA5"
    },
    "3617": {
      "jump": "i",
      "op": "JUMP"
    },
    "3618": {
      "op": "JUMPDEST"
    },
    "3619": {
      "op": "SWAP3"
    },
    "3620": {
      "op": "POP"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3623": {
      "op": "DUP5"
    },
    "3624": {
      "op": "ADD"
    },
    "3625": {
      "op": "CALLDATALOAD"
    },
    "3626": {
      "op": "PUSH2",
      "value": "0xE32"
    },
    "3629": {
      "op": "DUP2"
    },
    "3630": {
      "op": "PUSH2",
      "value": "0xDA5"
    },
    "3633": {
      "jump": "i",
      "op": "JUMP"
    },
    "3634": {
      "op": "JUMPDEST"
    },
    "3635": {
      "op": "SWAP2"
    },
    "3636": {
      "op": "POP"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3639": {
      "op": "DUP5"
    },
    "3640": {
      "op": "ADD"
    },
    "3641": {
      "op": "CALLDATALOAD"
    },
    "3642": {
      "op": "PUSH2",
      "value": "0xE42"
    },
    "3645": {
      "op": "DUP2"
    },
    "3646": {
      "op": "PUSH2",
      "value": "0xDA5"
    },
    "3649": {
      "jump": "i",
      "op": "JUMP"
    },
    "3650": {
      "op": "JUMPDEST"
    },
    "3651": {
      "op": "DUP1"
    },
    "3652": {
      "op": "SWAP2"
    },
    "3653": {
      "op": "POP"
    },
    "3654": {
      "op": "POP"
    },
    "3655": {
      "op": "SWAP3"
    },
    "3656": {
      "op": "POP"
    },
    "3657": {
      "op": "SWAP3"
    },
    "3658": {
      "op": "POP"
    },
    "3659": {
      "op": "SWAP3"
    },
    "3660": {
      "jump": "o",
      "op": "JUMP"
    },
    "3661": {
      "op": "JUMPDEST"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3666": {
      "op": "DUP3"
    },
    "3667": {
      "op": "DUP5"
    },
    "3668": {
      "op": "SUB"
    },
    "3669": {
      "op": "SLT"
    },
    "3670": {
      "op": "ISZERO"
    },
    "3671": {
      "op": "PUSH2",
      "value": "0xE5F"
    },
    "3674": {
      "op": "JUMPI"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3677": {
      "op": "DUP1"
    },
    "3678": {
      "op": "REVERT"
    },
    "3679": {
      "op": "JUMPDEST"
    },
    "3680": {
      "op": "POP"
    },
    "3681": {
      "op": "MLOAD"
    },
    "3682": {
      "op": "SWAP2"
    },
    "3683": {
      "op": "SWAP1"
    },
    "3684": {
      "op": "POP"
    },
    "3685": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "02b736107fe0f20b4d5d46281940a8f84626c94a",
  "source": "// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.8.0;\n\n\nimport \"./AbstractStakingContract.sol\";\nimport \"../NuCypherToken.sol\";\nimport \"../IStakingEscrow.sol\";\nimport \"../PolicyManager.sol\";\nimport \"../WorkLock.sol\";\nimport \"../../threshold/IStaking.sol\";\n\n\n/**\n* @notice Base StakingInterface\n*/\ncontract BaseStakingInterface {\n\n    address public immutable stakingInterfaceAddress;\n    NuCypherToken public immutable token;\n    IStakingEscrow public immutable escrow;\n    PolicyManager public immutable policyManager;\n    WorkLock public immutable workLock;\n    IStaking public immutable tStaking;\n\n    /**\n    * @notice Constructor sets addresses of the contracts\n    * @param _token Token contract\n    * @param _escrow Escrow contract\n    * @param _policyManager PolicyManager contract\n    * @param _workLock WorkLock contract\n    * @param _tStaking Threshold TokenStaking contract\n    */\n    constructor(\n        NuCypherToken _token,\n        IStakingEscrow _escrow,\n        PolicyManager _policyManager,\n        WorkLock _workLock,\n        IStaking _tStaking\n    ) {\n        require(_token.totalSupply() > 0 &&\n            _escrow.token() == _token &&\n            _policyManager.secondsPerPeriod() > 0 &&\n            _tStaking.stakedNu(address(0)) == 0 &&\n            // in case there is no worklock contract\n            (address(_workLock) == address(0) || _workLock.boostingRefund() > 0));\n        token = _token;\n        escrow = _escrow;\n        policyManager = _policyManager;\n        workLock = _workLock;\n        tStaking = _tStaking;\n        stakingInterfaceAddress = address(this);\n    }\n\n    /**\n    * @dev Checks executing through delegate call\n    */\n    modifier onlyDelegateCall()\n    {\n        require(stakingInterfaceAddress != address(this));\n        _;\n    }\n\n    /**\n    * @dev Checks the existence of the worklock contract\n    */\n    modifier workLockSet()\n    {\n        require(address(workLock) != address(0));\n        _;\n    }\n\n}\n\n\n/**\n* @notice Interface for accessing main contracts from a staking contract\n* @dev All methods must be stateless because this code will be executed by delegatecall call, use immutable fields.\n* @dev |v1.9.1|\n*/\ncontract StakingInterface is BaseStakingInterface {\n\n    event WithdrawnAsStaker(address indexed sender, uint256 value);\n    event PolicyFeeWithdrawn(address indexed sender, uint256 value);\n    event MinFeeRateSet(address indexed sender, uint256 value);\n    event Bid(address indexed sender, uint256 depositedETH);\n    event Claimed(address indexed sender, uint256 claimedTokens);\n    event Refund(address indexed sender, uint256 refundETH);\n    event BidCanceled(address indexed sender);\n    event CompensationWithdrawn(address indexed sender);\n    event ThresholdNUStaked(\n        address indexed sender,\n        address indexed operator,\n        address beneficiary,\n        address authorizer\n    );\n    event ThresholdNUUnstaked(address indexed sender, address indexed operator, uint96 amount);\n\n    /**\n    * @notice Constructor sets addresses of the contracts\n    * @param _token Token contract\n    * @param _escrow Escrow contract\n    * @param _policyManager PolicyManager contract\n    * @param _workLock WorkLock contract\n    * @param _tStaking Threshold TokenStaking contract\n    */\n    constructor(\n        NuCypherToken _token,\n        IStakingEscrow _escrow,\n        PolicyManager _policyManager,\n        WorkLock _workLock,\n        IStaking _tStaking\n    )\n        BaseStakingInterface(_token, _escrow, _policyManager, _workLock, _tStaking)\n    {\n    }\n\n    /**\n    * @notice Withdraw available amount of tokens from the staking escrow to the staking contract\n    * @param _value Amount of token to withdraw\n    */\n    function withdrawAsStaker(uint256 _value) public onlyDelegateCall {\n        escrow.withdraw(_value);\n        emit WithdrawnAsStaker(msg.sender, _value);\n    }\n\n    /**\n    * @notice Withdraw available policy fees from the policy manager to the staking contract\n    */\n    function withdrawPolicyFee() public onlyDelegateCall {\n        uint256 value = policyManager.withdraw();\n        emit PolicyFeeWithdrawn(msg.sender, value);\n    }\n\n    /**\n    * @notice Set the minimum fee that the staker will accept in the policy manager contract\n    */\n    function setMinFeeRate(uint256 _minFeeRate) public onlyDelegateCall {\n        policyManager.setMinFeeRate(_minFeeRate);\n        emit MinFeeRateSet(msg.sender, _minFeeRate);\n    }\n\n    /**\n    * @notice Bid for tokens by transferring ETH\n    */\n    function bid(uint256 _value) public payable onlyDelegateCall workLockSet {\n        workLock.bid{value: _value}();\n        emit Bid(msg.sender, _value);\n    }\n\n    /**\n    * @notice Cancel bid and refund deposited ETH\n    */\n    function cancelBid() public onlyDelegateCall workLockSet {\n        workLock.cancelBid();\n        emit BidCanceled(msg.sender);\n    }\n\n    /**\n    * @notice Withdraw compensation after force refund\n    */\n    function withdrawCompensation() public onlyDelegateCall workLockSet {\n        workLock.withdrawCompensation();\n        emit CompensationWithdrawn(msg.sender);\n    }\n\n    /**\n    * @notice Claimed tokens will be deposited and locked as stake in the StakingEscrow contract\n    */\n    function claim() public onlyDelegateCall workLockSet {\n        uint256 claimedTokens = workLock.claim();\n        emit Claimed(msg.sender, claimedTokens);\n    }\n\n    /**\n    * @notice Refund ETH for the completed work\n    */\n    function refund() public onlyDelegateCall workLockSet {\n        uint256 refundETH = workLock.refund();\n        emit Refund(msg.sender, refundETH);\n    }\n\n    /**\n    * @notice Copies delegation from the legacy NU staking contract to T staking contract,\n    * additionally appointing beneficiary and authorizer roles.\n    */\n    function stakeNu(\n        address operator,\n        address payable beneficiary,\n        address authorizer\n    ) external onlyDelegateCall {\n        tStaking.stakeNu(operator, beneficiary, authorizer);\n        emit ThresholdNUStaked(msg.sender, operator, beneficiary, authorizer);\n    }\n\n    /**\n    * @notice Reduces cached legacy NU stake amount by the provided amount.\n    */\n    function unstakeNu(address operator, uint96 amount) external onlyDelegateCall {\n        tStaking.unstakeNu(operator, amount);\n        emit ThresholdNUUnstaked(msg.sender, operator, amount);\n    }\n}\n",
  "sourceMap": "2189:4184:29:-:0;;;3286:269;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3489:6;3497:7;3506:14;3522:9;3533;1128:1;1105:6;-1:-1:-1;;;;;1105:18:29;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:24;:65;;;;;1164:6;-1:-1:-1;;;;;1145:25:29;:7;-1:-1:-1;;;;;1145:13:29;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1145:25:29;;1105:65;:118;;;;;1222:1;1186:14;-1:-1:-1;;;;;1186:31:29;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;;1105:118;:169;;;;-1:-1:-1;1239:30:29;;-1:-1:-1;;;1239:30:29;;1266:1;1239:30;;;2046:51:41;-1:-1:-1;;;;;1239:18:29;;;;;2019::41;;1239:30:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;1105:169;:306;;;;-1:-1:-1;;;;;;1344:32:29;;;;:66;;;1409:1;1380:9;-1:-1:-1;;;;;1380:24:29;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:30;1344:66;1097:315;;;;;;-1:-1:-1;;;;;1422:14:29;;;;;1446:16;;;;;1472:30;;;;;1512:20;;;;1542;;;-1:-1:-1;;1606:4:29;1572:39;;-1:-1:-1;2189:4184:29;;-1:-1:-1;;2189:4184:29;14:146:41;-1:-1:-1;;;;;104:31:41;;94:42;;84:70;;150:1;147;140:12;84:70;14:146;:::o;165:964::-;371:6;379;387;395;403;456:3;444:9;435:7;431:23;427:33;424:53;;;473:1;470;463:12;424:53;505:9;499:16;524:46;564:5;524:46;:::i;:::-;639:2;624:18;;618:25;589:5;;-1:-1:-1;652:48:41;618:25;652:48;:::i;:::-;771:2;756:18;;750:25;719:7;;-1:-1:-1;784:48:41;750:25;784:48;:::i;:::-;903:2;888:18;;882:25;851:7;;-1:-1:-1;916:48:41;882:25;916:48;:::i;:::-;1035:3;1020:19;;1014:26;983:7;;-1:-1:-1;1049:48:41;1014:26;1049:48;:::i;:::-;1116:7;1106:17;;;165:964;;;;;;;;:::o;1134:184::-;1204:6;1257:2;1245:9;1236:7;1232:23;1228:32;1225:52;;;1273:1;1270;1263:12;1225:52;-1:-1:-1;1296:16:41;;1134:184;-1:-1:-1;1134:184:41:o;1323:287::-;1414:6;1467:2;1455:9;1446:7;1442:23;1438:32;1435:52;;;1483:1;1480;1473:12;1435:52;1515:9;1509:16;1534:46;1574:5;1534:46;:::i;:::-;1599:5;1323:287;-1:-1:-1;;;1323:287:41:o;1615:280::-;1684:6;1737:2;1725:9;1716:7;1712:23;1708:32;1705:52;;;1753:1;1750;1743:12;1705:52;1785:9;1779:16;1835:10;1828:5;1824:22;1817:5;1814:33;1804:61;;1861:1;1858;1851:12;1900:203;2189:4184:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/contracts/staking_contracts/StakingInterface.sol",
  "type": "contract"
}