{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IStaking",
          "name": "_tStaking",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minAuthorization",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minOperatorSeconds",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "stakingProvider",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTimestamp",
          "type": "uint256"
        }
      ],
      "name": "OperatorBonded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "stakingProvider",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorConfirmed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingProvider",
          "type": "address"
        }
      ],
      "name": "authorizedStake",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingProvider",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "bondOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmOperatorAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxStakingProviders",
          "type": "uint256"
        }
      ],
      "name": "getActiveStakingProviders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "allAuthorizedTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2][]",
          "name": "activeStakingProviders",
          "type": "uint256[2][]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingProvider",
          "type": "address"
        }
      ],
      "name": "getBeneficiary",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingProvider",
          "type": "address"
        }
      ],
      "name": "getOperatorFromStakingProvider",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakingProvidersLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingProvider",
          "type": "address"
        }
      ],
      "name": "isAuthorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isOperatorConfirmed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minAuthorization",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minOperatorSeconds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "stakingProviderFromOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingProviderInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "operatorConfirmed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "operatorStartTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakingProviders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tStaking",
      "outputs": [
        {
          "internalType": "contract IStaking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "13": "contracts/contracts/SimplePREApplication.sol",
    "31": "contracts/threshold/IStaking.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/SimplePREApplication.sol",
    "exportedSymbols": {
      "IStaking": [
        13145
      ],
      "SimplePREApplication": [
        4250
      ]
    },
    "id": 4251,
    "license": "AGPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3684,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "47:23:13"
      },
      {
        "absolutePath": "contracts/threshold/IStaking.sol",
        "file": "../threshold/IStaking.sol",
        "id": 3685,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4251,
        "sourceUnit": 13146,
        "src": "73:35:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SimplePREApplication",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3686,
          "nodeType": "StructuredDocumentation",
          "src": "111:76:13",
          "text": " @title PRE Application\n @notice Contract handles PRE configuration"
        },
        "fullyImplemented": true,
        "id": 4250,
        "linearizedBaseContracts": [
          4250
        ],
        "name": "SimplePREApplication",
        "nameLocation": "197:20:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 3687,
              "nodeType": "StructuredDocumentation",
              "src": "225:232:13",
              "text": " @notice Signals that an operator was bonded to the staking provider\n @param stakingProvider Staking provider address\n @param operator Operator address\n @param startTimestamp Timestamp bonding occurred"
            },
            "id": 3695,
            "name": "OperatorBonded",
            "nameLocation": "468:14:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3689,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "stakingProvider",
                  "nameLocation": "499:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3695,
                  "src": "483:31:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3691,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "532:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3695,
                  "src": "516:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "516:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3693,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startTimestamp",
                  "nameLocation": "550:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3695,
                  "src": "542:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "482:83:13"
            },
            "src": "462:104:13"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3696,
              "nodeType": "StructuredDocumentation",
              "src": "572:163:13",
              "text": " @notice Signals that an operator address is confirmed\n @param stakingProvider Staking provider address\n @param operator Operator address"
            },
            "id": 3702,
            "name": "OperatorConfirmed",
            "nameLocation": "746:17:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3698,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "stakingProvider",
                  "nameLocation": "780:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3702,
                  "src": "764:31:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3700,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "813:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3702,
                  "src": "797:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "763:59:13"
            },
            "src": "740:83:13"
          },
          {
            "canonicalName": "SimplePREApplication.StakingProviderInfo",
            "id": 3709,
            "members": [
              {
                "constant": false,
                "id": 3704,
                "mutability": "mutable",
                "name": "operator",
                "nameLocation": "874:8:13",
                "nodeType": "VariableDeclaration",
                "scope": 3709,
                "src": "866:16:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3703,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "866:7:13",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3706,
                "mutability": "mutable",
                "name": "operatorConfirmed",
                "nameLocation": "897:17:13",
                "nodeType": "VariableDeclaration",
                "scope": 3709,
                "src": "892:22:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3705,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "892:4:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3708,
                "mutability": "mutable",
                "name": "operatorStartTimestamp",
                "nameLocation": "932:22:13",
                "nodeType": "VariableDeclaration",
                "scope": 3709,
                "src": "924:30:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3707,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "924:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakingProviderInfo",
            "nameLocation": "836:19:13",
            "nodeType": "StructDefinition",
            "scope": 4250,
            "src": "829:132:13",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8c97f558",
            "id": 3711,
            "mutability": "immutable",
            "name": "minAuthorization",
            "nameLocation": "992:16:13",
            "nodeType": "VariableDeclaration",
            "scope": 4250,
            "src": "967:41:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3710,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "967:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "69bdf9e4",
            "id": 3713,
            "mutability": "immutable",
            "name": "minOperatorSeconds",
            "nameLocation": "1039:18:13",
            "nodeType": "VariableDeclaration",
            "scope": 4250,
            "src": "1014:43:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3712,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1014:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dbaa0fc6",
            "id": 3716,
            "mutability": "immutable",
            "name": "tStaking",
            "nameLocation": "1090:8:13",
            "nodeType": "VariableDeclaration",
            "scope": 4250,
            "src": "1064:34:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStaking_$13145",
              "typeString": "contract IStaking"
            },
            "typeName": {
              "id": 3715,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3714,
                "name": "IStaking",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13145,
                "src": "1064:8:13"
              },
              "referencedDeclaration": 13145,
              "src": "1064:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStaking_$13145",
                "typeString": "contract IStaking"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0ceff8c8",
            "id": 3721,
            "mutability": "mutable",
            "name": "stakingProviderInfo",
            "nameLocation": "1153:19:13",
            "nodeType": "VariableDeclaration",
            "scope": 4250,
            "src": "1105:67:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingProviderInfo_$3709_storage_$",
              "typeString": "mapping(address => struct SimplePREApplication.StakingProviderInfo)"
            },
            "typeName": {
              "id": 3720,
              "keyType": {
                "id": 3717,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1114:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1105:40:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingProviderInfo_$3709_storage_$",
                "typeString": "mapping(address => struct SimplePREApplication.StakingProviderInfo)"
              },
              "valueType": {
                "id": 3719,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3718,
                  "name": "StakingProviderInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3709,
                  "src": "1125:19:13"
                },
                "referencedDeclaration": 3709,
                "src": "1125:19:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                  "typeString": "struct SimplePREApplication.StakingProviderInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9cafa103",
            "id": 3724,
            "mutability": "mutable",
            "name": "stakingProviders",
            "nameLocation": "1195:16:13",
            "nodeType": "VariableDeclaration",
            "scope": 4250,
            "src": "1178:33:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3722,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1178:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3723,
              "nodeType": "ArrayTypeName",
              "src": "1178:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3728,
            "mutability": "mutable",
            "name": "_stakingProviderFromOperator",
            "nameLocation": "1254:28:13",
            "nodeType": "VariableDeclaration",
            "scope": 4250,
            "src": "1217:65:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 3727,
              "keyType": {
                "id": 3725,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1225:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1217:27:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 3726,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1236:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3768,
              "nodeType": "Block",
              "src": "1718:272:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "id": 3752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3744,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1783:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SimplePREApplication_$4250",
                                    "typeString": "contract SimplePREApplication"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SimplePREApplication_$4250",
                                    "typeString": "contract SimplePREApplication"
                                  }
                                ],
                                "id": 3743,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1775:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3742,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1775:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1775:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3748,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1798:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SimplePREApplication_$4250",
                                    "typeString": "contract SimplePREApplication"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SimplePREApplication_$4250",
                                    "typeString": "contract SimplePREApplication"
                                  }
                                ],
                                "id": 3747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1790:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3746,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1790:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1790:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3740,
                              "name": "_tStaking",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3732,
                              "src": "1749:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStaking_$13145",
                                "typeString": "contract IStaking"
                              }
                            },
                            "id": 3741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "authorizedStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13071,
                            "src": "1749:25:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint96_$",
                              "typeString": "function (address,address) view external returns (uint96)"
                            }
                          },
                          "id": 3750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1749:55:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1808:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1749:60:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720696e70757420706172616d6574657273",
                        "id": 3753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1823:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f733a41fcedc3e9e0308411f0a45e61f4940803bee589af54e80152bd5556ad3",
                          "typeString": "literal_string \"Wrong input parameters\""
                        },
                        "value": "Wrong input parameters"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f733a41fcedc3e9e0308411f0a45e61f4940803bee589af54e80152bd5556ad3",
                          "typeString": "literal_string \"Wrong input parameters\""
                        }
                      ],
                      "id": 3739,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1728:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1728:129:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3755,
                  "nodeType": "ExpressionStatement",
                  "src": "1728:129:13"
                },
                {
                  "expression": {
                    "id": 3758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3756,
                      "name": "minAuthorization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "1867:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3757,
                      "name": "_minAuthorization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3734,
                      "src": "1886:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1867:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3759,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:36:13"
                },
                {
                  "expression": {
                    "id": 3762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3760,
                      "name": "tStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3716,
                      "src": "1913:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStaking_$13145",
                        "typeString": "contract IStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3761,
                      "name": "_tStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3732,
                      "src": "1924:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStaking_$13145",
                        "typeString": "contract IStaking"
                      }
                    },
                    "src": "1913:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStaking_$13145",
                      "typeString": "contract IStaking"
                    }
                  },
                  "id": 3763,
                  "nodeType": "ExpressionStatement",
                  "src": "1913:20:13"
                },
                {
                  "expression": {
                    "id": 3766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3764,
                      "name": "minOperatorSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3713,
                      "src": "1943:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3765,
                      "name": "_minOperatorSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3736,
                      "src": "1964:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1943:40:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3767,
                  "nodeType": "ExpressionStatement",
                  "src": "1943:40:13"
                }
              ]
            },
            "documentation": {
              "id": 3729,
              "nodeType": "StructuredDocumentation",
              "src": "1290:305:13",
              "text": " @notice Constructor sets address of token contract and parameters for staking\n @param _tStaking T token staking contract\n @param _minAuthorization Amount of minimum allowable authorization\n @param _minOperatorSeconds Min amount of seconds while an operator can't be changed"
            },
            "id": 3769,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3732,
                  "mutability": "mutable",
                  "name": "_tStaking",
                  "nameLocation": "1630:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3769,
                  "src": "1621:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStaking_$13145",
                    "typeString": "contract IStaking"
                  },
                  "typeName": {
                    "id": 3731,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3730,
                      "name": "IStaking",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13145,
                      "src": "1621:8:13"
                    },
                    "referencedDeclaration": 13145,
                    "src": "1621:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStaking_$13145",
                      "typeString": "contract IStaking"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3734,
                  "mutability": "mutable",
                  "name": "_minAuthorization",
                  "nameLocation": "1657:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3769,
                  "src": "1649:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1649:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3736,
                  "mutability": "mutable",
                  "name": "_minOperatorSeconds",
                  "nameLocation": "1692:19:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3769,
                  "src": "1684:27:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3735,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1611:106:13"
            },
            "returnParameters": {
              "id": 3738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1718:0:13"
            },
            "scope": 4250,
            "src": "1600:390:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3803,
              "nodeType": "Block",
              "src": "2139:283:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3776,
                            "name": "_stakingProvider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3772,
                            "src": "2170:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3775,
                          "name": "isAuthorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4023,
                          "src": "2157:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 3777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2157:30:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74206f776e6572206f722070726f7669646572",
                        "id": 3778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2189:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db64dd70224c019543d4d9ef245fda7c012ee9e636825aae17375c6af96c3ec7",
                          "typeString": "literal_string \"Not owner or provider\""
                        },
                        "value": "Not owner or provider"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db64dd70224c019543d4d9ef245fda7c012ee9e636825aae17375c6af96c3ec7",
                          "typeString": "literal_string \"Not owner or provider\""
                        }
                      ],
                      "id": 3774,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2149:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2149:64:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3780,
                  "nodeType": "ExpressionStatement",
                  "src": "2149:64:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3781,
                      "name": "_stakingProvider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3772,
                      "src": "2227:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 3782,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2247:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2247:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2227:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3801,
                  "nodeType": "IfStatement",
                  "src": "2223:182:13",
                  "trueBody": {
                    "id": 3800,
                    "nodeType": "Block",
                    "src": "2259:146:13",
                    "statements": [
                      {
                        "assignments": [
                          3786,
                          null,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3786,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "2282:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3800,
                            "src": "2274:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3785,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2274:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          null
                        ],
                        "id": 3791,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3789,
                              "name": "_stakingProvider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3772,
                              "src": "2310:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3787,
                              "name": "tStaking",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3716,
                              "src": "2293:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStaking_$13145",
                                "typeString": "contract IStaking"
                              }
                            },
                            "id": 3788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rolesOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13111,
                            "src": "2293:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$_t_address_payable_$_t_address_$",
                              "typeString": "function (address) view external returns (address,address payable,address)"
                            }
                          },
                          "id": 3790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2293:34:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_address_payable_$_t_address_$",
                            "typeString": "tuple(address,address payable,address)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2273:54:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3793,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3786,
                                "src": "2349:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 3794,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2358:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3795,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2358:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2349:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f74206f776e6572206f722070726f7669646572",
                              "id": 3797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2370:23:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_db64dd70224c019543d4d9ef245fda7c012ee9e636825aae17375c6af96c3ec7",
                                "typeString": "literal_string \"Not owner or provider\""
                              },
                              "value": "Not owner or provider"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_db64dd70224c019543d4d9ef245fda7c012ee9e636825aae17375c6af96c3ec7",
                                "typeString": "literal_string \"Not owner or provider\""
                              }
                            ],
                            "id": 3792,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2341:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2341:53:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3799,
                        "nodeType": "ExpressionStatement",
                        "src": "2341:53:13"
                      }
                    ]
                  }
                },
                {
                  "id": 3802,
                  "nodeType": "PlaceholderStatement",
                  "src": "2414:1:13"
                }
              ]
            },
            "documentation": {
              "id": 3770,
              "nodeType": "StructuredDocumentation",
              "src": "1996:72:13",
              "text": " @dev Checks caller is a staking provider or stake owner"
            },
            "id": 3804,
            "name": "onlyOwnerOrStakingProvider",
            "nameLocation": "2082:26:13",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3772,
                  "mutability": "mutable",
                  "name": "_stakingProvider",
                  "nameLocation": "2117:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3804,
                  "src": "2109:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2109:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2108:26:13"
            },
            "src": "2073:349:13",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3816,
              "nodeType": "Block",
              "src": "2653:63:13",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3812,
                      "name": "_stakingProviderFromOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3728,
                      "src": "2670:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 3814,
                    "indexExpression": {
                      "id": 3813,
                      "name": "_operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3807,
                      "src": "2699:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2670:39:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3811,
                  "id": 3815,
                  "nodeType": "Return",
                  "src": "2663:46:13"
                }
              ]
            },
            "documentation": {
              "id": 3805,
              "nodeType": "StructuredDocumentation",
              "src": "2490:72:13",
              "text": " @notice Returns staking provider for specified operator"
            },
            "functionSelector": "dca53b00",
            "id": 3817,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakingProviderFromOperator",
            "nameLocation": "2576:27:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3807,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "2612:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3817,
                  "src": "2604:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2604:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2603:19:13"
            },
            "returnParameters": {
              "id": 3811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3810,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3817,
                  "src": "2644:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2644:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2643:9:13"
            },
            "scope": 4250,
            "src": "2567:149:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3830,
              "nodeType": "Block",
              "src": "2895:70:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 3825,
                        "name": "stakingProviderInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3721,
                        "src": "2912:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingProviderInfo_$3709_storage_$",
                          "typeString": "mapping(address => struct SimplePREApplication.StakingProviderInfo storage ref)"
                        }
                      },
                      "id": 3827,
                      "indexExpression": {
                        "id": 3826,
                        "name": "_stakingProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3820,
                        "src": "2932:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2912:37:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage",
                        "typeString": "struct SimplePREApplication.StakingProviderInfo storage ref"
                      }
                    },
                    "id": 3828,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "operator",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3704,
                    "src": "2912:46:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3824,
                  "id": 3829,
                  "nodeType": "Return",
                  "src": "2905:53:13"
                }
              ]
            },
            "documentation": {
              "id": 3818,
              "nodeType": "StructuredDocumentation",
              "src": "2722:72:13",
              "text": " @notice Returns operator for specified staking provider"
            },
            "functionSelector": "69b99261",
            "id": 3831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOperatorFromStakingProvider",
            "nameLocation": "2808:30:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3820,
                  "mutability": "mutable",
                  "name": "_stakingProvider",
                  "nameLocation": "2847:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3831,
                  "src": "2839:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3819,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2839:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2838:26:13"
            },
            "returnParameters": {
              "id": 3824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3823,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3831,
                  "src": "2886:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2886:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2885:9:13"
            },
            "scope": 4250,
            "src": "2799:166:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3856,
              "nodeType": "Block",
              "src": "3129:159:13",
              "statements": [
                {
                  "assignments": [
                    3840,
                    3842,
                    3844
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3840,
                      "mutability": "mutable",
                      "name": "tStake",
                      "nameLocation": "3147:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3856,
                      "src": "3140:13:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 3839,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "3140:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3842,
                      "mutability": "mutable",
                      "name": "keepInTStake",
                      "nameLocation": "3162:12:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3856,
                      "src": "3155:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 3841,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "3155:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3844,
                      "mutability": "mutable",
                      "name": "nuInTStake",
                      "nameLocation": "3183:10:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3856,
                      "src": "3176:17:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 3843,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "3176:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3849,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3847,
                        "name": "_stakingProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3834,
                        "src": "3213:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3845,
                        "name": "tStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3716,
                        "src": "3197:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStaking_$13145",
                          "typeString": "contract IStaking"
                        }
                      },
                      "id": 3846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13083,
                      "src": "3197:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint96_$_t_uint96_$_t_uint96_$",
                        "typeString": "function (address) view external returns (uint96,uint96,uint96)"
                      }
                    },
                    "id": 3848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3197:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint96_$_t_uint96_$_t_uint96_$",
                      "typeString": "tuple(uint96,uint96,uint96)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3139:91:13"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    },
                    "id": 3854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "id": 3852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3850,
                        "name": "tStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3840,
                        "src": "3247:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 3851,
                        "name": "keepInTStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3842,
                        "src": "3256:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "src": "3247:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 3853,
                      "name": "nuInTStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3844,
                      "src": "3271:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "3247:34:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "functionReturnParameters": 3838,
                  "id": 3855,
                  "nodeType": "Return",
                  "src": "3240:41:13"
                }
              ]
            },
            "documentation": {
              "id": 3832,
              "nodeType": "StructuredDocumentation",
              "src": "2971:73:13",
              "text": " @notice Get all tokens delegated to the staking provider"
            },
            "functionSelector": "c4903d5b",
            "id": 3857,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "authorizedStake",
            "nameLocation": "3058:15:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3834,
                  "mutability": "mutable",
                  "name": "_stakingProvider",
                  "nameLocation": "3082:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3857,
                  "src": "3074:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3074:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3073:26:13"
            },
            "returnParameters": {
              "id": 3838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3837,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3857,
                  "src": "3121:6:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 3836,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3121:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3120:8:13"
            },
            "scope": 4250,
            "src": "3049:239:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3990,
              "nodeType": "Block",
              "src": "4120:1121:13",
              "statements": [
                {
                  "assignments": [
                    3873
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3873,
                      "mutability": "mutable",
                      "name": "endIndex",
                      "nameLocation": "4138:8:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3990,
                      "src": "4130:16:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3872,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4130:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3876,
                  "initialValue": {
                    "expression": {
                      "id": 3874,
                      "name": "stakingProviders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3724,
                      "src": "4149:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 3875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4149:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4130:42:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3878,
                          "name": "_startIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3860,
                          "src": "4190:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 3879,
                          "name": "endIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3873,
                          "src": "4204:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4190:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720737461727420696e646578",
                        "id": 3881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4214:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d4282684990e13c059dc9cb1f3c077be72451bbd77a2bf7c7b7fc4ba189d51",
                          "typeString": "literal_string \"Wrong start index\""
                        },
                        "value": "Wrong start index"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d4282684990e13c059dc9cb1f3c077be72451bbd77a2bf7c7b7fc4ba189d51",
                          "typeString": "literal_string \"Wrong start index\""
                        }
                      ],
                      "id": 3877,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4182:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4182:52:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3883,
                  "nodeType": "ExpressionStatement",
                  "src": "4182:52:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3884,
                        "name": "_maxStakingProviders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3862,
                        "src": "4248:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 3885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4272:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4248:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3887,
                          "name": "_startIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3860,
                          "src": "4277:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 3888,
                          "name": "_maxStakingProviders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3862,
                          "src": "4291:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4277:34:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 3890,
                        "name": "endIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3873,
                        "src": "4314:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4277:45:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4248:74:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3900,
                  "nodeType": "IfStatement",
                  "src": "4244:150:13",
                  "trueBody": {
                    "id": 3899,
                    "nodeType": "Block",
                    "src": "4324:70:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 3897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3893,
                            "name": "endIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3873,
                            "src": "4338:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3894,
                              "name": "_startIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3860,
                              "src": "4349:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 3895,
                              "name": "_maxStakingProviders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3862,
                              "src": "4363:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4349:34:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4338:45:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3898,
                        "nodeType": "ExpressionStatement",
                        "src": "4338:45:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3901,
                      "name": "activeStakingProviders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3870,
                      "src": "4403:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[2] memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3907,
                            "name": "endIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3873,
                            "src": "4445:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 3908,
                            "name": "_startIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3860,
                            "src": "4456:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4445:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4428:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[2] memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "baseType": {
                              "id": 3902,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4432:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3904,
                            "length": {
                              "hexValue": "32",
                              "id": 3903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4440:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "nodeType": "ArrayTypeName",
                            "src": "4432:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                              "typeString": "uint256[2]"
                            }
                          },
                          "id": 3905,
                          "nodeType": "ArrayTypeName",
                          "src": "4432:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$dyn_storage_ptr",
                            "typeString": "uint256[2][]"
                          }
                        }
                      },
                      "id": 3910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4428:40:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[2] memory[] memory"
                      }
                    },
                    "src": "4403:65:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[2] memory[] memory"
                    }
                  },
                  "id": 3912,
                  "nodeType": "ExpressionStatement",
                  "src": "4403:65:13"
                },
                {
                  "expression": {
                    "id": 3915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3913,
                      "name": "allAuthorizedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3865,
                      "src": "4478:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 3914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4500:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4478:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3916,
                  "nodeType": "ExpressionStatement",
                  "src": "4478:23:13"
                },
                {
                  "assignments": [
                    3918
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3918,
                      "mutability": "mutable",
                      "name": "resultIndex",
                      "nameLocation": "4520:11:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3990,
                      "src": "4512:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3917,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4512:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3920,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 3919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4534:1:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4512:23:13"
                },
                {
                  "body": {
                    "id": 3987,
                    "nodeType": "Block",
                    "src": "4594:556:13",
                    "statements": [
                      {
                        "assignments": [
                          3932
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3932,
                            "mutability": "mutable",
                            "name": "stakingProvider",
                            "nameLocation": "4616:15:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3987,
                            "src": "4608:23:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3931,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4608:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3936,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3933,
                            "name": "stakingProviders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3724,
                            "src": "4634:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 3935,
                          "indexExpression": {
                            "id": 3934,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3922,
                            "src": "4651:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4634:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4608:45:13"
                      },
                      {
                        "assignments": [
                          3939
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3939,
                            "mutability": "mutable",
                            "name": "info",
                            "nameLocation": "4695:4:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3987,
                            "src": "4667:32:13",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                              "typeString": "struct SimplePREApplication.StakingProviderInfo"
                            },
                            "typeName": {
                              "id": 3938,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3937,
                                "name": "StakingProviderInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3709,
                                "src": "4667:19:13"
                              },
                              "referencedDeclaration": 3709,
                              "src": "4667:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                                "typeString": "struct SimplePREApplication.StakingProviderInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3943,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3940,
                            "name": "stakingProviderInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3721,
                            "src": "4702:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingProviderInfo_$3709_storage_$",
                              "typeString": "mapping(address => struct SimplePREApplication.StakingProviderInfo storage ref)"
                            }
                          },
                          "id": 3942,
                          "indexExpression": {
                            "id": 3941,
                            "name": "stakingProvider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3932,
                            "src": "4722:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4702:36:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage",
                            "typeString": "struct SimplePREApplication.StakingProviderInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4667:71:13"
                      },
                      {
                        "assignments": [
                          3945
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3945,
                            "mutability": "mutable",
                            "name": "eligibleAmount",
                            "nameLocation": "4760:14:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3987,
                            "src": "4752:22:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3944,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4752:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3949,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3947,
                              "name": "stakingProvider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3932,
                              "src": "4793:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3946,
                            "name": "authorizedStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3857,
                            "src": "4777:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint96_$",
                              "typeString": "function (address) view returns (uint96)"
                            }
                          },
                          "id": 3948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4777:32:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4752:57:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3950,
                              "name": "eligibleAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3945,
                              "src": "4827:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 3951,
                              "name": "minAuthorization",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3711,
                              "src": "4844:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4827:33:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "id": 3955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4864:23:13",
                            "subExpression": {
                              "expression": {
                                "id": 3953,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3939,
                                "src": "4865:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                                  "typeString": "struct SimplePREApplication.StakingProviderInfo storage pointer"
                                }
                              },
                              "id": 3954,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "operatorConfirmed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3706,
                              "src": "4865:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4827:60:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3959,
                        "nodeType": "IfStatement",
                        "src": "4823:107:13",
                        "trueBody": {
                          "id": 3958,
                          "nodeType": "Block",
                          "src": "4889:41:13",
                          "statements": [
                            {
                              "id": 3957,
                              "nodeType": "Continue",
                              "src": "4907:8:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 3972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3960,
                                "name": "activeStakingProviders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3870,
                                "src": "4943:22:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "uint256[2] memory[] memory"
                                }
                              },
                              "id": 3963,
                              "indexExpression": {
                                "id": 3961,
                                "name": "resultIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3918,
                                "src": "4966:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4943:35:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            },
                            "id": 3964,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 3962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4979:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4943:38:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3969,
                                    "name": "stakingProvider",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3932,
                                    "src": "5000:15:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3968,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4992:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 3967,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4992:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3970,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4992:24:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 3966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4984:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 3965,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4984:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4984:33:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4943:74:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3973,
                        "nodeType": "ExpressionStatement",
                        "src": "4943:74:13"
                      },
                      {
                        "expression": {
                          "id": 3981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3974,
                                "name": "activeStakingProviders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3870,
                                "src": "5031:22:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "uint256[2] memory[] memory"
                                }
                              },
                              "id": 3978,
                              "indexExpression": {
                                "id": 3976,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "5054:13:13",
                                "subExpression": {
                                  "id": 3975,
                                  "name": "resultIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3918,
                                  "src": "5054:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5031:37:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            },
                            "id": 3979,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 3977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5069:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5031:40:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3980,
                            "name": "eligibleAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3945,
                            "src": "5074:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5031:57:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3982,
                        "nodeType": "ExpressionStatement",
                        "src": "5031:57:13"
                      },
                      {
                        "expression": {
                          "id": 3985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3983,
                            "name": "allAuthorizedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3865,
                            "src": "5102:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 3984,
                            "name": "eligibleAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3945,
                            "src": "5125:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5102:37:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3986,
                        "nodeType": "ExpressionStatement",
                        "src": "5102:37:13"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3925,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3922,
                      "src": "4575:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 3926,
                      "name": "endIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3873,
                      "src": "4579:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4575:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3988,
                  "initializationExpression": {
                    "assignments": [
                      3922
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3922,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4558:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3988,
                        "src": "4550:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3921,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4550:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3924,
                    "initialValue": {
                      "id": 3923,
                      "name": "_startIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3860,
                      "src": "4562:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4550:23:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4589:3:13",
                      "subExpression": {
                        "id": 3928,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3922,
                        "src": "4589:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3930,
                    "nodeType": "ExpressionStatement",
                    "src": "4589:3:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "4545:605:13"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5168:67:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "activeStakingProviders",
                              "nodeType": "YulIdentifier",
                              "src": "5189:22:13"
                            },
                            {
                              "name": "resultIndex",
                              "nodeType": "YulIdentifier",
                              "src": "5213:11:13"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5182:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5182:43:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5182:43:13"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 3870,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5189:22:13",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3918,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5213:11:13",
                      "valueSize": 1
                    }
                  ],
                  "id": 3989,
                  "nodeType": "InlineAssembly",
                  "src": "5159:76:13"
                }
              ]
            },
            "documentation": {
              "id": 3858,
              "nodeType": "StructuredDocumentation",
              "src": "3294:627:13",
              "text": " @notice Get the value of authorized tokens for active providers as well as providers and their authorized tokens\n @param _startIndex Start index for looking in providers array\n @param _maxStakingProviders Max providers for looking, if set 0 then all will be used\n @return allAuthorizedTokens Sum of authorized tokens for active providers\n @return activeStakingProviders Array of providers and their authorized tokens.\n Providers addresses stored as uint256\n @dev Note that activeStakingProviders[0] is an array of uint256, but you want addresses.\n Careful when used directly!"
            },
            "functionSelector": "e58e018e",
            "id": 3991,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getActiveStakingProviders",
            "nameLocation": "3935:25:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3860,
                  "mutability": "mutable",
                  "name": "_startIndex",
                  "nameLocation": "3969:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3991,
                  "src": "3961:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3859,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3961:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3862,
                  "mutability": "mutable",
                  "name": "_maxStakingProviders",
                  "nameLocation": "3990:20:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3991,
                  "src": "3982:28:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3982:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3960:51:13"
            },
            "returnParameters": {
              "id": 3871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3865,
                  "mutability": "mutable",
                  "name": "allAuthorizedTokens",
                  "nameLocation": "4051:19:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3991,
                  "src": "4043:27:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4043:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3870,
                  "mutability": "mutable",
                  "name": "activeStakingProviders",
                  "nameLocation": "4092:22:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3991,
                  "src": "4072:42:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[2][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 3866,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4072:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3868,
                      "length": {
                        "hexValue": "32",
                        "id": 3867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4080:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "4072:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 3869,
                    "nodeType": "ArrayTypeName",
                    "src": "4072:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$dyn_storage_ptr",
                      "typeString": "uint256[2][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4042:73:13"
            },
            "scope": 4250,
            "src": "3926:1315:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4007,
              "nodeType": "Block",
              "src": "5428:70:13",
              "statements": [
                {
                  "expression": {
                    "id": 4005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 3999,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3997,
                          "src": "5441:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        null
                      ],
                      "id": 4000,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "5438:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_address_payable_$__$",
                        "typeString": "tuple(,address payable,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4003,
                          "name": "_stakingProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3994,
                          "src": "5474:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 4001,
                          "name": "tStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3716,
                          "src": "5457:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStaking_$13145",
                            "typeString": "contract IStaking"
                          }
                        },
                        "id": 4002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rolesOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13111,
                        "src": "5457:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$_t_address_payable_$_t_address_$",
                          "typeString": "function (address) view external returns (address,address payable,address)"
                        }
                      },
                      "id": 4004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5457:34:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_payable_$_t_address_$",
                        "typeString": "tuple(address,address payable,address)"
                      }
                    },
                    "src": "5438:53:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4006,
                  "nodeType": "ExpressionStatement",
                  "src": "5438:53:13"
                }
              ]
            },
            "documentation": {
              "id": 3992,
              "nodeType": "StructuredDocumentation",
              "src": "5247:76:13",
              "text": " @notice Returns beneficiary related to the staking provider"
            },
            "functionSelector": "505a1b31",
            "id": 4008,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBeneficiary",
            "nameLocation": "5337:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3994,
                  "mutability": "mutable",
                  "name": "_stakingProvider",
                  "nameLocation": "5360:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4008,
                  "src": "5352:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5352:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5351:26:13"
            },
            "returnParameters": {
              "id": 3998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3997,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "5415:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4008,
                  "src": "5399:27:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5399:15:13",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5398:29:13"
            },
            "scope": 4250,
            "src": "5328:170:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4022,
              "nodeType": "Block",
              "src": "5682:77:13",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 4017,
                          "name": "_stakingProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4011,
                          "src": "5715:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4016,
                        "name": "authorizedStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3857,
                        "src": "5699:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint96_$",
                          "typeString": "function (address) view returns (uint96)"
                        }
                      },
                      "id": 4018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5699:33:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 4019,
                      "name": "minAuthorization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "5736:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5699:53:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4015,
                  "id": 4021,
                  "nodeType": "Return",
                  "src": "5692:60:13"
                }
              ]
            },
            "documentation": {
              "id": 4009,
              "nodeType": "StructuredDocumentation",
              "src": "5504:98:13",
              "text": " @notice Returns true if staking provider has authorized stake to this application"
            },
            "functionSelector": "fe9fbb80",
            "id": 4023,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorized",
            "nameLocation": "5616:12:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4011,
                  "mutability": "mutable",
                  "name": "_stakingProvider",
                  "nameLocation": "5637:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4023,
                  "src": "5629:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5629:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5628:26:13"
            },
            "returnParameters": {
              "id": 4015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4014,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4023,
                  "src": "5676:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4013,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5676:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5675:6:13"
            },
            "scope": 4250,
            "src": "5607:152:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4047,
              "nodeType": "Block",
              "src": "5982:202:13",
              "statements": [
                {
                  "assignments": [
                    4032
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4032,
                      "mutability": "mutable",
                      "name": "stakingProvider",
                      "nameLocation": "6000:15:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4047,
                      "src": "5992:23:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4031,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5992:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4036,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4033,
                      "name": "_stakingProviderFromOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3728,
                      "src": "6018:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 4035,
                    "indexExpression": {
                      "id": 4034,
                      "name": "_operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4026,
                      "src": "6047:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6018:39:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5992:65:13"
                },
                {
                  "assignments": [
                    4039
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4039,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "6095:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4047,
                      "src": "6067:32:13",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                        "typeString": "struct SimplePREApplication.StakingProviderInfo"
                      },
                      "typeName": {
                        "id": 4038,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4037,
                          "name": "StakingProviderInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3709,
                          "src": "6067:19:13"
                        },
                        "referencedDeclaration": 3709,
                        "src": "6067:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                          "typeString": "struct SimplePREApplication.StakingProviderInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4043,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4040,
                      "name": "stakingProviderInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3721,
                      "src": "6102:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingProviderInfo_$3709_storage_$",
                        "typeString": "mapping(address => struct SimplePREApplication.StakingProviderInfo storage ref)"
                      }
                    },
                    "id": 4042,
                    "indexExpression": {
                      "id": 4041,
                      "name": "stakingProvider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4032,
                      "src": "6122:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6102:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage",
                      "typeString": "struct SimplePREApplication.StakingProviderInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6067:71:13"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 4044,
                      "name": "info",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4039,
                      "src": "6155:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                        "typeString": "struct SimplePREApplication.StakingProviderInfo storage pointer"
                      }
                    },
                    "id": 4045,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "operatorConfirmed",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3706,
                    "src": "6155:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4030,
                  "id": 4046,
                  "nodeType": "Return",
                  "src": "6148:29:13"
                }
              ]
            },
            "documentation": {
              "id": 4024,
              "nodeType": "StructuredDocumentation",
              "src": "5765:71:13",
              "text": " @notice Returns true if operator has confirmed address"
            },
            "functionSelector": "7dbee7a3",
            "id": 4048,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperatorConfirmed",
            "nameLocation": "5916:19:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4026,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "5944:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4048,
                  "src": "5936:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5936:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5935:19:13"
            },
            "returnParameters": {
              "id": 4030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4029,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4048,
                  "src": "5976:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4028,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5976:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5975:6:13"
            },
            "scope": 4250,
            "src": "5907:277:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4057,
              "nodeType": "Block",
              "src": "6340:47:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 4054,
                      "name": "stakingProviders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3724,
                      "src": "6357:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 4055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6357:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4053,
                  "id": 4056,
                  "nodeType": "Return",
                  "src": "6350:30:13"
                }
              ]
            },
            "documentation": {
              "id": 4049,
              "nodeType": "StructuredDocumentation",
              "src": "6190:76:13",
              "text": " @notice Return the length of the array of staking providers"
            },
            "functionSelector": "86f69014",
            "id": 4058,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingProvidersLength",
            "nameLocation": "6280:25:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6305:2:13"
            },
            "returnParameters": {
              "id": 4053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4052,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4058,
                  "src": "6331:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6331:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6330:9:13"
            },
            "scope": 4250,
            "src": "6271:116:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4194,
              "nodeType": "Block",
              "src": "6704:1469:13",
              "statements": [
                {
                  "assignments": [
                    4071
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4071,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "6742:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4194,
                      "src": "6714:32:13",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                        "typeString": "struct SimplePREApplication.StakingProviderInfo"
                      },
                      "typeName": {
                        "id": 4070,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4069,
                          "name": "StakingProviderInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3709,
                          "src": "6714:19:13"
                        },
                        "referencedDeclaration": 3709,
                        "src": "6714:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                          "typeString": "struct SimplePREApplication.StakingProviderInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4075,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4072,
                      "name": "stakingProviderInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3721,
                      "src": "6749:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingProviderInfo_$3709_storage_$",
                        "typeString": "mapping(address => struct SimplePREApplication.StakingProviderInfo storage ref)"
                      }
                    },
                    "id": 4074,
                    "indexExpression": {
                      "id": 4073,
                      "name": "_stakingProvider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4061,
                      "src": "6769:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6749:37:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage",
                      "typeString": "struct SimplePREApplication.StakingProviderInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6714:72:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4077,
                          "name": "_operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4063,
                          "src": "6804:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 4078,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4071,
                            "src": "6817:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                              "typeString": "struct SimplePREApplication.StakingProviderInfo storage pointer"
                            }
                          },
                          "id": 4079,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "operator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3704,
                          "src": "6817:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6804:26:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "537065636966696564206f70657261746f7220697320616c726561647920626f6e646564207769746820746869732070726f7669646572",
                        "id": 4081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6832:57:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8cadf8d2b4bc30b271715c69a49f9a137223c751fe917fee803c1c1337f54fd1",
                          "typeString": "literal_string \"Specified operator is already bonded with this provider\""
                        },
                        "value": "Specified operator is already bonded with this provider"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8cadf8d2b4bc30b271715c69a49f9a137223c751fe917fee803c1c1337f54fd1",
                          "typeString": "literal_string \"Specified operator is already bonded with this provider\""
                        }
                      ],
                      "id": 4076,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6796:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6796:94:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4083,
                  "nodeType": "ExpressionStatement",
                  "src": "6796:94:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4084,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4071,
                        "src": "6950:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                          "typeString": "struct SimplePREApplication.StakingProviderInfo storage pointer"
                        }
                      },
                      "id": 4085,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3704,
                      "src": "6950:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 4088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6975:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6967:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4086,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6967:7:13",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6967:10:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6950:27:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4113,
                  "nodeType": "IfStatement",
                  "src": "6946:362:13",
                  "trueBody": {
                    "id": 4112,
                    "nodeType": "Block",
                    "src": "6979:329:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 4092,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7018:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 4093,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7018:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4097,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 4094,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4071,
                                    "src": "7037:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                                      "typeString": "struct SimplePREApplication.StakingProviderInfo storage pointer"
                                    }
                                  },
                                  "id": 4095,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "operatorStartTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3708,
                                  "src": "7037:27:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 4096,
                                  "name": "minOperatorSeconds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3713,
                                  "src": "7067:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7037:48:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7018:67:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656e6f7567682074696d652070617373656420746f206368616e6765206f70657261746f72",
                              "id": 4099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7103:43:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cef68a6c371c9700b976c6a321eec2dba6288be6d4d1800bf9dba3ccf9887356",
                                "typeString": "literal_string \"Not enough time passed to change operator\""
                              },
                              "value": "Not enough time passed to change operator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cef68a6c371c9700b976c6a321eec2dba6288be6d4d1800bf9dba3ccf9887356",
                                "typeString": "literal_string \"Not enough time passed to change operator\""
                              }
                            ],
                            "id": 4091,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6993:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6993:167:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4101,
                        "nodeType": "ExpressionStatement",
                        "src": "6993:167:13"
                      },
                      {
                        "expression": {
                          "id": 4110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4102,
                              "name": "_stakingProviderFromOperator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3728,
                              "src": "7241:28:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 4105,
                            "indexExpression": {
                              "expression": {
                                "id": 4103,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4071,
                                "src": "7270:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                                  "typeString": "struct SimplePREApplication.StakingProviderInfo storage pointer"
                                }
                              },
                              "id": 4104,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "operator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3704,
                              "src": "7270:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7241:43:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7295:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7287:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4106,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7287:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7287:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7241:56:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4111,
                        "nodeType": "ExpressionStatement",
                        "src": "7241:56:13"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4114,
                      "name": "_operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4063,
                      "src": "7322:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 4117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7343:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7335:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4115,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7335:7:13",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7335:10:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7322:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4155,
                  "nodeType": "IfStatement",
                  "src": "7318:463:13",
                  "trueBody": {
                    "id": 4154,
                    "nodeType": "Block",
                    "src": "7347:434:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 4128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 4121,
                                  "name": "_stakingProviderFromOperator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3728,
                                  "src": "7369:28:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                    "typeString": "mapping(address => address)"
                                  }
                                },
                                "id": 4123,
                                "indexExpression": {
                                  "id": 4122,
                                  "name": "_operator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4063,
                                  "src": "7398:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7369:39:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 4126,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7420:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 4125,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7412:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 4124,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7412:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 4127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7412:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7369:53:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "537065636966696564206f70657261746f7220697320616c726561647920696e20757365",
                              "id": 4129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7424:38:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f56632572467cfe97f9c162cfeb0a84dea7f349ec328d4e75682e209e21ea652",
                                "typeString": "literal_string \"Specified operator is already in use\""
                              },
                              "value": "Specified operator is already in use"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f56632572467cfe97f9c162cfeb0a84dea7f349ec328d4e75682e209e21ea652",
                                "typeString": "literal_string \"Specified operator is already in use\""
                              }
                            ],
                            "id": 4120,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7361:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7361:102:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4131,
                        "nodeType": "ExpressionStatement",
                        "src": "7361:102:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 4144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 4135,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4133,
                                  "name": "_operator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4063,
                                  "src": "7502:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 4134,
                                  "name": "_stakingProvider",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4061,
                                  "src": "7515:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "7502:29:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 4143,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 4137,
                                      "name": "_operator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4063,
                                      "src": "7550:9:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 4136,
                                    "name": "getBeneficiary",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4008,
                                    "src": "7535:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_payable_$",
                                      "typeString": "function (address) view returns (address payable)"
                                    }
                                  },
                                  "id": 4138,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7535:25:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 4141,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7572:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 4140,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7564:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 4139,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7564:7:13",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 4142,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7564:10:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "7535:39:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "7502:72:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "537065636966696564206f70657261746f7220697320612070726f7669646572",
                              "id": 4145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7592:34:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2ed92a2127f5752aa8eff41859412dac5b42151e19b806237999d8ee7b7c4ad8",
                                "typeString": "literal_string \"Specified operator is a provider\""
                              },
                              "value": "Specified operator is a provider"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2ed92a2127f5752aa8eff41859412dac5b42151e19b806237999d8ee7b7c4ad8",
                                "typeString": "literal_string \"Specified operator is a provider\""
                              }
                            ],
                            "id": 4132,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7477:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7477:163:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4147,
                        "nodeType": "ExpressionStatement",
                        "src": "7477:163:13"
                      },
                      {
                        "expression": {
                          "id": 4152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4148,
                              "name": "_stakingProviderFromOperator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3728,
                              "src": "7712:28:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 4150,
                            "indexExpression": {
                              "id": 4149,
                              "name": "_operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4063,
                              "src": "7741:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7712:39:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4151,
                            "name": "_stakingProvider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4061,
                            "src": "7754:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7712:58:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4153,
                        "nodeType": "ExpressionStatement",
                        "src": "7712:58:13"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4156,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4071,
                        "src": "7795:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                          "typeString": "struct SimplePREApplication.StakingProviderInfo storage pointer"
                        }
                      },
                      "id": 4157,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operatorStartTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3708,
                      "src": "7795:27:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7826:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7795:32:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4167,
                  "nodeType": "IfStatement",
                  "src": "7791:102:13",
                  "trueBody": {
                    "id": 4166,
                    "nodeType": "Block",
                    "src": "7829:64:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4163,
                              "name": "_stakingProvider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4061,
                              "src": "7865:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 4160,
                              "name": "stakingProviders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3724,
                              "src": "7843:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 4162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "7843:21:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 4164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7843:39:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4165,
                        "nodeType": "ExpressionStatement",
                        "src": "7843:39:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 4172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 4168,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4071,
                        "src": "7971:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                          "typeString": "struct SimplePREApplication.StakingProviderInfo storage pointer"
                        }
                      },
                      "id": 4170,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3704,
                      "src": "7971:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4171,
                      "name": "_operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4063,
                      "src": "7987:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7971:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4173,
                  "nodeType": "ExpressionStatement",
                  "src": "7971:25:13"
                },
                {
                  "expression": {
                    "id": 4179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 4174,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4071,
                        "src": "8006:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                          "typeString": "struct SimplePREApplication.StakingProviderInfo storage pointer"
                        }
                      },
                      "id": 4176,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "operatorStartTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3708,
                      "src": "8006:27:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4177,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8036:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8036:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8006:45:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4180,
                  "nodeType": "ExpressionStatement",
                  "src": "8006:45:13"
                },
                {
                  "expression": {
                    "id": 4185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 4181,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4071,
                        "src": "8061:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                          "typeString": "struct SimplePREApplication.StakingProviderInfo storage pointer"
                        }
                      },
                      "id": 4183,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "operatorConfirmed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3706,
                      "src": "8061:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 4184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8086:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "8061:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4186,
                  "nodeType": "ExpressionStatement",
                  "src": "8061:30:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4188,
                        "name": "_stakingProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4061,
                        "src": "8121:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4189,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4063,
                        "src": "8139:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4190,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "8150:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8150:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4187,
                      "name": "OperatorBonded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3695,
                      "src": "8106:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8106:60:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4193,
                  "nodeType": "EmitStatement",
                  "src": "8101:65:13"
                }
              ]
            },
            "documentation": {
              "id": 4059,
              "nodeType": "StructuredDocumentation",
              "src": "6393:173:13",
              "text": " @notice Bond operator\n @param _stakingProvider Staking provider address\n @param _operator Operator address. Must be a real address, not a contract"
            },
            "functionSelector": "02132c01",
            "id": 4195,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4066,
                    "name": "_stakingProvider",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4061,
                    "src": "6682:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 4067,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4065,
                  "name": "onlyOwnerOrStakingProvider",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3804,
                  "src": "6655:26:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "6655:44:13"
              }
            ],
            "name": "bondOperator",
            "nameLocation": "6580:12:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4061,
                  "mutability": "mutable",
                  "name": "_stakingProvider",
                  "nameLocation": "6601:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4195,
                  "src": "6593:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4060,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6593:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4063,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "6627:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4195,
                  "src": "6619:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6619:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6592:45:13"
            },
            "returnParameters": {
              "id": 4068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6704:0:13"
            },
            "scope": 4250,
            "src": "6571:1602:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4248,
              "nodeType": "Block",
              "src": "8283:537:13",
              "statements": [
                {
                  "assignments": [
                    4200
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4200,
                      "mutability": "mutable",
                      "name": "stakingProvider",
                      "nameLocation": "8301:15:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4248,
                      "src": "8293:23:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4199,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8293:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4205,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4201,
                      "name": "_stakingProviderFromOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3728,
                      "src": "8319:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 4204,
                    "indexExpression": {
                      "expression": {
                        "id": 4202,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8348:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8348:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8319:40:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8293:66:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4208,
                            "name": "stakingProvider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4200,
                            "src": "8390:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4207,
                          "name": "isAuthorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4023,
                          "src": "8377:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 4209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8377:29:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f207374616b65206173736f636961746564207769746820746865206f70657261746f72",
                        "id": 4210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8408:39:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48b7adf09cafe537984f65509b8aef8ea3f603965f9bf8c944321df45f973889",
                          "typeString": "literal_string \"No stake associated with the operator\""
                        },
                        "value": "No stake associated with the operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48b7adf09cafe537984f65509b8aef8ea3f603965f9bf8c944321df45f973889",
                          "typeString": "literal_string \"No stake associated with the operator\""
                        }
                      ],
                      "id": 4206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8369:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8369:79:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4212,
                  "nodeType": "ExpressionStatement",
                  "src": "8369:79:13"
                },
                {
                  "assignments": [
                    4215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4215,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "8486:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4248,
                      "src": "8458:32:13",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                        "typeString": "struct SimplePREApplication.StakingProviderInfo"
                      },
                      "typeName": {
                        "id": 4214,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4213,
                          "name": "StakingProviderInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3709,
                          "src": "8458:19:13"
                        },
                        "referencedDeclaration": 3709,
                        "src": "8458:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                          "typeString": "struct SimplePREApplication.StakingProviderInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4219,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4216,
                      "name": "stakingProviderInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3721,
                      "src": "8493:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingProviderInfo_$3709_storage_$",
                        "typeString": "mapping(address => struct SimplePREApplication.StakingProviderInfo storage ref)"
                      }
                    },
                    "id": 4218,
                    "indexExpression": {
                      "id": 4217,
                      "name": "stakingProvider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4200,
                      "src": "8513:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8493:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage",
                      "typeString": "struct SimplePREApplication.StakingProviderInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8458:71:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8547:23:13",
                        "subExpression": {
                          "expression": {
                            "id": 4221,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4215,
                            "src": "8548:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                              "typeString": "struct SimplePREApplication.StakingProviderInfo storage pointer"
                            }
                          },
                          "id": 4222,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "operatorConfirmed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3706,
                          "src": "8548:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f70657261746f72206164647265737320697320616c726561647920636f6e6669726d6564",
                        "id": 4224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8572:39:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6aea648d255eec5546a2d0fa2aa27c416e254737552118aebd9d504157083f4d",
                          "typeString": "literal_string \"Operator address is already confirmed\""
                        },
                        "value": "Operator address is already confirmed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6aea648d255eec5546a2d0fa2aa27c416e254737552118aebd9d504157083f4d",
                          "typeString": "literal_string \"Operator address is already confirmed\""
                        }
                      ],
                      "id": 4220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8539:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8539:73:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4226,
                  "nodeType": "ExpressionStatement",
                  "src": "8539:73:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4228,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8630:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8630:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 4230,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "8644:2:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 4231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "8644:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8630:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f70657261746f722077697468207265616c20616464726573732063616e206d616b65206120636f6e6669726d6174696f6e",
                        "id": 4233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8655:57:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b48328bfc24192d6915e08a8602b8981ec0c34b70db38e656318a6d7c817bc9",
                          "typeString": "literal_string \"Only operator with real address can make a confirmation\""
                        },
                        "value": "Only operator with real address can make a confirmation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b48328bfc24192d6915e08a8602b8981ec0c34b70db38e656318a6d7c817bc9",
                          "typeString": "literal_string \"Only operator with real address can make a confirmation\""
                        }
                      ],
                      "id": 4227,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8622:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8622:91:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4235,
                  "nodeType": "ExpressionStatement",
                  "src": "8622:91:13"
                },
                {
                  "expression": {
                    "id": 4240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 4236,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4215,
                        "src": "8723:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingProviderInfo_$3709_storage_ptr",
                          "typeString": "struct SimplePREApplication.StakingProviderInfo storage pointer"
                        }
                      },
                      "id": 4238,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "operatorConfirmed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3706,
                      "src": "8723:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8748:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8723:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4241,
                  "nodeType": "ExpressionStatement",
                  "src": "8723:29:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4243,
                        "name": "stakingProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4200,
                        "src": "8785:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4244,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8802:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8802:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4242,
                      "name": "OperatorConfirmed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3702,
                      "src": "8767:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 4246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8767:46:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4247,
                  "nodeType": "EmitStatement",
                  "src": "8762:51:13"
                }
              ]
            },
            "documentation": {
              "id": 4196,
              "nodeType": "StructuredDocumentation",
              "src": "8179:56:13",
              "text": " @notice Make a confirmation by operator"
            },
            "functionSelector": "9f795125",
            "id": 4249,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "confirmOperatorAddress",
            "nameLocation": "8249:22:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8271:2:13"
            },
            "returnParameters": {
              "id": 4198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8283:0:13"
            },
            "scope": 4250,
            "src": "8240:580:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4251,
        "src": "188:8635:13",
        "usedErrors": []
      }
    ],
    "src": "47:8777:13"
  },
  "bytecode": "60e060405234801561001057600080fd5b5060405161122238038061122283398101604081905261002f91610114565b604051637004922d60e11b8152306004820181905260248201526001600160a01b0384169063e009245a90604401602060405180830381865afa15801561007a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061009e9190610157565b6001600160601b0316156100f85760405162461bcd60e51b815260206004820152601660248201527f57726f6e6720696e70757420706172616d657465727300000000000000000000604482015260640160405180910390fd5b6080919091526001600160a01b0390911660c05260a052610187565b60008060006060848603121561012957600080fd5b83516001600160a01b038116811461014057600080fd5b602085015160409095015190969495509392505050565b60006020828403121561016957600080fd5b81516001600160601b038116811461018057600080fd5b9392505050565b60805160a05160c0516110426101e0600039600081816102ce015281816103d5015281816107fe0152610a800152600081816101d2015261054101526000818161026101528181610c430152610d3001526110426000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638c97f55811610097578063dbaa0fc611610066578063dbaa0fc6146102c9578063dca53b00146102f0578063e58e018e1461031c578063fe9fbb801461033d57600080fd5b80638c97f5581461025c5780639cafa103146102835780639f79512514610296578063c4903d5b1461029e57600080fd5b806369b99261116100d357806369b99261146101a157806369bdf9e4146101cd5780637dbee7a31461020257806386f690141461025457600080fd5b806302132c01146100fa5780630ceff8c81461010f578063505a1b3114610176575b600080fd5b61010d610108366004610d9f565b610350565b005b61014c61011d366004610dd8565b600060208190529081526040902080546001909101546001600160a01b03821691600160a01b900460ff169083565b604080516001600160a01b0390941684529115156020840152908201526060015b60405180910390f35b610189610184366004610dd8565b6107dc565b6040516001600160a01b03909116815260200161016d565b6101896101af366004610dd8565b6001600160a01b039081166000908152602081905260409020541690565b6101f47f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161016d565b610244610210366004610dd8565b6001600160a01b0390811660009081526002602090815260408083205490931682528190522054600160a01b900460ff1690565b604051901515815260200161016d565b6001546101f4565b6101f47f000000000000000000000000000000000000000000000000000000000000000081565b610189610291366004610dfc565b610873565b61010d61089d565b6102b16102ac366004610dd8565b610a58565b6040516001600160601b03909116815260200161016d565b6101897f000000000000000000000000000000000000000000000000000000000000000081565b6101896102fe366004610dd8565b6001600160a01b039081166000908152600260205260409020541690565b61032f61032a366004610e15565b610b10565b60405161016d929190610e37565b61024461034b366004610dd8565b610d2c565b8161035a81610d2c565b6103a35760405162461bcd60e51b81526020600482015260156024820152742737ba1037bbb732b91037b910383937bb34b232b960591b60448201526064015b60405180910390fd5b6001600160a01b038116331461049957604051632de9480760e01b81526001600160a01b0382811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690632de9480790602401606060405180830381865afa15801561041e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104429190610ea9565b50909150506001600160a01b03811633146104975760405162461bcd60e51b81526020600482015260156024820152742737ba1037bbb732b91037b910383937bb34b232b960591b604482015260640161039a565b505b6001600160a01b038084166000908152602081905260409020805490918481169116141561052f5760405162461bcd60e51b815260206004820152603760248201527f537065636966696564206f70657261746f7220697320616c726561647920626f60448201527f6e646564207769746820746869732070726f7669646572000000000000000000606482015260840161039a565b80546001600160a01b0316156105f8577f0000000000000000000000000000000000000000000000000000000000000000816001015461056f9190610f0c565b4210156105d05760405162461bcd60e51b815260206004820152602960248201527f4e6f7420656e6f7567682074696d652070617373656420746f206368616e67656044820152681037b832b930ba37b960b91b606482015260840161039a565b80546001600160a01b0316600090815260026020526040902080546001600160a01b03191690555b6001600160a01b03831615610727576001600160a01b03838116600090815260026020526040902054161561067b5760405162461bcd60e51b8152602060048201526024808201527f537065636966696564206f70657261746f7220697320616c726561647920696e6044820152632075736560e01b606482015260840161039a565b836001600160a01b0316836001600160a01b031614806106ac575060006106a1846107dc565b6001600160a01b0316145b6106f85760405162461bcd60e51b815260206004820181905260248201527f537065636966696564206f70657261746f7220697320612070726f7669646572604482015260640161039a565b6001600160a01b03838116600090815260026020526040902080546001600160a01b0319169186169190911790555b600181015461077b576001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0386161790555b805442600183018190556001600160a01b038581166001600160a81b0319909316831784556040519182528616907f08867fad28cac2af93e4e51db79555bf60310e6c11e5987987be9d8ecedb24219060200160405180910390a350505050565b604051632de9480760e01b81526001600160a01b0382811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690632de9480790602401606060405180830381865afa158015610847573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086b9190610ea9565b509392505050565b6001818154811061088357600080fd5b6000918252602090912001546001600160a01b0316905081565b336000908152600260205260409020546001600160a01b03166108bf81610d2c565b6109195760405162461bcd60e51b815260206004820152602560248201527f4e6f207374616b65206173736f636961746564207769746820746865206f70656044820152643930ba37b960d91b606482015260840161039a565b6001600160a01b03811660009081526020819052604090208054600160a01b900460ff16156109985760405162461bcd60e51b815260206004820152602560248201527f4f70657261746f72206164647265737320697320616c726561647920636f6e666044820152641a5c9b595960da1b606482015260840161039a565b333214610a0d5760405162461bcd60e51b815260206004820152603760248201527f4f6e6c79206f70657261746f722077697468207265616c20616464726573732060448201527f63616e206d616b65206120636f6e6669726d6174696f6e000000000000000000606482015260840161039a565b805460ff60a01b1916600160a01b17815560405133906001600160a01b038416907fdbc602361eaa7fb503df3c16078c71b39d28412df5e9980bec6f489f78bb175c90600090a35050565b6040516305a4d3f160e21b81526001600160a01b0382811660048301526000918291829182917f000000000000000000000000000000000000000000000000000000000000000016906316934fc490602401606060405180830381865afa158015610ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aeb9190610f40565b9194509250905080610afd8385610f83565b610b079190610f83565b95945050505050565b600154600090606090808510610b5c5760405162461bcd60e51b81526020600482015260116024820152700aee4dedcce40e6e8c2e4e840d2dcc8caf607b1b604482015260640161039a565b8315801590610b73575080610b718587610f0c565b105b15610b8557610b828486610f0c565b90505b610b8f8582610fae565b67ffffffffffffffff811115610ba757610ba7610fc5565b604051908082528060200260200182016040528015610be057816020015b610bcd610d69565b815260200190600190039081610bc55790505b5060009350915082855b82811015610d1f57600060018281548110610c0757610c07610fdb565b60009182526020808320909101546001600160a01b0316808352908290526040822090925090610c3683610a58565b6001600160601b031690507f0000000000000000000000000000000000000000000000000000000000000000811080610c7857508154600160a01b900460ff16155b15610c8557505050610d0d565b826001600160a01b0316878681518110610ca157610ca1610fdb565b6020026020010151600060028110610cbb57610cbb610fdb565b6020020152808786610ccc81610ff1565b975081518110610cde57610cde610fdb565b6020026020010151600160028110610cf857610cf8610fdb565b6020020152610d078189610f0c565b97505050505b80610d1781610ff1565b915050610bea565b5080835250509250929050565b60007f0000000000000000000000000000000000000000000000000000000000000000610d5883610a58565b6001600160601b0316101592915050565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b0381168114610d9c57600080fd5b50565b60008060408385031215610db257600080fd5b8235610dbd81610d87565b91506020830135610dcd81610d87565b809150509250929050565b600060208284031215610dea57600080fd5b8135610df581610d87565b9392505050565b600060208284031215610e0e57600080fd5b5035919050565b60008060408385031215610e2857600080fd5b50508035926020909101359150565b600060408083018584526020828186015281865180845260608701915082880193506000805b82811015610e9a57855184835b6002811015610e8757825182529187019190870190600101610e6a565b5050509484019492860192600101610e5d565b50919998505050505050505050565b600080600060608486031215610ebe57600080fd5b8351610ec981610d87565b6020850151909350610eda81610d87565b6040850151909250610eeb81610d87565b809150509250925092565b634e487b7160e01b600052601160045260246000fd5b60008219821115610f1f57610f1f610ef6565b500190565b80516001600160601b0381168114610f3b57600080fd5b919050565b600080600060608486031215610f5557600080fd5b610f5e84610f24565b9250610f6c60208501610f24565b9150610f7a60408501610f24565b90509250925092565b60006001600160601b03808316818516808303821115610fa557610fa5610ef6565b01949350505050565b600082821015610fc057610fc0610ef6565b500390565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060001982141561100557611005610ef6565b506001019056fea26469706673582212208bc07974e0ca26ab04df6f1c457651f95de2c214bfcd2e265a35ddf13605cb5864736f6c634300080a0033",
  "bytecodeSha1": "f27e8c58e68f75d964d83f87e059241b40b3ce87",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "SimplePREApplication",
  "coverageMap": {
    "branches": {
      "13": {
        "SimplePREApplication.bondOperator": {
          "32": [
            2157,
            2187,
            true
          ],
          "33": [
            6804,
            6830,
            true
          ],
          "34": [
            6950,
            6977,
            false
          ],
          "35": [
            7018,
            7085,
            true
          ],
          "36": [
            7322,
            7345,
            false
          ],
          "37": [
            7369,
            7422,
            true
          ],
          "38": [
            7502,
            7531,
            true
          ],
          "39": [
            7535,
            7574,
            true
          ]
        },
        "SimplePREApplication.confirmOperatorAddress": {
          "40": [
            8377,
            8406,
            true
          ],
          "41": [
            8547,
            8570,
            true
          ],
          "42": [
            8630,
            8653,
            true
          ]
        },
        "SimplePREApplication.getActiveStakingProviders": {
          "43": [
            4190,
            4212,
            true
          ],
          "44": [
            4248,
            4273,
            false
          ],
          "45": [
            4277,
            4322,
            false
          ],
          "46": [
            4827,
            4860,
            true
          ],
          "47": [
            4865,
            4887,
            false
          ]
        }
      },
      "31": {}
    },
    "statements": {
      "13": {
        "SimplePREApplication.authorizedStake": {
          "21": [
            3240,
            3281
          ]
        },
        "SimplePREApplication.bondOperator": {
          "4": [
            6796,
            6890
          ],
          "5": [
            6993,
            7160
          ],
          "6": [
            7241,
            7297
          ],
          "7": [
            7361,
            7463
          ],
          "8": [
            7477,
            7640
          ],
          "9": [
            7712,
            7770
          ],
          "10": [
            7843,
            7882
          ],
          "11": [
            7971,
            7996
          ],
          "12": [
            8006,
            8051
          ],
          "13": [
            8061,
            8091
          ],
          "14": [
            8101,
            8166
          ]
        },
        "SimplePREApplication.confirmOperatorAddress": {
          "16": [
            8369,
            8448
          ],
          "17": [
            8539,
            8612
          ],
          "18": [
            8622,
            8713
          ],
          "19": [
            8723,
            8752
          ],
          "20": [
            8762,
            8813
          ]
        },
        "SimplePREApplication.getActiveStakingProviders": {
          "22": [
            4182,
            4234
          ],
          "23": [
            4338,
            4383
          ],
          "24": [
            4403,
            4468
          ],
          "25": [
            4478,
            4501
          ],
          "26": [
            4907,
            4915
          ],
          "27": [
            4943,
            5017
          ],
          "28": [
            5031,
            5088
          ],
          "29": [
            5102,
            5139
          ],
          "30": [
            4589,
            4592
          ]
        },
        "SimplePREApplication.getBeneficiary": {
          "15": [
            5438,
            5491
          ]
        },
        "SimplePREApplication.getOperatorFromStakingProvider": {
          "0": [
            2905,
            2958
          ]
        },
        "SimplePREApplication.getStakingProvidersLength": {
          "2": [
            6350,
            6380
          ]
        },
        "SimplePREApplication.isAuthorized": {
          "31": [
            5692,
            5752
          ]
        },
        "SimplePREApplication.isOperatorConfirmed": {
          "1": [
            6148,
            6177
          ]
        },
        "SimplePREApplication.stakingProviderFromOperator": {
          "3": [
            2663,
            2709
          ]
        }
      },
      "31": {}
    }
  },
  "dependencies": [
    "IStaking"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100f55760003560e01c80638c97f55811610097578063dbaa0fc611610066578063dbaa0fc6146102c9578063dca53b00146102f0578063e58e018e1461031c578063fe9fbb801461033d57600080fd5b80638c97f5581461025c5780639cafa103146102835780639f79512514610296578063c4903d5b1461029e57600080fd5b806369b99261116100d357806369b99261146101a157806369bdf9e4146101cd5780637dbee7a31461020257806386f690141461025457600080fd5b806302132c01146100fa5780630ceff8c81461010f578063505a1b3114610176575b600080fd5b61010d610108366004610d9f565b610350565b005b61014c61011d366004610dd8565b600060208190529081526040902080546001909101546001600160a01b03821691600160a01b900460ff169083565b604080516001600160a01b0390941684529115156020840152908201526060015b60405180910390f35b610189610184366004610dd8565b6107dc565b6040516001600160a01b03909116815260200161016d565b6101896101af366004610dd8565b6001600160a01b039081166000908152602081905260409020541690565b6101f47f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161016d565b610244610210366004610dd8565b6001600160a01b0390811660009081526002602090815260408083205490931682528190522054600160a01b900460ff1690565b604051901515815260200161016d565b6001546101f4565b6101f47f000000000000000000000000000000000000000000000000000000000000000081565b610189610291366004610dfc565b610873565b61010d61089d565b6102b16102ac366004610dd8565b610a58565b6040516001600160601b03909116815260200161016d565b6101897f000000000000000000000000000000000000000000000000000000000000000081565b6101896102fe366004610dd8565b6001600160a01b039081166000908152600260205260409020541690565b61032f61032a366004610e15565b610b10565b60405161016d929190610e37565b61024461034b366004610dd8565b610d2c565b8161035a81610d2c565b6103a35760405162461bcd60e51b81526020600482015260156024820152742737ba1037bbb732b91037b910383937bb34b232b960591b60448201526064015b60405180910390fd5b6001600160a01b038116331461049957604051632de9480760e01b81526001600160a01b0382811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690632de9480790602401606060405180830381865afa15801561041e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104429190610ea9565b50909150506001600160a01b03811633146104975760405162461bcd60e51b81526020600482015260156024820152742737ba1037bbb732b91037b910383937bb34b232b960591b604482015260640161039a565b505b6001600160a01b038084166000908152602081905260409020805490918481169116141561052f5760405162461bcd60e51b815260206004820152603760248201527f537065636966696564206f70657261746f7220697320616c726561647920626f60448201527f6e646564207769746820746869732070726f7669646572000000000000000000606482015260840161039a565b80546001600160a01b0316156105f8577f0000000000000000000000000000000000000000000000000000000000000000816001015461056f9190610f0c565b4210156105d05760405162461bcd60e51b815260206004820152602960248201527f4e6f7420656e6f7567682074696d652070617373656420746f206368616e67656044820152681037b832b930ba37b960b91b606482015260840161039a565b80546001600160a01b0316600090815260026020526040902080546001600160a01b03191690555b6001600160a01b03831615610727576001600160a01b03838116600090815260026020526040902054161561067b5760405162461bcd60e51b8152602060048201526024808201527f537065636966696564206f70657261746f7220697320616c726561647920696e6044820152632075736560e01b606482015260840161039a565b836001600160a01b0316836001600160a01b031614806106ac575060006106a1846107dc565b6001600160a01b0316145b6106f85760405162461bcd60e51b815260206004820181905260248201527f537065636966696564206f70657261746f7220697320612070726f7669646572604482015260640161039a565b6001600160a01b03838116600090815260026020526040902080546001600160a01b0319169186169190911790555b600181015461077b576001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0386161790555b805442600183018190556001600160a01b038581166001600160a81b0319909316831784556040519182528616907f08867fad28cac2af93e4e51db79555bf60310e6c11e5987987be9d8ecedb24219060200160405180910390a350505050565b604051632de9480760e01b81526001600160a01b0382811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690632de9480790602401606060405180830381865afa158015610847573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086b9190610ea9565b509392505050565b6001818154811061088357600080fd5b6000918252602090912001546001600160a01b0316905081565b336000908152600260205260409020546001600160a01b03166108bf81610d2c565b6109195760405162461bcd60e51b815260206004820152602560248201527f4e6f207374616b65206173736f636961746564207769746820746865206f70656044820152643930ba37b960d91b606482015260840161039a565b6001600160a01b03811660009081526020819052604090208054600160a01b900460ff16156109985760405162461bcd60e51b815260206004820152602560248201527f4f70657261746f72206164647265737320697320616c726561647920636f6e666044820152641a5c9b595960da1b606482015260840161039a565b333214610a0d5760405162461bcd60e51b815260206004820152603760248201527f4f6e6c79206f70657261746f722077697468207265616c20616464726573732060448201527f63616e206d616b65206120636f6e6669726d6174696f6e000000000000000000606482015260840161039a565b805460ff60a01b1916600160a01b17815560405133906001600160a01b038416907fdbc602361eaa7fb503df3c16078c71b39d28412df5e9980bec6f489f78bb175c90600090a35050565b6040516305a4d3f160e21b81526001600160a01b0382811660048301526000918291829182917f000000000000000000000000000000000000000000000000000000000000000016906316934fc490602401606060405180830381865afa158015610ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aeb9190610f40565b9194509250905080610afd8385610f83565b610b079190610f83565b95945050505050565b600154600090606090808510610b5c5760405162461bcd60e51b81526020600482015260116024820152700aee4dedcce40e6e8c2e4e840d2dcc8caf607b1b604482015260640161039a565b8315801590610b73575080610b718587610f0c565b105b15610b8557610b828486610f0c565b90505b610b8f8582610fae565b67ffffffffffffffff811115610ba757610ba7610fc5565b604051908082528060200260200182016040528015610be057816020015b610bcd610d69565b815260200190600190039081610bc55790505b5060009350915082855b82811015610d1f57600060018281548110610c0757610c07610fdb565b60009182526020808320909101546001600160a01b0316808352908290526040822090925090610c3683610a58565b6001600160601b031690507f0000000000000000000000000000000000000000000000000000000000000000811080610c7857508154600160a01b900460ff16155b15610c8557505050610d0d565b826001600160a01b0316878681518110610ca157610ca1610fdb565b6020026020010151600060028110610cbb57610cbb610fdb565b6020020152808786610ccc81610ff1565b975081518110610cde57610cde610fdb565b6020026020010151600160028110610cf857610cf8610fdb565b6020020152610d078189610f0c565b97505050505b80610d1781610ff1565b915050610bea565b5080835250509250929050565b60007f0000000000000000000000000000000000000000000000000000000000000000610d5883610a58565b6001600160601b0316101592915050565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b0381168114610d9c57600080fd5b50565b60008060408385031215610db257600080fd5b8235610dbd81610d87565b91506020830135610dcd81610d87565b809150509250929050565b600060208284031215610dea57600080fd5b8135610df581610d87565b9392505050565b600060208284031215610e0e57600080fd5b5035919050565b60008060408385031215610e2857600080fd5b50508035926020909101359150565b600060408083018584526020828186015281865180845260608701915082880193506000805b82811015610e9a57855184835b6002811015610e8757825182529187019190870190600101610e6a565b5050509484019492860192600101610e5d565b50919998505050505050505050565b600080600060608486031215610ebe57600080fd5b8351610ec981610d87565b6020850151909350610eda81610d87565b6040850151909250610eeb81610d87565b809150509250925092565b634e487b7160e01b600052601160045260246000fd5b60008219821115610f1f57610f1f610ef6565b500190565b80516001600160601b0381168114610f3b57600080fd5b919050565b600080600060608486031215610f5557600080fd5b610f5e84610f24565b9250610f6c60208501610f24565b9150610f7a60408501610f24565b90509250925092565b60006001600160601b03808316818516808303821115610fa557610fa5610ef6565b01949350505050565b600082821015610fc057610fc0610ef6565b500390565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060001982141561100557611005610ef6565b506001019056fea26469706673582212208bc07974e0ca26ab04df6f1c457651f95de2c214bfcd2e265a35ddf13605cb5864736f6c634300080a0033",
  "deployedSourceMap": "188:8635:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6571:1602;;;;;;:::i;:::-;;:::i;:::-;;1105:67;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1105:67:13;;;-1:-1:-1;;;1105:67:13;;;;;;;;;;;-1:-1:-1;;;;;1009:32:41;;;991:51;;1085:14;;1078:22;1073:2;1058:18;;1051:50;1117:18;;;1110:34;979:2;964:18;1105:67:13;;;;;;;;5328:170;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1335:32:41;;;1317:51;;1305:2;1290:18;5328:170:13;1155:219:41;2799:166:13;;;;;;:::i;:::-;-1:-1:-1;;;;;2912:37:13;;;2886:7;2912:37;;;;;;;;;;:46;;;2799:166;1014:43;;;;;;;;1733:25:41;;;1721:2;1706:18;1014:43:13;1587:177:41;5907:277:13;;;;;;:::i;:::-;-1:-1:-1;;;;;6018:39:13;;;5976:4;6018:39;;;:28;:39;;;;;;;;;;;;6102:36;;;;;;6155:22;-1:-1:-1;;;6155:22:13;;;;;5907:277;;;;1934:14:41;;1927:22;1909:41;;1897:2;1882:18;5907:277:13;1769:187:41;6271:116:13;6357:16;:23;6271:116;;967:41;;;;;1178:33;;;;;;:::i;:::-;;:::i;8240:580::-;;;:::i;3049:239::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2308:39:41;;;2290:58;;2278:2;2263:18;3049:239:13;2146:208:41;1064:34:13;;;;;2567:149;;;;;;:::i;:::-;-1:-1:-1;;;;;2670:39:13;;;2644:7;2670:39;;;:28;:39;;;;;;;;2567:149;3926:1315;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;5607:152::-;;;;;;:::i;:::-;;:::i;6571:1602::-;6682:16;2157:30;2170:16;2157:12;:30::i;:::-;2149:64;;;;-1:-1:-1;;;2149:64:13;;4167:2:41;2149:64:13;;;4149:21:41;4206:2;4186:18;;;4179:30;-1:-1:-1;;;4225:18:41;;;4218:51;4286:18;;2149:64:13;;;;;;;;;-1:-1:-1;;;;;2227:30:13;;2247:10;2227:30;2223:182;;2293:34;;-1:-1:-1;;;2293:34:13;;-1:-1:-1;;;;;1335:32:41;;;2293:34:13;;;1317:51:41;2274:13:13;;2293:8;:16;;;;;;1290:18:41;;2293:34:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2273:54:13;;-1:-1:-1;;;;;;;2349:19:13;;2358:10;2349:19;2341:53;;;;-1:-1:-1;;;2341:53:13;;4167:2:41;2341:53:13;;;4149:21:41;4206:2;4186:18;;;4179:30;-1:-1:-1;;;4225:18:41;;;4218:51;4286:18;;2341:53:13;3965:345:41;2341:53:13;2259:146;2223:182;-1:-1:-1;;;;;6749:37:13;;::::1;6714:32;6749:37:::0;;;::::1;::::0;;;;;;6817:13;;6749:37;;6804:26;;::::1;6817:13:::0;::::1;6804:26;;6796:94;;;::::0;-1:-1:-1;;;6796:94:13;;5049:2:41;6796:94:13::1;::::0;::::1;5031:21:41::0;5088:2;5068:18;;;5061:30;5127:34;5107:18;;;5100:62;5198:25;5178:18;;;5171:53;5241:19;;6796:94:13::1;4847:419:41::0;6796:94:13::1;6950:13:::0;;-1:-1:-1;;;;;6950:13:13::1;:27:::0;6946:362:::1;;7067:18;7037:4;:27;;;:48;;;;:::i;:::-;7018:15;:67;;6993:167;;;::::0;-1:-1:-1;;;6993:167:13;;5738:2:41;6993:167:13::1;::::0;::::1;5720:21:41::0;5777:2;5757:18;;;5750:30;5816:34;5796:18;;;5789:62;-1:-1:-1;;;5867:18:41;;;5860:39;5916:19;;6993:167:13::1;5536:405:41::0;6993:167:13::1;7270:13:::0;;-1:-1:-1;;;;;7270:13:13::1;7295:1;7241:43:::0;;;:28:::1;:43;::::0;;;;:56;;-1:-1:-1;;;;;;7241:56:13::1;::::0;;6946:362:::1;-1:-1:-1::0;;;;;7322:23:13;::::1;::::0;7318:463:::1;;-1:-1:-1::0;;;;;7369:39:13;;::::1;7420:1;7369:39:::0;;;:28:::1;:39;::::0;;;;;::::1;:53:::0;7361:102:::1;;;::::0;-1:-1:-1;;;7361:102:13;;6148:2:41;7361:102:13::1;::::0;::::1;6130:21:41::0;6187:2;6167:18;;;6160:30;6226:34;6206:18;;;6199:62;-1:-1:-1;;;6277:18:41;;;6270:34;6321:19;;7361:102:13::1;5946:400:41::0;7361:102:13::1;7515:16;-1:-1:-1::0;;;;;7502:29:13::1;:9;-1:-1:-1::0;;;;;7502:29:13::1;;:72;;;-1:-1:-1::0;7572:1:13::1;7535:25;7550:9:::0;7535:14:::1;:25::i;:::-;-1:-1:-1::0;;;;;7535:39:13::1;;7502:72;7477:163;;;::::0;-1:-1:-1;;;7477:163:13;;6553:2:41;7477:163:13::1;::::0;::::1;6535:21:41::0;;;6572:18;;;6565:30;6631:34;6611:18;;;6604:62;6683:18;;7477:163:13::1;6351:356:41::0;7477:163:13::1;-1:-1:-1::0;;;;;7712:39:13;;::::1;;::::0;;;:28:::1;:39;::::0;;;;:58;;-1:-1:-1;;;;;;7712:58:13::1;::::0;;::::1;::::0;;;::::1;::::0;;7318:463:::1;7795:27;::::0;::::1;::::0;7791:102:::1;;7843:16;:39:::0;;;;::::1;::::0;;-1:-1:-1;7843:39:13;;;;;::::1;::::0;;-1:-1:-1;;;;;;7843:39:13::1;-1:-1:-1::0;;;;;7843:39:13;::::1;;::::0;;7791:102:::1;7971:25:::0;;8036:15:::1;7971:25:::0;8006:27;::::1;:45:::0;;;-1:-1:-1;;;;;7971:25:13;;::::1;-1:-1:-1::0;;;;;;8061:30:13;;;;;;;8106:60:::1;::::0;1733:25:41;;;8106:60:13;::::1;::::0;::::1;::::0;1721:2:41;1706:18;8106:60:13::1;;;;;;;6704:1469;6571:1602:::0;;;:::o;5328:170::-;5457:34;;-1:-1:-1;;;5457:34:13;;-1:-1:-1;;;;;1335:32:41;;;5457:34:13;;;1317:51:41;5399:27:13;;5457:8;:16;;;;;;1290:18:41;;5457:34:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5438:53:13;5328:170;-1:-1:-1;;;5328:170:13:o;1178:33::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1178:33:13;;-1:-1:-1;1178:33:13;:::o;8240:580::-;8348:10;8293:23;8319:40;;;:28;:40;;;;;;-1:-1:-1;;;;;8319:40:13;8377:29;8319:40;8377:12;:29::i;:::-;8369:79;;;;-1:-1:-1;;;8369:79:13;;6914:2:41;8369:79:13;;;6896:21:41;6953:2;6933:18;;;6926:30;6992:34;6972:18;;;6965:62;-1:-1:-1;;;7043:18:41;;;7036:35;7088:19;;8369:79:13;6712:401:41;8369:79:13;-1:-1:-1;;;;;8493:36:13;;8458:32;8493:36;;;;;;;;;;8548:22;;-1:-1:-1;;;8548:22:13;;;;8547:23;8539:73;;;;-1:-1:-1;;;8539:73:13;;7320:2:41;8539:73:13;;;7302:21:41;7359:2;7339:18;;;7332:30;7398:34;7378:18;;;7371:62;-1:-1:-1;;;7449:18:41;;;7442:35;7494:19;;8539:73:13;7118:401:41;8539:73:13;8630:10;8644:9;8630:23;8622:91;;;;-1:-1:-1;;;8622:91:13;;7726:2:41;8622:91:13;;;7708:21:41;7765:2;7745:18;;;7738:30;7804:34;7784:18;;;7777:62;7875:25;7855:18;;;7848:53;7918:19;;8622:91:13;7524:419:41;8622:91:13;8723:29;;-1:-1:-1;;;;8723:29:13;-1:-1:-1;;;8723:29:13;;;8767:46;;8802:10;;-1:-1:-1;;;;;8767:46:13;;;;;8723:22;;8767:46;8283:537;;8240:580::o;3049:239::-;3197:33;;-1:-1:-1;;;3197:33:13;;-1:-1:-1;;;;;1335:32:41;;;3197:33:13;;;1317:51:41;3121:6:13;;;;;;;;3197:8;:15;;;;1290:18:41;;3197:33:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3139:91;;-1:-1:-1;3139:91:13;-1:-1:-1;3139:91:13;-1:-1:-1;3139:91:13;3247:21;3139:91;;3247:21;:::i;:::-;:34;;;;:::i;:::-;3240:41;3049:239;-1:-1:-1;;;;;3049:239:13:o;3926:1315::-;4149:16;:23;4043:27;;4072:42;;4190:22;;;4182:52;;;;-1:-1:-1;;;4182:52:13;;8964:2:41;4182:52:13;;;8946:21:41;9003:2;8983:18;;;8976:30;-1:-1:-1;;;9022:18:41;;;9015:47;9079:18;;4182:52:13;8762:341:41;4182:52:13;4248:25;;;;;:74;;-1:-1:-1;4314:8:13;4277:34;4291:20;4277:11;:34;:::i;:::-;:45;4248:74;4244:150;;;4349:34;4363:20;4349:11;:34;:::i;:::-;4338:45;;4244:150;4445:22;4456:11;4445:8;:22;:::i;:::-;4428:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;4500:1:13;;-1:-1:-1;4403:65:13;-1:-1:-1;4500:1:13;4562:11;4545:605;4579:8;4575:1;:12;4545:605;;;4608:23;4634:16;4651:1;4634:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;4634:19:13;4702:36;;;;;;;;;;4634:19;;-1:-1:-1;4702:36:13;4777:32;4634:19;4777:15;:32::i;:::-;-1:-1:-1;;;;;4752:57:13;;;4844:16;4827:14;:33;:60;;;-1:-1:-1;4865:22:13;;-1:-1:-1;;;4865:22:13;;;;4864:23;4827:60;4823:107;;;4907:8;;;;;4823:107;5000:15;-1:-1:-1;;;;;4984:33:13;4943:22;4966:11;4943:35;;;;;;;;:::i;:::-;;;;;;;4979:1;4943:38;;;;;;;:::i;:::-;;;;:74;5074:14;5031:22;5054:13;;;;:::i;:::-;;;5031:37;;;;;;;;:::i;:::-;;;;;;;5069:1;5031:40;;;;;;;:::i;:::-;;;;:57;5102:37;5125:14;5102:37;;:::i;:::-;;;4594:556;;;4545:605;4589:3;;;;:::i;:::-;;;;4545:605;;;;5213:11;5189:22;5182:43;5168:67;;3926:1315;;;;;:::o;5607:152::-;5676:4;5736:16;5699:33;5715:16;5699:15;:33::i;:::-;-1:-1:-1;;;;;5699:53:13;;;;5607:152;-1:-1:-1;;5607:152:13:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:41:-;-1:-1:-1;;;;;89:31:41;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:388::-;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;-1:-1:-1;460:2:41;445:18;;432:32;473:33;432:32;473:33;:::i;:::-;525:7;515:17;;;150:388;;;;;:::o;543:247::-;602:6;655:2;643:9;634:7;630:23;626:32;623:52;;;671:1;668;661:12;623:52;710:9;697:23;729:31;754:5;729:31;:::i;:::-;779:5;543:247;-1:-1:-1;;;543:247:41:o;1961:180::-;2020:6;2073:2;2061:9;2052:7;2048:23;2044:32;2041:52;;;2089:1;2086;2079:12;2041:52;-1:-1:-1;2112:23:41;;1961:180;-1:-1:-1;1961:180:41:o;2585:248::-;2653:6;2661;2714:2;2702:9;2693:7;2689:23;2685:32;2682:52;;;2730:1;2727;2720:12;2682:52;-1:-1:-1;;2753:23:41;;;2823:2;2808:18;;;2795:32;;-1:-1:-1;2585:248:41:o;2838:1122::-;3054:4;3083:2;3123;3112:9;3108:18;3153:6;3142:9;3135:25;3179:2;3217;3212;3201:9;3197:18;3190:30;3240:6;3275;3269:13;3306:6;3298;3291:22;3344:2;3333:9;3329:18;3322:25;;3382:2;3374:6;3370:15;3356:29;;3403:1;3424;3434:500;3450:6;3445:3;3442:15;3434:500;;;3513:13;;3552:3;3635:1;3649:205;3665:4;3660:3;3657:13;3649:205;;;3738:15;;3724:30;;3823:17;;;;3780:14;;;;3689:1;3680:11;3649:205;;;-1:-1:-1;;;3909:15:41;;;;3874:12;;;;3476:1;3467:11;3434:500;;;-1:-1:-1;3951:3:41;;2838:1122;-1:-1:-1;;;;;;;;;2838:1122:41:o;4315:527::-;4411:6;4419;4427;4480:2;4468:9;4459:7;4455:23;4451:32;4448:52;;;4496:1;4493;4486:12;4448:52;4528:9;4522:16;4547:31;4572:5;4547:31;:::i;:::-;4647:2;4632:18;;4626:25;4597:5;;-1:-1:-1;4660:33:41;4626:25;4660:33;:::i;:::-;4764:2;4749:18;;4743:25;4712:7;;-1:-1:-1;4777:33:41;4743:25;4777:33;:::i;:::-;4829:7;4819:17;;;4315:527;;;;;:::o;5271:127::-;5332:10;5327:3;5323:20;5320:1;5313:31;5363:4;5360:1;5353:15;5387:4;5384:1;5377:15;5403:128;5443:3;5474:1;5470:6;5467:1;5464:13;5461:39;;;5480:18;;:::i;:::-;-1:-1:-1;5516:9:41;;5403:128::o;7948:183::-;8026:13;;-1:-1:-1;;;;;8068:38:41;;8058:49;;8048:77;;8121:1;8118;8111:12;8048:77;7948:183;;;:::o;8136:372::-;8221:6;8229;8237;8290:2;8278:9;8269:7;8265:23;8261:32;8258:52;;;8306:1;8303;8296:12;8258:52;8329:39;8358:9;8329:39;:::i;:::-;8319:49;;8387:48;8431:2;8420:9;8416:18;8387:48;:::i;:::-;8377:58;;8454:48;8498:2;8487:9;8483:18;8454:48;:::i;:::-;8444:58;;8136:372;;;;;:::o;8513:244::-;8552:3;-1:-1:-1;;;;;8633:2:41;8630:1;8626:10;8663:2;8660:1;8656:10;8694:3;8690:2;8686:12;8681:3;8678:21;8675:47;;;8702:18;;:::i;:::-;8738:13;;8513:244;-1:-1:-1;;;;8513:244:41:o;9108:125::-;9148:4;9176:1;9173;9170:8;9167:34;;;9181:18;;:::i;:::-;-1:-1:-1;9218:9:41;;9108:125::o;9238:127::-;9299:10;9294:3;9290:20;9287:1;9280:31;9330:4;9327:1;9320:15;9354:4;9351:1;9344:15;9370:127;9431:10;9426:3;9422:20;9419:1;9412:31;9462:4;9459:1;9452:15;9486:4;9483:1;9476:15;9502:135;9541:3;-1:-1:-1;;9562:17:41;;9559:43;;;9582:18;;:::i;:::-;-1:-1:-1;9629:1:41;9618:13;;9502:135::o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "OperatorBonded(address,address,uint256)": {
        "params": {
          "operator": "Operator address",
          "stakingProvider": "Staking provider address",
          "startTimestamp": "Timestamp bonding occurred"
        }
      },
      "OperatorConfirmed(address,address)": {
        "params": {
          "operator": "Operator address",
          "stakingProvider": "Staking provider address"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "authorizedStake(address)": {
        "notice": "Get all tokens delegated to the staking provider"
      },
      "bondOperator(address,address)": {
        "notice": "Bond operator",
        "params": {
          "_operator": "Operator address. Must be a real address, not a contract",
          "_stakingProvider": "Staking provider address"
        }
      },
      "confirmOperatorAddress()": {
        "notice": "Make a confirmation by operator"
      },
      "constructor": {
        "notice": "Constructor sets address of token contract and parameters for staking",
        "params": {
          "_minAuthorization": "Amount of minimum allowable authorization",
          "_minOperatorSeconds": "Min amount of seconds while an operator can't be changed",
          "_tStaking": "T token staking contract"
        }
      },
      "getActiveStakingProviders(uint256,uint256)": {
        "details": "Note that activeStakingProviders[0] is an array of uint256, but you want addresses. Careful when used directly!",
        "notice": "Get the value of authorized tokens for active providers as well as providers and their authorized tokens",
        "params": {
          "_maxStakingProviders": "Max providers for looking, if set 0 then all will be used",
          "_startIndex": "Start index for looking in providers array"
        },
        "returns": {
          "activeStakingProviders": "Array of providers and their authorized tokens. Providers addresses stored as uint256",
          "allAuthorizedTokens": "Sum of authorized tokens for active providers"
        }
      },
      "getBeneficiary(address)": {
        "notice": "Returns beneficiary related to the staking provider"
      },
      "getOperatorFromStakingProvider(address)": {
        "notice": "Returns operator for specified staking provider"
      },
      "getStakingProvidersLength()": {
        "notice": "Return the length of the array of staking providers"
      },
      "isAuthorized(address)": {
        "notice": "Returns true if staking provider has authorized stake to this application"
      },
      "isOperatorConfirmed(address)": {
        "notice": "Returns true if operator has confirmed address"
      },
      "stakingProviderFromOperator(address)": {
        "notice": "Returns staking provider for specified operator"
      }
    },
    "notice": "Contract handles PRE configuration",
    "title": "PRE Application",
    "version": 1
  },
  "offset": [
    188,
    8823
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C97F558 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDBAA0FC6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDBAA0FC6 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xDCA53B00 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xE58E018E EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xFE9FBB80 EQ PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8C97F558 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x9CAFA103 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x9F795125 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xC4903D5B EQ PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x69B99261 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x69B99261 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x69BDF9E4 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x7DBEE7A3 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x86F69014 EQ PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2132C01 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xCEFF8C8 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x505A1B31 EQ PUSH2 0x176 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x350 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14C PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16D JUMP JUMPDEST PUSH2 0x189 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x1F4 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16D JUMP JUMPDEST PUSH2 0x244 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE DUP2 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x1F4 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x189 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x89D JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0xA58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16D JUMP JUMPDEST PUSH2 0x189 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x189 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x32F PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP3 SWAP2 SWAP1 PUSH2 0xE37 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0xD2C JUMP JUMPDEST DUP2 PUSH2 0x35A DUP2 PUSH2 0xD2C JUMP JUMPDEST PUSH2 0x3A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2737BA1037BBB732B91037B910383937BB34B232B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x499 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2DE94807 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x2DE94807 SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x41E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x442 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST POP SWAP1 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x497 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2737BA1037BBB732B91037B910383937BB34B232B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39A JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP5 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x52F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537065636966696564206F70657261746F7220697320616C726561647920626F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E646564207769746820746869732070726F7669646572000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39A JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x5F8 JUMPI PUSH32 0x0 DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0x56F SWAP2 SWAP1 PUSH2 0xF0C JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682074696D652070617373656420746F206368616E6765 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1037B832B930BA37B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39A JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x727 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x537065636966696564206F70657261746F7220697320616C726561647920696E PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x20757365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39A JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x6AC JUMPI POP PUSH1 0x0 PUSH2 0x6A1 DUP5 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x6F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537065636966696564206F70657261746F7220697320612070726F7669646572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x77B JUMPI PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST DUP1 SLOAD TIMESTAMP PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND DUP4 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE DUP7 AND SWAP1 PUSH32 0x8867FAD28CAC2AF93E4E51DB79555BF60310E6C11E5987987BE9D8ECEDB2421 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2DE94807 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x2DE94807 SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x847 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x86B SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8BF DUP2 PUSH2 0xD2C JUMP JUMPDEST PUSH2 0x919 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207374616B65206173736F636961746564207769746820746865206F7065 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3930BA37B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x998 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F70657261746F72206164647265737320697320616C726561647920636F6E66 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1A5C9B5959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39A JUMP JUMPDEST CALLER ORIGIN EQ PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F70657261746F722077697468207265616C206164647265737320 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63616E206D616B65206120636F6E6669726D6174696F6E000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39A JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDBC602361EAA7FB503DF3C16078C71B39D28412DF5E9980BEC6F489F78BB175C SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5A4D3F1 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x16934FC4 SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAC7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAEB SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP DUP1 PUSH2 0xAFD DUP4 DUP6 PUSH2 0xF83 JUMP JUMPDEST PUSH2 0xB07 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 DUP1 DUP6 LT PUSH2 0xB5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0xAEE4DEDCCE40E6E8C2E4E840D2DCC8CAF PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39A JUMP JUMPDEST DUP4 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xB73 JUMPI POP DUP1 PUSH2 0xB71 DUP6 DUP8 PUSH2 0xF0C JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0xB85 JUMPI PUSH2 0xB82 DUP5 DUP7 PUSH2 0xF0C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xB8F DUP6 DUP3 PUSH2 0xFAE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBA7 JUMPI PUSH2 0xBA7 PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBE0 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xBCD PUSH2 0xD69 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xBC5 JUMPI SWAP1 POP JUMPDEST POP PUSH1 0x0 SWAP4 POP SWAP2 POP DUP3 DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD1F JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC07 JUMPI PUSH2 0xC07 PUSH2 0xFDB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 SWAP3 POP SWAP1 PUSH2 0xC36 DUP4 PUSH2 0xA58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP PUSH32 0x0 DUP2 LT DUP1 PUSH2 0xC78 JUMPI POP DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xC85 JUMPI POP POP POP PUSH2 0xD0D JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xCA1 JUMPI PUSH2 0xCA1 PUSH2 0xFDB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0xCBB JUMPI PUSH2 0xCBB PUSH2 0xFDB JUMP JUMPDEST PUSH1 0x20 MUL ADD MSTORE DUP1 DUP8 DUP7 PUSH2 0xCCC DUP2 PUSH2 0xFF1 JUMP JUMPDEST SWAP8 POP DUP2 MLOAD DUP2 LT PUSH2 0xCDE JUMPI PUSH2 0xCDE PUSH2 0xFDB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0xCF8 JUMPI PUSH2 0xCF8 PUSH2 0xFDB JUMP JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH2 0xD07 DUP2 DUP10 PUSH2 0xF0C JUMP JUMPDEST SWAP8 POP POP POP POP JUMPDEST DUP1 PUSH2 0xD17 DUP2 PUSH2 0xFF1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBEA JUMP JUMPDEST POP DUP1 DUP4 MSTORE POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH2 0xD58 DUP4 PUSH2 0xA58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xDBD DUP2 PUSH2 0xD87 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xDCD DUP2 PUSH2 0xD87 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDF5 DUP2 PUSH2 0xD87 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP1 DUP4 ADD DUP6 DUP5 MSTORE PUSH1 0x20 DUP3 DUP2 DUP7 ADD MSTORE DUP2 DUP7 MLOAD DUP1 DUP5 MSTORE PUSH1 0x60 DUP8 ADD SWAP2 POP DUP3 DUP9 ADD SWAP4 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xE9A JUMPI DUP6 MLOAD DUP5 DUP4 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0xE87 JUMPI DUP3 MLOAD DUP3 MSTORE SWAP2 DUP8 ADD SWAP2 SWAP1 DUP8 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xE6A JUMP JUMPDEST POP POP POP SWAP5 DUP5 ADD SWAP5 SWAP3 DUP7 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xE5D JUMP JUMPDEST POP SWAP2 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0xEC9 DUP2 PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0xEDA DUP2 PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0xEEB DUP2 PUSH2 0xD87 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF1F JUMPI PUSH2 0xF1F PUSH2 0xEF6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5E DUP5 PUSH2 0xF24 JUMP JUMPDEST SWAP3 POP PUSH2 0xF6C PUSH1 0x20 DUP6 ADD PUSH2 0xF24 JUMP JUMPDEST SWAP2 POP PUSH2 0xF7A PUSH1 0x40 DUP6 ADD PUSH2 0xF24 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0xFA5 JUMPI PUSH2 0xFA5 PUSH2 0xEF6 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xFC0 JUMPI PUSH2 0xFC0 PUSH2 0xEF6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1005 JUMPI PUSH2 0x1005 PUSH2 0xEF6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xC0 PUSH26 0x74E0CA26AB04DF6F1C457651F95DE2C214BFCD2E265A35DDF136 SDIV 0xCB PC PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        188,
        8823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "6": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "7": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "12": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "REVERT",
      "path": "13"
    },
    "16": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "17": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "POP",
      "path": "13"
    },
    "18": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "21": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "LT",
      "path": "13"
    },
    "22": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF5"
    },
    "25": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "26": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "29": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "SHR",
      "path": "13"
    },
    "32": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "33": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8C97F558"
    },
    "38": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "GT",
      "path": "13"
    },
    "39": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "43": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "44": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xDBAA0FC6"
    },
    "49": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "GT",
      "path": "13"
    },
    "50": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "54": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "55": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xDBAA0FC6"
    },
    "60": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "EQ",
      "path": "13"
    },
    "61": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2C9"
    },
    "64": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "65": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "66": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xDCA53B00"
    },
    "71": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "EQ",
      "path": "13"
    },
    "72": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2F0"
    },
    "75": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "76": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "77": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xE58E018E"
    },
    "82": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "EQ",
      "path": "13"
    },
    "83": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x31C"
    },
    "86": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "87": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "88": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFE9FBB80"
    },
    "93": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "EQ",
      "path": "13"
    },
    "94": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x33D"
    },
    "97": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "98": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "101": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "REVERT",
      "path": "13"
    },
    "102": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "103": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "104": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8C97F558"
    },
    "109": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "EQ",
      "path": "13"
    },
    "110": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x25C"
    },
    "113": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "114": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "115": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x9CAFA103"
    },
    "120": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "EQ",
      "path": "13"
    },
    "121": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x283"
    },
    "124": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "125": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "126": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x9F795125"
    },
    "131": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "EQ",
      "path": "13"
    },
    "132": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x296"
    },
    "135": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "136": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "137": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xC4903D5B"
    },
    "142": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "EQ",
      "path": "13"
    },
    "143": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x29E"
    },
    "146": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "147": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "150": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "REVERT",
      "path": "13"
    },
    "151": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "152": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "153": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x69B99261"
    },
    "158": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "GT",
      "path": "13"
    },
    "159": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "163": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "164": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x69B99261"
    },
    "169": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "EQ",
      "path": "13"
    },
    "170": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1A1"
    },
    "173": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "174": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "175": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x69BDF9E4"
    },
    "180": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "EQ",
      "path": "13"
    },
    "181": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1CD"
    },
    "184": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "185": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "186": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7DBEE7A3"
    },
    "191": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "EQ",
      "path": "13"
    },
    "192": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x202"
    },
    "195": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "196": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "197": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x86F69014"
    },
    "202": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "EQ",
      "path": "13"
    },
    "203": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x254"
    },
    "206": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "207": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "210": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "REVERT",
      "path": "13"
    },
    "211": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "212": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "213": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x2132C01"
    },
    "218": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "EQ",
      "path": "13"
    },
    "219": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFA"
    },
    "222": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "223": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "224": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xCEFF8C8"
    },
    "229": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "EQ",
      "path": "13"
    },
    "230": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10F"
    },
    "233": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "234": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "235": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x505A1B31"
    },
    "240": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "EQ",
      "path": "13"
    },
    "241": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x176"
    },
    "244": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "245": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "246": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "248": {
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "249": {
      "first_revert": true,
      "fn": null,
      "offset": [
        188,
        8823
      ],
      "op": "REVERT",
      "path": "13"
    },
    "250": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6571,
        8173
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "251": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6571,
        8173
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10D"
    },
    "254": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6571,
        8173
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x108"
    },
    "257": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6571,
        8173
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "258": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6571,
        8173
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "260": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6571,
        8173
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD9F"
    },
    "263": {
      "fn": "SimplePREApplication.bondOperator",
      "jump": "i",
      "offset": [
        6571,
        8173
      ],
      "op": "JUMP",
      "path": "13"
    },
    "264": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6571,
        8173
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "265": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6571,
        8173
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x350"
    },
    "268": {
      "fn": "SimplePREApplication.bondOperator",
      "jump": "i",
      "offset": [
        6571,
        8173
      ],
      "op": "JUMP",
      "path": "13"
    },
    "269": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6571,
        8173
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "270": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6571,
        8173
      ],
      "op": "STOP",
      "path": "13"
    },
    "271": {
      "offset": [
        1105,
        1172
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "272": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14C"
    },
    "275": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x11D"
    },
    "278": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "279": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "281": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDD8"
    },
    "284": {
      "fn": "SimplePREApplication.bondOperator",
      "jump": "i",
      "offset": [
        1105,
        1172
      ],
      "op": "JUMP",
      "path": "13"
    },
    "285": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "286": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "288": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "290": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "DUP2",
      "path": "13"
    },
    "291": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "292": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "293": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "294": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "DUP2",
      "path": "13"
    },
    "295": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "296": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "298": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "299": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "300": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "DUP1",
      "path": "13"
    },
    "301": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "302": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "304": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "305": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "306": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "ADD",
      "path": "13"
    },
    "307": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "314": {
      "op": "SHL"
    },
    "315": {
      "op": "SUB"
    },
    "316": {
      "offset": [
        1105,
        1172
      ],
      "op": "DUP3",
      "path": "13"
    },
    "317": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "AND",
      "path": "13"
    },
    "318": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "323": {
      "op": "SHL"
    },
    "324": {
      "offset": [
        1105,
        1172
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "325": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "DIV",
      "path": "13"
    },
    "326": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "328": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "AND",
      "path": "13"
    },
    "329": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "330": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "DUP4",
      "path": "13"
    },
    "331": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "JUMP",
      "path": "13"
    },
    "332": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "333": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "335": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "DUP1",
      "path": "13"
    },
    "336": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "343": {
      "op": "SHL"
    },
    "344": {
      "op": "SUB"
    },
    "345": {
      "op": "SWAP1"
    },
    "346": {
      "op": "SWAP5"
    },
    "347": {
      "op": "AND"
    },
    "348": {
      "op": "DUP5"
    },
    "349": {
      "op": "MSTORE"
    },
    "350": {
      "op": "SWAP2"
    },
    "351": {
      "op": "ISZERO"
    },
    "352": {
      "op": "ISZERO"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "355": {
      "op": "DUP5"
    },
    "356": {
      "op": "ADD"
    },
    "357": {
      "op": "MSTORE"
    },
    "358": {
      "op": "SWAP1"
    },
    "359": {
      "op": "DUP3"
    },
    "360": {
      "op": "ADD"
    },
    "361": {
      "op": "MSTORE"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "364": {
      "op": "ADD"
    },
    "365": {
      "offset": [
        1105,
        1172
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "366": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "368": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "369": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "DUP1",
      "path": "13"
    },
    "370": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "371": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "SUB",
      "path": "13"
    },
    "372": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "373": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        1105,
        1172
      ],
      "op": "RETURN",
      "path": "13"
    },
    "374": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5328,
        5498
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "375": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5328,
        5498
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x189"
    },
    "378": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5328,
        5498
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x184"
    },
    "381": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5328,
        5498
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "382": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5328,
        5498
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "384": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5328,
        5498
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDD8"
    },
    "387": {
      "fn": "SimplePREApplication.getBeneficiary",
      "jump": "i",
      "offset": [
        5328,
        5498
      ],
      "op": "JUMP",
      "path": "13"
    },
    "388": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5328,
        5498
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "389": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5328,
        5498
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7DC"
    },
    "392": {
      "fn": "SimplePREApplication.getBeneficiary",
      "jump": "i",
      "offset": [
        5328,
        5498
      ],
      "op": "JUMP",
      "path": "13"
    },
    "393": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5328,
        5498
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "394": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5328,
        5498
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "396": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5328,
        5498
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "403": {
      "op": "SHL"
    },
    "404": {
      "op": "SUB"
    },
    "405": {
      "op": "SWAP1"
    },
    "406": {
      "op": "SWAP2"
    },
    "407": {
      "op": "AND"
    },
    "408": {
      "op": "DUP2"
    },
    "409": {
      "op": "MSTORE"
    },
    "410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "412": {
      "op": "ADD"
    },
    "413": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5328,
        5498
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16D"
    },
    "416": {
      "op": "JUMP"
    },
    "417": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2799,
        2965
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "418": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2799,
        2965
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x189"
    },
    "421": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2799,
        2965
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1AF"
    },
    "424": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2799,
        2965
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "425": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2799,
        2965
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "427": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2799,
        2965
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDD8"
    },
    "430": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "jump": "i",
      "offset": [
        2799,
        2965
      ],
      "op": "JUMP",
      "path": "13"
    },
    "431": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2799,
        2965
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "438": {
      "op": "SHL"
    },
    "439": {
      "op": "SUB"
    },
    "440": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2912,
        2949
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 0
    },
    "441": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2912,
        2949
      ],
      "op": "DUP2",
      "path": "13"
    },
    "442": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2912,
        2949
      ],
      "op": "AND",
      "path": "13"
    },
    "443": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2886,
        2893
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "445": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2912,
        2949
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "446": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2912,
        2949
      ],
      "op": "DUP2",
      "path": "13"
    },
    "447": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2912,
        2949
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "448": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2912,
        2949
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "450": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2912,
        2949
      ],
      "op": "DUP2",
      "path": "13"
    },
    "451": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2912,
        2949
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "452": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2912,
        2949
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "453": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2912,
        2949
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "455": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2912,
        2949
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "456": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2912,
        2949
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "457": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2912,
        2958
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "458": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2912,
        2958
      ],
      "op": "AND",
      "path": "13"
    },
    "459": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2912,
        2958
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "460": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        2799,
        2965
      ],
      "op": "JUMP",
      "path": "13"
    },
    "461": {
      "offset": [
        1014,
        1057
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "462": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        1014,
        1057
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F4"
    },
    "465": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        1014,
        1057
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x0"
    },
    "498": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        1014,
        1057
      ],
      "op": "DUP2",
      "path": "13"
    },
    "499": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        1014,
        1057
      ],
      "op": "JUMP",
      "path": "13"
    },
    "500": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        1014,
        1057
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "501": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        1014,
        1057
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "503": {
      "fn": "SimplePREApplication.getOperatorFromStakingProvider",
      "offset": [
        1014,
        1057
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "504": {
      "op": "SWAP1"
    },
    "505": {
      "op": "DUP2"
    },
    "506": {
      "op": "MSTORE"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "509": {
      "op": "ADD"
    },
    "510": {
      "offset": [
        1014,
        1057
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16D"
    },
    "513": {
      "op": "JUMP"
    },
    "514": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        5907,
        6184
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "515": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        5907,
        6184
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x244"
    },
    "518": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        5907,
        6184
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x210"
    },
    "521": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        5907,
        6184
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "522": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        5907,
        6184
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "524": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        5907,
        6184
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDD8"
    },
    "527": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "jump": "i",
      "offset": [
        5907,
        6184
      ],
      "op": "JUMP",
      "path": "13"
    },
    "528": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        5907,
        6184
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "535": {
      "op": "SHL"
    },
    "536": {
      "op": "SUB"
    },
    "537": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6018,
        6057
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "538": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6018,
        6057
      ],
      "op": "DUP2",
      "path": "13"
    },
    "539": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6018,
        6057
      ],
      "op": "AND",
      "path": "13"
    },
    "540": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        5976,
        5980
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "542": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6018,
        6057
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "543": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6018,
        6057
      ],
      "op": "DUP2",
      "path": "13"
    },
    "544": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6018,
        6057
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "545": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6018,
        6046
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "547": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6018,
        6057
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "549": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6018,
        6057
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "550": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6018,
        6057
      ],
      "op": "DUP2",
      "path": "13"
    },
    "551": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6018,
        6057
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "552": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6018,
        6057
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "554": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6018,
        6057
      ],
      "op": "DUP1",
      "path": "13"
    },
    "555": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6018,
        6057
      ],
      "op": "DUP4",
      "path": "13"
    },
    "556": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6018,
        6057
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "557": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6018,
        6057
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "558": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6018,
        6057
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "559": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6018,
        6057
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "560": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6018,
        6057
      ],
      "op": "AND",
      "path": "13"
    },
    "561": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6102,
        6138
      ],
      "op": "DUP3",
      "path": "13"
    },
    "562": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6102,
        6138
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "563": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6102,
        6138
      ],
      "op": "DUP2",
      "path": "13"
    },
    "564": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6102,
        6138
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "565": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6102,
        6138
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "566": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6102,
        6138
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "567": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6155,
        6177
      ],
      "op": "SLOAD",
      "path": "13",
      "statement": 1
    },
    "568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "572": {
      "op": "SHL"
    },
    "573": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6155,
        6177
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "574": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6155,
        6177
      ],
      "op": "DIV",
      "path": "13"
    },
    "575": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6155,
        6177
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "577": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6155,
        6177
      ],
      "op": "AND",
      "path": "13"
    },
    "578": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        6155,
        6177
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "579": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        5907,
        6184
      ],
      "op": "JUMP",
      "path": "13"
    },
    "580": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        5907,
        6184
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "581": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        5907,
        6184
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "583": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        5907,
        6184
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "584": {
      "op": "SWAP1"
    },
    "585": {
      "op": "ISZERO"
    },
    "586": {
      "op": "ISZERO"
    },
    "587": {
      "op": "DUP2"
    },
    "588": {
      "op": "MSTORE"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "591": {
      "op": "ADD"
    },
    "592": {
      "fn": "SimplePREApplication.isOperatorConfirmed",
      "offset": [
        5907,
        6184
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16D"
    },
    "595": {
      "op": "JUMP"
    },
    "596": {
      "fn": "SimplePREApplication.getStakingProvidersLength",
      "offset": [
        6271,
        6387
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "597": {
      "fn": "SimplePREApplication.getStakingProvidersLength",
      "offset": [
        6357,
        6373
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 2,
      "value": "0x1"
    },
    "599": {
      "fn": "SimplePREApplication.getStakingProvidersLength",
      "offset": [
        6357,
        6380
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "600": {
      "fn": "SimplePREApplication.getStakingProvidersLength",
      "offset": [
        6271,
        6387
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F4"
    },
    "603": {
      "fn": "SimplePREApplication.getStakingProvidersLength",
      "offset": [
        6271,
        6387
      ],
      "op": "JUMP",
      "path": "13"
    },
    "604": {
      "offset": [
        967,
        1008
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "605": {
      "fn": "SimplePREApplication.getStakingProvidersLength",
      "offset": [
        967,
        1008
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F4"
    },
    "608": {
      "fn": "SimplePREApplication.getStakingProvidersLength",
      "offset": [
        967,
        1008
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x0"
    },
    "641": {
      "fn": "SimplePREApplication.getStakingProvidersLength",
      "offset": [
        967,
        1008
      ],
      "op": "DUP2",
      "path": "13"
    },
    "642": {
      "fn": "SimplePREApplication.getStakingProvidersLength",
      "offset": [
        967,
        1008
      ],
      "op": "JUMP",
      "path": "13"
    },
    "643": {
      "offset": [
        1178,
        1211
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "644": {
      "fn": "SimplePREApplication.getStakingProvidersLength",
      "offset": [
        1178,
        1211
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x189"
    },
    "647": {
      "fn": "SimplePREApplication.getStakingProvidersLength",
      "offset": [
        1178,
        1211
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x291"
    },
    "650": {
      "fn": "SimplePREApplication.getStakingProvidersLength",
      "offset": [
        1178,
        1211
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "651": {
      "fn": "SimplePREApplication.getStakingProvidersLength",
      "offset": [
        1178,
        1211
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "653": {
      "fn": "SimplePREApplication.getStakingProvidersLength",
      "offset": [
        1178,
        1211
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDFC"
    },
    "656": {
      "fn": "SimplePREApplication.getStakingProvidersLength",
      "jump": "i",
      "offset": [
        1178,
        1211
      ],
      "op": "JUMP",
      "path": "13"
    },
    "657": {
      "fn": "SimplePREApplication.getStakingProvidersLength",
      "offset": [
        1178,
        1211
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "658": {
      "fn": "SimplePREApplication.getStakingProvidersLength",
      "offset": [
        1178,
        1211
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x873"
    },
    "661": {
      "fn": "SimplePREApplication.getStakingProvidersLength",
      "jump": "i",
      "offset": [
        1178,
        1211
      ],
      "op": "JUMP",
      "path": "13"
    },
    "662": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8240,
        8820
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "663": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8240,
        8820
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10D"
    },
    "666": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8240,
        8820
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x89D"
    },
    "669": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "jump": "i",
      "offset": [
        8240,
        8820
      ],
      "op": "JUMP",
      "path": "13"
    },
    "670": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3049,
        3288
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "671": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3049,
        3288
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2B1"
    },
    "674": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3049,
        3288
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2AC"
    },
    "677": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3049,
        3288
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "678": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3049,
        3288
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "680": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3049,
        3288
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDD8"
    },
    "683": {
      "fn": "SimplePREApplication.authorizedStake",
      "jump": "i",
      "offset": [
        3049,
        3288
      ],
      "op": "JUMP",
      "path": "13"
    },
    "684": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3049,
        3288
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "685": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3049,
        3288
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA58"
    },
    "688": {
      "fn": "SimplePREApplication.authorizedStake",
      "jump": "i",
      "offset": [
        3049,
        3288
      ],
      "op": "JUMP",
      "path": "13"
    },
    "689": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3049,
        3288
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "690": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3049,
        3288
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "692": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3049,
        3288
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "697": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "699": {
      "op": "SHL"
    },
    "700": {
      "op": "SUB"
    },
    "701": {
      "op": "SWAP1"
    },
    "702": {
      "op": "SWAP2"
    },
    "703": {
      "op": "AND"
    },
    "704": {
      "op": "DUP2"
    },
    "705": {
      "op": "MSTORE"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "708": {
      "op": "ADD"
    },
    "709": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3049,
        3288
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16D"
    },
    "712": {
      "op": "JUMP"
    },
    "713": {
      "offset": [
        1064,
        1098
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "714": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        1064,
        1098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x189"
    },
    "717": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        1064,
        1098
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x0"
    },
    "750": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        1064,
        1098
      ],
      "op": "DUP2",
      "path": "13"
    },
    "751": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        1064,
        1098
      ],
      "op": "JUMP",
      "path": "13"
    },
    "752": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2567,
        2716
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "753": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2567,
        2716
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x189"
    },
    "756": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2567,
        2716
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2FE"
    },
    "759": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2567,
        2716
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "760": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2567,
        2716
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "762": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2567,
        2716
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDD8"
    },
    "765": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "jump": "i",
      "offset": [
        2567,
        2716
      ],
      "op": "JUMP",
      "path": "13"
    },
    "766": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2567,
        2716
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "771": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "773": {
      "op": "SHL"
    },
    "774": {
      "op": "SUB"
    },
    "775": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2670,
        2709
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 3
    },
    "776": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2670,
        2709
      ],
      "op": "DUP2",
      "path": "13"
    },
    "777": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2670,
        2709
      ],
      "op": "AND",
      "path": "13"
    },
    "778": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2644,
        2651
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "780": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2670,
        2709
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "781": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2670,
        2709
      ],
      "op": "DUP2",
      "path": "13"
    },
    "782": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2670,
        2709
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "783": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2670,
        2698
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "785": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2670,
        2709
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "787": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2670,
        2709
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "788": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2670,
        2709
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "790": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2670,
        2709
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "791": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2670,
        2709
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "792": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2670,
        2709
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "793": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2670,
        2709
      ],
      "op": "AND",
      "path": "13"
    },
    "794": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2670,
        2709
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "795": {
      "fn": "SimplePREApplication.stakingProviderFromOperator",
      "offset": [
        2567,
        2716
      ],
      "op": "JUMP",
      "path": "13"
    },
    "796": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "797": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x32F"
    },
    "800": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x32A"
    },
    "803": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "804": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "806": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE15"
    },
    "809": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "jump": "i",
      "offset": [
        3926,
        5241
      ],
      "op": "JUMP",
      "path": "13"
    },
    "810": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "811": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB10"
    },
    "814": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "jump": "i",
      "offset": [
        3926,
        5241
      ],
      "op": "JUMP",
      "path": "13"
    },
    "815": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "816": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "818": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "819": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16D"
    },
    "822": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "823": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "824": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "825": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE37"
    },
    "828": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "jump": "i",
      "offset": [
        3926,
        5241
      ],
      "op": "JUMP",
      "path": "13"
    },
    "829": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5607,
        5759
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "830": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5607,
        5759
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x244"
    },
    "833": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5607,
        5759
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x34B"
    },
    "836": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5607,
        5759
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "837": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5607,
        5759
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "839": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5607,
        5759
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDD8"
    },
    "842": {
      "fn": "SimplePREApplication.isAuthorized",
      "jump": "i",
      "offset": [
        5607,
        5759
      ],
      "op": "JUMP",
      "path": "13"
    },
    "843": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5607,
        5759
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "844": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5607,
        5759
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD2C"
    },
    "847": {
      "fn": "SimplePREApplication.isAuthorized",
      "jump": "i",
      "offset": [
        5607,
        5759
      ],
      "op": "JUMP",
      "path": "13"
    },
    "848": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6571,
        8173
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "849": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6682,
        6698
      ],
      "op": "DUP2",
      "path": "13"
    },
    "850": {
      "offset": [
        2157,
        2187
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x35A"
    },
    "853": {
      "offset": [
        2170,
        2186
      ],
      "op": "DUP2",
      "path": "13"
    },
    "854": {
      "offset": [
        2157,
        2169
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD2C"
    },
    "857": {
      "jump": "i",
      "offset": [
        2157,
        2187
      ],
      "op": "JUMP",
      "path": "13"
    },
    "858": {
      "branch": 32,
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2157,
        2187
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "859": {
      "offset": [
        2149,
        2213
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3A3"
    },
    "862": {
      "branch": 32,
      "offset": [
        2149,
        2213
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "863": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2149,
        2213
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "865": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2149,
        2213
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "866": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "870": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "872": {
      "op": "SHL"
    },
    "873": {
      "offset": [
        2149,
        2213
      ],
      "op": "DUP2",
      "path": "13"
    },
    "874": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2149,
        2213
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "877": {
      "offset": [
        2149,
        2213
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "879": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2149,
        2213
      ],
      "op": "DUP3",
      "path": "13"
    },
    "880": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2149,
        2213
      ],
      "op": "ADD",
      "path": "13"
    },
    "881": {
      "op": "MSTORE"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "886": {
      "op": "DUP3"
    },
    "887": {
      "op": "ADD"
    },
    "888": {
      "op": "MSTORE"
    },
    "889": {
      "op": "PUSH21",
      "value": "0x2737BA1037BBB732B91037B910383937BB34B232B9"
    },
    "911": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "913": {
      "op": "SHL"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "916": {
      "op": "DUP3"
    },
    "917": {
      "op": "ADD"
    },
    "918": {
      "op": "MSTORE"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "921": {
      "op": "ADD"
    },
    "922": {
      "offset": [
        2149,
        2213
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "923": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2149,
        2213
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "925": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2149,
        2213
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "926": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2149,
        2213
      ],
      "op": "DUP1",
      "path": "13"
    },
    "927": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2149,
        2213
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "928": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2149,
        2213
      ],
      "op": "SUB",
      "path": "13"
    },
    "929": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2149,
        2213
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "930": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2149,
        2213
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "13"
    },
    "931": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2149,
        2213
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "938": {
      "op": "SHL"
    },
    "939": {
      "op": "SUB"
    },
    "940": {
      "offset": [
        2227,
        2257
      ],
      "op": "DUP2",
      "path": "13"
    },
    "941": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2227,
        2257
      ],
      "op": "AND",
      "path": "13"
    },
    "942": {
      "offset": [
        2247,
        2257
      ],
      "op": "CALLER",
      "path": "13"
    },
    "943": {
      "offset": [
        2227,
        2257
      ],
      "op": "EQ",
      "path": "13"
    },
    "944": {
      "offset": [
        2223,
        2405
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x499"
    },
    "947": {
      "offset": [
        2223,
        2405
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "948": {
      "offset": [
        2293,
        2327
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "950": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "951": {
      "op": "PUSH4",
      "value": "0x2DE94807"
    },
    "956": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "958": {
      "op": "SHL"
    },
    "959": {
      "offset": [
        2293,
        2327
      ],
      "op": "DUP2",
      "path": "13"
    },
    "960": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "967": {
      "op": "SHL"
    },
    "968": {
      "op": "SUB"
    },
    "969": {
      "op": "DUP3"
    },
    "970": {
      "op": "DUP2"
    },
    "971": {
      "op": "AND"
    },
    "972": {
      "offset": [
        2293,
        2327
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "974": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "DUP4",
      "path": "13"
    },
    "975": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "ADD",
      "path": "13"
    },
    "976": {
      "op": "MSTORE"
    },
    "977": {
      "offset": [
        2274,
        2287
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "979": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2274,
        2287
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "980": {
      "offset": [
        2293,
        2301
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x0"
    },
    "1013": {
      "offset": [
        2293,
        2309
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1014": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2309
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1015": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2309
      ],
      "op": "AND",
      "path": "13"
    },
    "1016": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2309
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1017": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2309
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x2DE94807"
    },
    "1022": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2309
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1025": {
      "op": "ADD"
    },
    "1026": {
      "offset": [
        2293,
        2327
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "1028": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1030": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1031": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1032": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1033": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "SUB",
      "path": "13"
    },
    "1034": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1035": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "DUP7",
      "path": "13"
    },
    "1036": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "GAS",
      "path": "13"
    },
    "1037": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "1038": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1039": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1040": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1041": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x41E"
    },
    "1044": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1045": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1046": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1048": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1049": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "1050": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1051": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1053": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1054": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1055": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "POP",
      "path": "13"
    },
    "1056": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "POP",
      "path": "13"
    },
    "1057": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "POP",
      "path": "13"
    },
    "1058": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "POP",
      "path": "13"
    },
    "1059": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1061": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1062": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1063": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1065": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "NOT",
      "path": "13"
    },
    "1066": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1068": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1069": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "ADD",
      "path": "13"
    },
    "1070": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "AND",
      "path": "13"
    },
    "1071": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1072": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "ADD",
      "path": "13"
    },
    "1073": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1074": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1076": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1077": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "POP",
      "path": "13"
    },
    "1078": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1079": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "ADD",
      "path": "13"
    },
    "1080": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1081": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x442"
    },
    "1084": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1085": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1086": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xEA9"
    },
    "1089": {
      "fn": "SimplePREApplication.bondOperator",
      "jump": "i",
      "offset": [
        2293,
        2327
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1090": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2293,
        2327
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1091": {
      "op": "POP"
    },
    "1092": {
      "offset": [
        2273,
        2327
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1093": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2273,
        2327
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1094": {
      "op": "POP"
    },
    "1095": {
      "op": "POP"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1102": {
      "op": "SHL"
    },
    "1103": {
      "op": "SUB"
    },
    "1104": {
      "offset": [
        2349,
        2368
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1105": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2349,
        2368
      ],
      "op": "AND",
      "path": "13"
    },
    "1106": {
      "offset": [
        2358,
        2368
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1107": {
      "offset": [
        2349,
        2368
      ],
      "op": "EQ",
      "path": "13"
    },
    "1108": {
      "offset": [
        2341,
        2394
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x497"
    },
    "1111": {
      "offset": [
        2341,
        2394
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1112": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2341,
        2394
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1114": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2341,
        2394
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1115": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1121": {
      "op": "SHL"
    },
    "1122": {
      "offset": [
        2341,
        2394
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1123": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2341,
        2394
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1126": {
      "offset": [
        2341,
        2394
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1128": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2341,
        2394
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1129": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        2341,
        2394
      ],
      "op": "ADD",
      "path": "13"
    },
    "1130": {
      "op": "MSTORE"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1135": {
      "op": "DUP3"
    },
    "1136": {
      "op": "ADD"
    },
    "1137": {
      "op": "MSTORE"
    },
    "1138": {
      "op": "PUSH21",
      "value": "0x2737BA1037BBB732B91037B910383937BB34B232B9"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "1162": {
      "op": "SHL"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1165": {
      "op": "DUP3"
    },
    "1166": {
      "op": "ADD"
    },
    "1167": {
      "op": "MSTORE"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1170": {
      "op": "ADD"
    },
    "1171": {
      "offset": [
        2341,
        2394
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x39A"
    },
    "1174": {
      "op": "JUMP"
    },
    "1175": {
      "offset": [
        2341,
        2394
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1176": {
      "offset": [
        2259,
        2405
      ],
      "op": "POP",
      "path": "13"
    },
    "1177": {
      "offset": [
        2223,
        2405
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1184": {
      "op": "SHL"
    },
    "1185": {
      "op": "SUB"
    },
    "1186": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6749,
        6786
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1187": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6749,
        6786
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1188": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6749,
        6786
      ],
      "op": "AND",
      "path": "13"
    },
    "1189": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6714,
        6746
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1191": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6749,
        6786
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1192": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6749,
        6786
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1193": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6749,
        6786
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1194": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6749,
        6786
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1196": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6749,
        6786
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1197": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6749,
        6786
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1198": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6749,
        6786
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1199": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6749,
        6786
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1201": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6749,
        6786
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1202": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6749,
        6786
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1203": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6817,
        6830
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 4
    },
    "1204": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6817,
        6830
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1205": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6749,
        6786
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1206": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6749,
        6786
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1207": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6804,
        6830
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1208": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6804,
        6830
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1209": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6804,
        6830
      ],
      "op": "AND",
      "path": "13"
    },
    "1210": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6817,
        6830
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1211": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6817,
        6830
      ],
      "op": "AND",
      "path": "13"
    },
    "1212": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6804,
        6830
      ],
      "op": "EQ",
      "path": "13"
    },
    "1213": {
      "branch": 33,
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6804,
        6830
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1214": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6796,
        6890
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x52F"
    },
    "1217": {
      "branch": 33,
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6796,
        6890
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1218": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6796,
        6890
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1220": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6796,
        6890
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1221": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1227": {
      "op": "SHL"
    },
    "1228": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6796,
        6890
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1229": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6796,
        6890
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1232": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6796,
        6890
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1234": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6796,
        6890
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1235": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6796,
        6890
      ],
      "op": "ADD",
      "path": "13"
    },
    "1236": {
      "op": "MSTORE"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x37"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1241": {
      "op": "DUP3"
    },
    "1242": {
      "op": "ADD"
    },
    "1243": {
      "op": "MSTORE"
    },
    "1244": {
      "op": "PUSH32",
      "value": "0x537065636966696564206F70657261746F7220697320616C726561647920626F"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1279": {
      "op": "DUP3"
    },
    "1280": {
      "op": "ADD"
    },
    "1281": {
      "op": "MSTORE"
    },
    "1282": {
      "op": "PUSH32",
      "value": "0x6E646564207769746820746869732070726F7669646572000000000000000000"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1317": {
      "op": "DUP3"
    },
    "1318": {
      "op": "ADD"
    },
    "1319": {
      "op": "MSTORE"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1322": {
      "op": "ADD"
    },
    "1323": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6796,
        6890
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x39A"
    },
    "1326": {
      "op": "JUMP"
    },
    "1327": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6796,
        6890
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1328": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6950,
        6963
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1329": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6950,
        6963
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1336": {
      "op": "SHL"
    },
    "1337": {
      "op": "SUB"
    },
    "1338": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6950,
        6963
      ],
      "op": "AND",
      "path": "13"
    },
    "1339": {
      "branch": 34,
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6950,
        6977
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1340": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6946,
        7308
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5F8"
    },
    "1343": {
      "branch": 34,
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6946,
        7308
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1344": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7067,
        7085
      ],
      "op": "PUSH32",
      "path": "13",
      "statement": 5,
      "value": "0x0"
    },
    "1377": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7037,
        7041
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1378": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7037,
        7064
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1380": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7037,
        7064
      ],
      "op": "ADD",
      "path": "13"
    },
    "1381": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7037,
        7064
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1382": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7037,
        7085
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x56F"
    },
    "1385": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7037,
        7085
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1386": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7037,
        7085
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1387": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7037,
        7085
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF0C"
    },
    "1390": {
      "fn": "SimplePREApplication.bondOperator",
      "jump": "i",
      "offset": [
        7037,
        7085
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1391": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7037,
        7085
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1392": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7018,
        7033
      ],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "1393": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7018,
        7085
      ],
      "op": "LT",
      "path": "13"
    },
    "1394": {
      "branch": 35,
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7018,
        7085
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1395": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6993,
        7160
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5D0"
    },
    "1398": {
      "branch": 35,
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6993,
        7160
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1399": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6993,
        7160
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1401": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6993,
        7160
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1402": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1408": {
      "op": "SHL"
    },
    "1409": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6993,
        7160
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1410": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6993,
        7160
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1413": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6993,
        7160
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1415": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6993,
        7160
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1416": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6993,
        7160
      ],
      "op": "ADD",
      "path": "13"
    },
    "1417": {
      "op": "MSTORE"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1422": {
      "op": "DUP3"
    },
    "1423": {
      "op": "ADD"
    },
    "1424": {
      "op": "MSTORE"
    },
    "1425": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F7567682074696D652070617373656420746F206368616E6765"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1460": {
      "op": "DUP3"
    },
    "1461": {
      "op": "ADD"
    },
    "1462": {
      "op": "MSTORE"
    },
    "1463": {
      "op": "PUSH9",
      "value": "0x1037B832B930BA37B9"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1475": {
      "op": "SHL"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1478": {
      "op": "DUP3"
    },
    "1479": {
      "op": "ADD"
    },
    "1480": {
      "op": "MSTORE"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1483": {
      "op": "ADD"
    },
    "1484": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6993,
        7160
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x39A"
    },
    "1487": {
      "op": "JUMP"
    },
    "1488": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6993,
        7160
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1489": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7270,
        7283
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 6
    },
    "1490": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7270,
        7283
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1497": {
      "op": "SHL"
    },
    "1498": {
      "op": "SUB"
    },
    "1499": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7270,
        7283
      ],
      "op": "AND",
      "path": "13"
    },
    "1500": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7295,
        7296
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1502": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7241,
        7284
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1503": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7241,
        7284
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1504": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7241,
        7284
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1505": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7241,
        7269
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1507": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7241,
        7284
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1509": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7241,
        7284
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1510": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7241,
        7284
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1512": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7241,
        7284
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1513": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7241,
        7284
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1514": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7241,
        7297
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1515": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7241,
        7297
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "op": "SUB"
    },
    "1524": {
      "op": "NOT"
    },
    "1525": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7241,
        7297
      ],
      "op": "AND",
      "path": "13"
    },
    "1526": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7241,
        7297
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1527": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7241,
        7297
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1528": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6946,
        7308
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1535": {
      "op": "SHL"
    },
    "1536": {
      "op": "SUB"
    },
    "1537": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7322,
        7345
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1538": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7322,
        7345
      ],
      "op": "AND",
      "path": "13"
    },
    "1539": {
      "branch": 36,
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7322,
        7345
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1540": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7318,
        7781
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x727"
    },
    "1543": {
      "branch": 36,
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7318,
        7781
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1550": {
      "op": "SHL"
    },
    "1551": {
      "op": "SUB"
    },
    "1552": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7369,
        7408
      ],
      "op": "DUP4",
      "path": "13",
      "statement": 7
    },
    "1553": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7369,
        7408
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1554": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7369,
        7408
      ],
      "op": "AND",
      "path": "13"
    },
    "1555": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7420,
        7421
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1557": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7369,
        7408
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1558": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7369,
        7408
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1559": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7369,
        7408
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1560": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7369,
        7397
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1562": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7369,
        7408
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1564": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7369,
        7408
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1565": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7369,
        7408
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1567": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7369,
        7408
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1568": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7369,
        7408
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1569": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7369,
        7408
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1570": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7369,
        7408
      ],
      "op": "AND",
      "path": "13"
    },
    "1571": {
      "branch": 37,
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7369,
        7422
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1572": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7361,
        7463
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x67B"
    },
    "1575": {
      "branch": 37,
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7361,
        7463
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1576": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7361,
        7463
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1578": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7361,
        7463
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1579": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1585": {
      "op": "SHL"
    },
    "1586": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7361,
        7463
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1587": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7361,
        7463
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1590": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7361,
        7463
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1592": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7361,
        7463
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1593": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7361,
        7463
      ],
      "op": "ADD",
      "path": "13"
    },
    "1594": {
      "op": "MSTORE"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1597": {
      "op": "DUP1"
    },
    "1598": {
      "op": "DUP3"
    },
    "1599": {
      "op": "ADD"
    },
    "1600": {
      "op": "MSTORE"
    },
    "1601": {
      "op": "PUSH32",
      "value": "0x537065636966696564206F70657261746F7220697320616C726561647920696E"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1636": {
      "op": "DUP3"
    },
    "1637": {
      "op": "ADD"
    },
    "1638": {
      "op": "MSTORE"
    },
    "1639": {
      "op": "PUSH4",
      "value": "0x20757365"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1646": {
      "op": "SHL"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1649": {
      "op": "DUP3"
    },
    "1650": {
      "op": "ADD"
    },
    "1651": {
      "op": "MSTORE"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1654": {
      "op": "ADD"
    },
    "1655": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7361,
        7463
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x39A"
    },
    "1658": {
      "op": "JUMP"
    },
    "1659": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7361,
        7463
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1660": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7515,
        7531
      ],
      "op": "DUP4",
      "path": "13",
      "statement": 8
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1667": {
      "op": "SHL"
    },
    "1668": {
      "op": "SUB"
    },
    "1669": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7502,
        7531
      ],
      "op": "AND",
      "path": "13"
    },
    "1670": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7502,
        7511
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1677": {
      "op": "SHL"
    },
    "1678": {
      "op": "SUB"
    },
    "1679": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7502,
        7531
      ],
      "op": "AND",
      "path": "13"
    },
    "1680": {
      "branch": 38,
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7502,
        7531
      ],
      "op": "EQ",
      "path": "13"
    },
    "1681": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7502,
        7574
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1682": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7502,
        7574
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "1685": {
      "branch": 38,
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7502,
        7574
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1686": {
      "op": "POP"
    },
    "1687": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7572,
        7573
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1689": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7535,
        7560
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6A1"
    },
    "1692": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7550,
        7559
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1693": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7535,
        7549
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7DC"
    },
    "1696": {
      "fn": "SimplePREApplication.bondOperator",
      "jump": "i",
      "offset": [
        7535,
        7560
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1697": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7535,
        7560
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1704": {
      "op": "SHL"
    },
    "1705": {
      "op": "SUB"
    },
    "1706": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7535,
        7574
      ],
      "op": "AND",
      "path": "13"
    },
    "1707": {
      "branch": 39,
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7535,
        7574
      ],
      "op": "EQ",
      "path": "13"
    },
    "1708": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7502,
        7574
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1709": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7477,
        7640
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6F8"
    },
    "1712": {
      "branch": 39,
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7477,
        7640
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1713": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7477,
        7640
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1715": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7477,
        7640
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1716": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1722": {
      "op": "SHL"
    },
    "1723": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7477,
        7640
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1724": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7477,
        7640
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1727": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7477,
        7640
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1729": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7477,
        7640
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1730": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7477,
        7640
      ],
      "op": "ADD",
      "path": "13"
    },
    "1731": {
      "op": "DUP2"
    },
    "1732": {
      "op": "SWAP1"
    },
    "1733": {
      "op": "MSTORE"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1736": {
      "op": "DUP3"
    },
    "1737": {
      "op": "ADD"
    },
    "1738": {
      "op": "MSTORE"
    },
    "1739": {
      "op": "PUSH32",
      "value": "0x537065636966696564206F70657261746F7220697320612070726F7669646572"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1774": {
      "op": "DUP3"
    },
    "1775": {
      "op": "ADD"
    },
    "1776": {
      "op": "MSTORE"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1779": {
      "op": "ADD"
    },
    "1780": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7477,
        7640
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x39A"
    },
    "1783": {
      "op": "JUMP"
    },
    "1784": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7477,
        7640
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1791": {
      "op": "SHL"
    },
    "1792": {
      "op": "SUB"
    },
    "1793": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7751
      ],
      "op": "DUP4",
      "path": "13",
      "statement": 9
    },
    "1794": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7751
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1795": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7751
      ],
      "op": "AND",
      "path": "13"
    },
    "1796": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7751
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1798": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7751
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1799": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7751
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1800": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7751
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1801": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7740
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1803": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7751
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1805": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7751
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1806": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7751
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1808": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7751
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1809": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7751
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1810": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7770
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1811": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7770
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1818": {
      "op": "SHL"
    },
    "1819": {
      "op": "SUB"
    },
    "1820": {
      "op": "NOT"
    },
    "1821": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7770
      ],
      "op": "AND",
      "path": "13"
    },
    "1822": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7770
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1823": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7770
      ],
      "op": "DUP7",
      "path": "13"
    },
    "1824": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7770
      ],
      "op": "AND",
      "path": "13"
    },
    "1825": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7770
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1826": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7770
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1827": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7770
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1828": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7770
      ],
      "op": "OR",
      "path": "13"
    },
    "1829": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7770
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1830": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7712,
        7770
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1831": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7318,
        7781
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1832": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7795,
        7822
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1834": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7795,
        7822
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1835": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7795,
        7822
      ],
      "op": "ADD",
      "path": "13"
    },
    "1836": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7795,
        7822
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1837": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7791,
        7893
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x77B"
    },
    "1840": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7791,
        7893
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1841": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7859
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 10,
      "value": "0x1"
    },
    "1843": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1844": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1845": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1846": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1847": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "ADD",
      "path": "13"
    },
    "1848": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1849": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1852": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1853": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1854": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1855": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1856": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "1889": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "ADD",
      "path": "13"
    },
    "1890": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1891": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1898": {
      "op": "SHL"
    },
    "1899": {
      "op": "SUB"
    },
    "1900": {
      "op": "NOT"
    },
    "1901": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "AND",
      "path": "13"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1908": {
      "op": "SHL"
    },
    "1909": {
      "op": "SUB"
    },
    "1910": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "DUP7",
      "path": "13"
    },
    "1911": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "AND",
      "path": "13"
    },
    "1912": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "OR",
      "path": "13"
    },
    "1913": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1914": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7843,
        7882
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1915": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7791,
        7893
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1916": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7971,
        7996
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 11
    },
    "1917": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7971,
        7996
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1918": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8036,
        8051
      ],
      "op": "TIMESTAMP",
      "path": "13",
      "statement": 12
    },
    "1919": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7971,
        7996
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1921": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8006,
        8033
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1922": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8006,
        8033
      ],
      "op": "ADD",
      "path": "13"
    },
    "1923": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8006,
        8051
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1924": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8006,
        8051
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1925": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8006,
        8051
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1932": {
      "op": "SHL"
    },
    "1933": {
      "op": "SUB"
    },
    "1934": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7971,
        7996
      ],
      "op": "DUP6",
      "path": "13"
    },
    "1935": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7971,
        7996
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1936": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        7971,
        7996
      ],
      "op": "AND",
      "path": "13"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1943": {
      "op": "SHL"
    },
    "1944": {
      "op": "SUB"
    },
    "1945": {
      "op": "NOT"
    },
    "1946": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8061,
        8091
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 13
    },
    "1947": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8061,
        8091
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1948": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8061,
        8091
      ],
      "op": "AND",
      "path": "13"
    },
    "1949": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8061,
        8091
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1950": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8061,
        8091
      ],
      "op": "OR",
      "path": "13"
    },
    "1951": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8061,
        8091
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1952": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8061,
        8091
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1953": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8106,
        8166
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 14,
      "value": "0x40"
    },
    "1955": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8106,
        8166
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1956": {
      "op": "SWAP2"
    },
    "1957": {
      "op": "DUP3"
    },
    "1958": {
      "op": "MSTORE"
    },
    "1959": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8106,
        8166
      ],
      "op": "DUP7",
      "path": "13"
    },
    "1960": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8106,
        8166
      ],
      "op": "AND",
      "path": "13"
    },
    "1961": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8106,
        8166
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1962": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8106,
        8166
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x8867FAD28CAC2AF93E4E51DB79555BF60310E6C11E5987987BE9D8ECEDB2421"
    },
    "1995": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8106,
        8166
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1998": {
      "op": "ADD"
    },
    "1999": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8106,
        8166
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2001": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8106,
        8166
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2002": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8106,
        8166
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2003": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8106,
        8166
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2004": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8106,
        8166
      ],
      "op": "SUB",
      "path": "13"
    },
    "2005": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8106,
        8166
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2006": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        8106,
        8166
      ],
      "op": "LOG3",
      "path": "13"
    },
    "2007": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6704,
        8173
      ],
      "op": "POP",
      "path": "13"
    },
    "2008": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6571,
        8173
      ],
      "op": "POP",
      "path": "13"
    },
    "2009": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6571,
        8173
      ],
      "op": "POP",
      "path": "13"
    },
    "2010": {
      "fn": "SimplePREApplication.bondOperator",
      "offset": [
        6571,
        8173
      ],
      "op": "POP",
      "path": "13"
    },
    "2011": {
      "fn": "SimplePREApplication.bondOperator",
      "jump": "o",
      "offset": [
        6571,
        8173
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2012": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5328,
        5498
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2013": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 15,
      "value": "0x40"
    },
    "2015": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2016": {
      "op": "PUSH4",
      "value": "0x2DE94807"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2023": {
      "op": "SHL"
    },
    "2024": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2025": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2032": {
      "op": "SHL"
    },
    "2033": {
      "op": "SUB"
    },
    "2034": {
      "op": "DUP3"
    },
    "2035": {
      "op": "DUP2"
    },
    "2036": {
      "op": "AND"
    },
    "2037": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2039": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2040": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "ADD",
      "path": "13"
    },
    "2041": {
      "op": "MSTORE"
    },
    "2042": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5399,
        5426
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2044": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5399,
        5426
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2045": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5465
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x0"
    },
    "2078": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5473
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2079": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5473
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2080": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5473
      ],
      "op": "AND",
      "path": "13"
    },
    "2081": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5473
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2082": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5473
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x2DE94807"
    },
    "2087": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5473
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2090": {
      "op": "ADD"
    },
    "2091": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "2093": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2095": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2096": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2097": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2098": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "SUB",
      "path": "13"
    },
    "2099": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2100": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2101": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "GAS",
      "path": "13"
    },
    "2102": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "2103": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2104": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2105": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2106": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x847"
    },
    "2109": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2110": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2111": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2113": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2114": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2115": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2116": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2118": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2119": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2120": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "POP",
      "path": "13"
    },
    "2121": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "POP",
      "path": "13"
    },
    "2122": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "POP",
      "path": "13"
    },
    "2123": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "POP",
      "path": "13"
    },
    "2124": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2126": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2127": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2128": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2130": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "NOT",
      "path": "13"
    },
    "2131": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2133": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2134": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "ADD",
      "path": "13"
    },
    "2135": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "AND",
      "path": "13"
    },
    "2136": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2137": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "ADD",
      "path": "13"
    },
    "2138": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2139": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2141": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2142": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "POP",
      "path": "13"
    },
    "2143": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2144": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "ADD",
      "path": "13"
    },
    "2145": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2146": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x86B"
    },
    "2149": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2150": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2151": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xEA9"
    },
    "2154": {
      "fn": "SimplePREApplication.getBeneficiary",
      "jump": "i",
      "offset": [
        5457,
        5491
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2155": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5457,
        5491
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2156": {
      "op": "POP"
    },
    "2157": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5438,
        5491
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2158": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        5328,
        5498
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2159": {
      "op": "POP"
    },
    "2160": {
      "op": "POP"
    },
    "2161": {
      "op": "POP"
    },
    "2162": {
      "fn": "SimplePREApplication.getBeneficiary",
      "jump": "o",
      "offset": [
        5328,
        5498
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2163": {
      "offset": [
        1178,
        1211
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2164": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2166": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2167": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2168": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2169": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2170": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "LT",
      "path": "13"
    },
    "2171": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x883"
    },
    "2174": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2175": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2177": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2178": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2179": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2180": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2182": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2183": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2184": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2185": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2187": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2188": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2189": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2190": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "ADD",
      "path": "13"
    },
    "2191": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2198": {
      "op": "SHL"
    },
    "2199": {
      "op": "SUB"
    },
    "2200": {
      "offset": [
        1178,
        1211
      ],
      "op": "AND",
      "path": "13"
    },
    "2201": {
      "fn": "SimplePREApplication.getBeneficiary",
      "offset": [
        1178,
        1211
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2202": {
      "op": "POP"
    },
    "2203": {
      "offset": [
        1178,
        1211
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2204": {
      "fn": "SimplePREApplication.getBeneficiary",
      "jump": "o",
      "offset": [
        1178,
        1211
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2205": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8240,
        8820
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2206": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8348,
        8358
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2207": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8293,
        8316
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2209": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8319,
        8359
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2210": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8319,
        8359
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2211": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8319,
        8359
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2212": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8319,
        8347
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2214": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8319,
        8359
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2216": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8319,
        8359
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2217": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8319,
        8359
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2219": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8319,
        8359
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2220": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8319,
        8359
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2221": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8319,
        8359
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2228": {
      "op": "SHL"
    },
    "2229": {
      "op": "SUB"
    },
    "2230": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8319,
        8359
      ],
      "op": "AND",
      "path": "13"
    },
    "2231": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8377,
        8406
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 16,
      "value": "0x8BF"
    },
    "2234": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8319,
        8359
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2235": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8377,
        8389
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD2C"
    },
    "2238": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "jump": "i",
      "offset": [
        8377,
        8406
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2239": {
      "branch": 40,
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8377,
        8406
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2240": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8369,
        8448
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x919"
    },
    "2243": {
      "branch": 40,
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8369,
        8448
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2244": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8369,
        8448
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2246": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8369,
        8448
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2247": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2253": {
      "op": "SHL"
    },
    "2254": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8369,
        8448
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2255": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8369,
        8448
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2258": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8369,
        8448
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2260": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8369,
        8448
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2261": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8369,
        8448
      ],
      "op": "ADD",
      "path": "13"
    },
    "2262": {
      "op": "MSTORE"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2267": {
      "op": "DUP3"
    },
    "2268": {
      "op": "ADD"
    },
    "2269": {
      "op": "MSTORE"
    },
    "2270": {
      "op": "PUSH32",
      "value": "0x4E6F207374616B65206173736F636961746564207769746820746865206F7065"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2305": {
      "op": "DUP3"
    },
    "2306": {
      "op": "ADD"
    },
    "2307": {
      "op": "MSTORE"
    },
    "2308": {
      "op": "PUSH5",
      "value": "0x3930BA37B9"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "2316": {
      "op": "SHL"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2319": {
      "op": "DUP3"
    },
    "2320": {
      "op": "ADD"
    },
    "2321": {
      "op": "MSTORE"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2324": {
      "op": "ADD"
    },
    "2325": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8369,
        8448
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x39A"
    },
    "2328": {
      "op": "JUMP"
    },
    "2329": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8369,
        8448
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2336": {
      "op": "SHL"
    },
    "2337": {
      "op": "SUB"
    },
    "2338": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8493,
        8529
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2339": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8493,
        8529
      ],
      "op": "AND",
      "path": "13"
    },
    "2340": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8458,
        8490
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2342": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8493,
        8529
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2343": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8493,
        8529
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2344": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8493,
        8529
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2345": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8493,
        8529
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2347": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8493,
        8529
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2348": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8493,
        8529
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2349": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8493,
        8529
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2350": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8493,
        8529
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2352": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8493,
        8529
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2353": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8493,
        8529
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2354": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8548,
        8570
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 17
    },
    "2355": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8548,
        8570
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2360": {
      "op": "SHL"
    },
    "2361": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8548,
        8570
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2362": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8548,
        8570
      ],
      "op": "DIV",
      "path": "13"
    },
    "2363": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8548,
        8570
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "2365": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8548,
        8570
      ],
      "op": "AND",
      "path": "13"
    },
    "2366": {
      "branch": 41,
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8547,
        8570
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2367": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8539,
        8612
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x998"
    },
    "2370": {
      "branch": 41,
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8539,
        8612
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2371": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8539,
        8612
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2373": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8539,
        8612
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2374": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2380": {
      "op": "SHL"
    },
    "2381": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8539,
        8612
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2382": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8539,
        8612
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2385": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8539,
        8612
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2387": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8539,
        8612
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2388": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8539,
        8612
      ],
      "op": "ADD",
      "path": "13"
    },
    "2389": {
      "op": "MSTORE"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2394": {
      "op": "DUP3"
    },
    "2395": {
      "op": "ADD"
    },
    "2396": {
      "op": "MSTORE"
    },
    "2397": {
      "op": "PUSH32",
      "value": "0x4F70657261746F72206164647265737320697320616C726561647920636F6E66"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2432": {
      "op": "DUP3"
    },
    "2433": {
      "op": "ADD"
    },
    "2434": {
      "op": "MSTORE"
    },
    "2435": {
      "op": "PUSH5",
      "value": "0x1A5C9B5959"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0xDA"
    },
    "2443": {
      "op": "SHL"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2446": {
      "op": "DUP3"
    },
    "2447": {
      "op": "ADD"
    },
    "2448": {
      "op": "MSTORE"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2451": {
      "op": "ADD"
    },
    "2452": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8539,
        8612
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x39A"
    },
    "2455": {
      "op": "JUMP"
    },
    "2456": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8539,
        8612
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2457": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8630,
        8640
      ],
      "op": "CALLER",
      "path": "13",
      "statement": 18
    },
    "2458": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8644,
        8653
      ],
      "op": "ORIGIN",
      "path": "13"
    },
    "2459": {
      "branch": 42,
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8630,
        8653
      ],
      "op": "EQ",
      "path": "13"
    },
    "2460": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8622,
        8713
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA0D"
    },
    "2463": {
      "branch": 42,
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8622,
        8713
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2464": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8622,
        8713
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2466": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8622,
        8713
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2467": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2473": {
      "op": "SHL"
    },
    "2474": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8622,
        8713
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2475": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8622,
        8713
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2478": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8622,
        8713
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2480": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8622,
        8713
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2481": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8622,
        8713
      ],
      "op": "ADD",
      "path": "13"
    },
    "2482": {
      "op": "MSTORE"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x37"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2487": {
      "op": "DUP3"
    },
    "2488": {
      "op": "ADD"
    },
    "2489": {
      "op": "MSTORE"
    },
    "2490": {
      "op": "PUSH32",
      "value": "0x4F6E6C79206F70657261746F722077697468207265616C206164647265737320"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2525": {
      "op": "DUP3"
    },
    "2526": {
      "op": "ADD"
    },
    "2527": {
      "op": "MSTORE"
    },
    "2528": {
      "op": "PUSH32",
      "value": "0x63616E206D616B65206120636F6E6669726D6174696F6E000000000000000000"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2563": {
      "op": "DUP3"
    },
    "2564": {
      "op": "ADD"
    },
    "2565": {
      "op": "MSTORE"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2568": {
      "op": "ADD"
    },
    "2569": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8622,
        8713
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x39A"
    },
    "2572": {
      "op": "JUMP"
    },
    "2573": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8622,
        8713
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2574": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8723,
        8752
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 19
    },
    "2575": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8723,
        8752
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2580": {
      "op": "SHL"
    },
    "2581": {
      "op": "NOT"
    },
    "2582": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8723,
        8752
      ],
      "op": "AND",
      "path": "13"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2587": {
      "op": "SHL"
    },
    "2588": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8723,
        8752
      ],
      "op": "OR",
      "path": "13"
    },
    "2589": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8723,
        8752
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2590": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8723,
        8752
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2591": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8767,
        8813
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 20,
      "value": "0x40"
    },
    "2593": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8767,
        8813
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2594": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8802,
        8812
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2595": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8802,
        8812
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2602": {
      "op": "SHL"
    },
    "2603": {
      "op": "SUB"
    },
    "2604": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8767,
        8813
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2605": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8767,
        8813
      ],
      "op": "AND",
      "path": "13"
    },
    "2606": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8767,
        8813
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2607": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8767,
        8813
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xDBC602361EAA7FB503DF3C16078C71B39D28412DF5E9980BEC6F489F78BB175C"
    },
    "2640": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8767,
        8813
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2641": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8723,
        8745
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2643": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8723,
        8745
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2644": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8767,
        8813
      ],
      "op": "LOG3",
      "path": "13"
    },
    "2645": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8283,
        8820
      ],
      "op": "POP",
      "path": "13"
    },
    "2646": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "offset": [
        8283,
        8820
      ],
      "op": "POP",
      "path": "13"
    },
    "2647": {
      "fn": "SimplePREApplication.confirmOperatorAddress",
      "jump": "o",
      "offset": [
        8240,
        8820
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2648": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3049,
        3288
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2649": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2651": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2652": {
      "op": "PUSH4",
      "value": "0x5A4D3F1"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2659": {
      "op": "SHL"
    },
    "2660": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2661": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2668": {
      "op": "SHL"
    },
    "2669": {
      "op": "SUB"
    },
    "2670": {
      "op": "DUP3"
    },
    "2671": {
      "op": "DUP2"
    },
    "2672": {
      "op": "AND"
    },
    "2673": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2675": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2676": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "ADD",
      "path": "13"
    },
    "2677": {
      "op": "MSTORE"
    },
    "2678": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3121,
        3127
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2680": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3121,
        3127
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2681": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3121,
        3127
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2682": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3121,
        3127
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2683": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3121,
        3127
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2684": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3121,
        3127
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2685": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3121,
        3127
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2686": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3121,
        3127
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2687": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3205
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x0"
    },
    "2720": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3212
      ],
      "op": "AND",
      "path": "13"
    },
    "2721": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3212
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2722": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3212
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x16934FC4"
    },
    "2727": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3212
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2730": {
      "op": "ADD"
    },
    "2731": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "2733": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2735": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2736": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2737": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2738": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "SUB",
      "path": "13"
    },
    "2739": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2740": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2741": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "GAS",
      "path": "13"
    },
    "2742": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "2743": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2744": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2745": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2746": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAC7"
    },
    "2749": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2750": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2751": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2753": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2754": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2755": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2756": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2758": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2759": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2760": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "POP",
      "path": "13"
    },
    "2761": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "POP",
      "path": "13"
    },
    "2762": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "POP",
      "path": "13"
    },
    "2763": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "POP",
      "path": "13"
    },
    "2764": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2766": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2767": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2768": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2770": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "NOT",
      "path": "13"
    },
    "2771": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2773": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2774": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "ADD",
      "path": "13"
    },
    "2775": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "AND",
      "path": "13"
    },
    "2776": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2777": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "ADD",
      "path": "13"
    },
    "2778": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2779": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2781": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2782": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "POP",
      "path": "13"
    },
    "2783": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2784": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "ADD",
      "path": "13"
    },
    "2785": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2786": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAEB"
    },
    "2789": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2790": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2791": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF40"
    },
    "2794": {
      "fn": "SimplePREApplication.authorizedStake",
      "jump": "i",
      "offset": [
        3197,
        3230
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2795": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3197,
        3230
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2796": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3139,
        3230
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2797": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3139,
        3230
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2798": {
      "op": "POP"
    },
    "2799": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3139,
        3230
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2800": {
      "op": "POP"
    },
    "2801": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3139,
        3230
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2802": {
      "op": "POP"
    },
    "2803": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3139,
        3230
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2804": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3247,
        3268
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 21,
      "value": "0xAFD"
    },
    "2807": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3139,
        3230
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2808": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3139,
        3230
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2809": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3247,
        3268
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF83"
    },
    "2812": {
      "fn": "SimplePREApplication.authorizedStake",
      "jump": "i",
      "offset": [
        3247,
        3268
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2813": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3247,
        3268
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2814": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3247,
        3281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB07"
    },
    "2817": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3247,
        3281
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2818": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3247,
        3281
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2819": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3247,
        3281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF83"
    },
    "2822": {
      "fn": "SimplePREApplication.authorizedStake",
      "jump": "i",
      "offset": [
        3247,
        3281
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2823": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3247,
        3281
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2824": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3240,
        3281
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "2825": {
      "fn": "SimplePREApplication.authorizedStake",
      "offset": [
        3049,
        3288
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2826": {
      "op": "POP"
    },
    "2827": {
      "op": "POP"
    },
    "2828": {
      "op": "POP"
    },
    "2829": {
      "op": "POP"
    },
    "2830": {
      "op": "POP"
    },
    "2831": {
      "fn": "SimplePREApplication.authorizedStake",
      "jump": "o",
      "offset": [
        3049,
        3288
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2832": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2833": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4149,
        4165
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2835": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4149,
        4172
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2836": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4043,
        4070
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2838": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4043,
        4070
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2839": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4072,
        4114
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "2841": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4072,
        4114
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2842": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4190,
        4212
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 22
    },
    "2843": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4190,
        4212
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2844": {
      "branch": 43,
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4190,
        4212
      ],
      "op": "LT",
      "path": "13"
    },
    "2845": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4182,
        4234
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB5C"
    },
    "2848": {
      "branch": 43,
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4182,
        4234
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2849": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4182,
        4234
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2851": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4182,
        4234
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2852": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2858": {
      "op": "SHL"
    },
    "2859": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4182,
        4234
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2860": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4182,
        4234
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2863": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4182,
        4234
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2865": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4182,
        4234
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2866": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4182,
        4234
      ],
      "op": "ADD",
      "path": "13"
    },
    "2867": {
      "op": "MSTORE"
    },
    "2868": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2872": {
      "op": "DUP3"
    },
    "2873": {
      "op": "ADD"
    },
    "2874": {
      "op": "MSTORE"
    },
    "2875": {
      "op": "PUSH17",
      "value": "0xAEE4DEDCCE40E6E8C2E4E840D2DCC8CAF"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x7B"
    },
    "2895": {
      "op": "SHL"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2898": {
      "op": "DUP3"
    },
    "2899": {
      "op": "ADD"
    },
    "2900": {
      "op": "MSTORE"
    },
    "2901": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2903": {
      "op": "ADD"
    },
    "2904": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4182,
        4234
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x39A"
    },
    "2907": {
      "op": "JUMP"
    },
    "2908": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4182,
        4234
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2909": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4248,
        4273
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2910": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4248,
        4273
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2911": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4248,
        4273
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2912": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4248,
        4273
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2913": {
      "branch": 44,
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4248,
        4273
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2914": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4248,
        4322
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB73"
    },
    "2917": {
      "branch": 44,
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4248,
        4322
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2918": {
      "op": "POP"
    },
    "2919": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4314,
        4322
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2920": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4277,
        4311
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB71"
    },
    "2923": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4291,
        4311
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2924": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4277,
        4288
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2925": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4277,
        4311
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF0C"
    },
    "2928": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "jump": "i",
      "offset": [
        4277,
        4311
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2929": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4277,
        4311
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2930": {
      "branch": 45,
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4277,
        4322
      ],
      "op": "LT",
      "path": "13"
    },
    "2931": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4248,
        4322
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2932": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4244,
        4394
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2933": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4244,
        4394
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB85"
    },
    "2936": {
      "branch": 45,
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4244,
        4394
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2937": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4349,
        4383
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 23,
      "value": "0xB82"
    },
    "2940": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4363,
        4383
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2941": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4349,
        4360
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2942": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4349,
        4383
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF0C"
    },
    "2945": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "jump": "i",
      "offset": [
        4349,
        4383
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2946": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4349,
        4383
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2947": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4338,
        4383
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2948": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4338,
        4383
      ],
      "op": "POP",
      "path": "13"
    },
    "2949": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4244,
        4394
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2950": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4445,
        4467
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 24,
      "value": "0xB8F"
    },
    "2953": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4456,
        4467
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2954": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4445,
        4453
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2955": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4445,
        4467
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFAE"
    },
    "2958": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "jump": "i",
      "offset": [
        4445,
        4467
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2959": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4445,
        4467
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2960": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "PUSH8",
      "path": "13",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2969": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2970": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "GT",
      "path": "13"
    },
    "2971": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2972": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBA7"
    },
    "2975": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2976": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBA7"
    },
    "2979": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFC5"
    },
    "2982": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "jump": "i",
      "offset": [
        4428,
        4468
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2983": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2984": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2986": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2987": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2988": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2989": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2990": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2991": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2992": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2994": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "MUL",
      "path": "13"
    },
    "2995": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2997": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "ADD",
      "path": "13"
    },
    "2998": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2999": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "ADD",
      "path": "13"
    },
    "3000": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3002": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3003": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3004": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3005": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBE0"
    },
    "3008": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3009": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3010": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3012": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "ADD",
      "path": "13"
    },
    "3013": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3014": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBCD"
    },
    "3017": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD69"
    },
    "3020": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "jump": "i",
      "offset": [
        4428,
        4468
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3021": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3022": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3023": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3024": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3026": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "ADD",
      "path": "13"
    },
    "3027": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3028": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3030": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3031": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "SUB",
      "path": "13"
    },
    "3032": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3033": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3034": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBC5"
    },
    "3037": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3038": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3039": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "POP",
      "path": "13"
    },
    "3040": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4428,
        4468
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3041": {
      "op": "POP"
    },
    "3042": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4500,
        4501
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 25,
      "value": "0x0"
    },
    "3044": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4500,
        4501
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "3045": {
      "op": "POP"
    },
    "3046": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4403,
        4468
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3047": {
      "op": "POP"
    },
    "3048": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4500,
        4501
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3049": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4562,
        4573
      ],
      "op": "DUP6",
      "path": "13"
    },
    "3050": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4545,
        5150
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3051": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4579,
        4587
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3052": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4575,
        4576
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3053": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4575,
        4587
      ],
      "op": "LT",
      "path": "13"
    },
    "3054": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4545,
        5150
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3055": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4545,
        5150
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD1F"
    },
    "3058": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4545,
        5150
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3059": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4608,
        4631
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3061": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4650
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3063": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4651,
        4652
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3064": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3065": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3066": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3067": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "LT",
      "path": "13"
    },
    "3068": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC07"
    },
    "3071": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3072": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC07"
    },
    "3075": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFDB"
    },
    "3078": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "jump": "i",
      "offset": [
        4634,
        4653
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3079": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3080": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3082": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3083": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3084": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3085": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3087": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3088": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3089": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3090": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3091": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3092": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "ADD",
      "path": "13"
    },
    "3093": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3100": {
      "op": "SHL"
    },
    "3101": {
      "op": "SUB"
    },
    "3102": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "AND",
      "path": "13"
    },
    "3103": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4702,
        4738
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3104": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4702,
        4738
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3105": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4702,
        4738
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3106": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4702,
        4738
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3107": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4702,
        4738
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3108": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4702,
        4738
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3109": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4702,
        4738
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3110": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4702,
        4738
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3112": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4702,
        4738
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3113": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4702,
        4738
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3114": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3115": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3116": {
      "op": "POP"
    },
    "3117": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4702,
        4738
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3118": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4777,
        4809
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC36"
    },
    "3121": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4634,
        4653
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3122": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4777,
        4792
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA58"
    },
    "3125": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "jump": "i",
      "offset": [
        4777,
        4809
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3126": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4777,
        4809
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3133": {
      "op": "SHL"
    },
    "3134": {
      "op": "SUB"
    },
    "3135": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4752,
        4809
      ],
      "op": "AND",
      "path": "13"
    },
    "3136": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4752,
        4809
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3137": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4752,
        4809
      ],
      "op": "POP",
      "path": "13"
    },
    "3138": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4844,
        4860
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x0"
    },
    "3171": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4827,
        4841
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3172": {
      "branch": 46,
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4827,
        4860
      ],
      "op": "LT",
      "path": "13"
    },
    "3173": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4827,
        4887
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3174": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4827,
        4887
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC78"
    },
    "3177": {
      "branch": 46,
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4827,
        4887
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3178": {
      "op": "POP"
    },
    "3179": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4865,
        4887
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3180": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4865,
        4887
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3185": {
      "op": "SHL"
    },
    "3186": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4865,
        4887
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3187": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4865,
        4887
      ],
      "op": "DIV",
      "path": "13"
    },
    "3188": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4865,
        4887
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "3190": {
      "branch": 47,
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4865,
        4887
      ],
      "op": "AND",
      "path": "13"
    },
    "3191": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4864,
        4887
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3192": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4827,
        4887
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3193": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4823,
        4930
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3194": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4823,
        4930
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC85"
    },
    "3197": {
      "branch": 47,
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4823,
        4930
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3198": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4907,
        4915
      ],
      "op": "POP",
      "path": "13",
      "statement": 26
    },
    "3199": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4907,
        4915
      ],
      "op": "POP",
      "path": "13"
    },
    "3200": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4907,
        4915
      ],
      "op": "POP",
      "path": "13"
    },
    "3201": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4907,
        4915
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD0D"
    },
    "3204": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4907,
        4915
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3205": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4823,
        4930
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3206": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5000,
        5015
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 27
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3213": {
      "op": "SHL"
    },
    "3214": {
      "op": "SUB"
    },
    "3215": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4984,
        5017
      ],
      "op": "AND",
      "path": "13"
    },
    "3216": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4965
      ],
      "op": "DUP8",
      "path": "13"
    },
    "3217": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4966,
        4977
      ],
      "op": "DUP7",
      "path": "13"
    },
    "3218": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4978
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3219": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4978
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3220": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4978
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3221": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4978
      ],
      "op": "LT",
      "path": "13"
    },
    "3222": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4978
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCA1"
    },
    "3225": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4978
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3226": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4978
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCA1"
    },
    "3229": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4978
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFDB"
    },
    "3232": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "jump": "i",
      "offset": [
        4943,
        4978
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3233": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4978
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3234": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4978
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3236": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4978
      ],
      "op": "MUL",
      "path": "13"
    },
    "3237": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4978
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3239": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4978
      ],
      "op": "ADD",
      "path": "13"
    },
    "3240": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4978
      ],
      "op": "ADD",
      "path": "13"
    },
    "3241": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4978
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3242": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4979,
        4980
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3244": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4981
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "3246": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4981
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3247": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4981
      ],
      "op": "LT",
      "path": "13"
    },
    "3248": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4981
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCBB"
    },
    "3251": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4981
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3252": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4981
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCBB"
    },
    "3255": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4981
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFDB"
    },
    "3258": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "jump": "i",
      "offset": [
        4943,
        4981
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3259": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4981
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3260": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4981
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3262": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4981
      ],
      "op": "MUL",
      "path": "13"
    },
    "3263": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        4981
      ],
      "op": "ADD",
      "path": "13"
    },
    "3264": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4943,
        5017
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3265": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5074,
        5088
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 28
    },
    "3266": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5053
      ],
      "op": "DUP8",
      "path": "13"
    },
    "3267": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5054,
        5067
      ],
      "op": "DUP7",
      "path": "13"
    },
    "3268": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5054,
        5067
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCCC"
    },
    "3271": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5054,
        5067
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3272": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5054,
        5067
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFF1"
    },
    "3275": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "jump": "i",
      "offset": [
        5054,
        5067
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3276": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5054,
        5067
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3277": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5054,
        5067
      ],
      "op": "SWAP8",
      "path": "13"
    },
    "3278": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5054,
        5067
      ],
      "op": "POP",
      "path": "13"
    },
    "3279": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5068
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3280": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5068
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3281": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5068
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3282": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5068
      ],
      "op": "LT",
      "path": "13"
    },
    "3283": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5068
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCDE"
    },
    "3286": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5068
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3287": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5068
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCDE"
    },
    "3290": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5068
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFDB"
    },
    "3293": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "jump": "i",
      "offset": [
        5031,
        5068
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3294": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5068
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3295": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5068
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3297": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5068
      ],
      "op": "MUL",
      "path": "13"
    },
    "3298": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5068
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3300": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5068
      ],
      "op": "ADD",
      "path": "13"
    },
    "3301": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5068
      ],
      "op": "ADD",
      "path": "13"
    },
    "3302": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5068
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3303": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5069,
        5070
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3305": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5071
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "3307": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5071
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3308": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5071
      ],
      "op": "LT",
      "path": "13"
    },
    "3309": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5071
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCF8"
    },
    "3312": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5071
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3313": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5071
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCF8"
    },
    "3316": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5071
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFDB"
    },
    "3319": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "jump": "i",
      "offset": [
        5031,
        5071
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3320": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5071
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3321": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5071
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3323": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5071
      ],
      "op": "MUL",
      "path": "13"
    },
    "3324": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5071
      ],
      "op": "ADD",
      "path": "13"
    },
    "3325": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5031,
        5088
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3326": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5102,
        5139
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 29,
      "value": "0xD07"
    },
    "3329": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5125,
        5139
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3330": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5102,
        5139
      ],
      "op": "DUP10",
      "path": "13"
    },
    "3331": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5102,
        5139
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF0C"
    },
    "3334": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "jump": "i",
      "offset": [
        5102,
        5139
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3335": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5102,
        5139
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3336": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5102,
        5139
      ],
      "op": "SWAP8",
      "path": "13"
    },
    "3337": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5102,
        5139
      ],
      "op": "POP",
      "path": "13"
    },
    "3338": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4594,
        5150
      ],
      "op": "POP",
      "path": "13"
    },
    "3339": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4594,
        5150
      ],
      "op": "POP",
      "path": "13"
    },
    "3340": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4594,
        5150
      ],
      "op": "POP",
      "path": "13"
    },
    "3341": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4545,
        5150
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3342": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4589,
        4592
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 30
    },
    "3343": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4589,
        4592
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD17"
    },
    "3346": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4589,
        4592
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3347": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4589,
        4592
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFF1"
    },
    "3350": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "jump": "i",
      "offset": [
        4589,
        4592
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3351": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4589,
        4592
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3352": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4589,
        4592
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3353": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4589,
        4592
      ],
      "op": "POP",
      "path": "13"
    },
    "3354": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4589,
        4592
      ],
      "op": "POP",
      "path": "13"
    },
    "3355": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4545,
        5150
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBEA"
    },
    "3358": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4545,
        5150
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3359": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4545,
        5150
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3360": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        4545,
        5150
      ],
      "op": "POP",
      "path": "13"
    },
    "3361": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5213,
        5224
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3362": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5189,
        5211
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3363": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5182,
        5225
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3364": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5168,
        5235
      ],
      "op": "POP",
      "path": "13"
    },
    "3365": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        5168,
        5235
      ],
      "op": "POP",
      "path": "13"
    },
    "3366": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3367": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "POP",
      "path": "13"
    },
    "3368": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3369": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3370": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "offset": [
        3926,
        5241
      ],
      "op": "POP",
      "path": "13"
    },
    "3371": {
      "fn": "SimplePREApplication.getActiveStakingProviders",
      "jump": "o",
      "offset": [
        3926,
        5241
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3372": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5607,
        5759
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3373": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5676,
        5680
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3375": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5736,
        5752
      ],
      "op": "PUSH32",
      "path": "13",
      "statement": 31,
      "value": "0x0"
    },
    "3408": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5699,
        5732
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD58"
    },
    "3411": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5715,
        5731
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3412": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5699,
        5714
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA58"
    },
    "3415": {
      "fn": "SimplePREApplication.isAuthorized",
      "jump": "i",
      "offset": [
        5699,
        5732
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3416": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5699,
        5732
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3423": {
      "op": "SHL"
    },
    "3424": {
      "op": "SUB"
    },
    "3425": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5699,
        5752
      ],
      "op": "AND",
      "path": "13"
    },
    "3426": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5699,
        5752
      ],
      "op": "LT",
      "path": "13"
    },
    "3427": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5699,
        5752
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3428": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5699,
        5752
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3429": {
      "fn": "SimplePREApplication.isAuthorized",
      "offset": [
        5607,
        5759
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3430": {
      "op": "POP"
    },
    "3431": {
      "op": "POP"
    },
    "3432": {
      "fn": "SimplePREApplication.isAuthorized",
      "jump": "o",
      "offset": [
        5607,
        5759
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3433": {
      "op": "JUMPDEST"
    },
    "3434": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3436": {
      "op": "MLOAD"
    },
    "3437": {
      "op": "DUP1"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3440": {
      "op": "ADD"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3443": {
      "op": "MSTORE"
    },
    "3444": {
      "op": "DUP1"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3447": {
      "op": "SWAP1"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3450": {
      "op": "DUP3"
    },
    "3451": {
      "op": "MUL"
    },
    "3452": {
      "op": "DUP1"
    },
    "3453": {
      "op": "CALLDATASIZE"
    },
    "3454": {
      "op": "DUP4"
    },
    "3455": {
      "op": "CALLDATACOPY"
    },
    "3456": {
      "op": "POP"
    },
    "3457": {
      "op": "SWAP2"
    },
    "3458": {
      "op": "SWAP3"
    },
    "3459": {
      "op": "SWAP2"
    },
    "3460": {
      "op": "POP"
    },
    "3461": {
      "op": "POP"
    },
    "3462": {
      "jump": "o",
      "op": "JUMP"
    },
    "3463": {
      "op": "JUMPDEST"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3470": {
      "op": "SHL"
    },
    "3471": {
      "op": "SUB"
    },
    "3472": {
      "op": "DUP2"
    },
    "3473": {
      "op": "AND"
    },
    "3474": {
      "op": "DUP2"
    },
    "3475": {
      "op": "EQ"
    },
    "3476": {
      "op": "PUSH2",
      "value": "0xD9C"
    },
    "3479": {
      "op": "JUMPI"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3482": {
      "op": "DUP1"
    },
    "3483": {
      "op": "REVERT"
    },
    "3484": {
      "op": "JUMPDEST"
    },
    "3485": {
      "op": "POP"
    },
    "3486": {
      "jump": "o",
      "op": "JUMP"
    },
    "3487": {
      "op": "JUMPDEST"
    },
    "3488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3490": {
      "op": "DUP1"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3493": {
      "op": "DUP4"
    },
    "3494": {
      "op": "DUP6"
    },
    "3495": {
      "op": "SUB"
    },
    "3496": {
      "op": "SLT"
    },
    "3497": {
      "op": "ISZERO"
    },
    "3498": {
      "op": "PUSH2",
      "value": "0xDB2"
    },
    "3501": {
      "op": "JUMPI"
    },
    "3502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3504": {
      "op": "DUP1"
    },
    "3505": {
      "op": "REVERT"
    },
    "3506": {
      "op": "JUMPDEST"
    },
    "3507": {
      "op": "DUP3"
    },
    "3508": {
      "op": "CALLDATALOAD"
    },
    "3509": {
      "op": "PUSH2",
      "value": "0xDBD"
    },
    "3512": {
      "op": "DUP2"
    },
    "3513": {
      "op": "PUSH2",
      "value": "0xD87"
    },
    "3516": {
      "jump": "i",
      "op": "JUMP"
    },
    "3517": {
      "op": "JUMPDEST"
    },
    "3518": {
      "op": "SWAP2"
    },
    "3519": {
      "op": "POP"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3522": {
      "op": "DUP4"
    },
    "3523": {
      "op": "ADD"
    },
    "3524": {
      "op": "CALLDATALOAD"
    },
    "3525": {
      "op": "PUSH2",
      "value": "0xDCD"
    },
    "3528": {
      "op": "DUP2"
    },
    "3529": {
      "op": "PUSH2",
      "value": "0xD87"
    },
    "3532": {
      "jump": "i",
      "op": "JUMP"
    },
    "3533": {
      "op": "JUMPDEST"
    },
    "3534": {
      "op": "DUP1"
    },
    "3535": {
      "op": "SWAP2"
    },
    "3536": {
      "op": "POP"
    },
    "3537": {
      "op": "POP"
    },
    "3538": {
      "op": "SWAP3"
    },
    "3539": {
      "op": "POP"
    },
    "3540": {
      "op": "SWAP3"
    },
    "3541": {
      "op": "SWAP1"
    },
    "3542": {
      "op": "POP"
    },
    "3543": {
      "jump": "o",
      "op": "JUMP"
    },
    "3544": {
      "op": "JUMPDEST"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3549": {
      "op": "DUP3"
    },
    "3550": {
      "op": "DUP5"
    },
    "3551": {
      "op": "SUB"
    },
    "3552": {
      "op": "SLT"
    },
    "3553": {
      "op": "ISZERO"
    },
    "3554": {
      "op": "PUSH2",
      "value": "0xDEA"
    },
    "3557": {
      "op": "JUMPI"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3560": {
      "op": "DUP1"
    },
    "3561": {
      "op": "REVERT"
    },
    "3562": {
      "op": "JUMPDEST"
    },
    "3563": {
      "op": "DUP2"
    },
    "3564": {
      "op": "CALLDATALOAD"
    },
    "3565": {
      "op": "PUSH2",
      "value": "0xDF5"
    },
    "3568": {
      "op": "DUP2"
    },
    "3569": {
      "op": "PUSH2",
      "value": "0xD87"
    },
    "3572": {
      "jump": "i",
      "op": "JUMP"
    },
    "3573": {
      "op": "JUMPDEST"
    },
    "3574": {
      "op": "SWAP4"
    },
    "3575": {
      "op": "SWAP3"
    },
    "3576": {
      "op": "POP"
    },
    "3577": {
      "op": "POP"
    },
    "3578": {
      "op": "POP"
    },
    "3579": {
      "jump": "o",
      "op": "JUMP"
    },
    "3580": {
      "op": "JUMPDEST"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3585": {
      "op": "DUP3"
    },
    "3586": {
      "op": "DUP5"
    },
    "3587": {
      "op": "SUB"
    },
    "3588": {
      "op": "SLT"
    },
    "3589": {
      "op": "ISZERO"
    },
    "3590": {
      "op": "PUSH2",
      "value": "0xE0E"
    },
    "3593": {
      "op": "JUMPI"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3596": {
      "op": "DUP1"
    },
    "3597": {
      "op": "REVERT"
    },
    "3598": {
      "op": "JUMPDEST"
    },
    "3599": {
      "op": "POP"
    },
    "3600": {
      "op": "CALLDATALOAD"
    },
    "3601": {
      "op": "SWAP2"
    },
    "3602": {
      "op": "SWAP1"
    },
    "3603": {
      "op": "POP"
    },
    "3604": {
      "jump": "o",
      "op": "JUMP"
    },
    "3605": {
      "op": "JUMPDEST"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3608": {
      "op": "DUP1"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3611": {
      "op": "DUP4"
    },
    "3612": {
      "op": "DUP6"
    },
    "3613": {
      "op": "SUB"
    },
    "3614": {
      "op": "SLT"
    },
    "3615": {
      "op": "ISZERO"
    },
    "3616": {
      "op": "PUSH2",
      "value": "0xE28"
    },
    "3619": {
      "op": "JUMPI"
    },
    "3620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3622": {
      "op": "DUP1"
    },
    "3623": {
      "op": "REVERT"
    },
    "3624": {
      "op": "JUMPDEST"
    },
    "3625": {
      "op": "POP"
    },
    "3626": {
      "op": "POP"
    },
    "3627": {
      "op": "DUP1"
    },
    "3628": {
      "op": "CALLDATALOAD"
    },
    "3629": {
      "op": "SWAP3"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3632": {
      "op": "SWAP1"
    },
    "3633": {
      "op": "SWAP2"
    },
    "3634": {
      "op": "ADD"
    },
    "3635": {
      "op": "CALLDATALOAD"
    },
    "3636": {
      "op": "SWAP2"
    },
    "3637": {
      "op": "POP"
    },
    "3638": {
      "jump": "o",
      "op": "JUMP"
    },
    "3639": {
      "op": "JUMPDEST"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3642": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3644": {
      "op": "DUP1"
    },
    "3645": {
      "op": "DUP4"
    },
    "3646": {
      "op": "ADD"
    },
    "3647": {
      "op": "DUP6"
    },
    "3648": {
      "op": "DUP5"
    },
    "3649": {
      "op": "MSTORE"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3652": {
      "op": "DUP3"
    },
    "3653": {
      "op": "DUP2"
    },
    "3654": {
      "op": "DUP7"
    },
    "3655": {
      "op": "ADD"
    },
    "3656": {
      "op": "MSTORE"
    },
    "3657": {
      "op": "DUP2"
    },
    "3658": {
      "op": "DUP7"
    },
    "3659": {
      "op": "MLOAD"
    },
    "3660": {
      "op": "DUP1"
    },
    "3661": {
      "op": "DUP5"
    },
    "3662": {
      "op": "MSTORE"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3665": {
      "op": "DUP8"
    },
    "3666": {
      "op": "ADD"
    },
    "3667": {
      "op": "SWAP2"
    },
    "3668": {
      "op": "POP"
    },
    "3669": {
      "op": "DUP3"
    },
    "3670": {
      "op": "DUP9"
    },
    "3671": {
      "op": "ADD"
    },
    "3672": {
      "op": "SWAP4"
    },
    "3673": {
      "op": "POP"
    },
    "3674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3676": {
      "op": "DUP1"
    },
    "3677": {
      "op": "JUMPDEST"
    },
    "3678": {
      "op": "DUP3"
    },
    "3679": {
      "op": "DUP2"
    },
    "3680": {
      "op": "LT"
    },
    "3681": {
      "op": "ISZERO"
    },
    "3682": {
      "op": "PUSH2",
      "value": "0xE9A"
    },
    "3685": {
      "op": "JUMPI"
    },
    "3686": {
      "op": "DUP6"
    },
    "3687": {
      "op": "MLOAD"
    },
    "3688": {
      "op": "DUP5"
    },
    "3689": {
      "op": "DUP4"
    },
    "3690": {
      "op": "JUMPDEST"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3693": {
      "op": "DUP2"
    },
    "3694": {
      "op": "LT"
    },
    "3695": {
      "op": "ISZERO"
    },
    "3696": {
      "op": "PUSH2",
      "value": "0xE87"
    },
    "3699": {
      "op": "JUMPI"
    },
    "3700": {
      "op": "DUP3"
    },
    "3701": {
      "op": "MLOAD"
    },
    "3702": {
      "op": "DUP3"
    },
    "3703": {
      "op": "MSTORE"
    },
    "3704": {
      "op": "SWAP2"
    },
    "3705": {
      "op": "DUP8"
    },
    "3706": {
      "op": "ADD"
    },
    "3707": {
      "op": "SWAP2"
    },
    "3708": {
      "op": "SWAP1"
    },
    "3709": {
      "op": "DUP8"
    },
    "3710": {
      "op": "ADD"
    },
    "3711": {
      "op": "SWAP1"
    },
    "3712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3714": {
      "op": "ADD"
    },
    "3715": {
      "op": "PUSH2",
      "value": "0xE6A"
    },
    "3718": {
      "op": "JUMP"
    },
    "3719": {
      "op": "JUMPDEST"
    },
    "3720": {
      "op": "POP"
    },
    "3721": {
      "op": "POP"
    },
    "3722": {
      "op": "POP"
    },
    "3723": {
      "op": "SWAP5"
    },
    "3724": {
      "op": "DUP5"
    },
    "3725": {
      "op": "ADD"
    },
    "3726": {
      "op": "SWAP5"
    },
    "3727": {
      "op": "SWAP3"
    },
    "3728": {
      "op": "DUP7"
    },
    "3729": {
      "op": "ADD"
    },
    "3730": {
      "op": "SWAP3"
    },
    "3731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3733": {
      "op": "ADD"
    },
    "3734": {
      "op": "PUSH2",
      "value": "0xE5D"
    },
    "3737": {
      "op": "JUMP"
    },
    "3738": {
      "op": "JUMPDEST"
    },
    "3739": {
      "op": "POP"
    },
    "3740": {
      "op": "SWAP2"
    },
    "3741": {
      "op": "SWAP10"
    },
    "3742": {
      "op": "SWAP9"
    },
    "3743": {
      "op": "POP"
    },
    "3744": {
      "op": "POP"
    },
    "3745": {
      "op": "POP"
    },
    "3746": {
      "op": "POP"
    },
    "3747": {
      "op": "POP"
    },
    "3748": {
      "op": "POP"
    },
    "3749": {
      "op": "POP"
    },
    "3750": {
      "op": "POP"
    },
    "3751": {
      "op": "POP"
    },
    "3752": {
      "jump": "o",
      "op": "JUMP"
    },
    "3753": {
      "op": "JUMPDEST"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3756": {
      "op": "DUP1"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3761": {
      "op": "DUP5"
    },
    "3762": {
      "op": "DUP7"
    },
    "3763": {
      "op": "SUB"
    },
    "3764": {
      "op": "SLT"
    },
    "3765": {
      "op": "ISZERO"
    },
    "3766": {
      "op": "PUSH2",
      "value": "0xEBE"
    },
    "3769": {
      "op": "JUMPI"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3772": {
      "op": "DUP1"
    },
    "3773": {
      "op": "REVERT"
    },
    "3774": {
      "op": "JUMPDEST"
    },
    "3775": {
      "op": "DUP4"
    },
    "3776": {
      "op": "MLOAD"
    },
    "3777": {
      "op": "PUSH2",
      "value": "0xEC9"
    },
    "3780": {
      "op": "DUP2"
    },
    "3781": {
      "op": "PUSH2",
      "value": "0xD87"
    },
    "3784": {
      "jump": "i",
      "op": "JUMP"
    },
    "3785": {
      "op": "JUMPDEST"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3788": {
      "op": "DUP6"
    },
    "3789": {
      "op": "ADD"
    },
    "3790": {
      "op": "MLOAD"
    },
    "3791": {
      "op": "SWAP1"
    },
    "3792": {
      "op": "SWAP4"
    },
    "3793": {
      "op": "POP"
    },
    "3794": {
      "op": "PUSH2",
      "value": "0xEDA"
    },
    "3797": {
      "op": "DUP2"
    },
    "3798": {
      "op": "PUSH2",
      "value": "0xD87"
    },
    "3801": {
      "jump": "i",
      "op": "JUMP"
    },
    "3802": {
      "op": "JUMPDEST"
    },
    "3803": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3805": {
      "op": "DUP6"
    },
    "3806": {
      "op": "ADD"
    },
    "3807": {
      "op": "MLOAD"
    },
    "3808": {
      "op": "SWAP1"
    },
    "3809": {
      "op": "SWAP3"
    },
    "3810": {
      "op": "POP"
    },
    "3811": {
      "op": "PUSH2",
      "value": "0xEEB"
    },
    "3814": {
      "op": "DUP2"
    },
    "3815": {
      "op": "PUSH2",
      "value": "0xD87"
    },
    "3818": {
      "jump": "i",
      "op": "JUMP"
    },
    "3819": {
      "op": "JUMPDEST"
    },
    "3820": {
      "op": "DUP1"
    },
    "3821": {
      "op": "SWAP2"
    },
    "3822": {
      "op": "POP"
    },
    "3823": {
      "op": "POP"
    },
    "3824": {
      "op": "SWAP3"
    },
    "3825": {
      "op": "POP"
    },
    "3826": {
      "op": "SWAP3"
    },
    "3827": {
      "op": "POP"
    },
    "3828": {
      "op": "SWAP3"
    },
    "3829": {
      "jump": "o",
      "op": "JUMP"
    },
    "3830": {
      "op": "JUMPDEST"
    },
    "3831": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3838": {
      "op": "SHL"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3841": {
      "op": "MSTORE"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3846": {
      "op": "MSTORE"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3851": {
      "op": "REVERT"
    },
    "3852": {
      "op": "JUMPDEST"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3855": {
      "op": "DUP3"
    },
    "3856": {
      "op": "NOT"
    },
    "3857": {
      "op": "DUP3"
    },
    "3858": {
      "op": "GT"
    },
    "3859": {
      "op": "ISZERO"
    },
    "3860": {
      "op": "PUSH2",
      "value": "0xF1F"
    },
    "3863": {
      "op": "JUMPI"
    },
    "3864": {
      "op": "PUSH2",
      "value": "0xF1F"
    },
    "3867": {
      "op": "PUSH2",
      "value": "0xEF6"
    },
    "3870": {
      "jump": "i",
      "op": "JUMP"
    },
    "3871": {
      "op": "JUMPDEST"
    },
    "3872": {
      "op": "POP"
    },
    "3873": {
      "op": "ADD"
    },
    "3874": {
      "op": "SWAP1"
    },
    "3875": {
      "jump": "o",
      "op": "JUMP"
    },
    "3876": {
      "op": "JUMPDEST"
    },
    "3877": {
      "op": "DUP1"
    },
    "3878": {
      "op": "MLOAD"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3885": {
      "op": "SHL"
    },
    "3886": {
      "op": "SUB"
    },
    "3887": {
      "op": "DUP2"
    },
    "3888": {
      "op": "AND"
    },
    "3889": {
      "op": "DUP2"
    },
    "3890": {
      "op": "EQ"
    },
    "3891": {
      "op": "PUSH2",
      "value": "0xF3B"
    },
    "3894": {
      "op": "JUMPI"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3897": {
      "op": "DUP1"
    },
    "3898": {
      "op": "REVERT"
    },
    "3899": {
      "op": "JUMPDEST"
    },
    "3900": {
      "op": "SWAP2"
    },
    "3901": {
      "op": "SWAP1"
    },
    "3902": {
      "op": "POP"
    },
    "3903": {
      "jump": "o",
      "op": "JUMP"
    },
    "3904": {
      "op": "JUMPDEST"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3907": {
      "op": "DUP1"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3912": {
      "op": "DUP5"
    },
    "3913": {
      "op": "DUP7"
    },
    "3914": {
      "op": "SUB"
    },
    "3915": {
      "op": "SLT"
    },
    "3916": {
      "op": "ISZERO"
    },
    "3917": {
      "op": "PUSH2",
      "value": "0xF55"
    },
    "3920": {
      "op": "JUMPI"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3923": {
      "op": "DUP1"
    },
    "3924": {
      "op": "REVERT"
    },
    "3925": {
      "op": "JUMPDEST"
    },
    "3926": {
      "op": "PUSH2",
      "value": "0xF5E"
    },
    "3929": {
      "op": "DUP5"
    },
    "3930": {
      "op": "PUSH2",
      "value": "0xF24"
    },
    "3933": {
      "jump": "i",
      "op": "JUMP"
    },
    "3934": {
      "op": "JUMPDEST"
    },
    "3935": {
      "op": "SWAP3"
    },
    "3936": {
      "op": "POP"
    },
    "3937": {
      "op": "PUSH2",
      "value": "0xF6C"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3942": {
      "op": "DUP6"
    },
    "3943": {
      "op": "ADD"
    },
    "3944": {
      "op": "PUSH2",
      "value": "0xF24"
    },
    "3947": {
      "jump": "i",
      "op": "JUMP"
    },
    "3948": {
      "op": "JUMPDEST"
    },
    "3949": {
      "op": "SWAP2"
    },
    "3950": {
      "op": "POP"
    },
    "3951": {
      "op": "PUSH2",
      "value": "0xF7A"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3956": {
      "op": "DUP6"
    },
    "3957": {
      "op": "ADD"
    },
    "3958": {
      "op": "PUSH2",
      "value": "0xF24"
    },
    "3961": {
      "jump": "i",
      "op": "JUMP"
    },
    "3962": {
      "op": "JUMPDEST"
    },
    "3963": {
      "op": "SWAP1"
    },
    "3964": {
      "op": "POP"
    },
    "3965": {
      "op": "SWAP3"
    },
    "3966": {
      "op": "POP"
    },
    "3967": {
      "op": "SWAP3"
    },
    "3968": {
      "op": "POP"
    },
    "3969": {
      "op": "SWAP3"
    },
    "3970": {
      "jump": "o",
      "op": "JUMP"
    },
    "3971": {
      "op": "JUMPDEST"
    },
    "3972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3980": {
      "op": "SHL"
    },
    "3981": {
      "op": "SUB"
    },
    "3982": {
      "op": "DUP1"
    },
    "3983": {
      "op": "DUP4"
    },
    "3984": {
      "op": "AND"
    },
    "3985": {
      "op": "DUP2"
    },
    "3986": {
      "op": "DUP6"
    },
    "3987": {
      "op": "AND"
    },
    "3988": {
      "op": "DUP1"
    },
    "3989": {
      "op": "DUP4"
    },
    "3990": {
      "op": "SUB"
    },
    "3991": {
      "op": "DUP3"
    },
    "3992": {
      "op": "GT"
    },
    "3993": {
      "op": "ISZERO"
    },
    "3994": {
      "op": "PUSH2",
      "value": "0xFA5"
    },
    "3997": {
      "op": "JUMPI"
    },
    "3998": {
      "op": "PUSH2",
      "value": "0xFA5"
    },
    "4001": {
      "op": "PUSH2",
      "value": "0xEF6"
    },
    "4004": {
      "jump": "i",
      "op": "JUMP"
    },
    "4005": {
      "op": "JUMPDEST"
    },
    "4006": {
      "op": "ADD"
    },
    "4007": {
      "op": "SWAP5"
    },
    "4008": {
      "op": "SWAP4"
    },
    "4009": {
      "op": "POP"
    },
    "4010": {
      "op": "POP"
    },
    "4011": {
      "op": "POP"
    },
    "4012": {
      "op": "POP"
    },
    "4013": {
      "jump": "o",
      "op": "JUMP"
    },
    "4014": {
      "op": "JUMPDEST"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4017": {
      "op": "DUP3"
    },
    "4018": {
      "op": "DUP3"
    },
    "4019": {
      "op": "LT"
    },
    "4020": {
      "op": "ISZERO"
    },
    "4021": {
      "op": "PUSH2",
      "value": "0xFC0"
    },
    "4024": {
      "op": "JUMPI"
    },
    "4025": {
      "op": "PUSH2",
      "value": "0xFC0"
    },
    "4028": {
      "op": "PUSH2",
      "value": "0xEF6"
    },
    "4031": {
      "jump": "i",
      "op": "JUMP"
    },
    "4032": {
      "op": "JUMPDEST"
    },
    "4033": {
      "op": "POP"
    },
    "4034": {
      "op": "SUB"
    },
    "4035": {
      "op": "SWAP1"
    },
    "4036": {
      "jump": "o",
      "op": "JUMP"
    },
    "4037": {
      "op": "JUMPDEST"
    },
    "4038": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4043": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4045": {
      "op": "SHL"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4048": {
      "op": "MSTORE"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4053": {
      "op": "MSTORE"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4058": {
      "op": "REVERT"
    },
    "4059": {
      "op": "JUMPDEST"
    },
    "4060": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4067": {
      "op": "SHL"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4070": {
      "op": "MSTORE"
    },
    "4071": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4075": {
      "op": "MSTORE"
    },
    "4076": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4080": {
      "op": "REVERT"
    },
    "4081": {
      "op": "JUMPDEST"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4086": {
      "op": "NOT"
    },
    "4087": {
      "op": "DUP3"
    },
    "4088": {
      "op": "EQ"
    },
    "4089": {
      "op": "ISZERO"
    },
    "4090": {
      "op": "PUSH2",
      "value": "0x1005"
    },
    "4093": {
      "op": "JUMPI"
    },
    "4094": {
      "op": "PUSH2",
      "value": "0x1005"
    },
    "4097": {
      "op": "PUSH2",
      "value": "0xEF6"
    },
    "4100": {
      "jump": "i",
      "op": "JUMP"
    },
    "4101": {
      "op": "JUMPDEST"
    },
    "4102": {
      "op": "POP"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4105": {
      "op": "ADD"
    },
    "4106": {
      "op": "SWAP1"
    },
    "4107": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "ecca7ad505ee2d4e3ebaf92effbc06072e2c7bd1",
  "source": "// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.8.0;\n\n\nimport \"../threshold/IStaking.sol\";\n\n\n/**\n* @title PRE Application\n* @notice Contract handles PRE configuration\n*/\ncontract SimplePREApplication {\n\n    /**\n    * @notice Signals that an operator was bonded to the staking provider\n    * @param stakingProvider Staking provider address\n    * @param operator Operator address\n    * @param startTimestamp Timestamp bonding occurred\n    */\n    event OperatorBonded(address indexed stakingProvider, address indexed operator, uint256 startTimestamp);\n\n    /**\n    * @notice Signals that an operator address is confirmed\n    * @param stakingProvider Staking provider address\n    * @param operator Operator address\n    */\n    event OperatorConfirmed(address indexed stakingProvider, address indexed operator);\n\n    struct StakingProviderInfo {\n        address operator;\n        bool operatorConfirmed;\n        uint256 operatorStartTimestamp;\n    }\n\n    uint256 public immutable minAuthorization;\n    uint256 public immutable minOperatorSeconds;\n\n    IStaking public immutable tStaking;\n\n    mapping (address => StakingProviderInfo) public stakingProviderInfo;\n    address[] public stakingProviders;\n    mapping(address => address) internal _stakingProviderFromOperator;\n\n\n    /**\n    * @notice Constructor sets address of token contract and parameters for staking\n    * @param _tStaking T token staking contract\n    * @param _minAuthorization Amount of minimum allowable authorization\n    * @param _minOperatorSeconds Min amount of seconds while an operator can't be changed\n    */\n    constructor(\n        IStaking _tStaking,\n        uint256 _minAuthorization,\n        uint256 _minOperatorSeconds\n    ) {\n        require(\n            _tStaking.authorizedStake(address(this), address(this)) == 0,\n            \"Wrong input parameters\"\n        );\n        minAuthorization = _minAuthorization;\n        tStaking = _tStaking;\n        minOperatorSeconds = _minOperatorSeconds;\n    }\n\n    /**\n    * @dev Checks caller is a staking provider or stake owner\n    */\n    modifier onlyOwnerOrStakingProvider(address _stakingProvider)\n    {\n        require(isAuthorized(_stakingProvider), \"Not owner or provider\");\n        if (_stakingProvider != msg.sender) {\n            (address owner,,) = tStaking.rolesOf(_stakingProvider);\n            require(owner == msg.sender, \"Not owner or provider\");\n        }\n        _;\n    }\n\n\n    //-------------------------Main-------------------------\n    /**\n    * @notice Returns staking provider for specified operator\n    */\n    function stakingProviderFromOperator(address _operator) public view returns (address) {\n        return _stakingProviderFromOperator[_operator];\n    }\n\n    /**\n    * @notice Returns operator for specified staking provider\n    */\n    function getOperatorFromStakingProvider(address _stakingProvider) public view returns (address) {\n        return stakingProviderInfo[_stakingProvider].operator;\n    }\n\n    /**\n    * @notice Get all tokens delegated to the staking provider\n    */\n    function authorizedStake(address _stakingProvider) public view returns (uint96) {\n        (uint96 tStake, uint96 keepInTStake, uint96 nuInTStake) = tStaking.stakes(_stakingProvider);\n        return tStake + keepInTStake + nuInTStake;\n    }\n\n    /**\n    * @notice Get the value of authorized tokens for active providers as well as providers and their authorized tokens\n    * @param _startIndex Start index for looking in providers array\n    * @param _maxStakingProviders Max providers for looking, if set 0 then all will be used\n    * @return allAuthorizedTokens Sum of authorized tokens for active providers\n    * @return activeStakingProviders Array of providers and their authorized tokens.\n    * Providers addresses stored as uint256\n    * @dev Note that activeStakingProviders[0] is an array of uint256, but you want addresses.\n    * Careful when used directly!\n    */\n    function getActiveStakingProviders(uint256 _startIndex, uint256 _maxStakingProviders)\n        external view returns (uint256 allAuthorizedTokens, uint256[2][] memory activeStakingProviders)\n    {\n        uint256 endIndex = stakingProviders.length;\n        require(_startIndex < endIndex, \"Wrong start index\");\n        if (_maxStakingProviders != 0 && _startIndex + _maxStakingProviders < endIndex) {\n            endIndex = _startIndex + _maxStakingProviders;\n        }\n        activeStakingProviders = new uint256[2][](endIndex - _startIndex);\n        allAuthorizedTokens = 0;\n\n        uint256 resultIndex = 0;\n        for (uint256 i = _startIndex; i < endIndex; i++) {\n            address stakingProvider = stakingProviders[i];\n            StakingProviderInfo storage info = stakingProviderInfo[stakingProvider];\n            uint256 eligibleAmount = authorizedStake(stakingProvider);\n            if (eligibleAmount < minAuthorization || !info.operatorConfirmed) {\n                continue;\n            }\n            activeStakingProviders[resultIndex][0] = uint256(uint160(stakingProvider));\n            activeStakingProviders[resultIndex++][1] = eligibleAmount;\n            allAuthorizedTokens += eligibleAmount;\n        }\n        assembly {\n            mstore(activeStakingProviders, resultIndex)\n        }\n    }\n\n    /**\n    * @notice Returns beneficiary related to the staking provider\n    */\n    function getBeneficiary(address _stakingProvider) public view returns (address payable beneficiary) {\n        (, beneficiary,) = tStaking.rolesOf(_stakingProvider);\n    }\n\n    /**\n    * @notice Returns true if staking provider has authorized stake to this application\n    */\n    function isAuthorized(address _stakingProvider) public view returns (bool) {\n        return authorizedStake(_stakingProvider) >= minAuthorization;\n    }\n\n    /**\n    * @notice Returns true if operator has confirmed address\n    */\n    // TODO maybe _stakingProvider instead of _operator as input?\n    function isOperatorConfirmed(address _operator) public view returns (bool) {\n        address stakingProvider = _stakingProviderFromOperator[_operator];\n        StakingProviderInfo storage info = stakingProviderInfo[stakingProvider];\n        return info.operatorConfirmed;\n    }\n\n    /**\n    * @notice Return the length of the array of staking providers\n    */\n    function getStakingProvidersLength() external view returns (uint256) {\n        return stakingProviders.length;\n    }\n\n    /**\n    * @notice Bond operator\n    * @param _stakingProvider Staking provider address\n    * @param _operator Operator address. Must be a real address, not a contract\n    */\n    function bondOperator(address _stakingProvider, address _operator)\n        external onlyOwnerOrStakingProvider(_stakingProvider)\n    {\n        StakingProviderInfo storage info = stakingProviderInfo[_stakingProvider];\n        require(_operator != info.operator, \"Specified operator is already bonded with this provider\");\n        // If this staker had an operator ...\n        if (info.operator != address(0)) {\n            require(\n                block.timestamp >= info.operatorStartTimestamp + minOperatorSeconds,\n                \"Not enough time passed to change operator\"\n            );\n            // Remove the old relation \"operator->stakingProvider\"\n            _stakingProviderFromOperator[info.operator] = address(0);\n        }\n\n        if (_operator != address(0)) {\n            require(_stakingProviderFromOperator[_operator] == address(0), \"Specified operator is already in use\");\n            require(\n                _operator == _stakingProvider || getBeneficiary(_operator) == address(0),\n                \"Specified operator is a provider\"\n            );\n            // Set new operator->stakingProvider relation\n            _stakingProviderFromOperator[_operator] = _stakingProvider;\n        }\n\n        if (info.operatorStartTimestamp == 0) {\n            stakingProviders.push(_stakingProvider);\n        }\n\n        // Bond new operator (or unbond if _operator == address(0))\n        info.operator = _operator;\n        info.operatorStartTimestamp = block.timestamp;\n        info.operatorConfirmed = false;\n        emit OperatorBonded(_stakingProvider, _operator, block.timestamp);\n    }\n\n    /**\n    * @notice Make a confirmation by operator\n    */\n    function confirmOperatorAddress() external {\n        address stakingProvider = _stakingProviderFromOperator[msg.sender];\n        require(isAuthorized(stakingProvider), \"No stake associated with the operator\");\n        StakingProviderInfo storage info = stakingProviderInfo[stakingProvider];\n        require(!info.operatorConfirmed, \"Operator address is already confirmed\");\n        require(msg.sender == tx.origin, \"Only operator with real address can make a confirmation\");\n        info.operatorConfirmed = true;\n        emit OperatorConfirmed(stakingProvider, msg.sender);\n    }\n\n}\n",
  "sourceMap": "188:8635:13:-:0;;;1600:390;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1749:55;;-1:-1:-1;;;1749:55:13;;1783:4;1749:55;;;661:34:41;;;711:18;;;704:43;-1:-1:-1;;;;;1749:25:13;;;;;596:18:41;;1749:55:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1749:60:13;;1728:129;;;;-1:-1:-1;;;1728:129:13;;1253:2:41;1728:129:13;;;1235:21:41;1292:2;1272:18;;;1265:30;1331:24;1311:18;;;1304:52;1373:18;;1728:129:13;;;;;;;;1867:36;;;;;-1:-1:-1;;;;;1913:20:13;;;;;1943:40;;188:8635;;14:430:41;120:6;128;136;189:2;177:9;168:7;164:23;160:32;157:52;;;205:1;202;195:12;157:52;231:16;;-1:-1:-1;;;;;276:31:41;;266:42;;256:70;;322:1;319;312:12;256:70;390:2;375:18;;369:25;434:2;419:18;;;413:25;345:5;;369:25;;-1:-1:-1;413:25:41;14:430;-1:-1:-1;;;14:430:41:o;758:288::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;922:16;;-1:-1:-1;;;;;967:30:41;;957:41;;947:69;;1012:1;1009;1002:12;947:69;1035:5;758:288;-1:-1:-1;;;758:288:41:o;1051:346::-;188:8635:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/contracts/SimplePREApplication.sol",
  "type": "contract"
}